var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.93,1,3.298]],["body/controllers/AdminController.html",[0,2.69,1,5.612,2,2.69,3,0.079,4,0.066,5,0.042,6,5.421,7,3.879,8,4.982,9,0.214,10,0.009,11,4.08,12,0.973,13,4.982,14,5.421,15,4.596,16,6.138,17,3.73,18,3.879,19,6.138,20,6.138,21,0.091,22,0.235,23,2.612,24,2.278,25,1.957,26,3.548,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.298,30,1.338]],["body/injectables/AdminGuard.html",[3,0.072,4,0.061,5,0.038,8,3.731,9,0.197,10,0.009,12,0.889,15,5.309,21,0.084,22,0.215,27,0.005,28,0.007,29,0.005,30,2.154,31,2.615,32,4.957,33,1.489,34,4.492,35,0.502,36,1.829,37,2.252,38,5.716,39,5.716,40,6.113,41,0.439,42,5.612,43,1.262,44,1.05,45,0.366,46,1.126,47,4.525,48,1.448,49,1.631,50,3.386,51,3.547,52,4.202,53,5.612,54,1.88,55,5.612,56,1.977,57,3.115,58,4.525,59,4.957,60,2.615,61,1.516,62,4.525,63,1.448,64,2.535]],["title/injectables/AdminMiddleware.html",[30,1.338,65,3.298]],["body/injectables/AdminMiddleware.html",[3,0.063,4,0.053,5,0.033,8,3.261,9,0.197,10,0.009,12,0.778,21,0.073,22,0.188,27,0.005,28,0.006,29,0.005,30,1.975,31,2.287,33,1.365,35,0.438,36,1.677,37,2.339,41,0.509,43,1.462,44,1.216,45,0.423,46,1.303,48,1.677,49,1.677,50,2.961,51,5.242,52,3.674,54,1.643,57,3.607,59,4.333,60,2.287,61,1.326,62,3.956,65,4.867,66,4.333,67,5.809,68,6.255,69,6.436,70,6.255,71,5.513,72,4.48,73,7.325,74,4.906,75,5.74,76,4.333,77,4.906,78,2.836,79,4.906,80,4.906,81,2.361,82,3.261]],["title/modules/AdminModule.html",[83,1.276,84,3.095]],["body/modules/AdminModule.html",[1,5.379,2,2.794,3,0.061,4,0.052,5,0.033,9,0.209,10,0.009,12,0.755,13,5.896,14,4.21,21,0.071,22,0.182,27,0.005,28,0.006,29,0.005,36,1.23,41,0.373,43,1.072,44,0.892,45,0.31,46,0.956,48,1.23,65,3.569,83,2.082,84,6.076,85,2.294,86,2.372,87,2.547,88,2.547,89,2.547,90,3.838,91,3.838,92,4.21,93,4.21,94,4.21,95,4.21,96,4.566,97,3.406,98,1.815,99,2.547,100,4.766,101,3.406,102,4.766,103,6.375,104,7.669,105,4.766,106,6.375,107,3.539,108,4.766,109,6.375,110,2.876,111,3.843,112,6.375,113,4.766,114,4.766,115,4.766,116,3.168,117,1.971,118,4.766,119,4.766,120,4.21,121,4.766,122,3.168,123,4.766]],["title/injectables/AdminService.html",[13,2.927,30,1.338]],["body/injectables/AdminService.html",[3,0.08,4,0.068,5,0.043,9,0.193,10,0.009,12,0.993,13,5.044,17,4.222,18,3.959,21,0.093,22,0.24,23,2.666,24,1.904,26,4.386,27,0.006,28,0.007,29,0.006,30,2.306,31,2.919,41,0.49,43,1.409,44,1.172,45,0.408,46,1.256,124,5.532,125,1.285,126,5.05,127,6.264]],["title/controllers/AppController.html",[0,1.93,128,3.298]],["body/controllers/AppController.html",[0,3.305,2,2.718,3,0.08,4,0.067,5,0.042,9,0.157,10,0.009,12,0.983,21,0.092,22,0.237,27,0.006,28,0.007,29,0.006,35,0.554,36,1.946,37,2.355,41,0.485,48,1.6,49,1.735,63,1.6,128,5.647,129,5.476,130,8.666,131,1.977,132,6.2,133,6.2,134,6.2,135,5.476]],["title/modules/AppModule.html",[83,1.276,136,3.298]],["body/modules/AppModule.html",[2,1.851,3,0.035,4,0.029,5,0.018,9,0.212,10,0.009,12,0.429,21,0.04,22,0.104,27,0.003,28,0.004,29,0.003,56,2.243,61,0.731,63,0.698,64,2.347,83,1.506,84,4.743,85,1.302,86,1.346,87,1.446,88,1.446,89,1.446,90,2.257,91,2.776,96,3.745,97,2.257,98,1.03,99,1.446,101,2.257,116,1.799,128,3.89,136,6.512,137,2.39,138,2.39,139,2.39,140,4.743,141,4.485,142,4.743,143,4.265,144,4.743,145,5.488,146,4.743,147,4.4,148,2.182,149,2.706,150,2.39,151,4.224,152,2.026,153,4.224,154,4.074,155,1.502,156,3.73,157,1.902,158,1.186,159,4.224,160,2.706,161,3.163,162,3.163,163,4.224,164,2.176,165,2.026,166,2.706,167,2.706,168,2.706,169,2.39,170,2.706,171,2.026,172,2.706,173,2.182,174,2.706,175,2.706,176,2.706,177,2.182,178,1.564,179,2.182,180,2.39,181,2.706,182,2.706,183,2.706,184,2.706,185,2.706,186,2.706,187,7.663,188,2.706,189,2.706,190,2.706,191,7.494,192,5.195,193,2.706,194,3.406,195,2.706,196,4.224,197,2.706,198,2.706,199,2.706,200,4.224,201,2.706,202,4.224,203,2.706,204,2.706,205,5.871,206,5.871,207,2.706,208,2.706,209,2.706,210,2.706,211,2.706,212,2.39,213,2.706,214,4.189,215,2.706,216,2.706,217,2.706,218,2.706,219,2.706,220,2.706,221,2.706,222,2.706,223,2.706,224,2.706,225,2.706,226,2.706,227,4.224,228,2.706,229,2.706,230,2.706,231,4.224,232,2.706,233,2.706,234,2.706,235,2.706,236,2.706,237,2.884,238,3.284,239,3.003,240,5.195,241,2.706,242,5.871,243,2.706,244,2.177,245,2.706,246,2.706,247,1.633,248,2.706,249,2.706,250,2.706,251,2.706,252,2.706,253,2.706,254,1.502,255,2.706,256,2.706,257,2.706,258,2.182,259,2.706,260,2.706,261,2.706,262,3.163,263,2.706,264,2.706,265,2.706,266,2.706,267,2.706,268,2.706,269,2.706,270,2.39,271,2.706,272,2.706,273,2.706,274,2.182,275,2.182,276,2.182,277,1.902]],["title/classes/Application.html",[22,0.168,278,2.545]],["body/classes/Application.html",[3,0.04,4,0.034,5,0.021,9,0.181,10,0.009,21,0.07,22,0.217,27,0.003,28,0.005,29,0.003,33,0.988,35,0.278,37,1.364,41,0.611,44,1.061,45,0.518,49,1.454,54,1.576,56,1.097,63,1.631,64,3.953,72,2.612,82,2.071,117,1.946,131,2.016,158,1.365,254,1.729,278,3.922,279,0.556,280,2.511,281,3.585,282,4.77,283,1.034,284,5.672,285,5.672,286,3.148,287,2.218,288,4.573,289,2.922,290,2.73,291,3.148,292,4.095,293,3.115,294,3.115,295,2.946,296,3.115,297,0.837,298,3.128,299,3.962,300,5.072,301,3.922,302,4.926,303,4.511,304,3.115,305,2.511,306,5.583,307,3.995,308,3.794,309,4.247,310,3.115,311,3.115,312,2.823,313,2.511,314,3.115,315,3.115,316,3.115,317,2.511,318,1.8,319,1.499,320,1.605,321,4.511,322,2.612,323,2.071,324,3.794,325,2.751,326,1.729,327,1.879,328,2.071,329,2.071,330,2.189,331,2.189,332,1.879,333,2.189,334,3.128,335,1.55,336,6.321,337,6.321,338,2.332,339,2.751,340,3.115,341,2.189,342,2.189,343,2.332,344,2.751,345,2.332,346,2.071,347,3.115,348,4.706,349,3.524,350,3.115,351,3.524,352,3.115,353,2.511,354,3.115,355,2.511,356,2.511,357,2.511]],["title/classes/ApplicationDto.html",[22,0.168,282,3.095]],["body/classes/ApplicationDto.html",[3,0.072,4,0.061,5,0.038,9,0.142,10,0.009,21,0.084,22,0.271,27,0.005,28,0.007,29,0.005,35,0.502,41,0.659,44,1.454,45,0.548,131,1.79,279,1.002,282,4.983,283,1.558,286,4.314,287,2.539,289,4.004,291,4.314,295,3.805,297,0.869,312,3.528,318,3.244,358,4.957,359,5.612,360,5.612,361,5.612,362,5.612,363,5.819,364,5.612]],["title/classes/ApplicationNotFound.html",[22,0.168,365,3.298]],["body/classes/ApplicationNotFound.html",[3,0.08,4,0.068,5,0.043,9,0.159,10,0.009,12,0.993,21,0.093,22,0.24,27,0.006,28,0.007,29,0.006,33,1.593,41,0.49,43,1.409,44,1.172,45,0.408,46,1.256,125,1.285,279,1.118,297,0.825,365,5.682,366,5.532,367,4.531,368,5.334,369,6.264,370,4.386,371,6.264,372,4.164]],["title/controllers/ApplicationsController.html",[0,1.93,373,3.298]],["body/controllers/ApplicationsController.html",[0,1.828,2,1.828,3,0.054,4,0.045,5,0.028,7,2.636,9,0.21,10,0.009,11,2.772,12,0.661,21,0.062,22,0.16,23,1.775,24,1.267,27,0.004,28,0.006,29,0.004,34,2.41,35,0.373,36,1.501,41,0.525,43,1.507,44,1.254,45,0.437,46,1.344,48,1.729,49,1.818,63,1.729,131,2.137,244,3.314,278,2.41,282,2.931,287,2.582,297,0.798,325,3.683,373,4.357,374,3.683,375,4.691,376,3.868,377,3.72,378,5.919,379,4.17,380,5.43,381,4.711,382,4.17,383,5.819,384,3.683,385,4.17,386,4.17,387,4.17,388,4.17,389,4.17,390,2.931,391,2.931,392,3.868,393,3.683,394,4.17,395,4.17,396,3.123,397,4.17,398,4.17,399,4.235,400,2.931,401,2.931,402,2.931,403,2.41,404,4.17,405,2.931,406,4.17,407,4.17,408,5.819,409,5.819,410,4.17,411,3.683,412,5.139,413,4.17,414,4.17,415,4.17,416,2.772]],["title/modules/ApplicationsModule.html",[83,1.276,140,3.095]],["body/modules/ApplicationsModule.html",[2,2.942,3,0.066,4,0.056,5,0.035,9,0.213,10,0.009,12,0.817,21,0.077,22,0.197,27,0.005,28,0.006,29,0.005,44,0.964,83,2.164,85,2.481,86,2.565,87,2.754,88,2.754,89,2.754,90,3.989,91,3.989,96,4.667,97,3.587,98,1.963,99,2.754,101,3.587,116,3.427,140,6.17,157,3.623,158,2.259,278,2.979,322,2.861,338,5.027,373,5.59,392,5.965,393,4.553,417,4.553,418,5.155,419,4.553,420,4.553,421,5.155,422,5.155,423,4.553,424,3.86,425,5.155]],["title/injectables/ApplicationsService.html",[30,1.338,392,2.927]],["body/injectables/ApplicationsService.html",[3,0.046,4,0.039,5,0.025,9,0.202,10,0.009,12,0.571,21,0.054,22,0.138,24,1.594,25,1.672,27,0.003,28,0.005,29,0.003,30,1.594,31,1.68,35,0.322,36,1.353,37,2.448,41,0.565,43,1.622,44,1.454,45,0.47,46,1.447,48,1.752,49,1.832,54,2.416,56,2.391,60,1.68,61,1.417,63,1.752,125,1.076,154,3.924,155,2.001,158,1.58,239,3.031,278,4.351,287,2.218,289,2.702,290,4.193,297,0.911,320,1.857,326,2.001,327,2.175,332,2.175,365,2.699,375,4.984,376,3.486,377,2.911,378,4.632,392,3.486,423,3.184,426,3.184,427,4.228,428,2.906,429,5.083,430,3.605,431,5.244,432,3.605,433,3.165,434,3.605,435,4.632,436,3.605,437,5.244,438,3.605,439,6.182,440,2.699,441,3.605,442,3.605,443,3.605,444,4.632,445,3.605,446,3.605,447,3.605,448,3.605,449,3.605,450,3.605,451,3.605,452,3.605,453,3.605,454,3.605,455,3.605]],["title/interfaces/AsyncStorageOptions.html",[456,0.883,457,3.298]],["body/interfaces/AsyncStorageOptions.html",[3,0.069,4,0.058,5,0.037,9,0.193,10,0.009,21,0.08,27,0.005,28,0.007,29,0.005,33,1.449,35,0.481,37,1.56,45,0.585,46,1.757,49,1.238,83,2.209,164,3.556,237,4.462,238,5.08,277,5.651,283,1.517,292,4.165,456,1.079,457,5.169,458,1.945,459,3.783,460,3.577,461,6.096,462,7.1,463,4.753,464,4.753,465,3.989,466,3.247,467,3.783,468,2.508,469,4.753,470,4.753]],["title/controllers/AuthController.html",[0,1.93,471,3.298]],["body/controllers/AuthController.html",[0,1.026,2,1.026,3,0.03,4,0.025,5,0.016,7,1.479,9,0.211,10,0.009,11,1.555,12,0.371,17,1.873,18,1.479,21,0.035,22,0.09,23,0.996,24,1.144,25,0.746,26,1.352,27,0.002,28,0.004,29,0.002,34,1.352,35,0.209,36,0.971,37,1.369,41,0.542,43,1.558,44,1.296,45,0.451,46,1.389,48,1.787,49,1.811,54,1.582,56,1.326,57,3.292,61,1.276,63,1.719,71,1.555,78,1.352,81,1.126,107,2.089,131,2.209,161,1.752,162,1.752,244,3.043,247,2.85,258,3.035,289,1.939,295,1.09,297,0.64,326,1.299,327,1.412,343,1.752,370,2.73,372,1.555,377,1.299,381,1.645,390,2.646,391,1.645,399,1.479,400,1.645,401,1.645,402,1.645,403,1.352,405,3.32,416,2.502,471,2.819,472,2.067,473,3.325,474,2.985,475,3.325,476,2.819,477,3.325,478,3.764,479,3.764,480,3.139,481,2.34,482,4.052,483,2.34,484,2.379,485,2.34,486,2.34,487,4.052,488,4.723,489,3.823,490,4.309,491,4.907,492,2.34,493,2.34,494,2.34,495,2.34,496,2.34,497,2.34,498,4.052,499,2.34,500,2.34,501,2.34,502,4.052,503,2.34,504,2.34,505,2.34,506,3.764,507,2.34,508,2.34,509,2.34,510,2.34,511,2.34,512,2.34,513,4.171,514,2.34,515,2.34,516,2.067,517,1.752,518,1.555,519,2.067,520,2.34,521,3.035,522,2.067,523,2.067,524,2.379,525,2.067,526,2.34,527,3.325,528,2.34,529,2.34,530,2.34,531,1.752,532,2.34,533,1.887,534,3.764,535,2.34,536,1.887,537,2.34,538,1.752,539,1.752,540,2.34,541,2.34,542,2.34,543,2.34,544,2.34,545,1.887,546,2.34,547,2.34,548,2.34,549,1.369,550,2.067,551,2.176,552,1.299,553,2.34,554,2.34,555,1.887,556,2.34,557,2.34,558,2.34,559,2.34,560,3.764,561,3.764,562,2.35,563,2.34,564,2.34,565,2.34,566,2.34,567,4.171,568,2.34,569,2.34,570,1.752,571,2.34,572,1.887,573,2.34,574,2.067,575,2.34,576,1.887,577,2.34,578,2.067,579,2.34,580,2.34,581,1.887,582,1.887,583,2.34,584,1.887,585,2.34,586,2.34,587,2.34,588,2.34,589,2.34,590,2.34,591,2.34,592,1.479,593,2.34,594,3.764,595,2.34,596,2.34,597,2.34,598,2.34,599,2.34,600,2.067,601,2.34,602,2.34,603,2.34,604,2.34,605,2.067,606,2.34]],["title/guards/AuthGuard.html",[34,2.545,607,3.551]],["body/guards/AuthGuard.html",[3,0.056,4,0.047,5,0.03,9,0.204,10,0.009,12,0.694,17,3.685,18,2.768,21,0.065,22,0.168,23,1.864,24,1.829,25,1.397,26,3.975,27,0.004,28,0.006,29,0.004,30,1.829,34,3.479,35,0.391,36,1.553,37,1.993,38,5.971,39,4.853,40,5.545,41,0.471,43,1.354,44,1.126,45,0.392,46,1.207,47,3.531,48,1.13,49,1.385,51,2.768,52,3.279,54,1.467,56,2.608,57,2.431,58,3.531,60,2.041,61,1.183,63,2.003,64,2.719,81,3.31,117,1.811,125,0.899,152,3.279,244,2.551,287,1.431,295,2.041,312,2.179,489,2.642,490,2.431,517,3.279,518,2.911,570,3.279,608,3.531,609,3.868,610,4.379,611,7.085,612,4.379,613,4.379,614,3.078,615,3.479,616,3.632,617,3.868,618,6.019,619,4.379,620,4.379,621,3.868,622,4.379,623,3.868,624,6.877,625,3.868,626,3.279,627,5.316,628,2.911,629,3.531,630,3.868,631,3.868,632,3.868]],["title/injectables/AuthMiddleware.html",[30,1.338,67,3.298]],["body/injectables/AuthMiddleware.html",[3,0.06,4,0.05,5,0.032,9,0.201,10,0.009,12,0.734,17,3.773,18,2.929,21,0.069,22,0.177,23,1.972,24,1.408,26,3.615,27,0.004,28,0.006,29,0.004,30,1.901,31,2.159,35,0.414,36,1.614,37,2.052,41,0.49,43,1.407,44,1.17,45,0.407,46,1.254,48,1.196,49,1.439,50,2.796,51,4.792,52,3.47,54,1.552,56,1.632,57,2.572,60,3.3,61,2.049,62,3.736,67,4.684,68,5.043,69,5.525,71,5.04,72,4.208,73,6.696,75,6.254,78,2.678,117,1.916,125,0.951,126,3.736,244,2.626,287,1.514,295,2.159,312,2.306,489,2.796,490,2.572,517,3.47,518,3.08,551,2.678,570,3.47,614,3.257,623,4.093,625,4.093,626,3.47,627,5.525,628,3.08,629,3.736,630,4.093,631,4.093,632,4.093,633,4.093,634,4.634,635,4.634,636,2.572,637,6.255,638,3.08,639,4.634,640,2.678,641,2.476]],["title/modules/AuthModule.html",[83,1.276,141,2.927]],["body/modules/AuthModule.html",[2,3.037,3,0.07,4,0.059,5,0.037,9,0.204,10,0.009,12,0.858,21,0.081,22,0.207,27,0.005,28,0.007,29,0.005,83,2.215,85,2.605,86,2.694,87,2.892,88,2.892,89,2.892,90,4.083,91,4.083,96,4.728,97,3.702,98,2.062,99,2.892,101,3.702,116,3.598,141,5.888,471,5.722,524,5.711,525,4.781,642,4.781,643,5.413,644,4.781,645,4.781,646,5.413,647,6.929,648,5.413]],["title/injectables/AuthService.html",[30,1.338,524,2.783]],["body/injectables/AuthService.html",[3,0.034,4,0.029,5,0.018,9,0.189,10,0.009,12,0.421,17,2.894,18,1.68,21,0.04,22,0.102,24,1.561,25,2.136,26,2.969,27,0.003,28,0.004,29,0.003,30,1.266,31,1.239,35,0.238,36,1.075,37,2.479,41,0.583,43,1.63,44,1.356,45,0.472,46,1.454,48,1.807,49,1.865,54,2.645,56,2.224,60,2.71,61,1.571,63,1.5,64,1.201,125,0.855,158,1.165,244,2.764,254,1.476,283,0.916,287,0.869,289,2.996,290,3.489,297,0.911,320,1.37,335,1.323,370,2.408,403,1.537,473,3.68,474,2.633,475,3.68,476,3.12,477,3.68,480,3.415,484,2.405,490,2.313,491,1.68,513,5.136,524,2.633,538,1.991,549,1.685,562,3.484,567,3.68,578,4.537,592,1.68,615,2.408,628,3.415,629,2.144,649,2.348,650,4.166,651,4.166,652,2.659,653,6.698,654,3.847,655,3.675,656,4.166,657,4.166,658,2.659,659,4.166,660,2.659,661,4.166,662,2.659,663,4.166,664,2.659,665,4.166,666,2.659,667,2.348,668,4.166,669,2.659,670,4.166,671,2.659,672,1.604,673,4.166,674,4.166,675,2.348,676,1.767,677,1.991,678,2.514,679,3.1,680,2.659,681,2.659,682,2.659,683,2.348,684,2.348,685,2.659,686,2.745,687,1.869,688,2.659,689,2.659,690,2.659,691,2.659,692,2.348,693,2.659,694,2.659,695,2.659,696,2.659,697,2.348,698,2.769,699,2.659,700,2.659,701,2.659,702,2.348,703,2.659,704,2.659]],["title/modules/BullBoardModule.html",[83,1.276,142,3.095]],["body/modules/BullBoardModule.html",[3,0.074,4,0.062,5,0.039,9,0.199,10,0.009,12,0.909,21,0.085,22,0.219,27,0.006,28,0.007,29,0.006,83,2.275,85,2.76,86,2.854,87,3.064,88,3.064,89,3.064,90,4.194,91,3.064,97,3.84,98,2.184,99,3.064,101,3.84,110,3.461,142,6.235,143,5.464,171,4.294,173,4.624,705,5.065,706,5.735,707,5.065,708,6.077,709,4.624,710,5.735,711,5.735]],["title/injectables/BullBoardProvider.html",[30,1.338,708,3.095]],["body/injectables/BullBoardProvider.html",[3,0.072,4,0.061,5,0.038,9,0.207,10,0.009,12,0.889,21,0.084,22,0.215,24,2.154,25,2.261,27,0.005,28,0.007,29,0.005,30,2.154,31,2.615,41,0.439,43,1.262,44,1.05,45,0.366,46,1.126,83,1.627,110,4.278,111,4.525,125,1.455,156,4.957,171,5.309,708,4.983,709,5.716,712,4.957,713,5.612,714,7.039,715,6.864,716,5.612,717,6.261,718,4.525,719,3.386,720,5.612,721,4.525,722,4.957,723,4.957,724,5.612,725,5.612]],["title/classes/ChangeDisplayNameDto.html",[22,0.168,726,3.298]],["body/classes/ChangeDisplayNameDto.html",[3,0.071,4,0.06,5,0.038,9,0.141,10,0.009,21,0.083,22,0.269,27,0.005,28,0.007,29,0.005,35,0.495,41,0.434,44,1.316,45,0.361,61,1.901,131,1.768,279,0.99,283,1.546,297,0.711,299,3.078,309,4.152,319,2.668,726,5.268,727,5.268,728,6.194,729,4.897,730,5.786,731,6.213,732,4.174,733,7.178,734,4.897,735,4.47,736,6.213,737,4.676,738,4.676,739,5.544,740,3.905,741,3.905,742,4.897,743,2.962,744,4.47]],["title/classes/ChangeEmailDto.html",[22,0.168,745,3.298]],["body/classes/ChangeEmailDto.html",[3,0.076,4,0.064,5,0.041,9,0.151,10,0.009,21,0.088,22,0.281,27,0.006,28,0.007,29,0.006,35,0.531,41,0.465,45,0.387,131,1.894,279,1.06,283,1.615,297,0.742,319,2.859,549,2.311,727,5.5,732,3.968,740,4.077,741,4.077,743,3.173,745,5.5,746,5.246,747,5.301,748,5.605,749,5.922,750,5.163,751,4.789,752,3.948,753,5.939]],["title/classes/ChangePasswordDto.html",[22,0.168,754,3.298]],["body/classes/ChangePasswordDto.html",[3,0.07,4,0.059,5,0.037,9,0.139,10,0.009,21,0.081,22,0.267,27,0.005,28,0.007,29,0.005,35,0.488,41,0.545,45,0.454,61,1.883,131,2.222,279,0.975,283,1.532,297,0.817,301,3.157,319,2.629,484,2.932,592,4.85,727,5.746,732,4.022,737,4.632,738,4.632,740,4.26,741,4.26,743,3.723,752,3.631,754,5.218,755,4.09,756,6.187,757,4.632,758,4.824,759,5.618,760,4.824,761,6.154,762,4.824,763,4.404]],["title/classes/ChunkAlreadyUploaded.html",[22,0.168,764,2.927]],["body/classes/ChunkAlreadyUploaded.html",[3,0.066,4,0.056,5,0.035,9,0.13,10,0.009,12,0.815,21,0.118,22,0.302,27,0.005,28,0.006,29,0.005,33,1.72,35,0.459,41,0.402,43,1.156,44,0.962,45,0.335,46,1.031,61,1.389,125,1.375,279,0.918,287,1.68,297,0.677,367,4.138,368,3.613,370,2.971,480,4.454,490,2.853,552,2.853,636,3.72,641,2.746,764,4.454,765,3.613,766,4.499,767,5.018,768,3.841,769,5.14,770,5.018,771,3.849,772,3.102,773,2.853,774,4.235,775,3.102,776,2.853,777,3.613,778,3.417,779,3.613,780,3.849,781,3.613,782,3.849,783,3.849,784,4.71,785,2.067,786,3.849,787,3.849,788,3.849,789,3.613,790,3.849,791,3.613,792,3.417,793,3.849,794,3.849]],["title/classes/Counter.html",[22,0.168,795,3.095]],["body/classes/Counter.html",[3,0.053,4,0.044,5,0.028,9,0.104,10,0.009,21,0.061,22,0.157,23,1.743,27,0.004,28,0.006,29,0.004,33,1.206,35,0.366,36,1.482,41,0.645,43,1.704,44,1.418,45,0.494,46,1.52,48,1.057,63,2.081,107,3.994,125,0.84,178,3.321,279,0.731,292,3.467,672,4.572,686,2.188,768,4.548,779,2.879,795,4.039,796,3.617,797,6.637,798,7.195,799,7.195,800,5.746,801,5.075,802,5.746,803,5.075,804,4.096,805,4.096,806,5.746,807,4.096,808,4.096,809,5.746,810,4.096,811,7.855,812,3.321,813,5.746,814,8.478,815,4.096,816,5.746,817,4.096,818,5.746,819,4.096,820,4.096,821,4.096,822,4.096,823,7.195,824,6.637,825,6.637,826,4.096,827,4.096]],["title/classes/CreateApplicationDto.html",[22,0.168,380,3.298]],["body/classes/CreateApplicationDto.html",[3,0.075,4,0.063,5,0.04,9,0.148,10,0.009,21,0.087,22,0.278,27,0.006,28,0.007,29,0.006,35,0.521,41,0.456,44,1.647,45,0.379,131,1.858,278,4.782,279,1.04,283,1.595,297,0.733,299,3.234,319,2.804,380,5.435,732,3.934,735,4.697,737,4.824,738,4.824,740,4.029,741,4.029,743,3.113,744,4.697,757,3.873,828,6.41,829,5.146,830,6.41,831,5.826]],["title/classes/DeleteAccountDto.html",[22,0.168,832,3.298]],["body/classes/DeleteAccountDto.html",[3,0.079,4,0.066,5,0.042,9,0.156,10,0.009,21,0.091,22,0.287,27,0.006,28,0.007,29,0.006,35,0.549,41,0.48,45,0.4,131,1.957,279,1.096,283,1.648,297,0.757,319,2.954,484,2.967,732,3.054,740,4.16,741,4.16,743,3.28,752,4.08,757,4.08,761,6.62,832,5.612,833,6.62,834,5.421,835,6.138]],["title/interfaces/DeleteFileJob.html",[456,0.883,836,3.298]],["body/interfaces/DeleteFileJob.html",[3,0.085,4,0.071,5,0.045,10,0.008,21,0.098,27,0.006,28,0.008,29,0.006,35,0.59,45,0.43,283,1.721,297,0.843,456,1.324,458,2.386,836,5.864,837,5.831,838,5.831,839,7.626]],["title/classes/DiskStorage.html",[22,0.168,840,3.095]],["body/classes/DiskStorage.html",[3,0.05,4,0.042,5,0.026,9,0.188,10,0.009,21,0.082,22,0.147,23,1.64,24,1.171,25,2.456,27,0.004,28,0.005,29,0.004,35,0.344,36,1.42,37,2.232,41,0.603,43,1.732,44,1.441,45,0.502,46,1.545,48,1.911,49,1.611,54,1.844,60,2.565,61,1.042,63,1.807,64,1.741,81,2.649,117,2.276,122,3.659,125,0.791,164,1.986,178,2.228,279,0.688,287,2.517,297,0.889,377,3.055,433,3.321,456,0.773,468,2.565,840,3.869,841,3.108,842,3.874,843,5.504,844,5.504,845,4.438,846,4.438,847,3.108,848,4.922,849,3.855,850,4.861,851,3.855,852,4.861,853,3.855,854,3.869,855,3.855,856,4.058,857,3.869,858,3.855,859,3.855,860,4.861,861,2.562,862,2.326,863,2.562,864,2.709,865,2.709,866,3.404,867,2.562,868,3.404,869,3.404,870,2.436,871,3.404,872,2.562,873,3.404,874,2.886,875,3.108,876,3.108,877,3.404,878,3.404,879,3.404,880,3.404,881,3.404,882,3.404,883,3.404,884,3.404]],["title/interfaces/DiskStorageEngineOptions.html",[456,0.883,848,3.095]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.062,4,0.052,5,0.033,9,0.203,10,0.009,21,0.095,22,0.183,23,2.039,24,1.456,25,2.04,27,0.005,28,0.006,29,0.005,35,0.428,37,1.854,45,0.312,49,1.472,54,2.143,60,2.981,61,1.295,63,1.983,64,2.164,81,3.079,117,1.981,122,4.252,164,2.468,178,2.769,283,1.406,287,1.566,297,0.863,433,2.891,456,0.961,458,1.731,468,2.233,840,3.368,841,3.863,842,3.86,848,5.062,850,4.232,852,4.232,854,3.368,856,4.043,857,3.368,860,5.65,861,3.185,862,2.891,863,3.185,864,3.368,865,3.368,866,4.232,867,5.108,868,4.232,869,4.232,870,3.028,871,4.232,872,3.185,873,4.232,874,3.588,875,3.863,876,3.863,877,4.232,878,4.232,879,4.232,880,4.232,881,4.232,882,4.232,883,4.232,884,4.232]],["title/classes/DisplayNameAlreadyExists.html",[22,0.168,885,2.783]],["body/classes/DisplayNameAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.137,10,0.009,12,0.855,21,0.12,22,0.308,27,0.005,28,0.007,29,0.005,33,1.747,41,0.423,43,1.214,44,1.294,45,0.352,46,1.082,125,1.108,279,0.964,297,0.86,367,3.839,372,4.597,549,1.564,552,3.839,562,3.441,766,5.02,772,4.605,885,4.371,886,3.794,887,5.178,888,5.397,889,3.124,890,4.042,891,3.257,892,4.042,893,4.042,894,3.411,895,5.178,896,4.042,897,3.411,898,4.042]],["title/interfaces/Email.html",[456,0.883,549,1.276]],["body/interfaces/Email.html",[3,0.078,4,0.066,5,0.041,10,0.009,21,0.09,27,0.006,28,0.007,29,0.006,35,0.543,36,1.922,41,0.631,48,2.078,49,1.714,297,0.886,456,1.219,458,2.196,549,2.159,899,5.367,900,5.067,901,5.067,902,5.067,903,6.077,904,6.077,905,6.077]],["title/classes/EmailAlreadyExists.html",[22,0.168,891,2.657]],["body/classes/EmailAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.137,10,0.009,12,0.855,21,0.12,22,0.308,27,0.005,28,0.007,29,0.005,33,1.747,41,0.423,43,1.214,44,1.294,45,0.352,46,1.082,125,1.108,279,0.964,297,0.86,367,3.839,372,4.597,549,2.004,552,3.839,562,3.441,766,5.02,772,4.605,885,3.411,886,3.794,887,4.042,889,2.438,890,4.042,891,4.173,892,5.178,893,4.042,894,3.411,895,5.178,896,4.042,897,3.411,898,4.042,906,5.397]],["title/classes/EmailChangedEmail.html",[22,0.168,907,3.298]],["body/classes/EmailChangedEmail.html",[3,0.063,4,0.053,5,0.033,9,0.165,10,0.009,21,0.073,22,0.187,23,2.083,24,1.972,25,1.56,27,0.005,28,0.006,29,0.005,35,0.437,36,1.674,41,0.607,43,1.101,44,0.916,45,0.319,46,0.981,48,1.878,49,1.493,63,1.878,98,1.864,117,2.683,125,1.004,279,0.874,297,0.886,484,1.68,549,2.337,785,1.968,889,3.501,900,4.676,901,4.676,902,4.676,907,4.858,908,7.122,909,3.945,910,4.322,911,4.322,912,5.116,913,4.322,914,4.322,915,4.322,916,3.253,917,3.093,918,3.44,919,4.322,920,4.322,921,3.253,922,5.73,923,4.858,924,3.44,925,3.945,926,4.322,927,3.664,928,2.521,929,4.322,930,3.44]],["title/classes/EmailConfirmation.html",[22,0.168,931,3.095]],["body/classes/EmailConfirmation.html",[3,0.049,4,0.042,5,0.026,9,0.188,10,0.009,21,0.082,22,0.21,27,0.004,28,0.005,29,0.004,33,1.152,35,0.343,41,0.602,45,0.501,56,1.352,61,1.037,63,0.99,64,4.027,72,3.046,82,2.552,131,2.229,158,1.682,247,2.316,279,0.685,281,4.048,283,1.206,286,3.555,289,3.601,290,3.083,291,3.555,295,3.584,297,0.777,298,4.258,299,3.88,300,4.646,301,4.04,302,5.112,303,3.648,307,4.417,308,4.425,319,1.847,320,1.978,321,4.915,322,3.046,323,2.552,326,2.131,327,2.316,328,2.552,329,2.552,330,2.698,331,2.698,332,2.316,333,2.698,334,4.258,335,1.91,341,2.698,342,2.698,346,2.552,351,2.874,686,2.932,687,3.857,747,4.258,748,4.502,931,3.857,932,6.384,933,3.095,934,4.258,935,3.838,936,2.698,937,3.838,938,3.838,939,5.635,940,3.838,941,3.838,942,3.838,943,3.857,944,2.874,945,3.838,946,2.874,947,3.39,948,3.838,949,3.095,950,3.095]],["title/classes/EmailConfirmationEmail.html",[22,0.168,951,3.298]],["body/classes/EmailConfirmationEmail.html",[3,0.062,4,0.052,5,0.033,9,0.163,10,0.009,21,0.071,22,0.184,23,2.044,24,1.947,25,1.532,27,0.005,28,0.006,29,0.005,35,0.429,36,1.653,41,0.602,43,1.08,44,0.899,45,0.313,46,0.963,48,1.861,49,1.474,63,1.861,72,2.666,117,2.65,125,0.986,279,0.858,297,0.883,549,2.389,750,3.377,785,2.577,889,3.475,900,4.642,901,4.642,902,4.642,916,3.193,917,3.036,918,3.377,919,4.243,920,4.243,921,3.193,924,3.377,925,3.873,928,3.302,930,3.377,951,4.798,952,7.078,953,4.243,954,4.804,955,4.804,956,5.814,957,4.804,958,4.804,959,4.804,960,6.408,961,6.408,962,6.408,963,4.243,964,3.873,965,3.193,966,4.804,967,4.804]],["title/classes/File.html",[5,0.03,22,0.168]],["body/classes/File.html",[3,0.042,4,0.035,5,0.047,9,0.164,10,0.009,21,0.072,22,0.186,27,0.003,28,0.005,29,0.003,33,1.022,35,0.291,37,0.944,41,0.64,45,0.539,49,1.12,54,1.091,56,1.148,63,1.256,64,3.992,117,2.013,131,2.399,158,1.428,178,2.814,254,3.841,279,0.582,281,3.684,283,1.07,286,3.235,287,2.113,288,4.699,290,2.805,291,3.235,292,2.938,295,3.013,297,0.825,298,3.236,299,3.841,300,5.141,301,3.737,302,5.001,303,3.236,305,2.627,307,4.888,312,2.9,313,2.627,317,2.627,318,1.883,320,1.679,321,5.141,322,2.702,323,2.166,324,3.925,328,2.166,334,3.236,335,2.9,349,2.44,353,3.925,355,2.627,356,2.627,357,2.627,768,2.508,812,3.737,936,3.422,968,2.627,969,4.864,970,2.716,971,5.148,972,4.097,973,4.097,974,4.364,975,3.369,976,3.259,977,4.869,978,3.259,979,3.259,980,3.259,981,3.259,982,3.259,983,3.259,984,3.259,985,3.259,986,3.259,987,3.259,988,3.259,989,2.878,990,2.627,991,4.842,992,2.44,993,2.878,994,3.259,995,3.259,996,3.259,997,4.869]],["title/classes/FileDto.html",[22,0.168,969,3.095]],["body/classes/FileDto.html",[3,0.065,4,0.055,5,0.035,9,0.128,10,0.009,21,0.075,22,0.254,27,0.005,28,0.006,29,0.005,35,0.452,41,0.685,45,0.57,131,1.612,279,0.903,283,1.457,286,4.105,287,2.417,290,3.559,291,4.105,295,3.658,297,0.873,312,3.298,318,2.922,363,5.538,768,3.415,812,4.537,969,4.659,970,3.446,971,6.531,972,5.198,973,5.198,975,4.274,998,4.465,999,5.055,1000,5.055,1001,5.055,1002,5.055,1003,5.055,1004,5.055,1005,5.055,1006,5.055,1007,5.055]],["title/classes/FileNotFound.html",[22,0.168,775,2.657]],["body/classes/FileNotFound.html",[3,0.066,4,0.056,5,0.035,9,0.13,10,0.009,12,0.815,21,0.118,22,0.302,27,0.005,28,0.006,29,0.005,33,1.72,35,0.459,41,0.402,43,1.156,44,0.962,45,0.335,46,1.031,61,1.389,125,1.375,279,0.918,287,1.68,297,0.798,367,4.385,368,4.71,370,3.873,480,4.454,490,2.853,552,2.853,636,3.72,641,2.746,764,3.417,765,3.613,766,4.043,767,3.849,768,2.648,770,3.849,771,3.849,772,3.102,773,2.853,774,4.235,775,4.043,776,2.853,777,3.613,778,3.417,779,3.613,780,3.849,781,3.613,782,3.849,783,3.849,784,4.71,785,2.067,786,3.849,787,3.849,788,3.849,789,3.613,790,3.849,791,3.613,792,3.417,793,3.849,794,3.849,1008,5.14]],["title/classes/FileTooLarge.html",[22,0.168,1009,2.545]],["body/classes/FileTooLarge.html",[3,0.065,4,0.055,5,0.035,9,0.129,10,0.009,12,0.806,21,0.125,22,0.32,27,0.005,28,0.006,29,0.005,33,1.792,41,0.398,43,1.143,44,0.951,45,0.433,46,1.019,125,1.719,279,0.908,297,0.749,773,2.822,776,2.822,970,3.1,1009,3.845,1010,3.213,1011,4.929,1012,4.422,1013,5.083,1014,3.929,1015,4.204,1016,3.379,1017,2.938,1018,3.379,1019,3.31,1020,2.938,1021,4.929,1022,4.929,1023,3.379,1024,2.938,1025,2.938,1026,3.379,1027,2.938,1028,3.379,1029,3.379,1030,3.379]],["title/controllers/FilesController.html",[0,1.93,1031,3.298]],["body/controllers/FilesController.html",[0,1.264,2,1.264,3,0.037,4,0.031,5,0.037,7,1.823,9,0.204,10,0.009,11,1.917,12,0.457,21,0.043,22,0.11,24,1.846,25,1.937,27,0.003,28,0.004,29,0.003,34,1.667,35,0.258,36,1.145,37,2.007,41,0.476,43,1.366,44,1.137,45,0.396,46,1.218,48,1.567,49,1.714,54,2.035,56,2.14,57,3.64,61,1.199,63,1.396,70,5.584,71,4.038,78,1.667,81,2.604,125,0.592,131,1.937,147,3.264,154,2.565,155,1.601,164,1.486,239,1.667,244,3.24,247,3.264,287,2.549,290,1.388,297,0.772,376,1.917,377,3.003,381,2.028,384,2.548,390,3.12,391,2.028,399,3.419,400,2.028,401,2.028,402,2.028,403,1.667,405,2.028,411,2.548,412,4.778,416,2.95,489,3.666,614,3.12,775,1.741,784,3.12,856,1.823,875,2.326,876,2.326,927,2.16,969,2.028,970,1.344,974,4.051,975,1.667,989,2.548,991,3.324,1019,3.023,1031,3.324,1032,2.548,1033,5.41,1034,2.885,1035,2.885,1036,2.885,1037,2.885,1038,2.885,1039,2.885,1040,4.549,1041,2.885,1042,2.885,1043,2.885,1044,2.885,1045,2.885,1046,2.548,1047,2.678,1048,2.548,1049,2.885,1050,2.885,1051,3.579,1052,2.885,1053,2.885,1054,2.678,1055,2.326,1056,2.548,1057,2.885,1058,2.885,1059,2.885,1060,2.885,1061,2.885,1062,2.885,1063,2.885,1064,2.885,1065,2.885,1066,2.885,1067,2.885,1068,2.885,1069,2.885,1070,3.92,1071,2.548,1072,2.885,1073,2.548,1074,2.885,1075,2.885,1076,2.885,1077,2.885,1078,2.885,1079,2.548,1080,2.326,1081,2.885,1082,2.885,1083,2.885,1084,2.885,1085,2.885,1086,2.885,1087,4.438,1088,2.885,1089,2.885,1090,2.548,1091,2.326,1092,2.16,1093,2.885,1094,2.548,1095,2.885,1096,2.885,1097,2.885,1098,2.548,1099,2.885,1100,2.548,1101,2.885,1102,2.885]],["title/modules/FilesModule.html",[83,1.276,143,2.783]],["body/modules/FilesModule.html",[2,2.591,3,0.055,4,0.046,5,0.04,9,0.217,10,0.009,12,0.676,21,0.064,22,0.163,27,0.004,28,0.006,29,0.004,44,1.106,83,1.966,85,2.054,86,2.123,87,2.28,88,2.28,89,2.28,90,3.625,91,3.625,96,4.417,97,3.159,98,1.625,99,2.28,101,3.159,116,2.837,143,5.546,154,4.445,155,2.369,157,3,158,1.87,165,3.195,214,3.44,237,3.282,238,3.737,239,3.417,262,3.195,274,3.44,275,3.44,297,0.431,322,2.369,424,3.195,719,2.575,867,2.837,870,2.697,992,4.427,1019,2.123,1031,5.08,1047,5.256,1048,3.769,1103,3.769,1104,3.769,1105,3.769,1106,3.769,1107,5.113,1108,5.594,1109,4.267,1110,5.222,1111,4.267,1112,4.267,1113,3.769,1114,3.769,1115,3.769,1116,4.267,1117,3.769,1118,3.195,1119,3.769]],["title/injectables/FilesProcessor.html",[30,1.338,1108,3.095]],["body/injectables/FilesProcessor.html",[3,0.048,4,0.041,5,0.026,9,0.186,10,0.009,12,0.598,21,0.056,22,0.144,24,1.648,25,2.343,27,0.004,28,0.005,29,0.004,30,1.648,31,1.759,35,0.337,36,1.399,37,1.839,41,0.599,43,1.72,44,1.431,45,0.498,46,1.534,48,1.895,49,1.248,54,1.816,81,3.338,107,4.373,110,2.278,125,1.113,131,2.212,147,3.829,164,3.27,237,2.096,297,0.641,719,2.278,732,1.879,836,2.827,1054,4.185,1055,3.044,1080,3.044,1108,3.812,1120,3.334,1121,4.789,1122,4.789,1123,4.789,1124,5.423,1125,4.789,1126,3.044,1127,5.593,1128,3.775,1129,4.789,1130,3.775,1131,4.789,1132,5.605,1133,3.775,1134,4.789,1135,7.703,1136,5.605,1137,3.775,1138,5.423,1139,3.775,1140,3.775,1141,4.789,1142,5.605,1143,3.775,1144,2.827,1145,3.334,1146,3.775,1147,3.775,1148,3.775,1149,3.334,1150,6.126,1151,6.126,1152,2.827,1153,4.789,1154,3.334,1155,3.334,1156,3.775,1157,3.775,1158,5.423,1159,3.775,1160,3.334,1161,3.334,1162,2.51,1163,3.334,1164,3.334,1165,3.775]],["title/injectables/FilesService.html",[30,1.338,1047,2.657]],["body/injectables/FilesService.html",[3,0.04,4,0.034,5,0.057,9,0.188,10,0.009,12,0.491,21,0.046,22,0.119,24,1.425,25,1.495,27,0.003,28,0.005,29,0.003,30,1.425,31,1.444,35,0.277,36,1.21,37,2.497,41,0.579,43,1.664,44,1.384,45,0.508,46,1.484,48,1.838,49,1.884,54,2.612,56,2.221,60,2.185,61,1.528,63,1.747,64,1.4,110,1.87,125,0.962,158,1.358,287,2.417,290,4.061,297,0.902,320,1.597,376,3.116,377,2.602,427,3.78,429,4.721,433,2.829,435,4.141,440,2.321,444,4.141,468,1.444,683,2.737,714,5.083,715,4.994,718,2.499,719,1.87,723,2.737,775,1.87,839,4.141,970,1.444,972,2.178,973,3.295,974,3.51,975,1.791,991,4.234,1019,2.333,1047,2.829,1056,2.737,1071,4.141,1098,2.737,1100,4.141,1113,2.737,1166,2.737,1167,4.141,1168,4.688,1169,3.099,1170,3.099,1171,4.688,1172,3.78,1173,3.099,1174,3.099,1175,4.141,1176,3.099,1177,3.099,1178,4.688,1179,3.099,1180,4.688,1181,3.099,1182,3.099,1183,3.099,1184,3.099,1185,3.099,1186,3.099,1187,3.099,1188,3.099,1189,3.099,1190,4.688,1191,4.688,1192,3.099,1193,3.099,1194,4.688,1195,3.099]],["title/classes/ForgotPasswordDto.html",[22,0.168,482,3.298]],["body/classes/ForgotPasswordDto.html",[3,0.076,4,0.064,5,0.04,9,0.186,10,0.009,21,0.088,22,0.28,27,0.006,28,0.007,29,0.006,35,0.527,41,0.462,131,1.882,244,2.189,279,1.054,283,1.608,319,2.84,403,3.411,482,5.478,549,2.523,732,3.957,740,4.061,741,4.061,743,3.153,748,5.589,749,5.898,750,5.142,751,4.758,752,3.923,755,4.419,1196,6.461,1197,5.901,1198,5.901]],["title/classes/GenerateApplicationTokenDto.html",[22,0.168,396,3.298]],["body/classes/GenerateApplicationTokenDto.html",[3,0.084,4,0.071,5,0.045,10,0.008,21,0.097,22,0.25,27,0.006,28,0.007,29,0.006,35,0.584,41,0.511,45,0.425,278,4.497,279,1.166,283,1.71,289,4.282,297,0.786,396,5.827,1199,6.872,1200,5.769,1201,6.532]],["title/classes/GoogleCloudEngine.html",[22,0.168,1202,3.095]],["body/classes/GoogleCloudEngine.html",[3,0.056,4,0.047,5,0.03,9,0.175,10,0.009,21,0.09,22,0.168,23,1.864,24,2.251,25,2.193,27,0.004,28,0.006,29,0.004,33,0.92,35,0.391,36,1.553,37,1.993,41,0.608,43,1.666,44,1.386,45,0.482,46,1.485,48,1.774,49,1.385,54,1.467,56,1.542,61,1.183,63,1.553,117,2.489,125,0.899,164,3.101,279,0.782,283,1.323,287,2.247,297,0.868,335,2.179,377,3.341,433,3.632,456,0.878,465,3.479,468,2.805,672,2.642,842,4.15,845,4.853,846,4.853,847,3.531,854,4.231,856,4.347,857,4.231,861,4.572,862,2.642,863,2.911,864,3.078,1202,4.231,1203,6.007,1204,3.279,1205,6.074,1206,5.206,1207,4.379,1208,5.316,1209,4.379,1210,4.379,1211,4.379,1212,4.379,1213,3.531,1214,3.531,1215,3.279,1216,3.868,1217,3.868,1218,3.868,1219,3.868]],["title/interfaces/GoogleCloudEngineOptions.html",[456,0.883,1206,3.095]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.068,4,0.058,5,0.036,9,0.192,10,0.009,21,0.102,22,0.203,23,2.264,24,2.082,25,1.696,27,0.005,28,0.007,29,0.005,33,1.439,35,0.475,37,1.542,45,0.346,49,1.224,54,1.782,56,1.873,61,1.437,63,1.768,117,2.2,164,3.53,283,1.506,297,0.857,433,3.21,456,1.067,458,1.922,465,4.38,468,2.479,842,4.134,854,3.739,856,4.33,857,3.739,861,4.554,862,3.21,863,3.536,864,3.739,1202,3.739,1203,3.983,1204,3.983,1205,4.698,1206,5.327,1208,4.698,1213,4.289,1214,4.289,1215,3.983,1216,7.069,1217,4.698,1218,4.698,1219,4.698]],["title/controllers/HealthController.html",[0,1.93,1220,3.298]],["body/controllers/HealthController.html",[0,2.139,2,2.139,3,0.063,4,0.053,5,0.033,7,3.084,9,0.196,10,0.009,12,0.773,21,0.073,22,0.187,24,2.517,25,2.641,27,0.005,28,0.006,29,0.005,35,0.436,36,1.671,41,0.382,48,1.259,49,1.905,63,1.259,122,4.831,125,1.002,131,1.556,154,3.743,155,2.709,194,5.221,239,2.821,870,3.084,1220,4.849,1221,4.31,1222,6.476,1223,7.742,1224,4.88,1225,4.88,1226,6.476,1227,6.476,1228,6.476,1229,4.88,1230,6.476,1231,4.88,1232,6.476,1233,6.476,1234,3.935,1235,4.88,1236,4.88,1237,4.88,1238,4.88,1239,4.88,1240,4.88,1241,4.88,1242,4.88,1243,4.88,1244,4.88,1245,4.88,1246,4.88,1247,4.88,1248,4.31,1249,4.88,1250,4.88]],["title/modules/HealthModule.html",[83,1.276,144,3.095]],["body/modules/HealthModule.html",[2,3.368,3,0.082,4,0.069,5,0.044,9,0.209,10,0.009,12,1.013,21,0.095,22,0.245,27,0.006,28,0.007,29,0.006,83,2.227,85,3.078,101,3.417,144,5.401,1220,6.168,1234,5.156,1251,6.395,1252,7.683,1253,6.395]],["title/interfaces/IRequest.html",[51,2.783,456,0.883]],["body/interfaces/IRequest.html",[3,0.075,4,0.063,5,0.04,9,0.201,10,0.009,21,0.087,27,0.006,28,0.007,29,0.006,33,1.53,35,0.524,45,0.475,46,1.461,51,4.605,78,3.389,244,3.304,283,1.602,312,3.945,403,3.389,456,1.176,458,2.119,489,4.784,490,4.603,491,5.241,538,4.391,1254,5.179]],["title/interfaces/ISession.html",[456,0.883,491,2.783]],["body/interfaces/ISession.html",[3,0.071,4,0.06,5,0.038,10,0.009,21,0.083,27,0.005,28,0.007,29,0.005,33,1.168,35,0.497,45,0.568,283,1.549,290,3.916,295,3.606,297,0.899,312,3.851,370,4.703,456,1.115,458,2.01,491,4.455,518,5.409,521,6.56,572,4.484,574,4.912,576,4.484,1172,5.683,1255,4.912,1256,8.137,1257,5.561,1258,5.561,1259,5.561,1260,5.561]],["title/interfaces/IncomingFile.html",[456,0.883,1261,2.927]],["body/interfaces/IncomingFile.html",[3,0.077,4,0.065,5,0.041,10,0.009,21,0.09,27,0.006,28,0.007,29,0.006,35,0.538,45,0.545,283,1.628,297,0.926,456,1.207,458,2.174,970,3.9,1261,4.922,1262,5.314,1263,4.852,1264,7.391,1265,7.391,1266,6.747]],["title/classes/IncorrectPassword.html",[22,0.168,1267,2.657]],["body/classes/IncorrectPassword.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.848,21,0.123,22,0.317,27,0.005,28,0.007,29,0.005,33,1.783,41,0.419,50,5.006,98,2.038,125,1.772,279,0.955,474,3.381,484,2.362,551,3.092,615,3.092,616,3.228,636,3.817,638,3.556,640,3.092,641,2.859,678,3.228,679,3.228,785,2.151,928,3.543,1014,3.31,1267,4.149,1268,3.556,1269,5.35,1270,3.761,1271,3.761,1272,4.346,1273,3.761,1274,3.381,1275,3.381,1276,3.761,1277,3.761]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.168,1278,3.551]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.066,4,0.056,5,0.035,9,0.17,10,0.009,12,0.817,21,0.077,22,0.197,23,2.194,24,1.566,27,0.005,28,0.006,29,0.005,35,0.461,36,1.732,41,0.526,43,1.51,44,1.256,45,0.437,46,1.346,48,1.33,56,2.364,70,4.156,71,3.427,78,2.979,81,2.481,107,3.726,117,2.776,125,1.058,147,4.051,262,5.59,279,0.92,614,5.559,732,2.565,774,4.718,785,2.073,872,3.427,874,5.59,1073,4.553,1126,4.156,1127,6.376,1278,5.413,1279,6.593,1280,4.553,1281,7.465,1282,5.155,1283,6.713,1284,7.909,1285,5.155,1286,5.155,1287,5.155,1288,6.713,1289,5.155,1290,5.155,1291,5.155,1292,5.155,1293,4.156,1294,4.553]],["title/classes/InvalidCredentials.html",[22,0.168,678,2.657]],["body/classes/InvalidCredentials.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.848,21,0.123,22,0.317,27,0.005,28,0.007,29,0.005,33,1.783,41,0.419,50,5.006,98,2.038,125,1.772,279,0.955,474,3.381,484,2.362,551,3.092,615,3.092,616,3.228,636,3.817,638,3.556,640,3.092,641,2.859,678,4.149,679,3.228,785,2.151,928,3.543,1014,3.31,1267,3.228,1268,3.556,1270,3.761,1271,3.761,1272,4.346,1273,3.761,1274,3.381,1275,3.381,1276,3.761,1277,3.761,1295,5.35]],["title/classes/InvalidEmailConfirmationLink.html",[22,0.168,1296,3.095]],["body/classes/InvalidEmailConfirmationLink.html",[3,0.077,4,0.065,5,0.041,9,0.152,10,0.009,12,0.947,21,0.11,22,0.282,27,0.006,28,0.007,29,0.006,33,1.679,41,0.468,125,1.714,244,2.217,279,1.067,549,1.733,785,2.965,928,4.302,965,3.974,1014,4.019,1272,4.661,1274,4.661,1275,4.661,1296,5.184,1297,4.82,1298,5.978,1299,4.202,1300,3.974]],["title/classes/InvalidPasswordResetLink.html",[22,0.168,679,2.657]],["body/classes/InvalidPasswordResetLink.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.848,21,0.123,22,0.317,27,0.005,28,0.007,29,0.005,33,1.783,41,0.419,50,4.84,98,2.038,125,1.772,279,0.955,474,3.381,484,2.362,551,3.092,615,3.092,616,3.228,636,3.817,638,3.556,640,3.092,641,2.859,678,3.228,679,4.149,785,2.151,928,3.543,1014,3.658,1267,3.228,1268,3.556,1270,3.761,1271,3.761,1272,4.346,1273,3.761,1274,3.381,1275,3.381,1276,3.761,1277,3.761,1301,5.35]],["title/classes/InvalidUserActivationLink.html",[22,0.168,1299,3.095]],["body/classes/InvalidUserActivationLink.html",[3,0.077,4,0.065,5,0.041,9,0.152,10,0.009,12,0.947,21,0.11,22,0.282,27,0.006,28,0.007,29,0.006,33,1.679,41,0.468,125,1.714,244,2.217,279,1.067,549,1.733,785,2.965,928,4.302,965,3.974,1014,4.019,1272,4.661,1274,4.661,1275,4.661,1296,4.202,1297,4.82,1299,5.184,1300,3.974,1302,5.978]],["title/classes/LoginDto.html",[22,0.168,487,3.298]],["body/classes/LoginDto.html",[3,0.072,4,0.06,5,0.038,9,0.142,10,0.009,21,0.083,22,0.27,27,0.005,28,0.007,29,0.005,35,0.498,41,0.607,45,0.505,131,2.471,279,0.996,283,1.552,297,0.867,319,2.685,484,2.886,487,5.288,562,4.182,732,3.514,740,4.522,741,4.522,743,3.773,752,4.694,757,4.694,1303,4.927,1304,5.803,1305,5.578,1306,4.927,1307,5.578,1308,5.578]],["title/modules/MailerModule.html",[83,1.276,145,3.095]],["body/modules/MailerModule.html",[3,0.038,4,0.032,5,0.02,9,0.208,10,0.009,12,0.469,21,0.044,22,0.113,25,2.116,27,0.003,28,0.004,29,0.003,36,0.763,37,1.312,41,0.482,43,1.385,44,1.405,45,0.401,46,1.235,48,1.588,49,0.681,63,1.805,83,2.176,85,1.424,86,1.472,87,1.581,88,1.581,89,1.581,90,3.545,91,2.937,97,2.418,98,1.127,99,1.581,101,2.418,145,5.614,154,3.177,155,1.642,157,2.08,158,1.297,165,2.216,214,2.386,237,3.051,238,3.474,239,1.71,262,2.216,274,2.386,275,2.386,276,5.641,277,2.08,287,0.967,322,3.051,345,3.389,424,2.216,466,2.731,468,3.261,476,2.216,655,5.12,686,1.581,698,1.967,719,1.785,931,2.08,946,3.389,1110,3.997,1115,2.613,1309,2.613,1310,2.613,1311,2.613,1312,4.918,1313,2.959,1314,6.797,1315,2.613,1316,3.997,1317,5.881,1318,2.959,1319,5.859,1320,2.613,1321,3.997,1322,2.959,1323,3.997,1324,3.891,1325,2.959,1326,5.859,1327,2.613,1328,3.997,1329,2.959,1330,4.432,1331,4.61,1332,2.613,1333,2.959,1334,2.959,1335,4.854,1336,3.182,1337,2.613,1338,2.613,1339,2.613,1340,3.389,1341,2.613,1342,2.613,1343,2.08,1344,3.389,1345,2.613,1346,2.613,1347,2.959,1348,2.959,1349,2.959,1350,2.959,1351,4.854,1352,2.613,1353,2.613,1354,3.997,1355,4.854,1356,3.997,1357,4.854,1358,2.613,1359,2.613,1360,2.959]],["title/interfaces/MailerModuleAsyncOptions.html",[456,0.883,1317,3.298]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.069,4,0.058,5,0.037,9,0.193,10,0.009,21,0.08,27,0.005,28,0.007,29,0.005,33,1.449,35,0.481,37,1.56,45,0.585,46,1.757,49,1.238,83,2.209,237,4.462,238,5.08,277,5.651,283,1.517,292,4.165,456,1.079,458,1.945,460,3.577,461,6.096,462,7.1,463,4.753,464,4.753,466,3.247,468,2.508,470,4.753,654,5.169,1317,5.169,1324,4.363,1336,3.783,1337,4.753,1361,4.03]],["title/interfaces/MailerOptions.html",[456,0.883,1324,2.783]],["body/interfaces/MailerOptions.html",[3,0.084,4,0.07,5,0.044,9,0.165,10,0.008,21,0.097,27,0.006,28,0.007,29,0.006,33,1.367,72,3.613,83,1.886,456,1.557,458,2.352,460,4.326,743,3.477,1324,4.907,1361,4.874,1362,6.508,1363,6.508,1364,6.508,1365,6.508,1366,6.508,1367,6.508,1368,5.748,1369,6.508,1370,6.508]],["title/interfaces/MailerOptionsFactory.html",[456,0.883,1336,3.095]],["body/interfaces/MailerOptionsFactory.html",[3,0.08,4,0.067,5,0.042,9,0.158,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,35,0.556,36,1.95,41,0.487,48,1.605,49,1.739,83,2.359,456,1.248,458,2.248,466,3.754,468,3.522,654,4.659,1324,5.144,1336,5.312,1361,5.659,1371,5.495,1372,8.465,1373,6.221]],["title/injectables/MailerProcessor.html",[30,1.338,1312,3.095]],["body/injectables/MailerProcessor.html",[3,0.029,4,0.024,5,0.015,9,0.206,10,0.009,12,0.355,21,0.033,22,0.086,24,1.763,25,2.362,27,0.002,28,0.004,29,0.002,30,1.105,31,1.045,35,0.2,36,0.938,37,2.411,41,0.601,43,1.666,44,1.386,45,0.482,46,1.485,48,1.911,49,1.738,54,2.36,61,0.983,81,2.541,83,0.65,98,1.385,107,3.633,110,1.353,117,0.927,125,0.746,131,2.174,147,2.769,237,1.245,244,1.702,283,0.8,297,0.464,335,1.116,466,1.353,468,2.139,484,2.134,549,2.189,672,1.353,719,1.353,721,2.933,732,1.116,900,1.353,901,1.353,902,1.353,907,1.679,916,1.491,923,3.953,951,1.679,965,2.418,1080,1.808,1121,3.213,1122,3.213,1123,3.213,1125,3.213,1126,1.808,1127,4.256,1129,3.213,1131,3.213,1132,4.053,1134,3.213,1135,7.894,1136,4.053,1141,3.213,1142,4.053,1144,1.679,1145,1.981,1149,1.981,1150,4.663,1151,4.663,1152,1.679,1153,4.663,1154,1.981,1155,1.981,1160,1.981,1161,1.981,1163,1.981,1164,1.981,1300,2.418,1312,2.557,1324,3.336,1331,1.679,1332,1.981,1335,1.981,1374,1.981,1375,4.589,1376,3.637,1377,5.488,1378,3.213,1379,3.213,1380,3.213,1381,3.213,1382,3.213,1383,2.243,1384,2.243,1385,3.637,1386,2.243,1387,2.243,1388,2.243,1389,2.243,1390,2.243,1391,3.637,1392,5.803,1393,2.243,1394,3.637,1395,2.243,1396,3.637,1397,2.243,1398,3.637,1399,2.243,1400,3.637,1401,2.243,1402,3.637,1403,3.213,1404,2.243,1405,2.243,1406,2.243,1407,2.243,1408,3.637,1409,1.679,1410,3.637,1411,1.679,1412,2.243,1413,1.679,1414,2.243,1415,1.296,1416,1.491,1417,1.491,1418,1.679,1419,5.803,1420,3.637,1421,1.679,1422,2.243,1423,1.679,1424,1.679,1425,2.243,1426,1.679,1427,2.243,1428,2.243,1429,2.243,1430,2.243,1431,5.803,1432,4.589,1433,2.243,1434,5.803,1435,3.637,1436,2.243,1437,2.243,1438,2.243,1439,2.243,1440,2.243,1441,2.243,1442,4.589,1443,2.243,1444,2.243,1445,2.243,1446,2.243,1447,2.243]],["title/injectables/MailerService.html",[30,1.338,655,2.783]],["body/injectables/MailerService.html",[3,0.032,4,0.027,5,0.017,9,0.194,10,0.009,12,0.397,21,0.037,22,0.096,24,2.158,25,2.265,27,0.002,28,0.004,29,0.002,30,1.208,31,1.168,35,0.224,36,1.026,37,2.523,41,0.599,43,1.685,44,1.402,45,0.488,46,1.503,48,1.887,49,1.912,54,2.45,56,1.741,61,1.336,63,1.275,98,1.514,110,1.512,125,0.816,154,3.252,155,1.391,158,1.098,239,2.298,244,3.191,283,0.874,290,3.295,297,0.66,320,1.291,332,2.983,335,1.247,403,1.448,416,3.286,428,2.021,429,5.612,440,1.877,484,1.933,549,1.152,655,2.513,672,1.512,676,2.643,677,1.877,698,1.666,714,4.537,717,4.366,718,2.021,719,1.512,722,2.213,747,3.286,889,2.772,912,2.795,923,2.978,931,1.762,956,2.021,965,2.643,1167,3.512,1175,3.512,1248,3.512,1300,2.643,1338,2.213,1339,2.213,1341,2.213,1342,2.213,1343,1.762,1345,2.213,1346,2.213,1378,3.512,1379,3.512,1380,3.512,1381,3.512,1382,3.512,1448,2.213,1449,4.943,1450,4.943,1451,3.977,1452,3.977,1453,4.943,1454,4.943,1455,4.943,1456,3.977,1457,2.506,1458,2.506,1459,6.619,1460,2.506,1461,4.97,1462,3.977,1463,2.506,1464,3.977,1465,2.506,1466,3.977,1467,2.506,1468,3.977,1469,2.506,1470,3.977,1471,2.506,1472,3.977,1473,2.506,1474,3.977,1475,2.506,1476,2.506,1477,2.506,1478,2.506,1479,2.506,1480,2.506,1481,2.506,1482,2.506,1483,2.506,1484,2.506,1485,6.137,1486,6.137,1487,3.977,1488,5.627,1489,2.506,1490,2.506,1491,2.506,1492,2.506,1493,2.021,1494,2.506,1495,2.506,1496,2.506,1497,2.021,1498,2.506,1499,2.506]],["title/classes/MaxActiveUploadSessionsError.html",[22,0.168,778,2.927]],["body/classes/MaxActiveUploadSessionsError.html",[3,0.068,4,0.057,5,0.036,9,0.133,10,0.009,12,0.833,21,0.119,22,0.305,27,0.005,28,0.007,29,0.005,33,1.733,35,0.47,41,0.412,61,1.421,125,1.547,279,0.939,287,1.718,297,0.687,367,4.184,368,3.696,370,3.039,480,4.52,490,2.919,552,2.919,636,4.184,641,2.809,764,3.495,765,3.696,766,4.103,767,3.937,768,2.709,770,3.937,771,3.937,772,3.173,773,2.919,774,4.298,775,3.173,776,2.919,777,3.696,778,4.52,779,3.696,780,3.937,781,3.696,782,3.937,783,3.937,784,4.78,785,2.114,786,3.937,787,3.937,788,3.937,789,3.696,790,3.937,791,3.696,792,3.495,793,3.937,794,3.937,1500,5.258]],["title/classes/NoFilesUploaded.html",[22,0.168,1017,2.545]],["body/classes/NoFilesUploaded.html",[3,0.067,4,0.056,5,0.035,9,0.132,10,0.009,12,0.824,21,0.125,22,0.322,27,0.005,28,0.006,29,0.005,33,1.801,41,0.407,45,0.339,125,1.761,279,0.928,297,0.525,773,2.886,776,2.886,970,2.423,1009,3.005,1010,3.286,1011,4.487,1012,3.456,1014,4.056,1015,4.266,1016,3.456,1017,3.901,1018,3.456,1019,3.359,1020,3.005,1021,4.983,1022,4.983,1023,3.456,1024,3.005,1025,3.005,1026,3.456,1027,3.005,1028,3.456,1029,3.456,1030,3.456,1501,5.199]],["title/classes/PartialUserDto.html",[22,0.168,1502,3.298]],["body/classes/PartialUserDto.html",[3,0.055,4,0.047,5,0.029,8,3.962,9,0.151,10,0.009,21,0.064,22,0.228,27,0.004,28,0.006,29,0.004,33,1.252,35,0.386,41,0.688,45,0.573,76,7.709,131,2.547,279,0.771,283,1.31,286,3.309,287,1.948,291,3.309,295,3.181,297,0.843,312,2.966,318,2.495,363,6.246,484,2.047,549,2.239,562,2.966,812,3.945,889,2.693,934,3.962,1162,3.962,1502,4.463,1503,5.264,1504,3.813,1505,5.912,1506,4.806,1507,4.463,1508,4.317,1509,4.317,1510,4.317,1511,4.317,1512,4.317,1513,4.317,1514,4.317,1515,4.317,1516,4.317,1517,4.317,1518,4.317,1519,4.317,1520,4.317,1521,3.813]],["title/classes/PasswordChangedEmail.html",[22,0.168,1409,3.298]],["body/classes/PasswordChangedEmail.html",[3,0.063,4,0.053,5,0.033,9,0.165,10,0.009,21,0.073,22,0.187,23,2.083,24,1.972,25,1.56,27,0.005,28,0.006,29,0.005,35,0.437,36,1.674,41,0.607,43,1.101,44,0.916,45,0.319,46,0.981,48,1.878,49,1.493,63,1.878,98,1.864,117,2.683,125,1.004,279,0.874,297,0.886,484,2.499,549,2.109,785,1.968,889,3.501,900,4.676,901,4.676,902,4.676,909,3.945,910,4.322,911,4.322,912,5.116,913,4.322,914,4.322,915,4.322,916,3.253,917,3.093,918,3.44,921,3.253,922,5.73,923,4.858,924,3.44,925,3.945,926,4.322,927,3.664,928,2.521,929,4.322,930,3.44,1409,4.858,1522,6.501,1523,4.322,1524,4.893]],["title/classes/PasswordReset.html",[22,0.168,698,2.927]],["body/classes/PasswordReset.html",[3,0.053,4,0.045,5,0.028,9,0.184,10,0.009,21,0.086,22,0.159,27,0.004,28,0.006,29,0.004,33,1.218,35,0.371,41,0.596,45,0.496,56,1.462,61,1.122,63,1.071,64,3.947,72,3.22,82,2.759,131,2.132,158,1.819,247,2.505,279,0.741,281,4.225,283,1.275,286,3.711,289,3.729,290,3.218,291,3.711,295,3.677,297,0.731,298,3.856,299,4.017,300,4.811,301,4.183,302,4.811,303,3.856,307,3.666,320,2.139,321,4.811,322,3.22,323,2.759,326,2.304,327,2.505,328,2.759,329,2.759,330,2.918,331,2.918,332,2.505,333,2.918,334,3.856,335,2.066,341,2.918,342,2.918,346,2.759,351,3.108,686,3.099,687,4.077,698,3.856,934,4.444,936,2.918,939,5.835,943,4.077,944,3.108,949,3.347,950,3.347,1340,3.108,1525,6.361,1526,3.347,1527,4.151,1528,4.151,1529,4.151,1530,4.151,1531,4.151,1532,4.151,1533,3.666,1534,4.151]],["title/classes/PasswordResetEmail.html",[22,0.168,1411,3.298]],["body/classes/PasswordResetEmail.html",[3,0.062,4,0.052,5,0.033,9,0.163,10,0.009,21,0.072,22,0.185,23,2.055,24,1.954,25,1.54,27,0.005,28,0.006,29,0.005,35,0.432,36,1.659,41,0.603,43,1.086,44,0.903,45,0.315,46,0.968,48,1.865,49,1.48,63,1.865,72,2.68,98,2.753,117,2.659,125,0.991,178,2.791,279,0.862,297,0.884,484,2.483,549,2.095,750,3.394,785,1.942,889,3.483,900,4.652,901,4.652,902,4.652,916,3.21,917,3.052,918,3.394,921,3.21,924,3.394,928,3.313,930,3.394,963,4.265,964,3.893,1411,4.815,1493,5.829,1522,6.473,1523,4.265,1535,4.265,1536,4.829,1537,4.829,1538,4.829,1539,4.829,1540,4.829,1541,4.829,1542,6.431,1543,4.829,1544,4.265,1545,4.829]],["title/guards/RecaptchaGuard.html",[539,3.298,607,3.551]],["body/guards/RecaptchaGuard.html",[3,0.044,4,0.037,5,0.023,9,0.187,10,0.009,12,0.537,21,0.089,22,0.13,24,1.813,25,2.244,27,0.005,28,0.005,29,0.003,30,1.524,35,0.303,36,1.294,37,1.729,38,5.316,39,4.043,40,5.707,41,0.467,43,1.483,44,1.116,45,0.429,46,1.197,47,5.939,48,1.294,49,1.154,54,1.136,56,2.969,57,1.882,58,2.734,60,2.781,61,1.612,63,1.54,71,3.334,78,1.96,81,2.414,117,1.402,125,1.029,152,2.539,154,3.811,155,1.882,239,2.899,247,3.026,297,0.666,346,2.254,381,2.384,390,3.525,428,2.734,489,3.026,517,2.539,518,2.254,539,3.755,570,2.539,608,2.734,611,6.731,614,2.384,621,2.995,785,2.017,872,2.254,1014,1.632,1152,2.539,1293,2.734,1304,5.516,1546,2.734,1547,5.015,1548,4.811,1549,6.593,1550,3.391,1551,3.391,1552,3.391,1553,4.811,1554,5.015,1555,3.391,1556,5.015,1557,3.391,1558,2.734,1559,2.734,1560,2.734,1561,4.043,1562,2.995,1563,2.734,1564,2.995,1565,2.734,1566,2.995,1567,5.27,1568,3.391,1569,4.429,1570,3.391,1571,3.391,1572,3.391,1573,3.391,1574,3.391,1575,3.391,1576,3.391,1577,3.391,1578,3.391,1579,3.391,1580,5.015,1581,3.391,1582,3.391,1583,3.391,1584,3.391,1585,3.391,1586,3.391,1587,3.391,1588,3.391,1589,3.391,1590,3.391,1591,3.391,1592,3.391,1593,3.391,1594,3.391,1595,2.995,1596,3.391,1597,3.391,1598,3.391]],["title/classes/RegisterDto.html",[22,0.168,498,3.298]],["body/classes/RegisterDto.html",[3,0.059,4,0.05,5,0.031,9,0.117,10,0.009,21,0.068,22,0.238,27,0.004,28,0.006,29,0.004,35,0.411,41,0.592,45,0.492,131,2.41,279,0.821,283,1.368,297,0.855,299,2.553,301,2.658,309,3.444,319,2.213,484,2.858,498,4.66,549,2.359,562,3.93,731,5.496,732,4.356,734,4.062,735,3.708,736,5.496,737,5.024,738,5.024,740,4.383,741,4.383,742,4.062,743,3.769,744,3.708,748,4.958,749,5.018,750,4.375,751,3.708,752,4.137,759,3.708,763,5.018,1304,5.282,1306,4.062,1599,4.062,1600,4.599,1601,4.599,1602,4.599,1603,4.599,1604,6.675,1605,4.599]],["title/classes/RenameFileDto.html",[22,0.168,1040,3.298]],["body/classes/RenameFileDto.html",[3,0.075,4,0.063,5,0.04,9,0.149,10,0.009,21,0.087,22,0.279,27,0.006,28,0.007,29,0.006,35,0.524,41,0.459,45,0.382,61,1.969,131,1.87,279,1.047,283,1.602,297,0.736,299,3.255,319,2.822,732,3.945,737,4.844,738,4.844,740,4.045,741,4.045,743,3.133,757,3.898,830,6.436,970,3.865,991,5.937,1040,5.456,1606,6.436,1607,5.179,1608,5.863,1609,5.863,1610,5.863]],["title/classes/ResetPasswordDto.html",[22,0.168,502,3.298]],["body/classes/ResetPasswordDto.html",[3,0.07,4,0.059,5,0.037,9,0.138,10,0.009,21,0.081,22,0.266,27,0.005,28,0.007,29,0.005,35,0.485,41,0.543,45,0.452,61,1.876,98,2.644,131,2.214,279,0.969,283,1.526,289,4.294,297,0.815,301,3.138,319,2.613,484,2.928,502,5.198,592,4.836,732,4.013,737,4.614,738,4.614,740,4.248,741,4.248,743,2.901,755,4.066,757,4.614,758,4.795,759,5.597,760,4.795,762,4.795,763,4.378,1611,6.759,1612,5.429,1613,5.429]],["title/interfaces/SendEmailChangedJob.html",[456,0.883,1418,3.298]],["body/interfaces/SendEmailChangedJob.html",[3,0.081,4,0.068,5,0.043,9,0.161,10,0.009,21,0.094,27,0.006,28,0.007,29,0.006,33,1.603,35,0.566,45,0.412,283,1.678,297,0.828,456,1.269,458,2.287,549,2.213,912,5.985,1415,4.739,1416,4.207,1417,4.207,1418,5.718,1614,4.207,1615,5.103]],["title/interfaces/SendEmailConfirmationJob.html",[456,0.883,1421,3.298]],["body/interfaces/SendEmailConfirmationJob.html",[3,0.081,4,0.068,5,0.043,9,0.161,10,0.009,21,0.094,27,0.006,28,0.007,29,0.006,33,1.603,35,0.566,45,0.412,283,1.678,297,0.828,456,1.269,458,2.287,549,2.213,956,6.865,1415,4.739,1416,4.207,1417,4.207,1421,5.718,1614,4.207,1616,5.59]],["title/interfaces/SendEmailJob.html",[456,0.883,1415,2.545]],["body/interfaces/SendEmailJob.html",[3,0.08,4,0.068,5,0.043,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,35,0.56,45,0.532,283,1.668,297,0.892,456,1.256,458,2.264,549,1.815,626,6.354,889,3.833,1415,4.386,1617,5.532,1618,5.532,1619,7.21]],["title/interfaces/SendPasswordChangedJob.html",[456,0.883,1423,3.298]],["body/interfaces/SendPasswordChangedJob.html",[3,0.081,4,0.068,5,0.043,9,0.161,10,0.009,21,0.094,27,0.006,28,0.007,29,0.006,33,1.603,35,0.566,45,0.412,283,1.678,297,0.828,456,1.269,458,2.287,484,2.173,549,1.834,912,5.985,1415,4.739,1416,4.207,1417,4.207,1423,5.718,1614,4.207,1615,5.103]],["title/interfaces/SendPasswordResetJob.html",[456,0.883,1424,3.298]],["body/interfaces/SendPasswordResetJob.html",[3,0.081,4,0.068,5,0.043,9,0.161,10,0.009,21,0.094,27,0.006,28,0.007,29,0.006,33,1.603,35,0.566,45,0.412,283,1.678,297,0.828,456,1.269,458,2.287,484,2.173,549,1.834,1415,4.739,1416,4.207,1417,4.207,1424,5.718,1493,6.865,1614,4.207,1620,5.59]],["title/interfaces/SendUserActivationJob.html",[456,0.883,1426,3.298]],["body/interfaces/SendUserActivationJob.html",[3,0.081,4,0.068,5,0.043,9,0.161,10,0.009,21,0.094,27,0.006,28,0.007,29,0.006,33,1.603,35,0.566,45,0.412,244,2.347,283,1.678,297,0.828,456,1.269,458,2.287,549,1.834,1415,4.739,1416,4.207,1417,4.207,1426,5.718,1497,6.865,1614,4.207,1621,5.59]],["title/interfaces/SessionDto.html",[456,0.883,531,3.298]],["body/interfaces/SessionDto.html",[3,0.082,4,0.069,5,0.044,9,0.163,10,0.009,21,0.096,27,0.006,28,0.007,29,0.006,33,1.617,35,0.574,45,0.418,283,1.693,456,1.287,458,2.319,491,5.213,531,5.766,538,4.805,605,7.555,812,4.768,1622,5.668]],["title/controllers/SettingsController.html",[0,1.93,1623,3.298]],["body/controllers/SettingsController.html",[0,1.073,2,1.073,3,0.031,4,0.026,5,0.033,7,1.548,9,0.204,10,0.009,11,1.628,12,0.388,21,0.036,22,0.094,24,1.48,25,1.553,27,0.002,28,0.004,29,0.002,34,1.416,35,0.219,36,1.007,37,1.411,41,0.551,43,1.584,44,1.358,45,0.473,46,1.413,48,1.817,49,1.871,54,1.308,56,1.957,57,3.368,63,1.817,64,2.2,78,1.416,122,2.595,125,0.503,131,2.246,161,1.834,162,1.834,164,1.262,178,1.416,194,3.148,244,3.336,254,1.36,287,0.8,289,2.862,290,1.179,297,0.653,381,1.722,390,3.423,391,1.722,399,3.835,400,1.722,401,1.722,402,1.722,403,1.416,405,4.545,416,1.628,484,1.341,489,3.352,519,2.163,527,2.163,549,0.71,551,1.416,592,2.468,726,4.16,728,3.423,730,1.834,745,4.16,747,1.628,754,4.16,756,1.975,832,4.16,970,1.141,972,1.722,973,1.722,975,1.416,1015,1.548,1019,1.943,1046,2.163,1047,2.356,1054,2.356,1055,1.975,1090,2.163,1091,1.975,1092,1.834,1094,2.163,1266,3.148,1300,1.628,1507,3.646,1623,2.924,1624,2.163,1625,3.905,1626,3.905,1627,3.148,1628,3.926,1629,3.148,1630,3.926,1631,3.449,1632,3.449,1633,3.905,1634,2.449,1635,2.449,1636,3.905,1637,2.449,1638,2.449,1639,3.905,1640,2.449,1641,2.449,1642,2.449,1643,2.449,1644,2.449,1645,2.449,1646,3.905,1647,2.449,1648,2.449,1649,2.449,1650,2.449,1651,2.449,1652,2.163,1653,2.449,1654,3.905,1655,2.449,1656,2.449,1657,2.449,1658,2.449,1659,2.449,1660,2.449,1661,2.449,1662,2.449,1663,2.449,1664,4.3,1665,2.595,1666,2.163,1667,4.869,1668,2.449,1669,2.449,1670,2.449,1671,2.449,1672,2.163,1673,2.449,1674,2.449,1675,2.163,1676,2.449,1677,2.449,1678,2.449,1679,3.905,1680,2.449,1681,1.975,1682,2.449,1683,1.834,1684,2.449,1685,2.449,1686,3.905,1687,2.449,1688,2.449,1689,1.975,1690,2.449,1691,2.449,1692,2.163,1693,2.163,1694,2.449,1695,2.449,1696,2.449,1697,2.449,1698,2.449,1699,2.449,1700,2.449,1701,2.449,1702,2.449,1703,3.905,1704,2.449,1705,2.449,1706,2.449,1707,2.449,1708,2.449,1709,2.449,1710,2.449,1711,2.449,1712,2.449,1713,2.449,1714,2.449,1715,2.449]],["title/modules/SettingsModule.html",[83,1.276,146,3.095]],["body/modules/SettingsModule.html",[2,2.718,3,0.059,4,0.05,5,0.031,9,0.215,10,0.009,12,0.725,21,0.068,22,0.175,27,0.004,28,0.006,29,0.004,83,2.039,85,2.202,86,2.277,87,2.445,88,2.445,89,2.445,90,3.759,91,3.759,96,4.512,97,3.314,98,1.743,99,2.445,101,3.314,116,3.042,141,5.403,143,5.137,146,6.3,154,4.066,155,2.54,169,4.041,173,3.689,237,2.54,238,2.892,239,2.645,297,0.462,867,3.042,870,2.892,1107,5.24,1114,4.041,1117,4.041,1118,3.427,1119,4.041,1623,5.268,1665,5.858,1666,4.041,1716,4.041,1717,4.576,1718,4.041,1719,4.041,1720,4.576,1721,4.576]],["title/injectables/SettingsService.html",[30,1.338,1665,2.927]],["body/injectables/SettingsService.html",[3,0.032,4,0.027,5,0.017,9,0.189,10,0.009,12,0.392,17,2.781,18,1.565,21,0.037,22,0.095,24,1.698,25,1.782,26,2.834,27,0.002,28,0.004,29,0.002,30,1.197,31,1.154,35,0.221,36,1.016,37,2.489,41,0.57,43,1.638,44,1.363,45,0.475,46,1.461,48,1.824,49,1.876,54,2.877,56,2.288,60,3.48,61,2.018,63,1.016,125,0.808,244,3.334,247,1.494,258,3.175,287,1.287,289,2.879,290,1.191,297,0.868,403,1.431,416,1.646,484,0.85,524,3.532,549,1.141,592,3.099,600,2.187,617,2.187,628,2.618,640,2.276,654,3.672,655,3.532,675,2.187,676,2.618,677,1.854,692,2.187,697,2.187,702,2.187,730,2.949,747,2.618,756,1.996,885,1.565,889,1.118,891,1.494,897,1.565,965,2.618,1019,2.44,1047,3.372,1267,2.959,1296,3.929,1299,3.447,1300,3.715,1627,3.175,1628,3.175,1629,3.175,1630,3.175,1631,3.478,1632,3.478,1652,3.478,1665,2.618,1672,2.187,1722,2.187,1723,3.938,1724,2.476,1725,2.476,1726,3.938,1727,2.476,1728,3.938,1729,2.476,1730,2.187,1731,3.938,1732,2.476,1733,3.938,1734,2.476,1735,3.938,1736,2.476,1737,2.476,1738,3.938,1739,2.476,1740,3.938,1741,2.476,1742,2.476,1743,2.476,1744,2.476,1745,3.938,1746,2.476,1747,2.476,1748,2.476,1749,2.476,1750,2.476,1751,2.476,1752,2.476,1753,4.331,1754,2.476,1755,2.476,1756,2.476,1757,2.476,1758,2.476,1759,2.476,1760,2.476,1761,2.476,1762,2.476,1763,2.476,1764,2.476,1765,2.476,1766,2.476,1767,2.476,1768,2.476,1769,2.476,1770,2.476,1771,2.476,1772,2.476,1773,2.476]],["title/interfaces/StorageEngine.html",[456,0.883,842,2.657]],["body/interfaces/StorageEngine.html",[3,0.068,4,0.057,5,0.036,9,0.134,10,0.009,21,0.079,27,0.005,28,0.007,29,0.005,35,0.473,36,1.761,41,0.592,43,1.7,44,1.414,45,0.492,46,1.516,48,1.95,49,1.948,107,3.789,287,2.47,297,0.891,377,3.789,433,4.119,456,1.061,458,1.911,459,5.614,842,4.119,845,5.503,846,5.503,854,4.798,856,4.777,857,4.798,861,5.024,862,3.191,1774,4.671,1775,5.288,1776,5.288,1777,5.288]],["title/modules/StorageModule.html",[83,1.276,1107,2.927]],["body/modules/StorageModule.html",[3,0.045,4,0.038,5,0.024,9,0.189,10,0.009,12,0.551,21,0.052,22,0.133,25,2.266,27,0.003,28,0.005,29,0.003,36,0.897,37,1.48,41,0.522,43,1.5,44,1.248,45,0.435,46,1.338,48,1.721,49,0.8,63,1.917,83,2.284,85,1.672,86,1.729,87,1.857,88,1.857,89,1.857,90,3.797,91,3.234,97,2.728,98,1.323,99,1.857,101,1.857,237,2.834,238,3.227,276,5.991,277,2.443,287,1.135,345,3.823,457,6.122,465,3.856,466,3.081,467,3.589,468,3.463,469,3.069,476,2.602,686,1.857,863,4.023,1054,5.06,1107,5.345,1314,7.102,1315,3.069,1316,4.509,1319,6.277,1320,3.069,1321,4.509,1323,4.509,1326,6.277,1327,3.069,1328,4.509,1351,5.346,1352,3.069,1353,3.069,1354,4.509,1355,5.346,1356,4.509,1357,5.346,1358,3.069,1359,3.069,1778,3.069,1779,3.069,1780,3.069,1781,3.475,1782,3.475,1783,3.475,1784,3.475,1785,3.475,1786,4.88,1787,4.996,1788,3.069,1789,3.475,1790,3.475]],["title/interfaces/StorageOptions.html",[456,0.883,465,2.545]],["body/interfaces/StorageOptions.html",[3,0.079,4,0.067,5,0.042,9,0.191,10,0.009,21,0.092,27,0.006,28,0.007,29,0.006,35,0.552,45,0.529,83,1.791,283,1.654,456,1.239,458,2.233,459,4.344,460,4.108,465,4.35,848,5.29,870,3.906,1118,6.324,1172,6.068,1206,5.29,1791,5.458,1792,5.458,1793,5.458,1794,5.458]],["title/interfaces/StorageOptionsFactory.html",[456,0.883,467,3.095]],["body/interfaces/StorageOptionsFactory.html",[3,0.08,4,0.067,5,0.042,9,0.158,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,35,0.556,36,1.95,41,0.487,48,1.605,49,1.739,83,2.359,164,3.205,456,1.248,458,2.248,459,5.312,465,4.704,466,3.754,467,5.312,468,3.522,1795,5.495,1796,8.465,1797,6.221]],["title/injectables/StorageService.html",[30,1.338,1054,2.657]],["body/injectables/StorageService.html",[3,0.029,4,0.025,5,0.032,9,0.209,10,0.009,12,0.364,21,0.034,22,0.088,24,0.698,25,2.108,27,0.002,28,0.004,29,0.002,30,1.127,31,1.07,35,0.205,36,0.957,37,2.114,41,0.517,43,1.321,44,1.099,45,0.409,46,1.178,48,1.515,49,1.445,54,1.242,56,2.76,57,2.588,60,1.07,61,1.919,63,1.775,64,2.106,81,3.31,83,0.665,107,2.588,117,0.949,125,0.471,237,1.274,254,2.058,283,0.815,287,1.749,297,0.635,312,1.142,318,1.327,326,1.274,327,1.385,335,1.142,343,1.719,377,2.058,433,2.237,465,3.093,466,2.237,468,2.737,516,2.028,576,2.989,581,1.851,582,1.851,584,1.851,672,1.385,676,1.526,677,1.719,795,2.606,812,1.327,840,3.277,842,2.813,847,1.851,856,2.947,861,1.526,862,2.813,863,2.464,864,1.614,867,2.464,870,2.343,872,1.526,874,1.719,970,2.173,975,1.327,1009,1.327,1017,2.143,1019,1.142,1020,2.143,1024,2.143,1025,2.143,1027,2.143,1054,2.237,1070,3.274,1092,4.008,1118,3.491,1202,1.614,1261,2.464,1264,3.274,1265,4.118,1266,2.989,1377,5.548,1548,1.851,1681,1.851,1683,2.776,1689,1.851,1787,1.719,1788,2.028,1791,2.028,1792,2.028,1793,2.028,1794,3.274,1798,2.028,1799,4.663,1800,3.274,1801,3.707,1802,2.296,1803,2.296,1804,5.837,1805,2.296,1806,3.707,1807,2.296,1808,2.296,1809,3.707,1810,2.296,1811,3.707,1812,4.008,1813,2.296,1814,3.707,1815,2.296,1816,2.989,1817,5.188,1818,2.296,1819,2.296,1820,2.989,1821,2.776,1822,2.296,1823,2.296,1824,2.296,1825,2.776,1826,2.296,1827,4.663,1828,2.296,1829,2.296,1830,3.707,1831,2.296,1832,2.296,1833,2.296,1834,2.296,1835,2.296,1836,2.296,1837,2.028,1838,2.296,1839,2.296,1840,5.352,1841,4.663,1842,2.296,1843,3.707,1844,2.296,1845,2.296,1846,2.296,1847,2.296,1848,4.663,1849,2.296,1850,2.296,1851,2.296,1852,2.296,1853,2.296,1854,2.296,1855,3.707,1856,4.118,1857,2.296,1858,3.707,1859,2.296,1860,2.296,1861,2.296,1862,2.296,1863,2.296,1864,3.707,1865,2.296,1866,2.296,1867,2.296,1868,2.296,1869,5.352,1870,2.296,1871,2.296,1872,2.296,1873,2.296,1874,2.296,1875,2.296,1876,2.296,1877,2.296,1878,2.296,1879,2.296,1880,2.296,1881,2.296,1882,2.028,1883,2.296]],["title/classes/StreamMeter.html",[22,0.168,1825,3.298]],["body/classes/StreamMeter.html",[3,0.067,4,0.056,5,0.036,9,0.132,10,0.009,21,0.078,22,0.199,25,2.394,27,0.005,28,0.007,29,0.005,33,1.42,35,0.466,36,1.745,41,0.588,43,1.172,44,0.975,45,0.44,46,1.046,48,1.345,63,1.345,107,3.754,279,0.931,283,1.487,297,0.758,335,2.594,672,3.146,686,3.613,768,3.484,803,5.973,862,3.146,865,4.754,975,4.338,1683,5.621,1689,4.203,1825,5.064,1884,7.015,1885,4.604,1886,7.506,1887,7.506,1888,6.763,1889,5.213,1890,6.763,1891,6.629,1892,7.506,1893,7.943,1894,5.213,1895,5.213,1896,5.213,1897,6.763,1898,5.213]],["title/classes/TooManyFields.html",[22,0.168,1020,2.545]],["body/classes/TooManyFields.html",[3,0.067,4,0.056,5,0.035,9,0.132,10,0.009,12,0.824,21,0.125,22,0.322,27,0.005,28,0.006,29,0.005,33,1.801,41,0.407,45,0.339,125,1.761,279,0.928,297,0.525,773,2.886,776,2.886,970,2.423,1009,3.005,1010,3.286,1011,4.487,1012,3.456,1014,4.056,1015,4.266,1016,3.456,1017,3.005,1018,3.456,1019,3.359,1020,3.901,1021,4.983,1022,4.983,1023,3.456,1024,3.005,1025,3.005,1026,3.456,1027,3.005,1028,3.456,1029,3.456,1030,3.456,1899,5.199]],["title/classes/TooManyFiles.html",[22,0.168,1024,2.545]],["body/classes/TooManyFiles.html",[3,0.067,4,0.056,5,0.035,9,0.132,10,0.009,12,0.824,21,0.125,22,0.322,27,0.005,28,0.006,29,0.005,33,1.801,41,0.407,45,0.339,125,1.761,279,0.928,297,0.525,773,2.886,776,2.886,970,2.423,1009,3.005,1010,3.286,1011,4.487,1012,3.456,1014,4.056,1015,4.266,1016,3.456,1017,3.005,1018,3.456,1019,3.359,1020,3.005,1021,4.983,1022,4.983,1023,3.456,1024,3.901,1025,3.005,1026,3.456,1027,3.005,1028,3.456,1029,3.456,1030,3.456,1900,5.199]],["title/classes/TooManyParts.html",[22,0.168,1025,2.545]],["body/classes/TooManyParts.html",[3,0.067,4,0.056,5,0.035,9,0.132,10,0.009,12,0.824,21,0.125,22,0.322,27,0.005,28,0.006,29,0.005,33,1.801,41,0.407,45,0.339,125,1.761,279,0.928,297,0.525,773,2.886,776,2.886,970,2.423,1009,3.005,1010,3.286,1011,4.487,1012,3.456,1014,4.056,1015,4.266,1016,3.456,1017,3.005,1018,3.456,1019,3.359,1020,3.005,1021,4.983,1022,4.983,1023,3.456,1024,3.005,1025,3.901,1026,3.456,1027,3.005,1028,3.456,1029,3.456,1030,3.456,1901,5.199]],["title/classes/UnsupportedContentType.html",[22,0.168,1027,2.545]],["body/classes/UnsupportedContentType.html",[3,0.067,4,0.056,5,0.035,9,0.132,10,0.009,12,0.824,21,0.125,22,0.322,27,0.005,28,0.006,29,0.005,33,1.801,41,0.407,45,0.339,125,1.761,279,0.928,297,0.525,773,2.886,776,2.886,970,2.423,1009,3.005,1010,3.286,1011,4.487,1012,3.456,1014,3.957,1015,4.738,1016,3.456,1017,3.005,1018,3.456,1019,3.359,1020,3.005,1021,4.983,1022,4.983,1023,3.456,1024,3.005,1025,3.005,1026,3.456,1027,3.901,1028,3.456,1029,3.456,1030,3.456,1902,5.199]],["title/classes/UploadSessionNotFound.html",[22,0.168,792,2.927]],["body/classes/UploadSessionNotFound.html",[3,0.066,4,0.056,5,0.035,9,0.13,10,0.009,12,0.815,21,0.118,22,0.302,27,0.005,28,0.006,29,0.005,33,1.72,35,0.459,41,0.402,43,1.156,44,0.962,45,0.335,46,1.031,61,1.389,125,1.375,279,0.918,287,2.19,297,0.798,367,4.385,368,3.613,370,2.971,480,4.454,490,2.853,552,2.853,636,3.72,641,2.746,764,3.417,765,3.613,766,4.043,767,3.849,768,2.648,770,3.849,771,3.849,772,3.102,773,2.853,774,4.235,775,3.102,776,2.853,777,3.613,778,3.417,779,3.613,780,3.849,781,3.613,782,3.849,783,3.849,784,4.71,785,2.067,786,3.849,787,3.849,788,3.849,789,3.613,790,3.849,791,3.613,792,4.454,793,5.018,794,3.849,1903,5.14]],["title/interfaces/UploadedFile.html",[456,0.883,1821,3.298]],["body/interfaces/UploadedFile.html",[3,0.079,4,0.067,5,0.042,9,0.157,10,0.009,21,0.092,27,0.006,28,0.007,29,0.006,33,1.58,35,0.552,45,0.49,283,1.654,287,2.76,297,0.82,456,1.239,458,2.233,768,4.181,975,4.881,1261,5.394,1263,4.982,1820,4.982,1821,5.635,1904,5.458,1905,5.458]],["title/classes/User.html",[22,0.168,244,1.633]],["body/classes/User.html",[3,0.023,4,0.02,5,0.012,8,2.616,9,0.165,10,0.009,21,0.045,22,0.177,27,0.002,28,0.003,29,0.002,33,0.638,35,0.271,37,1.722,41,0.624,45,0.534,49,1.742,54,1.871,56,1.386,61,0.487,63,1.862,64,3.855,72,2.563,81,1.462,82,2.019,117,1.256,131,2.141,158,0.791,244,2.622,254,3.605,279,0.322,281,2.919,283,0.668,286,2.185,287,1.684,288,3.173,291,2.185,292,4.05,295,2.769,297,0.823,298,2.616,299,3.101,300,3.713,301,2.275,302,4.317,303,3.95,305,1.454,306,4.078,307,3.756,308,4.504,309,3.859,312,3.518,313,2.449,317,1.454,318,1.042,319,0.868,320,0.929,321,4.588,322,1.686,323,1.199,324,3.173,326,1.001,327,1.088,328,1.199,329,2.019,330,1.268,331,2.135,332,1.833,333,2.135,334,3.07,335,2.565,341,2.135,342,1.268,343,1.351,344,1.593,345,1.351,346,1.199,349,4.45,353,5.032,355,1.454,356,1.454,357,1.454,377,2.563,468,1.834,484,2.041,549,1.338,550,1.593,562,1.958,592,2.487,640,2.275,686,0.964,687,1.268,728,1.268,730,3.458,733,1.593,747,3.07,748,2.766,801,1.593,812,3.229,889,1.778,921,2.019,934,2.616,936,2.766,943,2.135,944,1.351,972,1.268,1162,3.07,1505,3.07,1506,3.173,1507,3.458,1553,2.449,1604,1.593,1627,3.173,1628,3.173,1629,3.173,1630,3.173,1730,4.078,1906,1.454,1907,3.936,1908,3.936,1909,1.804,1910,1.804,1911,1.804,1912,1.804,1913,1.804,1914,1.804,1915,1.804,1916,1.804,1917,1.804,1918,1.804,1919,1.804,1920,1.804,1921,1.804,1922,1.804,1923,1.804,1924,1.804,1925,1.804,1926,1.804,1927,1.804,1928,1.804,1929,1.804,1930,1.804,1931,2.683,1932,3.038,1933,3.936,1934,1.804,1935,1.593,1936,1.804,1937,1.593,1938,3.936,1939,1.593,1940,1.804,1941,3.936,1942,1.351,1943,1.593,1944,3.038,1945,5.154,1946,1.804,1947,1.804,1948,1.804,1949,1.804,1950,3.936,1951,3.038,1952,1.804,1953,5.154,1954,1.804,1955,1.804,1956,3.936,1957,1.804,1958,1.804,1959,1.804,1960,1.804,1961,1.593,1962,1.804,1963,1.804,1964,1.804,1965,1.804,1966,3.038,1967,1.804,1968,1.804,1969,1.804,1970,3.936,1971,1.804,1972,1.804]],["title/classes/UserActivation.html",[22,0.168,1343,3.095]],["body/classes/UserActivation.html",[3,0.046,4,0.039,5,0.024,9,0.172,10,0.009,21,0.078,22,0.137,27,0.003,28,0.005,29,0.003,33,1.095,35,0.32,37,1.037,41,0.607,45,0.505,49,1.2,54,1.198,56,1.837,61,0.966,63,1.345,64,3.954,72,2.895,82,2.377,131,2.157,158,1.568,178,2.067,247,2.158,279,0.639,281,3.89,283,1.146,286,3.416,289,3.485,290,2.962,291,3.416,292,3.147,295,3.499,297,0.683,298,3.466,299,3.754,300,4.496,301,3.909,302,4.496,303,4.496,307,3.296,320,1.843,321,4.78,322,2.895,323,2.377,326,1.985,327,2.158,328,2.377,329,2.377,330,2.514,331,2.514,332,2.158,333,2.514,334,3.466,335,2.595,341,2.514,342,2.514,346,2.377,349,2.678,351,2.678,545,2.884,686,4.011,687,3.666,768,2.687,934,4.091,936,3.666,939,5.453,943,3.666,944,2.678,949,2.884,950,2.884,990,4.204,1343,4.326,1344,2.678,1937,3.159,1973,6.405,1974,2.884,1975,6.154,1976,6.154,1977,3.576,1978,3.576,1979,3.576,1980,4.606,1981,4.962,1982,3.576,1983,3.576,1984,3.576,1985,3.576,1986,3.576,1987,5.215,1988,3.576,1989,3.159,1990,3.576,1991,3.576,1992,3.576]],["title/classes/UserActivationEmail.html",[22,0.168,1413,3.298]],["body/classes/UserActivationEmail.html",[3,0.062,4,0.053,5,0.033,9,0.164,10,0.009,21,0.072,22,0.186,23,2.066,24,1.961,25,1.548,27,0.005,28,0.006,29,0.005,35,0.434,36,1.665,41,0.605,43,1.092,44,0.908,45,0.316,46,0.974,48,1.87,49,1.485,63,1.87,117,2.669,125,0.996,279,0.867,297,0.885,549,2.101,551,4.19,640,4.19,785,1.952,789,3.412,889,3.49,900,4.661,901,4.661,902,4.661,916,3.227,917,3.068,918,3.412,921,3.227,924,3.412,928,2.501,930,3.412,964,3.914,1144,3.635,1162,3.227,1413,4.832,1497,5.845,1544,4.288,1993,4.288,1994,4.855,1995,4.855,1996,4.855,1997,4.855,1998,4.855,1999,4.855,2000,4.855,2001,6.453,2002,4.855,2003,4.855,2004,4.855,2005,4.855,2006,4.855,2007,4.288,2008,4.855]],["title/classes/UserDto.html",[22,0.168,1505,2.927]],["body/classes/UserDto.html",[3,0.057,4,0.048,5,0.031,8,4.624,9,0.114,10,0.009,21,0.067,22,0.234,27,0.004,28,0.006,29,0.004,35,0.4,41,0.687,45,0.572,131,2.495,279,0.799,283,1.343,286,3.861,287,2.273,291,3.861,295,3.763,297,0.887,312,3.719,318,2.587,363,6.523,484,2.389,549,2.016,562,3.461,812,4.667,889,3.142,934,4.624,1162,4.624,1505,4.061,1506,5.608,1507,5.209,2009,3.953,2010,4.475,2011,4.475,2012,4.475,2013,4.475,2014,4.475,2015,4.475,2016,4.475,2017,4.475,2018,4.475,2019,4.475,2020,4.475,2021,4.475]],["title/classes/UserNotActivated.html",[22,0.168,615,2.545]],["body/classes/UserNotActivated.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.848,21,0.123,22,0.317,27,0.005,28,0.007,29,0.005,33,1.783,41,0.419,50,4.84,98,2.038,125,1.772,279,0.955,474,3.381,484,2.362,551,3.092,615,3.975,616,3.228,636,4.218,638,3.556,640,3.092,641,2.859,678,3.228,679,3.228,785,2.151,928,3.543,1014,3.31,1267,3.228,1268,3.556,1270,3.761,1271,3.761,1272,4.346,1273,3.761,1274,3.381,1275,3.381,1276,3.761,1277,3.761,2022,5.35]],["title/classes/UserNotFound.html",[22,0.168,897,2.783]],["body/classes/UserNotFound.html",[3,0.069,4,0.058,5,0.037,9,0.137,10,0.009,12,0.855,21,0.12,22,0.308,27,0.005,28,0.007,29,0.005,33,1.747,41,0.423,43,1.214,44,1.294,45,0.352,46,1.082,125,1.108,279,0.964,297,0.86,367,4.236,372,4.597,549,1.564,552,3.839,562,3.797,766,4.856,772,4.605,885,3.411,886,3.794,887,4.042,889,2.438,890,4.042,891,3.257,892,4.042,893,4.042,894,3.411,895,5.714,896,4.042,897,4.371,898,4.042,2023,5.397]],["title/classes/UserNotLoggedIn.html",[22,0.168,616,2.657]],["body/classes/UserNotLoggedIn.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.848,21,0.123,22,0.317,27,0.005,28,0.007,29,0.005,33,1.783,41,0.419,50,5.006,98,2.038,125,1.772,279,0.955,474,3.381,484,2.362,551,3.092,615,3.092,616,4.149,636,3.817,638,3.556,640,3.092,641,2.859,678,3.228,679,3.228,785,2.151,928,3.543,1014,3.31,1267,3.228,1268,3.556,1270,3.761,1271,3.761,1272,4.346,1273,3.761,1274,3.381,1275,3.381,1276,3.761,1277,3.761,2024,5.35]],["title/classes/UsernameAlreadyExists.html",[22,0.168,894,2.783]],["body/classes/UsernameAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.137,10,0.009,12,0.855,21,0.12,22,0.308,27,0.005,28,0.007,29,0.005,33,1.747,41,0.423,43,1.214,44,1.294,45,0.352,46,1.082,125,1.108,279,0.964,297,0.86,367,3.839,372,4.597,549,1.564,552,3.839,562,3.797,766,5.02,772,4.605,885,3.411,886,3.794,887,4.042,889,2.438,890,4.042,891,3.257,892,4.042,893,4.042,894,4.371,895,5.714,896,4.042,897,3.411,898,4.042,2025,5.397]],["title/controllers/UsersController.html",[0,1.93,2026,3.298]],["body/controllers/UsersController.html",[0,2.094,2,2.094,3,0.061,4,0.052,5,0.033,7,3.02,9,0.213,10,0.009,11,3.177,12,0.757,17,3.178,21,0.071,22,0.183,23,2.034,24,1.452,26,3.691,27,0.005,28,0.006,29,0.005,34,2.762,35,0.427,36,1.648,37,2.084,41,0.5,43,1.436,44,1.195,45,0.416,46,1.281,48,1.648,49,1.469,54,1.601,56,1.683,60,2.227,61,1.291,63,1.648,131,2.036,244,3.053,297,0.727,367,2.653,391,3.359,399,3.02,400,3.359,401,3.359,402,3.359,405,3.359,562,3.579,628,3.177,777,3.359,1502,3.578,1505,4.781,1521,4.22,1935,4.22,2026,4.782,2027,4.22,2028,6.386,2029,4.779,2030,4.779,2031,4.779,2032,4.779,2033,4.779,2034,4.779,2035,4.22,2036,4.779,2037,3.853,2038,4.779,2039,4.779,2040,4.779,2041,4.779,2042,4.779,2043,4.779,2044,4.779,2045,4.779]],["title/modules/UsersModule.html",[83,1.276,96,2.444]],["body/modules/UsersModule.html",[2,3.037,3,0.07,4,0.059,5,0.037,9,0.211,10,0.009,12,0.858,17,4.497,21,0.081,22,0.207,27,0.005,28,0.007,29,0.005,44,1.013,83,2.215,85,2.605,86,2.694,87,2.892,88,2.892,89,2.892,90,4.083,91,4.083,96,4.807,97,3.702,98,2.062,99,2.892,101,2.892,157,3.805,158,2.373,244,2.008,322,3.005,424,4.054,1942,5.188,2026,5.722,2035,4.781,2037,4.365,2046,4.781,2047,4.781,2048,4.781,2049,5.413,2050,5.413,2051,5.413]],["title/injectables/UsersService.html",[17,2.191,30,1.338]],["body/injectables/UsersService.html",[3,0.053,4,0.045,5,0.028,9,0.193,10,0.009,12,0.658,17,2.886,21,0.062,22,0.159,24,1.262,25,1.324,26,3.352,27,0.004,28,0.006,29,0.004,30,1.763,31,1.935,35,0.371,36,1.497,37,2.286,41,0.567,43,1.628,44,1.354,45,0.471,46,1.452,48,1.725,49,1.815,54,1.943,60,2.703,61,1.806,63,1.867,125,0.852,126,3.347,158,1.819,244,1.54,254,2.304,297,0.848,320,2.139,332,2.505,376,3.856,427,4.676,429,5.42,440,3.108,484,2.485,549,1.938,552,3.22,562,3.926,628,2.759,667,3.666,889,1.875,891,2.505,894,2.624,1162,2.759,1459,7.152,1461,5.904,1753,5.123,2037,3.347,2052,3.666,2053,4.151,2054,5.8,2055,4.151,2056,5.8,2057,7.238,2058,7.238,2059,4.151,2060,5.8,2061,4.151,2062,4.151,2063,4.151,2064,4.151,2065,4.151,2066,5.8,2067,4.151,2068,4.151,2069,4.151,2070,4.151,2071,4.151]],["title/interfaces/WriteOptions.html",[456,0.883,1812,3.298]],["body/interfaces/WriteOptions.html",[3,0.068,4,0.057,5,0.052,9,0.192,10,0.009,21,0.078,27,0.005,28,0.007,29,0.005,35,0.471,45,0.492,46,1.6,57,3.782,81,3.632,107,4.428,254,2.927,283,1.498,292,4.814,297,0.762,312,2.624,456,1.058,458,1.906,460,3.505,812,3.048,862,4.111,1091,6.432,1092,5.974,1261,5.017,1548,4.252,1681,6.432,1683,3.949,1693,7.046,1804,6.666,1812,5.102,1816,4.252,1820,4.252,1837,6.017,1882,4.657,1905,4.657,2072,4.657]],["title/coverage.html",[2073,4.872]],["body/coverage.html",[0,2.611,1,1.217,5,0.019,6,1.435,10,0.009,13,1.08,15,1.217,17,0.808,22,0.337,27,0.002,28,0.003,29,0.002,30,2.163,32,1.435,34,0.939,37,0.806,45,0.106,51,1.027,61,0.439,65,1.217,66,1.435,67,1.217,83,1.532,124,1.435,128,1.217,129,1.435,147,0.98,148,2.241,171,1.217,177,1.31,179,1.31,244,1.031,278,1.607,280,2.241,282,1.142,326,0.902,338,1.217,358,1.435,365,1.217,366,1.435,370,0.939,373,1.217,374,1.435,380,1.217,392,1.08,396,1.217,399,1.027,426,1.435,456,1.59,457,1.217,459,3.032,460,3.223,465,0.939,467,1.142,468,1.296,471,1.217,472,1.435,482,1.217,484,0.955,487,1.217,491,1.027,498,1.217,502,1.217,524,1.027,531,1.217,533,1.31,536,1.31,539,1.217,549,1.25,607,2.241,609,1.435,615,0.939,616,0.98,633,1.435,649,1.435,655,1.027,676,1.08,678,0.98,679,0.98,686,4.957,698,1.08,708,1.142,709,1.31,712,1.435,726,1.217,727,2.728,728,1.142,729,1.435,745,1.217,746,1.435,754,1.217,755,2.728,764,1.08,765,3.032,774,1.027,775,0.98,778,1.08,792,1.08,795,1.142,796,1.435,828,1.435,829,1.435,832,1.217,833,1.435,834,1.435,836,1.217,837,1.435,838,1.435,840,1.142,841,2.241,842,0.98,848,1.142,865,1.142,885,1.027,886,3.032,891,0.98,894,1.027,897,1.027,899,1.435,907,1.217,908,1.435,909,2.241,917,1.027,931,1.142,932,2.241,933,2.241,946,1.217,951,1.217,952,1.435,953,1.435,968,2.241,969,1.142,992,1.217,998,1.435,1009,0.939,1010,3.341,1017,0.939,1020,0.939,1024,0.939,1025,0.939,1027,0.939,1031,1.217,1032,1.435,1040,1.217,1047,0.98,1051,1.31,1054,0.98,1108,1.142,1120,1.435,1166,1.435,1196,1.435,1199,1.435,1200,1.435,1202,1.142,1203,2.728,1204,2.728,1206,1.142,1215,1.217,1220,1.217,1221,1.435,1254,1.435,1255,1.435,1261,1.08,1262,1.435,1263,2.241,1267,0.98,1268,3.223,1278,1.31,1279,1.435,1280,1.435,1296,1.142,1297,2.241,1299,1.142,1303,1.435,1312,1.142,1317,1.217,1324,1.027,1330,1.31,1331,1.217,1336,1.142,1340,1.217,1343,1.142,1344,1.217,1361,2.728,1371,1.435,1374,1.435,1409,1.217,1411,1.217,1413,1.217,1415,0.939,1418,1.217,1421,1.217,1423,1.217,1424,1.217,1426,1.217,1448,1.435,1502,1.217,1503,1.435,1504,1.435,1505,1.08,1522,2.241,1525,2.241,1526,2.241,1535,1.435,1546,4.262,1558,1.31,1559,1.31,1561,1.31,1563,1.31,1565,1.31,1599,1.435,1606,1.435,1607,1.435,1611,1.435,1614,3.223,1615,2.241,1616,1.435,1617,1.435,1618,1.435,1620,1.435,1621,1.435,1622,1.435,1623,1.217,1624,1.435,1665,1.08,1722,1.435,1774,1.435,1786,1.31,1787,1.217,1795,1.435,1798,1.435,1812,1.217,1821,1.217,1825,1.217,1884,1.435,1885,1.435,1904,1.435,1906,2.241,1942,1.217,1973,2.938,1974,2.938,1981,1.31,1993,1.435,2009,1.435,2026,1.217,2027,1.435,2052,1.435,2072,1.435,2073,1.31,2074,1.625,2075,1.625,2076,8.692,2077,8.373,2078,8.436,2079,1.435,2080,1.435,2081,1.435,2082,1.435,2083,2.455,2084,1.435,2085,1.435,2086,6.448,2087,5.286,2088,4.849,2089,2.455,2090,1.435,2091,4.314,2092,2.78,2093,6.823,2094,3.644,2095,4.314,2096,2.78,2097,2.455,2098,2.78,2099,2.455,2100,1.625,2101,1.625,2102,1.435,2103,1.435,2104,1.435,2105,1.435,2106,1.435,2107,1.435,2108,1.435,2109,1.435,2110,1.435,2111,1.435,2112,1.435,2113,1.435,2114,1.625,2115,1.625]],["title/dependencies.html",[86,2.64,2116,3.662]],["body/dependencies.html",[5,0.032,10,0.009,12,0.75,22,0.243,27,0.005,28,0.006,29,0.005,78,3.665,86,2.353,110,3.827,111,3.813,150,4.177,152,3.541,155,2.625,158,2.073,161,4.749,162,4.749,164,2.437,165,3.541,318,2.733,319,2.276,320,2.437,489,2.854,490,2.625,518,3.144,521,3.813,522,4.177,523,4.177,719,2.854,721,3.813,943,3.324,1213,3.813,1214,3.813,1234,3.813,1664,4.177,1816,3.813,1817,4.177,1856,4.177,1931,4.177,2117,4.729,2118,4.729,2119,4.729,2120,7.155,2121,4.729,2122,4.729,2123,4.729,2124,4.729,2125,4.729,2126,4.729,2127,4.729,2128,4.729,2129,4.729,2130,6.342,2131,4.729,2132,4.729,2133,4.729,2134,4.729,2135,4.729,2136,4.729,2137,4.729,2138,4.729,2139,4.729,2140,4.729,2141,4.729,2142,4.177,2143,4.729,2144,4.729,2145,4.729,2146,4.729,2147,4.729,2148,4.177,2149,7.155,2150,4.729,2151,4.729,2152,4.729,2153,4.729,2154,4.729,2155,4.729,2156,4.729,2157,4.729,2158,4.729,2159,4.729,2160,4.729,2161,4.729,2162,4.729,2163,4.729,2164,4.729,2165,4.729,2166,4.729,2167,4.729]],["title/index.html",[35,0.327,2168,3.234,2169,3.234]],["body/index.html",[4,0.057,10,0.009,27,0.005,28,0.007,29,0.005,212,4.644,375,4.24,684,4.644,774,3.323,785,2.114,1368,4.644,1800,4.644,2073,4.24,2148,6.657,2170,5.258,2171,5.258,2172,6.8,2173,5.258,2174,5.258,2175,5.258,2176,5.258,2177,5.258,2178,5.258,2179,5.258,2180,4.644,2181,5.258,2182,5.258,2183,5.258,2184,8.602,2185,5.258,2186,5.258,2187,5.258,2188,8.453,2189,5.258,2190,5.258,2191,6.8,2192,5.258,2193,5.258,2194,5.258,2195,6.8,2196,6.8,2197,5.258,2198,5.258,2199,5.258,2200,6.8,2201,6.8,2202,5.258,2203,5.258,2204,5.258,2205,5.258,2206,4.24,2207,5.258,2208,5.258,2209,5.258,2210,5.258,2211,4.644,2212,5.258,2213,5.258,2214,5.258,2215,5.258,2216,5.258,2217,5.258,2218,5.258,2219,5.258,2220,5.258,2221,5.258,2222,4.24]],["title/license.html",[2168,3.234,2169,3.234,2222,2.953]],["body/license.html",[4,0.076,5,0.032,9,0.051,10,0.008,27,0.003,28,0.002,29,0.002,41,0.089,44,0.212,61,1.041,68,3.45,120,1.001,135,1.001,244,0.42,270,1.79,278,0.655,281,0.716,295,0.945,307,0.716,329,0.753,376,2.56,555,1.634,641,1.083,728,0.796,768,0.584,781,1.425,791,2.354,795,1.425,867,0.753,901,1.223,902,0.684,927,0.848,973,3.008,974,0.848,1019,0.564,1144,0.848,1294,1.001,1560,0.913,1595,5.898,1675,1.001,1961,1.001,2007,1.79,2180,1.79,2206,2.218,2211,2.958,2222,6.967,2223,3.349,2224,3.349,2225,1.133,2226,2.027,2227,7.884,2228,6.794,2229,4.279,2230,2.027,2231,3.349,2232,4.279,2233,1.133,2234,1.133,2235,1.133,2236,1.133,2237,7.964,2238,8.037,2239,1.133,2240,2.751,2241,4.968,2242,1.133,2243,2.027,2244,4.279,2245,1.133,2246,3.851,2247,1.133,2248,1.133,2249,7.092,2250,7.646,2251,2.751,2252,2.751,2253,5.723,2254,3.851,2255,4.647,2256,7.796,2257,4.279,2258,1.133,2259,4.647,2260,1.133,2261,1.133,2262,1.133,2263,4.279,2264,5.923,2265,6.104,2266,2.751,2267,5.723,2268,3.349,2269,2.43,2270,7.925,2271,7,2272,1.133,2273,1.133,2274,5.723,2275,1.133,2276,4.279,2277,1.133,2278,1.133,2279,1.133,2280,1.133,2281,1.133,2282,2.751,2283,2.027,2284,2.027,2285,4.279,2286,4.279,2287,2.751,2288,2.751,2289,1.133,2290,6.267,2291,2.027,2292,1.133,2293,1.133,2294,1.133,2295,1.133,2296,1.133,2297,1.133,2298,1.133,2299,1.133,2300,5.5,2301,4.968,2302,1.133,2303,3.851,2304,4.968,2305,1.133,2306,2.027,2307,2.027,2308,1.133,2309,1.133,2310,2.027,2311,2.027,2312,1.133,2313,2.751,2314,2.751,2315,1.133,2316,3.851,2317,1.133,2318,1.133,2319,4.279,2320,1.133,2321,1.133,2322,1.133,2323,1.133,2324,1.133,2325,1.133,2326,1.133,2327,1.133,2328,1.133,2329,1.133,2330,2.027,2331,1.133,2332,1.133,2333,1.133,2334,2.027,2335,2.027,2336,1.133,2337,1.133,2338,1.133,2339,2.751,2340,3.349,2341,2.751,2342,1.133,2343,1.133,2344,1.133,2345,1.133,2346,1.133,2347,1.133,2348,4.279,2349,2.751,2350,2.027,2351,1.133,2352,1.133,2353,2.027,2354,3.851,2355,1.133,2356,1.133,2357,1.133,2358,1.133,2359,1.133,2360,3.349,2361,2.027,2362,1.133,2363,5.251,2364,1.133,2365,1.133,2366,3.349,2367,2.751,2368,1.133,2369,2.751,2370,1.133,2371,2.027,2372,5.251,2373,5.723,2374,2.751,2375,2.751,2376,2.027,2377,1.133,2378,3.349,2379,1.133,2380,1.001,2381,3.851,2382,2.027,2383,4.279,2384,1.133,2385,1.133,2386,1.133,2387,2.751,2388,1.133,2389,1.133,2390,1.133,2391,1.133,2392,2.751,2393,1.133,2394,4.647,2395,1.133,2396,1.133,2397,1.133,2398,1.133,2399,1.133,2400,1.133,2401,2.751,2402,4.279,2403,2.027,2404,2.751,2405,1.133,2406,2.751,2407,1.133,2408,2.027,2409,1.133,2410,2.027,2411,2.027,2412,2.751,2413,1.133,2414,1.133,2415,2.027,2416,1.133,2417,1.133,2418,1.133,2419,1.133,2420,1.133,2421,2.751,2422,1.133,2423,2.027,2424,2.751,2425,1.133,2426,1.133,2427,1.133,2428,1.133,2429,2.027,2430,2.751,2431,2.027,2432,1.133,2433,1.133,2434,2.027,2435,3.851,2436,3.349,2437,2.751,2438,2.751,2439,2.027,2440,3.349,2441,1.133,2442,2.751,2443,1.133,2444,1.133,2445,2.027,2446,2.027,2447,3.349,2448,1.133,2449,1.133,2450,3.349,2451,1.133,2452,1.133,2453,2.027,2454,1.133,2455,1.133,2456,4.279,2457,2.027,2458,1.133,2459,2.027,2460,4.968,2461,5.251,2462,1.133,2463,1.133,2464,1.133,2465,1.133,2466,1.133,2467,1.133,2468,1.133,2469,2.027,2470,1.133,2471,2.751,2472,1.133,2473,2.027,2474,1.133,2475,1.133,2476,1.133,2477,1.133,2478,1.133,2479,1.133,2480,1.133,2481,1.133,2482,2.027,2483,1.133,2484,2.751,2485,1.133,2486,2.027,2487,2.751,2488,3.349,2489,1.133,2490,1.133,2491,1.133,2492,1.133,2493,1.133,2494,1.133,2495,1.133,2496,1.133,2497,1.133,2498,1.133,2499,1.133,2500,1.133,2501,1.133,2502,1.133,2503,3.349,2504,2.027,2505,2.027,2506,1.133,2507,2.027,2508,2.027,2509,1.133,2510,1.133,2511,1.133,2512,1.133,2513,1.133,2514,1.133,2515,2.027,2516,1.133,2517,1.133,2518,3.349,2519,2.751,2520,1.133,2521,1.133,2522,1.133,2523,1.133,2524,2.027,2525,1.133,2526,1.133,2527,2.027,2528,1.133,2529,3.349,2530,2.751,2531,1.133,2532,1.133,2533,1.133,2534,2.027,2535,1.133,2536,1.133,2537,1.133,2538,2.027,2539,1.133,2540,1.133,2541,1.133,2542,1.133,2543,1.133,2544,5.5,2545,1.133,2546,1.133,2547,1.133,2548,1.133,2549,2.027,2550,1.133,2551,1.133,2552,1.133,2553,2.751,2554,1.133,2555,1.133,2556,1.133,2557,1.133,2558,1.133,2559,1.133,2560,1.133,2561,1.133,2562,1.133,2563,1.133,2564,1.133,2565,1.133,2566,1.133,2567,1.133,2568,1.133,2569,1.133,2570,1.133,2571,1.133,2572,1.133,2573,1.133,2574,1.133,2575,1.133,2576,1.133,2577,1.133,2578,1.133,2579,2.027,2580,1.133,2581,1.133,2582,1.133,2583,2.027,2584,2.027,2585,3.851,2586,1.133,2587,1.133,2588,1.133,2589,1.133,2590,1.133,2591,1.133,2592,1.133,2593,1.133,2594,1.133,2595,1.133,2596,1.133,2597,1.133,2598,1.133,2599,1.133,2600,1.133,2601,2.027,2602,1.133,2603,1.133,2604,1.133,2605,1.133,2606,2.751,2607,1.133,2608,1.133,2609,1.133,2610,2.027,2611,1.133,2612,1.133,2613,1.133,2614,1.133,2615,1.133,2616,1.133,2617,1.133,2618,1.133,2619,1.133,2620,1.133,2621,1.133,2622,1.133,2623,1.133,2624,1.133,2625,1.133,2626,0.913,2627,1.133,2628,1.133,2629,1.133,2630,1.133,2631,2.027,2632,1.133,2633,1.133,2634,1.133,2635,1.133,2636,1.133,2637,1.133,2638,1.133,2639,1.133,2640,1.133,2641,1.133,2642,1.133,2643,3.349,2644,2.027,2645,1.133,2646,1.133,2647,1.133,2648,1.133,2649,1.133,2650,1.133,2651,2.751,2652,1.133,2653,1.133,2654,1.133,2655,1.133,2656,1.133,2657,1.133,2658,2.027,2659,1.133,2660,1.133,2661,1.133,2662,1.133,2663,1.133,2664,1.133,2665,1.133,2666,1.133,2667,1.133,2668,1.133]],["title/modules.html",[85,2.908]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.175,85,2.859,96,3.297,136,4.447,140,4.175,141,3.948,142,4.175,143,3.754,144,4.175,145,4.175,146,4.175,572,7.305,1107,3.948,2206,7.305,2269,5.246,2669,9.06,2670,9.109,2671,5.939]],["title/overview.html",[2672,5.336]],["body/overview.html",[2,1.509,10,0.009,13,5.091,17,3.811,27,0.003,28,0.005,29,0.003,31,1.604,83,0.998,84,5.524,85,1.657,86,1.713,87,1.839,88,1.839,89,1.839,90,1.839,91,1.839,92,3.04,93,3.04,94,3.04,95,3.04,96,4.592,97,2.709,98,1.311,99,1.839,136,6.661,137,3.04,138,3.04,139,3.04,140,5.524,141,5.332,142,5.383,143,5.39,144,4.231,145,5.883,146,5.995,147,4.007,279,0.615,392,5.091,417,3.04,419,3.04,420,3.04,458,1.244,524,4.84,608,2.775,642,3.04,644,3.04,645,3.04,655,4.84,705,3.04,707,3.04,708,4.231,1047,4.621,1054,4.621,1103,3.04,1104,3.04,1105,3.04,1106,3.04,1107,5.091,1108,4.231,1309,3.04,1310,3.04,1311,3.04,1312,4.231,1665,5.091,1692,3.04,1716,3.04,1718,3.04,1719,3.04,1778,3.04,1779,3.04,1780,3.04,2046,3.04,2047,3.04,2048,3.04,2380,3.04,2672,3.04,2673,3.442,2674,3.442,2675,3.442,2676,3.442]],["title/miscellaneous/variables.html",[2626,2.953,2677,4.685]],["body/miscellaneous/variables.html",[3,0.031,10,0.009,27,0.002,28,0.004,29,0.002,35,0.216,37,1.398,40,1.807,45,0.51,46,0.774,49,1.11,54,0.808,56,1.698,60,1.125,61,1.736,63,0.996,64,2.902,81,1.857,122,1.605,147,2.329,148,1.946,164,1.244,177,3.112,178,1.395,179,3.112,180,2.132,254,1.34,280,1.946,297,0.819,326,2.142,335,4.391,338,2.89,339,2.132,399,2.439,533,3.112,536,3.112,545,1.946,555,3.112,581,3.112,582,1.946,584,1.946,626,4.511,672,5.324,676,2.565,686,1.29,768,3.817,785,1.552,865,2.713,872,1.605,900,1.456,917,2.439,932,1.946,933,3.112,946,2.89,947,2.132,968,1.946,970,1.125,975,2.787,990,3.112,992,2.89,993,2.132,1051,3.112,1079,2.132,1152,1.807,1203,1.807,1204,2.89,1215,2.89,1293,1.946,1304,2.89,1330,3.888,1331,3.611,1340,2.89,1344,2.89,1403,2.132,1525,1.946,1526,3.112,1533,2.132,1546,1.946,1553,1.946,1558,3.112,1559,3.112,1560,1.946,1561,3.112,1562,2.132,1563,3.112,1564,2.132,1565,3.112,1566,2.132,1567,3.409,1569,3.409,1619,2.132,1786,3.888,1787,3.611,1891,4.259,1906,1.946,1939,2.132,1942,2.89,1943,2.132,1973,1.946,1974,3.888,1980,3.409,1981,3.112,1989,2.132,2079,2.132,2080,3.409,2081,2.132,2082,3.409,2083,3.409,2084,3.409,2085,3.409,2089,2.132,2090,3.409,2097,2.132,2099,2.132,2102,2.132,2103,3.409,2104,2.132,2105,3.409,2106,2.132,2107,2.132,2108,3.409,2109,2.132,2110,3.409,2111,2.132,2112,2.132,2113,2.132,2142,2.132,2626,1.946,2677,2.132,2678,2.414,2679,2.414,2680,2.414,2681,2.414,2682,2.414,2683,2.414,2684,2.414,2685,2.414,2686,2.414,2687,2.414,2688,2.414,2689,3.859,2690,3.859,2691,3.859,2692,3.859,2693,2.414,2694,2.414,2695,6.024,2696,3.859,2697,2.414,2698,2.414,2699,3.859,2700,2.414,2701,3.859,2702,2.414,2703,2.414,2704,2.414,2705,2.414,2706,2.414,2707,2.414,2708,2.414,2709,2.414,2710,2.414,2711,2.414,2712,2.414,2713,2.414,2714,2.414,2715,2.414,2716,2.414,2717,2.414,2718,2.414,2719,2.414,2720,2.414,2721,2.414,2722,2.414,2723,2.414,2724,2.414,2725,2.414,2726,2.414,2727,3.859,2728,2.414,2729,2.414,2730,2.414,2731,2.414,2732,2.414,2733,2.414,2734,2.414,2735,2.414,2736,2.414,2737,2.414,2738,2.414,2739,2.414,2740,2.414,2741,4.822,2742,2.414,2743,2.414,2744,2.414,2745,2.414,2746,2.414,2747,2.414,2748,3.859,2749,2.414,2750,2.414,2751,2.414,2752,2.414,2753,2.414,2754,2.414,2755,2.414,2756,2.414,2757,2.414,2758,2.414,2759,2.414,2760,2.414]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2131,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["0.25.4",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2130,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1246,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2129,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2076,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2086,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2087,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2088,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/PasswordResetEmail.html":{},"controllers/SettingsController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["1.1",{"_index":2226,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2292,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2312,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2321,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2323,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2137,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2239,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2247,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2248,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2262,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2275,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2280,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2281,"title":{},"body":{"license.html":{}}}],["10",{"_index":1948,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2641,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2410,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2644,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2656,"title":{},"body":{"license.html":{}}}],["1024",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{}}}],["11",{"_index":2673,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2674,"title":{},"body":{"overview.html":{}}}],["16",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2380,"title":{},"body":{"license.html":{},"overview.html":{}}}],["2).join(path.sep",{"_index":883,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2224,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2316,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2386,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2370,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2377,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2405,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2413,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2420,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2428,"title":{},"body":{"license.html":{}}}],["200",{"_index":1250,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1242,"title":{},"body":{"controllers/HealthController.html":{}}}],["23",{"_index":2676,"title":{},"body":{"overview.html":{}}}],["25",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":977,"title":{},"body":{"classes/File.html":{}}}],["3.0",{"_index":2318,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2430,"title":{},"body":{"license.html":{}}}],["3.1.3",{"_index":2136,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":2128,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2431,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2412,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2404,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2468,"title":{},"body":{"license.html":{}}}],["30",{"_index":2525,"title":{},"body":{"license.html":{}}}],["300",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":545,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2127,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2504,"title":{},"body":{"license.html":{}}}],["5.1.2",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2527,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2545,"title":{},"body":{"license.html":{}}}],["5.9.20",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2344,"title":{},"body":{"license.html":{}}}],["512",{"_index":1695,"title":{},"body":{"controllers/SettingsController.html":{}}}],["53",{"_index":2675,"title":{},"body":{"overview.html":{}}}],["6.4.10",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1675,"title":{},"body":{"controllers/SettingsController.html":{},"license.html":{}}}],["64",{"_index":939,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2006,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["7.0.0",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2124,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2122,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2126,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":966,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["8",{"_index":1692,"title":{},"body":{"controllers/SettingsController.html":{},"overview.html":{}}}],["_",{"_index":357,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":1799,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1803,"title":{},"body":{"injectables/StorageService.html":{}}}],["_data",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_debug",{"_index":1121,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_debug(message",{"_index":1129,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_encoding",{"_index":1892,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":843,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":850,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":844,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":852,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":1547,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":1551,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_id",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["_req",{"_index":1682,"title":{},"body":{"controllers/SettingsController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_send",{"_index":1376,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_send(email",{"_index":1385,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_size",{"_index":1887,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":1888,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":1890,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_value",{"_index":806,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2624,"title":{},"body":{"license.html":{}}}],["abort",{"_index":1843,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":1872,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1859,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1869,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1840,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2387,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2396,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":871,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2474,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1858,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":1837,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":803,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":551,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"controllers/SettingsController.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["account')@useguards(authguard",{"_index":1658,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto",{"_index":1671,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto.ts",{"_index":834,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:6",{"_index":835,"title":{},"body":{"classes/DeleteAccountDto.html":{}}}],["account/${activation.token",{"_index":1499,"title":{},"body":{"injectables/MailerService.html":{}}}],["account/:token",{"_index":1636,"title":{},"body":{"controllers/SettingsController.html":{}}}],["accurate",{"_index":2668,"title":{},"body":{"license.html":{}}}],["action",{"_index":1567,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":535,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2537,"title":{},"body":{"license.html":{}}}],["activate",{"_index":640,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activate(token",{"_index":1726,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activateaccount",{"_index":1626,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(@param(\"token",{"_index":1677,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(token",{"_index":1634,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activated",{"_index":1506,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":1300,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["activation')@useguards(authguard",{"_index":1662,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activation.deleteone",{"_index":1748,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.job",{"_index":1427,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["activation.job.ts",{"_index":1621,"title":{},"body":{"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["activation.mjml",{"_index":2000,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["activation.resent",{"_index":1773,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.schema",{"_index":1346,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["activation.schema.ts",{"_index":1974,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":1977,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":1985,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":1978,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":1982,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":1983,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":1984,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:56",{"_index":1979,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":1746,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activationlink",{"_index":1497,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendUserActivationJob.html":{},"classes/UserActivationEmail.html":{}}}],["active",{"_index":783,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["actually",{"_index":1960,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":2667,"title":{},"body":{"license.html":{}}}],["addition",{"_index":2294,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2381,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2452,"title":{},"body":{"license.html":{}}}],["address",{"_index":962,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":123,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2493,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2317,"title":{},"body":{"license.html":{}}}],["again",{"_index":1293,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2530,"title":{},"body":{"license.html":{}}}],["agent",{"_index":564,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2479,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2627,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2548,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":2539,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2609,"title":{},"body":{"license.html":{}}}],["alone",{"_index":2478,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":742,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":734,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["already",{"_index":772,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["alter",{"_index":2440,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2207,"title":{},"body":{"index.html":{}}}],["amount",{"_index":782,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["angular",{"_index":2179,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2580,"title":{},"body":{"license.html":{}}}],["api_secret",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":2186,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2305,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":128,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":2423,"title":{},"body":{"license.html":{}}}],["application",{"_index":278,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"classes/CreateApplicationDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"coverage.html":{},"license.html":{}}}],["application.changetoken(token",{"_index":451,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.deleteone",{"_index":445,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":395,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":829,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:7",{"_index":831,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.name",{"_index":425,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["application.todto",{"_index":409,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["applicationdto",{"_index":282,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":365,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["applicationnotfound(id",{"_index":447,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications",{"_index":375,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"index.html":{}}}],["applications.controller",{"_index":422,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":441,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.service",{"_index":393,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":338,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.changename",{"_index":347,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.changetoken",{"_index":350,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":352,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":340,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":373,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationsmodule",{"_index":140,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":392,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2601,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":136,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":470,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1284,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["asserting",{"_index":2531,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2569,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":457,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":2103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2252,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2439,"title":{},"body":{"license.html":{}}}],["auth",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["auth.controller",{"_index":648,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":525,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_optional",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authcontroller",{"_index":471,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":141,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2215,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2575,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":524,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":329,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":2269,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avatar",{"_index":1507,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["avatar')@useguards(authguard",{"_index":1640,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.filename",{"_index":1698,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.id",{"_index":1699,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.size",{"_index":1700,"title":{},"body":{"controllers/SettingsController.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2267,"title":{},"body":{"license.html":{}}}],["back",{"_index":2521,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2208,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1014,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1592,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1572,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64\").tostring(\"binary",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1449,"title":{},"body":{"injectables/MailerService.html":{}}}],["basis",{"_index":2366,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1931,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1959,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1947,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2375,"title":{},"body":{"license.html":{}}}],["before",{"_index":789,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{}}}],["behalf",{"_index":2473,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2416,"title":{},"body":{"license.html":{}}}],["below",{"_index":964,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["below.\\n",{"_index":929,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["beneficial",{"_index":2347,"title":{},"body":{"license.html":{}}}],["binary\")).tostring(\"base64",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":710,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":711,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":712,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":716,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":390,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["body[\"error",{"_index":1581,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":812,"title":{},"body":{"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"interfaces/SessionDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2625,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2612,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2670,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"modules.html":{}}}],["btoa",{"_index":2105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bucket",{"_index":1205,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1216,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":1891,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.tostring",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":2173,"title":{},"body":{"index.html":{}}}],["bull",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":142,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":708,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1110,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1115,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1817,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1806,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":1882,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":1853,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2618,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1403,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2395,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1683,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":1690,"title":{},"body":{"controllers/SettingsController.html":{}}}],["callback(null",{"_index":1689,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2258,"title":{},"body":{"license.html":{}}}],["catch",{"_index":874,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{}}}],["catch(error",{"_index":346,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1283,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1286,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1847,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2336,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2390,"title":{},"body":{"license.html":{}}}],["cb",{"_index":814,"title":{},"body":{"classes/Counter.html":{}}}],["changeavatar",{"_index":1627,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeavatar(@currentuser",{"_index":1680,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeavatar(newavatarid",{"_index":1728,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeavatar(user",{"_index":1638,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changed",{"_index":923,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email",{"_index":1408,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.email.ts",{"_index":909,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["changed.email.ts:15",{"_index":914,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:19",{"_index":915,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:5",{"_index":911,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:8",{"_index":913,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.job",{"_index":1420,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.job.ts",{"_index":1615,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["changed.mjml",{"_index":1524,"title":{},"body":{"classes/PasswordChangedEmail.html":{}}}],["changedisplayname",{"_index":1628,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changedisplayname(newdisplayname",{"_index":1731,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changedisplayname(undefined",{"_index":1642,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changedisplaynamedto",{"_index":726,"title":{"classes/ChangeDisplayNameDto.html":{}},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changeemail",{"_index":1629,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeemail(@body",{"_index":1704,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemail(newemail",{"_index":1733,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeemail(undefined",{"_index":1645,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemaildto",{"_index":745,"title":{"classes/ChangeEmailDto.html":{}},"body":{"classes/ChangeEmailDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changename",{"_index":284,"title":{},"body":{"classes/Application.html":{}}}],["changepassword",{"_index":1630,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changepassword(oldpassword",{"_index":1735,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changepassword(undefined",{"_index":1649,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changepassworddto",{"_index":754,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changetoken",{"_index":285,"title":{},"body":{"classes/Application.html":{}}}],["character",{"_index":2586,"title":{},"body":{"license.html":{}}}],["characters",{"_index":738,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["charge",{"_index":2445,"title":{},"body":{"license.html":{}}}],["choice",{"_index":2408,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2469,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":865,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":1898,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":882,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunkalreadyuploaded",{"_index":764,"title":{"classes/ChunkAlreadyUploaded.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["chunkindex",{"_index":770,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["chunks",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2576,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2533,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2302,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2301,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":2108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":279,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":1932,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":1933,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2475,"title":{},"body":{"license.html":{}}}],["client",{"_index":1215,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1208,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1793,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1204,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1207,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1209,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1212,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1210,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1211,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1214,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":1941,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":417,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":419,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_imports",{"_index":418,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["cluster_applicationsmodule_providers",{"_index":420,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":642,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":644,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":643,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":645,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":705,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":706,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":707,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1103,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1105,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1104,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1106,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1309,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1310,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1311,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1716,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":1718,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1717,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_providers",{"_index":1719,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1778,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1779,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1780,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2046,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2047,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":2048,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2249,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1582,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["collapsewhitespace",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collation",{"_index":2057,"title":{},"body":{"injectables/UsersService.html":{}}}],["collation(collation",{"_index":2069,"title":{},"body":{"injectables/UsersService.html":{}}}],["collationoptions",{"_index":2058,"title":{},"body":{"injectables/UsersService.html":{}}}],["combination",{"_index":2240,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2277,"title":{},"body":{"license.html":{}}}],["come",{"_index":2520,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2595,"title":{},"body":{"license.html":{}}}],["commit",{"_index":786,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["common",{"_index":2329,"title":{},"body":{"license.html":{}}}],["comparepassword",{"_index":1907,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1560,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":1447,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["compliance",{"_index":2518,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2507,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2402,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2592,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2628,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2349,"title":{},"body":{"license.html":{}}}],["config",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1119,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["configmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["configure",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":961,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["confirmation",{"_index":965,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{}}}],["confirmation.deleteone",{"_index":1763,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.job",{"_index":1422,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["confirmation.job.ts",{"_index":1616,"title":{},"body":{"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["confirmation.mjml",{"_index":920,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["confirmation.newemail",{"_index":1762,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.schema",{"_index":1339,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["confirmation.schema.ts",{"_index":933,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":935,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":942,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":937,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":938,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":940,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":941,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":1761,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmemail",{"_index":1631,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemail(@param(\"token",{"_index":1708,"title":{},"body":{"controllers/SettingsController.html":{}}}],["confirmemail(token",{"_index":1652,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemaillink",{"_index":956,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"interfaces/SendEmailConfirmationJob.html":{}}}],["conflict",{"_index":2621,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":766,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["connect",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["connectmongo(session",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2584,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2573,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":737,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1828,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":2063,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(_value",{"_index":804,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(activationlink",{"_index":1994,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["constructor(auth",{"_index":1724,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(chunkindex",{"_index":767,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(config",{"_index":428,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(confirmemaillink",{"_index":954,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["constructor(connection",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(displayname",{"_index":887,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(email",{"_index":892,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(emailsqueue",{"_index":713,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1012,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(files",{"_index":1169,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(forgotpasswordlink",{"_index":910,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["constructor(id",{"_index":793,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(identifier",{"_index":368,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(logger",{"_index":1126,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["constructor(options",{"_index":847,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(resetpasswordlink",{"_index":1536,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["constructor(username",{"_index":895,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(users",{"_index":126,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["construe",{"_index":2640,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2638,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["contained",{"_index":2462,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2298,"title":{},"body":{"license.html":{}}}],["content",{"_index":1030,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2297,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2339,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2433,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2234,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2246,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2241,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2227,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2245,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2543,"title":{},"body":{"license.html":{}}}],["control",{"_index":2330,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2328,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":404,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1057,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1235,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"settings",{"_index":1673,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller(\"users",{"_index":2038,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2327,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2291,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2438,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2424,"title":{},"body":{"license.html":{}}}],["correct",{"_index":1275,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["correction",{"_index":2572,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2446,"title":{},"body":{"license.html":{}}}],["count",{"_index":2071,"title":{},"body":{"injectables/UsersService.html":{}}}],["countdocuments(query",{"_index":2068,"title":{},"body":{"injectables/UsersService.html":{}}}],["counter",{"_index":795,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2613,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2073,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2237,"title":{},"body":{"license.html":{}}}],["create",{"_index":376,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(@body",{"_index":406,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(dto",{"_index":379,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(email",{"_index":2054,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(name",{"_index":431,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["create(options",{"_index":1171,"title":{},"body":{"injectables/FilesService.html":{}}}],["createapplicationdto",{"_index":380,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1315,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1316,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1320,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1321,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":286,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createhmac(\"sha256",{"_index":452,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["createmaileroptions",{"_index":1372,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":845,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":854,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2233,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":1796,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":846,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":857,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creating",{"_index":790,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["creation",{"_index":2235,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":2418,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1273,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2538,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":439,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["crypto.randombytes(size",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["currentsession.identifier",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{}}}],["currentuser",{"_index":399,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":1192,"title":{},"body":{"injectables/FilesService.html":{}}}],["customdecorator",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2585,"title":{},"body":{"license.html":{}}}],["data",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":295,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":944,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2007,"title":{},"body":{"classes/UserActivationEmail.html":{},"license.html":{}}}],["db",{"_index":1236,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2426,"title":{},"body":{"license.html":{}}}],["death",{"_index":2602,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2535,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":1076,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/auth",{"_index":1052,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/current",{"_index":400,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["decorators/recaptcha",{"_index":534,"title":{},"body":{"controllers/AuthController.html":{}}}],["decrement",{"_index":798,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":335,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["defective",{"_index":2568,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2558,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2614,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2332,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2225,"title":{},"body":{"license.html":{}}}],["delay",{"_index":2110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":377,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id",{"_index":410,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete(\"delete/:id",{"_index":1058,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(\"logout",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(\"revoke",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id",{"_index":385,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete('delete/:id",{"_index":1034,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('logout",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('revoke",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@currentuser",{"_index":411,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["delete(id",{"_index":433,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(user",{"_index":384,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteaccount",{"_index":1632,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["deleteaccount(@body",{"_index":1711,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccount(password",{"_index":1738,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deleteaccount(undefined",{"_index":1656,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccountdto",{"_index":832,"title":{"classes/DeleteAccountDto.html":{}},"body":{"classes/DeleteAccountDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["deleteallfor",{"_index":1167,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteallfor(uid",{"_index":1175,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteavatar",{"_index":1908,"title":{},"body":{"classes/User.html":{}}}],["deleted",{"_index":1162,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["deleted.todto",{"_index":1061,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":836,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deleting",{"_index":1157,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["deletion",{"_index":2295,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":2492,"title":{},"body":{"license.html":{}}}],["described",{"_index":2266,"title":{},"body":{"license.html":{}}}],["description",{"_index":2180,"title":{},"body":{"index.html":{},"license.html":{}}}],["desirable",{"_index":2662,"title":{},"body":{"license.html":{}}}],["destroy",{"_index":787,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["detailed",{"_index":2499,"title":{},"body":{"license.html":{}}}],["development",{"_index":2187,"title":{},"body":{"index.html":{}}}],["device",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{}}}],["didn't",{"_index":556,"title":{},"body":{"controllers/AuthController.html":{}}}],["different",{"_index":2449,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2655,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":455,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["direct",{"_index":2334,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2337,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2540,"title":{},"body":{"license.html":{}}}],["directory",{"_index":867,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"injectables/StorageService.html":{},"license.html":{}}}],["dirname",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1366,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["disabled",{"_index":1075,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2553,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2459,"title":{},"body":{"license.html":{}}}],["disk",{"_index":870,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["diskhealthindicator",{"_index":1226,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":840,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1831,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":848,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":728,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"coverage.html":{},"license.html":{}}}],["displayname",{"_index":889,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendEmailJob.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["displaynamealreadyexists",{"_index":885,"title":{"classes/DisplayNameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["displaynamealreadyexists(newdisplayname",{"_index":1754,"title":{},"body":{"injectables/SettingsService.html":{}}}],["distinguishing",{"_index":2647,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2363,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2660,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2376,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2657,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2383,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2496,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2549,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1237,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1227,"title":{},"body":{"controllers/HealthController.html":{}}}],["doctrines",{"_index":2425,"title":{},"body":{"license.html":{}}}],["document",{"_index":281,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":550,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1848,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1033,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(user",{"_index":1036,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2639,"title":{},"body":{"license.html":{}}}],["dto",{"_index":383,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/application.dto",{"_index":325,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/change",{"_index":1667,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/create",{"_index":394,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/delete",{"_index":1670,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/file.dto",{"_index":989,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":526,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/generate",{"_index":397,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/login.dto",{"_index":528,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/partial",{"_index":2036,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":529,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/rename",{"_index":1049,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/reset",{"_index":530,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":532,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/user.dto",{"_index":1935,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2486,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1326,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2197,"title":{},"body":{"index.html":{}}}],["each",{"_index":2229,"title":{},"body":{"license.html":{}}}],["eachasync(async",{"_index":1193,"title":{},"body":{"injectables/FilesService.html":{}}}],["earlier",{"_index":2272,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2648,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2371,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2174,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["ejs.render(html",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":549,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangeEmailDto.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["email!'})@isnotempty({message",{"_index":751,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["email')@useguards(authguard",{"_index":1647,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto",{"_index":1669,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto.ts",{"_index":746,"title":{},"body":{"classes/ChangeEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:7",{"_index":753,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["email.email",{"_index":1406,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.email.ts",{"_index":953,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["email.email.ts:15",{"_index":958,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:19",{"_index":959,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:5",{"_index":955,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:8",{"_index":957,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.html",{"_index":1444,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.subject",{"_index":1445,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.text",{"_index":1446,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email/${confirmation.token",{"_index":1491,"title":{},"body":{"injectables/MailerService.html":{}}}],["email/:token",{"_index":1654,"title":{},"body":{"controllers/SettingsController.html":{}}}],["emailalreadyexists",{"_index":891,"title":{"classes/EmailAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["emailalreadyexists(email",{"_index":2064,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailalreadyexists(newemail",{"_index":1756,"title":{},"body":{"injectables/SettingsService.html":{}}}],["emailchangedemail",{"_index":907,"title":{"classes/EmailChangedEmail.html":{}},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailchangedemail(job.data.forgotpasswordlink",{"_index":1433,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmation",{"_index":931,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["emailconfirmation.name",{"_index":1348,"title":{},"body":{"modules/MailerModule.html":{}}}],["emailconfirmationemail",{"_index":951,"title":{"classes/EmailConfirmationEmail.html":{}},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailconfirmationemail(job.data.confirmemaillink",{"_index":1436,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmations",{"_index":1453,"title":{},"body":{"injectables/MailerService.html":{}}}],["emailconfirmationschema",{"_index":946,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":948,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1347,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/confirm",{"_index":1405,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/email",{"_index":1407,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/password",{"_index":1410,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/user.activation.email",{"_index":1414,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailsqueue",{"_index":717,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["empty",{"_index":743,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring",{"_index":752,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@maxlength(255",{"_index":1608,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":735,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":758,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["encoding",{"_index":1264,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2547,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2635,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1118,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface",{"_index":864,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1774,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1775,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1776,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1777,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1791,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1792,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":876,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["ensure",{"_index":1274,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["enter",{"_index":749,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["entire",{"_index":2563,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2325,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2232,"title":{},"body":{"license.html":{}}}],["env.development",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2427,"title":{},"body":{"license.html":{}}}],["err",{"_index":1070,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":869,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(errors.map(error",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.code",{"_index":875,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["error.exception.ts",{"_index":1280,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1282,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1285,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.message).join(\"\\n",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorcodes",{"_index":1580,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1588,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1586,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1587,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1584,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1585,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.length",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":1365,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["eslint/no",{"_index":1369,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2574,"title":{},"body":{"license.html":{}}}],["even",{"_index":2597,"title":{},"body":{"license.html":{}}}],["event",{"_index":2546,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":797,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":822,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":780,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["except",{"_index":2394,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1073,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1289,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1281,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":363,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":356,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["excluding",{"_index":2534,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2610,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2355,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2255,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2324,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2254,"title":{},"body":{"license.html":{}}}],["exist",{"_index":372,"title":{},"body":{"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["existing",{"_index":788,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["exists",{"_index":552,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":2056,"title":{},"body":{"injectables/UsersService.html":{}}}],["expires",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":934,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2512,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2364,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["express.session",{"_index":1257,"title":{},"body":{"interfaces/ISession.html":{}}}],["expressed",{"_index":2555,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}}}],["extent",{"_index":2286,"title":{},"body":{"license.html":{}}}],["extname",{"_index":1686,"title":{},"body":{"controllers/SettingsController.html":{}}}],["factory",{"_index":1337,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":469,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1795,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1797,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1371,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1373,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2466,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2506,"title":{},"body":{"license.html":{}}}],["failed",{"_index":1152,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2516,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2593,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2421,"title":{},"body":{"license.html":{}}}],["false",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":2470,"title":{},"body":{"license.html":{}}}],["field",{"_index":1091,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"interfaces/WriteOptions.html":{}}}],["fieldname",{"_index":1265,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1023,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2342,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file.deleteone",{"_index":1191,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.dto",{"_index":1050,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto.ts",{"_index":1607,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["file.dto.ts:7",{"_index":1609,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["file.filename",{"_index":1099,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1100,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["file.interface",{"_index":1820,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1263,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1147,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":838,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.name",{"_index":1116,"title":{},"body":{"modules/FilesModule.html":{}}}],["file.rename(newfilename",{"_index":1195,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.size",{"_index":1101,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1087,"title":{},"body":{"controllers/FilesController.html":{}}}],["file[\"filename",{"_index":1183,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"hidden",{"_index":1184,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"id",{"_index":1185,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"public",{"_index":1186,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"size",{"_index":1187,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"uid",{"_index":1188,"title":{},"body":{"injectables/FilesService.html":{}}}],["filedto",{"_index":969,"title":{"classes/FileDto.html":{}},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileid",{"_index":839,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":970,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"classes/RenameFileDto.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filenotfound",{"_index":775,"title":{"classes/FileNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["filenotfound(id",{"_index":1071,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files",{"_index":1019,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"license.html":{}}}],["files.controller",{"_index":1111,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1056,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1850,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map(file",{"_index":1097,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1112,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":1873,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1048,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["fileschema",{"_index":992,"title":{},"body":{"classes/File.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileschema.methods.rename",{"_index":996,"title":{},"body":{"classes/File.html":{}}}],["fileschema.methods.todto",{"_index":994,"title":{},"body":{"classes/File.html":{}}}],["filescontroller",{"_index":1031,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1094,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["filesmodule",{"_index":143,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1108,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesprocessor.name",{"_index":1165,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["filesqueue",{"_index":715,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1047,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":1009,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1870,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":1684,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(file.mimetype",{"_index":1688,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":1687,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filter",{"_index":1681,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":1857,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1583,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":1459,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["finally",{"_index":2513,"title":{},"body":{"license.html":{}}}],["find",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{}}}],["findemailconfirmation",{"_index":1450,"title":{},"body":{"injectables/MailerService.html":{}}}],["findemailconfirmation(query",{"_index":1458,"title":{},"body":{"injectables/MailerService.html":{}}}],["findone",{"_index":427,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":435,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["findone(query",{"_index":2060,"title":{},"body":{"injectables/UsersService.html":{}}}],["findpasswordreset",{"_index":1451,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpasswordreset(query",{"_index":1462,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpublicfile",{"_index":1168,"title":{},"body":{"injectables/FilesService.html":{}}}],["findpublicfile(id",{"_index":1178,"title":{},"body":{"injectables/FilesService.html":{}}}],["finduseractivation",{"_index":1452,"title":{},"body":{"injectables/MailerService.html":{}}}],["finduseractivation(query",{"_index":1464,"title":{},"body":{"injectables/MailerService.html":{}}}],["finish",{"_index":2002,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["finished",{"_index":1841,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":641,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2560,"title":{},"body":{"license.html":{}}}],["folder",{"_index":971,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{}}}],["following",{"_index":2293,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":636,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":639,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":482,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotpasswordlink",{"_index":912,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{}}}],["form",{"_index":2250,"title":{},"body":{"license.html":{}}}],["format",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["found",{"_index":777,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"controllers/UsersController.html":{}}}],["foundation",{"_index":2642,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2172,"title":{},"body":{"index.html":{}}}],["free",{"_index":2353,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":860,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":877,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":880,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":878,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(path).then(buffer",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":873,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":292,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/File.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"interfaces/WriteOptions.html":{}}}],["function(next",{"_index":341,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":353,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["further",{"_index":2455,"title":{},"body":{"license.html":{}}}],["gcloud",{"_index":1794,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2314,"title":{},"body":{"license.html":{}}}],["generateapplicationtokendto",{"_index":396,"title":{"classes/GenerateApplicationTokenDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/GenerateApplicationTokenDto.html":{},"coverage.html":{}}}],["generated",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":326,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":450,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generateid(32",{"_index":949,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":343,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generatetoken",{"_index":378,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["generatetoken(id",{"_index":437,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generatetoken(user",{"_index":387,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["get(\"@me",{"_index":2039,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":1676,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"confirm",{"_index":1707,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"download/:id",{"_index":1062,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"hello",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"search/@:username",{"_index":2042,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"sessions",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('@me",{"_index":2030,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":1635,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('confirm",{"_index":1653,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('download/:id')@optionalauth",{"_index":1037,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('hello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["get('search/@:username",{"_index":2033,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('sessions')@useguards(authguard",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":1224,"title":{},"body":{"controllers/HealthController.html":{}}}],["getclientip",{"_index":517,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getsessions",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessions(uid",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsize",{"_index":1895,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2168,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":820,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2646,"title":{},"body":{"license.html":{}}}],["global",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2313,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2590,"title":{},"body":{"license.html":{}}}],["google",{"_index":1213,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1202,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1832,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1206,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2436,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2285,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2372,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2348,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2671,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":830,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RenameFileDto.html":{}}}],["grow",{"_index":2203,"title":{},"body":{"index.html":{}}}],["guard",{"_index":607,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":402,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":540,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleerror",{"_index":1122,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handleerror(error",{"_index":1131,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure",{"_index":1123,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure(job",{"_index":1134,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefiledeletion",{"_index":1124,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1138,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handler",{"_index":1074,"title":{},"body":{"controllers/FilesController.html":{}}}],["handlestall",{"_index":1125,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlestall(job",{"_index":1141,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["hapi/joi",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hashed",{"_index":1938,"title":{},"body":{"classes/User.html":{}}}],["having",{"_index":2283,"title":{},"body":{"license.html":{}}}],["headers",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":563,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1222,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1253,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1228,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1229,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1230,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1220,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1231,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":144,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2177,"title":{},"body":{"index.html":{}}}],["held",{"_index":2632,"title":{},"body":{"license.html":{}}}],["hello",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2212,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2350,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2630,"title":{},"body":{"license.html":{}}}],["hey",{"_index":924,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["hh",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":972,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"classes/User.html":{}}}],["hideschemaproperty",{"_index":1940,"title":{},"body":{"classes/User.html":{}}}],["hook",{"_index":333,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1287,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":1545,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["hours.\\n",{"_index":967,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["html",{"_index":900,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":1548,"title":{},"body":{"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1248,"title":{},"body":{"controllers/HealthController.html":{},"injectables/MailerService.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2661,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":647,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":2219,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1562,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1549,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["id",{"_index":287,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":370,"title":{},"body":{"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/ISession.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["ignore",{"_index":1069,"title":{},"body":{"controllers/FilesController.html":{}}}],["ii",{"_index":2393,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":926,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["implements",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["implied",{"_index":2382,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2489,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2485,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2467,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":2008,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["incidental",{"_index":2583,"title":{},"body":{"license.html":{}}}],["include",{"_index":2482,"title":{},"body":{"license.html":{}}}],["included",{"_index":2495,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2326,"title":{},"body":{"license.html":{}}}],["including",{"_index":2259,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1905,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1261,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":1804,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2263,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1271,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1267,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["increment",{"_index":799,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2481,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2480,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2471,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2335,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2541,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2230,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2434,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2599,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2306,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2532,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2389,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2542,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2562,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["initial",{"_index":2251,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2528,"title":{},"body":{"license.html":{}}}],["inject",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["inject(logger",{"_index":1149,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["inject(nodemailer_module_options",{"_index":1429,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel",{"_index":440,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":442,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":1476,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(file.name",{"_index":1182,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":1477,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(useractivation.name",{"_index":1478,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectqueue",{"_index":718,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":722,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":723,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2604,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2178,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2183,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2185,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1079,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["intellectual",{"_index":2356,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2422,"title":{},"body":{"license.html":{}}}],["interface",{"_index":456,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":458,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/email.interface",{"_index":916,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["interfaces/incoming",{"_index":1819,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1335,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1416,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["interfaces/session.interface",{"_index":538,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/SessionDto.html":{}}}],["interfaces/storage",{"_index":863,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1822,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":1823,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1072,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(result.error",{"_index":1590,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1278,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":678,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationlink",{"_index":1296,"title":{"classes/InvalidEmailConfirmationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":679,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":1299,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["ioredis",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":518,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISession.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":809,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":309,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":731,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["iscurrent",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{}}}],["isemail",{"_index":748,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isession",{"_index":491,"title":{"interfaces/ISession.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["isnotempty",{"_index":740,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isnotempty()@isstring",{"_index":1306,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":757,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/LoginDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isoptional",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isstring",{"_index":741,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["iuaparser.ibrowser",{"_index":1258,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.idevice",{"_index":1259,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.ios",{"_index":1260,"title":{},"body":{"interfaces/ISession.html":{}}}],["job",{"_index":1135,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.data.displayname",{"_index":1434,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.data.fileid",{"_index":1158,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["job.data.to",{"_index":1442,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.failedreason",{"_index":1154,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.id",{"_index":1151,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.interface",{"_index":1417,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["job.interface.ts",{"_index":1618,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["job.name",{"_index":1153,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1160,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1146,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["jobs/send",{"_index":1419,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["joi",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2210,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":930,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["jpeg|jpg|png/gi",{"_index":1685,"title":{},"body":{"controllers/SettingsController.html":{}}}],["js",{"_index":523,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":1970,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2536,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2490,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2484,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2608,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2216,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1554,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["kind",{"_index":2554,"title":{},"body":{"license.html":{}}}],["known",{"_index":2465,"title":{},"body":{"license.html":{}}}],["language",{"_index":2637,"title":{},"body":{"license.html":{}}}],["large",{"_index":1016,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2276,"title":{},"body":{"license.html":{}}}],["lastused",{"_index":1256,"title":{},"body":{"interfaces/ISession.html":{}}}],["later",{"_index":1294,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2606,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2619,"title":{},"body":{"license.html":{}}}],["legal",{"_index":2231,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lesser",{"_index":2315,"title":{},"body":{"license.html":{}}}],["level",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2461,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2581,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2282,"title":{},"body":{"license.html":{}}}],["license",{"_index":2222,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2453,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2273,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2201,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2265,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2384,"title":{},"body":{"license.html":{}}}],["limit",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["limitation",{"_index":2304,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2378,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1092,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1367,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["link",{"_index":928,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["literal",{"_index":1172,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ISession.html":{},"interfaces/StorageOptions.html":{}}}],["litigation",{"_index":2529,"title":{},"body":{"license.html":{}}}],["location",{"_index":2664,"title":{},"body":{"license.html":{}}}],["log",{"_index":1077,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":638,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1127,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["login",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["login(undefined",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":487,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2400,"title":{},"body":{"license.html":{}}}],["logout",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@session",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(identifier",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(session",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutalldevices",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutalldevices(uid",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":759,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1601,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":736,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["look",{"_index":2666,"title":{},"body":{"license.html":{}}}],["loss",{"_index":2589,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2596,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2587,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":334,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["made",{"_index":2268,"title":{},"body":{"license.html":{}}}],["mailer",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/SettingsService.html":{}}}],["mailer.constants",{"_index":1332,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1333,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1334,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":145,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1317,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1324,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1336,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1312,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerprocessor.name",{"_index":1440,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["mailerservice",{"_index":655,"title":{"injectables/MailerService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2615,"title":{},"body":{"license.html":{}}}],["make",{"_index":2360,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2407,"title":{},"body":{"license.html":{}}}],["making",{"_index":2307,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2594,"title":{},"body":{"license.html":{}}}],["management",{"_index":2338,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2444,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1078,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":1022,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["marks",{"_index":2399,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2278,"title":{},"body":{"license.html":{}}}],["math.min(math.max(x",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":2629,"title":{},"body":{"license.html":{}}}],["max",{"_index":1980,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["max(max_port",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":1981,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxactiveuploadsessionserror",{"_index":778,"title":{"classes/MaxActiveUploadSessionsError.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["maxfiles",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":781,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["maxlength",{"_index":299,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":1610,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["maxlength(32",{"_index":744,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{}}}],["me(@currentuser",{"_index":2040,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2029,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2041,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2228,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1238,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1232,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2559,"title":{},"body":{"license.html":{}}}],["message",{"_index":732,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["metadata",{"_index":1856,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["meter",{"_index":1827,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":1874,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":1885,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":1894,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":1889,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":1896,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":120,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares/admin.middleware",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1266,"title":{},"body":{"interfaces/IncomingFile.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{}}}],["min",{"_index":990,"title":{},"body":{"classes/File.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["min(0",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minify",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifycss",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifyoptions",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":301,"title":{},"body":{"classes/Application.html":{},"classes/ChangePasswordDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":763,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["minutes",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2626,"title":{"miscellaneous/variables.html":{}},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1613,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1612,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2200,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":2142,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html(mjml",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2191,"title":{},"body":{"index.html":{}}}],["model",{"_index":429,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["modification",{"_index":2296,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2257,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2651,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2361,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":463,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.errors",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SettingsService.html":{}}}],["modules/auth/auth.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{}}}],["modules/auth/auth.service",{"_index":1742,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/bull",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/SettingsModule.html":{}}}],["modules/files/files.service",{"_index":1672,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/health/health.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["modules/settings/settings.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/storage/storage.module",{"_index":1114,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["modules/storage/storage.service",{"_index":1055,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{}}}],["modules/users/schemas/user.schema",{"_index":403,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/users/users.errors",{"_index":1744,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/users/users.module",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["mongo",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":320,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1233,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":424,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2211,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":2522,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["mozilla",{"_index":2223,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2659,"title":{},"body":{"license.html":{}}}],["ms",{"_index":943,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1532,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":945,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":1937,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["myśliwiec",{"_index":2217,"title":{},"body":{"index.html":{}}}],["n",{"_index":811,"title":{},"body":{"classes/Counter.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["name')@useguards(authguard",{"_index":1643,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto",{"_index":1668,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto.ts",{"_index":729,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:8",{"_index":739,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{}}}],["names",{"_index":733,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/User.html":{}}}],["ne",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["necessary",{"_index":2401,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2579,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2148,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2221,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":719,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":464,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2123,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1234,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2125,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":637,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":1730,"title":{},"body":{"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newdisplayname",{"_index":730,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newemail",{"_index":747,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newfilename",{"_index":991,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/RenameFileDto.html":{}}}],["newname",{"_index":336,"title":{},"body":{"classes/Application.html":{}}}],["newpassword",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newtoken",{"_index":337,"title":{},"body":{"classes/Application.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"interfaces/MailerOptions.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2171,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["nodejs.errnoexception",{"_index":1067,"title":{},"body":{"controllers/FilesController.html":{}}}],["nodemailer",{"_index":721,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1402,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer_module_id",{"_index":1330,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1331,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1017,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["non",{"_index":2354,"title":{},"body":{"license.html":{}}}],["note",{"_index":2654,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":367,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{}}}],["notfoundexception(\"user",{"_index":2044,"title":{},"body":{"controllers/UsersController.html":{}}}],["nothing",{"_index":2623,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2253,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2456,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2523,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2517,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2385,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2184,"title":{},"body":{"index.html":{}}}],["null",{"_index":312,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["number",{"_index":768,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1939,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["obligation",{"_index":2476,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2472,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2437,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1292,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["offer",{"_index":2369,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2477,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2309,"title":{},"body":{"license.html":{}}}],["old",{"_index":761,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{}}}],["oldpassword",{"_index":756,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["olduser",{"_index":1764,"title":{},"body":{"injectables/SettingsService.html":{}}}],["on(\"error",{"_index":1876,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":1877,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":1878,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":1880,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":1879,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1377,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":800,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":813,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":791,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["ongoing",{"_index":2515,"title":{},"body":{"license.html":{}}}],["onqueueerror",{"_index":1132,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuefailed",{"_index":1136,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuestalled",{"_index":1142,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["open",{"_index":2202,"title":{},"body":{"index.html":{}}}],["option",{"_index":2454,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optional.decorator",{"_index":1053,"title":{},"body":{"controllers/FilesController.html":{}}}],["optional.decorator.ts",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1051,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":468,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{}}}],["options.field",{"_index":1854,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter",{"_index":1838,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1839,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.imports",{"_index":1352,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1358,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":466,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":460,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limits",{"_index":1836,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.transformers",{"_index":1864,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1357,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1354,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1355,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1359,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1360,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1790,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2491,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2500,"title":{},"body":{"license.html":{}}}],["original",{"_index":2417,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2649,"title":{},"body":{"license.html":{}}}],["os",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1814,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2242,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2340,"title":{},"body":{"license.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2345,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2672,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1963,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2341,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2236,"title":{},"body":{"license.html":{}}}],["package",{"_index":2116,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":391,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":412,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["param(\"identifier",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":522,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":2367,"title":{},"body":{"license.html":{}}}],["partialfilterexpression",{"_index":1936,"title":{},"body":{"classes/User.html":{}}}],["partialuserdto",{"_index":1502,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2244,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1026,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["party",{"_index":2598,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2392,"title":{},"body":{"license.html":{}}}],["pass",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":1886,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailChangedEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["password')@useguards(authguard",{"_index":1650,"title":{},"body":{"controllers/SettingsController.html":{}}}],["password.dto",{"_index":527,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["password.dto.ts",{"_index":755,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":762,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":760,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1197,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":1495,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordchangedemail",{"_index":1409,"title":{"classes/PasswordChangedEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["passwordchangedemail(job.data.forgotpasswordlink",{"_index":1437,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordreset",{"_index":698,"title":{"classes/PasswordReset.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"coverage.html":{}}}],["passwordreset.deleteone",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.id",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":1349,"title":{},"body":{"modules/MailerModule.html":{}}}],["passwordresetemail",{"_index":1411,"title":{"classes/PasswordResetEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["passwordresetemail(job.data.resetpasswordlink",{"_index":1438,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordresets",{"_index":1454,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordresetschema",{"_index":1340,"title":{},"body":{"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1534,"title":{},"body":{"classes/PasswordReset.html":{}}}],["patch",{"_index":1046,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["patch(\"change",{"_index":1679,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch(\"rename/:id",{"_index":1084,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('change",{"_index":1639,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch('rename/:id",{"_index":1041,"title":{},"body":{"controllers/FilesController.html":{}}}],["patent",{"_index":2300,"title":{},"body":{"license.html":{}}}],["path",{"_index":122,"title":{},"body":{"modules/AdminModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":868,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":884,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":881,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1244,"title":{},"body":{"controllers/HealthController.html":{}}}],["payloadtoolargeexception",{"_index":1011,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2343,"title":{},"body":{"license.html":{}}}],["perform",{"_index":2362,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2566,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2451,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2411,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2603,"title":{},"body":{"license.html":{}}}],["pick",{"_index":461,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1862,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1866,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1867,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2617,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2494,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":317,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":354,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":1971,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(filedto",{"_index":995,"title":{},"body":{"classes/File.html":{}}}],["plaintoclass(userdto",{"_index":1972,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":785,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":1696,"title":{},"body":{"controllers/SettingsController.html":{}}}],["poolsize",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2260,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2600,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2287,"title":{},"body":{"license.html":{}}}],["post",{"_index":381,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["post(\"/:id/token",{"_index":414,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"change",{"_index":1703,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"delete",{"_index":1710,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"forgot",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":558,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"resend",{"_index":1713,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"reset",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1088,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/:id/token",{"_index":388,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post('change",{"_index":1646,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('delete",{"_index":1657,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('forgot",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('resend",{"_index":1661,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('reset",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":1044,"title":{},"body":{"controllers/FilesController.html":{}}}],["power",{"_index":2333,"title":{},"body":{"license.html":{}}}],["pre",{"_index":331,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2322,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":1068,"title":{},"body":{"controllers/FilesController.html":{}}}],["prevent",{"_index":1961,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2616,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2519,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1144,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["process(\"delete",{"_index":1156,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1431,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1139,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1392,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1145,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1428,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1148,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["profits",{"_index":2588,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2170,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2497,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2607,"title":{},"body":{"license.html":{}}}],["project",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1096,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":321,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":313,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["prop({default",{"_index":936,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({lowercase",{"_index":298,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":305,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["prop({min",{"_index":984,"title":{},"body":{"classes/File.html":{}}}],["prop({required",{"_index":1926,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":283,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":2357,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2567,"title":{},"body":{"license.html":{}}}],["provide",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":2450,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1319,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2636,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2631,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2509,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2622,"title":{},"body":{"license.html":{}}}],["public",{"_index":973,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"license.html":{}}}],["publish",{"_index":2645,"title":{},"body":{"license.html":{}}}],["published",{"_index":2650,"title":{},"body":{"license.html":{}}}],["pump",{"_index":1816,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":1871,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1863,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2561,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2331,"title":{},"body":{"license.html":{}}}],["put",{"_index":2663,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1557,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2565,"title":{},"body":{"license.html":{}}}],["query",{"_index":1461,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["queue",{"_index":714,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":324,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["read",{"_index":1800,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1809,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":856,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1066,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1868,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1083,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1855,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1223,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2442,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1304,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1564,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1563,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1558,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1559,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1566,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1565,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_url",{"_index":1561,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":533,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":559,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":539,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":536,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.8",{"_index":560,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2526,"title":{},"body":{"license.html":{}}}],["received",{"_index":2524,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2447,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2435,"title":{},"body":{"license.html":{}}}],["record",{"_index":1619,"title":{},"body":{"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["recursive",{"_index":879,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":1962,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":2620,"title":{},"body":{"license.html":{}}}],["references",{"_index":2653,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2634,"title":{},"body":{"license.html":{}}}],["register",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1323,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1327,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1328,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdto",{"_index":498,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":2004,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["regulation",{"_index":2488,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2508,"title":{},"body":{"license.html":{}}}],["reject",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1851,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2611,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2665,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2464,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1574,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":2457,"title":{},"body":{"license.html":{}}}],["removed",{"_index":2388,"title":{},"body":{"license.html":{}}}],["removeemptyattributes",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rename",{"_index":974,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["rename(id",{"_index":1180,"title":{},"body":{"injectables/FilesService.html":{}}}],["rename(undefined",{"_index":1039,"title":{},"body":{"controllers/FilesController.html":{}}}],["renamefiledto",{"_index":1040,"title":{"classes/RenameFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/RenameFileDto.html":{},"coverage.html":{}}}],["rendermjml",{"_index":917,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendermjml(\"./templates/email",{"_index":919,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["rendermjml(\"./templates/password",{"_index":1523,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["rendermjml(\"./templates/user",{"_index":1999,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["repair",{"_index":2571,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2182,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2414,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2415,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2359,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1571,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":1883,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.pipe(busboy",{"_index":1881,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["requested",{"_index":1543,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["requestmethod",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":121,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1363,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":307,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2403,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1579,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1081,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1082,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1291,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2550,"title":{},"body":{"license.html":{}}}],["resenduseractivation",{"_index":1633,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(@currentuser",{"_index":1714,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(user",{"_index":1660,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivationemail",{"_index":1723,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resenduseractivationemail(user",{"_index":1740,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resent",{"_index":1975,"title":{},"body":{"classes/UserActivation.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"classes/EmailChangedEmail.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/ResetPasswordDto.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset.email",{"_index":1412,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.email.ts",{"_index":1535,"title":{},"body":{"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["reset.email.ts:15",{"_index":1539,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:19",{"_index":1540,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:5",{"_index":1537,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:8",{"_index":1538,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.job",{"_index":1425,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.job.ts",{"_index":1620,"title":{},"body":{"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["reset.mjml",{"_index":1541,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.schema",{"_index":1342,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["reset.schema.ts",{"_index":1526,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1527,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1531,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1528,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1529,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1530,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":502,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordlink",{"_index":1493,"title":{},"body":{"injectables/MailerService.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendPasswordResetJob.html":{}}}],["resize(512",{"_index":1694,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resolve",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1852,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2374,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2432,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2441,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1596,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1589,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1597,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1591,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2605,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revokeallsessions",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(@currentuser",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(user",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(@currentuser",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(user",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{}}}],["right",{"_index":2284,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2290,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2564,"title":{},"body":{"license.html":{}}}],["rotate",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["royalty",{"_index":2352,"title":{},"body":{"license.html":{}}}],["run",{"_index":2188,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["safety",{"_index":1964,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2310,"title":{},"body":{"license.html":{}}}],["same",{"_index":554,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":332,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2175,"title":{},"body":{"index.html":{}}}],["schema",{"_index":322,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":323,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":947,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(file",{"_index":993,"title":{},"body":{"classes/File.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1533,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1943,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":1989,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":423,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":1338,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/file.schema",{"_index":1113,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/password",{"_index":1341,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user",{"_index":1345,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user.schema",{"_index":2037,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":2379,"title":{},"body":{"license.html":{}}}],["score",{"_index":1569,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":537,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2028,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2043,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2032,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2264,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1575,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["section",{"_index":2373,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2429,"title":{},"body":{"license.html":{}}}],["secure",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2409,"title":{},"body":{"license.html":{}}}],["sell",{"_index":2368,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2308,"title":{},"body":{"license.html":{}}}],["sendemailchanged",{"_index":1378,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailchanged(job",{"_index":1391,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailchanged(user",{"_index":1466,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailchangedjob",{"_index":1418,"title":{"interfaces/SendEmailChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"coverage.html":{}}}],["sendemailconfirmation",{"_index":1379,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailconfirmation(job",{"_index":1394,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailconfirmation(newemail",{"_index":1468,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailconfirmationjob",{"_index":1421,"title":{"interfaces/SendEmailConfirmationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["sendemailjob",{"_index":1415,"title":{"interfaces/SendEmailJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["sendpasswordchanged",{"_index":1380,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordchanged(job",{"_index":1396,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordchanged(user",{"_index":1470,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordchangedjob",{"_index":1423,"title":{"interfaces/SendPasswordChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["sendpasswordreset",{"_index":1381,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordreset(job",{"_index":1398,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordreset(user",{"_index":1472,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordresetjob",{"_index":1424,"title":{"interfaces/SendPasswordResetJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["senduseractivation",{"_index":1382,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["senduseractivation(job",{"_index":1400,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["senduseractivation(user",{"_index":1474,"title":{},"body":{"injectables/MailerService.html":{}}}],["senduseractivationjob",{"_index":1426,"title":{"interfaces/SendUserActivationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["separate",{"_index":2279,"title":{},"body":{"license.html":{}}}],["server",{"_index":774,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2398,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2570,"title":{},"body":{"license.html":{}}}],["session",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/IRequest.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"dependencies.html":{}}}],["session.cookie",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.destroy(error",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.ip",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session/:identifier",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{}}}],["session/:identifier')@useguards(authguard",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{}}}],["session_secret",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":531,"title":{"interfaces/SessionDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["sessions",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["sessions')@useguards(authguard",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(@currentuser",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(user",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions.map",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.map(session",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":801,"title":{},"body":{"classes/Counter.html":{},"classes/User.html":{}}}],["set(value",{"_index":816,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(\"auth_optional",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":720,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":724,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settimeout(resolve",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":1625,"title":{},"body":{"controllers/SettingsController.html":{}}}],["settings.controller",{"_index":1721,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.errors",{"_index":1743,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.service",{"_index":1666,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingscontroller",{"_index":1623,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":146,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":1665,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["settle",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle([confirmation.deleteone",{"_index":1767,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settle([this.logoutalldevices(user.id",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle([this.mailer.sendpasswordchanged(user",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle(files.map(file",{"_index":1845,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2544,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2346,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":1664,"title":{},"body":{"controllers/SettingsController.html":{},"dependencies.html":{}}}],["shouldthrow",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["shouldthrow(new",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["side",{"_index":2176,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":975,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2501,"title":{},"body":{"license.html":{}}}],["smtp_from",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1362,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1370,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2238,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2299,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2582,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2483,"title":{},"body":{"license.html":{}}}],["sponsors",{"_index":2205,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.schema.ts",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clamp.ts",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delay.ts",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.schema.ts",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rendermjml.ts",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:6",{"_index":133,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/auth",{"_index":2079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/internal",{"_index":1279,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:19",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:22",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1546,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:26",{"_index":1550,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:33",{"_index":1555,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:81",{"_index":1552,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1254,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/interfaces/session.interface.ts",{"_index":1255,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":633,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":634,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":635,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:19",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":124,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":127,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":374,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:21",{"_index":382,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:26",{"_index":386,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:31",{"_index":389,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":366,"title":{},"body":{"classes/ApplicationNotFound.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:3",{"_index":369,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":421,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":426,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:16",{"_index":430,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:24",{"_index":432,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:28",{"_index":434,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:34",{"_index":436,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:42",{"_index":438,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":358,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:10",{"_index":362,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:13",{"_index":364,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:4",{"_index":359,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":360,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":361,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":828,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/generate",{"_index":1199,"title":{},"body":{"classes/GenerateApplicationTokenDto.html":{},"coverage.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":280,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:18",{"_index":296,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:19",{"_index":316,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:29",{"_index":304,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:38",{"_index":310,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:50",{"_index":314,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:59",{"_index":315,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:61",{"_index":293,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:62",{"_index":294,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:63",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:100",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:106",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:112",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:118",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:50",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:62",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:85",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:95",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1268,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1301,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":2022,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2024,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1269,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1295,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":646,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:36",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:44",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:53",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:60",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:67",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:72",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1196,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1303,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1307,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1308,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1305,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1599,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1600,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1602,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1603,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1605,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1611,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/session.dto.ts",{"_index":1622,"title":{},"body":{"interfaces/SessionDto.html":{},"coverage.html":{}}}],["src/modules/bull",{"_index":709,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts",{"_index":998,"title":{},"body":{"classes/FileDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts:11",{"_index":1002,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:13",{"_index":1003,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:15",{"_index":1004,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:17",{"_index":1005,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:19",{"_index":1006,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:21",{"_index":1007,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:4",{"_index":999,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:6",{"_index":1000,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:8",{"_index":1001,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/rename",{"_index":1606,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1032,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:46",{"_index":1035,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:52",{"_index":1038,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:80",{"_index":1042,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:89",{"_index":1045,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":765,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:15",{"_index":1500,"title":{},"body":{"classes/MaxActiveUploadSessionsError.html":{}}}],["src/modules/files/files.errors.ts:23",{"_index":1903,"title":{},"body":{"classes/UploadSessionNotFound.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":769,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":1008,"title":{},"body":{"classes/FileNotFound.html":{}}}],["src/modules/files/files.module.ts",{"_index":1109,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1120,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1128,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:20",{"_index":1133,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:25",{"_index":1137,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:30",{"_index":1143,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:35",{"_index":1140,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:44",{"_index":1130,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1166,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:13",{"_index":1170,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:22",{"_index":1173,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:33",{"_index":1174,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:42",{"_index":1176,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:52",{"_index":1177,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:59",{"_index":1179,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:66",{"_index":1181,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":837,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/file.schema.ts",{"_index":968,"title":{},"body":{"classes/File.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/file.schema.ts:14",{"_index":976,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:15",{"_index":988,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:22",{"_index":978,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:31",{"_index":979,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:36",{"_index":980,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:46",{"_index":981,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:51",{"_index":982,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:57",{"_index":985,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:66",{"_index":987,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:68",{"_index":983,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:69",{"_index":986,"title":{},"body":{"classes/File.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1221,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1225,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1251,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/emails/confirm",{"_index":952,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/email",{"_index":908,"title":{},"body":{"classes/EmailChangedEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/password",{"_index":1522,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts",{"_index":1993,"title":{},"body":{"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:15",{"_index":1997,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:19",{"_index":1998,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:5",{"_index":1995,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:8",{"_index":1996,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":899,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":903,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":904,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":905,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1361,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1617,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["src/modules/mailer/jobs/send",{"_index":1614,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1313,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:44",{"_index":1325,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:60",{"_index":1329,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:74",{"_index":1322,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:88",{"_index":1318,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1374,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:29",{"_index":1404,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:31",{"_index":1383,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:41",{"_index":1390,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:46",{"_index":1387,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:51",{"_index":1388,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:56",{"_index":1389,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:61",{"_index":1393,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:66",{"_index":1395,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:74",{"_index":1397,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:82",{"_index":1399,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:87",{"_index":1401,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:91",{"_index":1384,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:95",{"_index":1386,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1448,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:19",{"_index":1456,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:37",{"_index":1457,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:45",{"_index":1460,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:51",{"_index":1463,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:55",{"_index":1465,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:59",{"_index":1467,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:67",{"_index":1469,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:77",{"_index":1471,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:85",{"_index":1473,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:95",{"_index":1475,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/schemas/email",{"_index":932,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/password",{"_index":1525,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/user",{"_index":1973,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/settings/dto/change",{"_index":727,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/modules/settings/dto/delete",{"_index":833,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts",{"_index":1624,"title":{},"body":{"controllers/SettingsController.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts:104",{"_index":1651,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:112",{"_index":1655,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:118",{"_index":1659,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:124",{"_index":1663,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:46",{"_index":1637,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:52",{"_index":1641,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:89",{"_index":1644,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:98",{"_index":1648,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.errors.ts",{"_index":1297,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"coverage.html":{}}}],["src/modules/settings/settings.errors.ts:3",{"_index":1302,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/settings/settings.errors.ts:9",{"_index":1298,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{}}}],["src/modules/settings/settings.module.ts",{"_index":1720,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/modules/settings/settings.service.ts",{"_index":1722,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/modules/settings/settings.service.ts:107",{"_index":1741,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:23",{"_index":1725,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:31",{"_index":1727,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:42",{"_index":1729,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:52",{"_index":1732,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:60",{"_index":1734,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:68",{"_index":1736,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:77",{"_index":1737,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:95",{"_index":1739,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":841,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":849,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":859,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":855,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":858,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":851,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":853,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1203,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1262,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":459,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":1904,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2072,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1010,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":1899,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":1900,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":1901,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":1013,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":1902,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1501,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1781,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1784,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1785,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1783,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1782,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1798,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":1805,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":1802,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":1815,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":1808,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":1807,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":1810,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":1813,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/partial",{"_index":1503,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":2009,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":2013,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":2014,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":2015,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":2016,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":2017,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":2018,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":2019,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":2020,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":2021,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":2010,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":2011,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":2012,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1906,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":1927,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":1930,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":1909,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":1913,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":1914,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:118",{"_index":1915,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:119",{"_index":1916,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:120",{"_index":1917,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:121",{"_index":1919,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:122",{"_index":1920,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:123",{"_index":1928,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":1918,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":1929,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":1910,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":1911,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":1912,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":1921,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":1922,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":1923,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":1924,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":1925,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2027,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:20",{"_index":2031,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:25",{"_index":2034,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":886,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:15",{"_index":2025,"title":{},"body":{"classes/UsernameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:21",{"_index":2023,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:3",{"_index":888,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:9",{"_index":906,"title":{},"body":{"classes/EmailAlreadyExists.html":{}}}],["src/modules/users/users.module.ts",{"_index":2049,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2052,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":2053,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:14",{"_index":2055,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:21",{"_index":2061,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:25",{"_index":2059,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/clamp.ts",{"_index":2107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":796,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":807,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":808,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":810,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":805,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":817,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":815,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":819,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":821,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/delay.ts",{"_index":2109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/generateid.ts",{"_index":2111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/rendermjml.ts",{"_index":2112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":1884,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["stalled",{"_index":1155,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["start",{"_index":2189,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2192,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2193,"title":{},"body":{"index.html":{}}}],["started",{"_index":2169,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2181,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1441,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["statements",{"_index":2075,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1314,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1288,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2487,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2556,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2213,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2643,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2591,"title":{},"body":{"license.html":{}}}],["storage",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/SettingsController.html":{},"interfaces/StorageOptionsFactory.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1788,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1818,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1789,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1786,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1787,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":842,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1107,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1117,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["storageoptions",{"_index":465,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":467,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1054,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":862,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":1825,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["string",{"_index":297,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1556,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":901,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["sublicense",{"_index":2448,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2406,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2289,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2458,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1593,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["successfully",{"_index":1161,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["such",{"_index":2256,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":2419,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":2498,"title":{},"body":{"license.html":{}}}],["super",{"_index":779,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"invalid",{"_index":1272,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"missing",{"_index":1028,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":1018,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"please",{"_index":1276,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"too",{"_index":1021,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"you",{"_index":1277,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1270,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`application",{"_index":371,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["super(`chunk",{"_index":771,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`display",{"_index":890,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`email",{"_index":893,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`file",{"_index":776,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`upload",{"_index":794,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`user",{"_index":898,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`username",{"_index":896,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2206,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2552,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2669,"title":{},"body":{"modules.html":{}}}],["t",{"_index":1553,"title":{},"body":{"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":553,"title":{},"body":{"controllers/AuthController.html":{}}}],["tasks",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2505,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2514,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2503,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1252,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2271,"title":{},"body":{"license.html":{}}}],["test",{"_index":2196,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2199,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2198,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2195,"title":{},"body":{"index.html":{}}}],["text",{"_index":902,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["thanks",{"_index":2204,"title":{},"body":{"index.html":{}}}],["then(count",{"_index":2070,"title":{},"body":{"injectables/UsersService.html":{}}}],["then(file",{"_index":1102,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(id",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["then(res",{"_index":1578,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(sessions",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(token",{"_index":950,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2577,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2261,"title":{},"body":{"license.html":{}}}],["third",{"_index":2391,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":1835,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._debug(`[job",{"_index":1150,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1568,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1570,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._send",{"_index":1435,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._send(new",{"_index":1432,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._size",{"_index":1897,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._value",{"_index":823,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":1950,"title":{},"body":{"classes/User.html":{}}}],["this.activationlink",{"_index":2001,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["this.applications",{"_index":443,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create(dto.name",{"_index":407,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete(id",{"_index":413,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.findone",{"_index":446,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.generatetoken(id",{"_index":415,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.forgotpassword(email",{"_index":557,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.getsessions(user.id).then(sessions",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logout(identifier",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logoutalldevices(user.id",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["this.auth.register(email",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1953,"title":{},"body":{"classes/User.html":{}}}],["this.baseurl}/activate",{"_index":1498,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/confirm",{"_index":1490,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/forgot",{"_index":1487,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/reset",{"_index":1494,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1218,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1219,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1217,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_secret",{"_index":453,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.config.get(\"max_file_size",{"_index":1095,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1093,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1576,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.confirmemaillink",{"_index":960,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1356,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1353,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1240,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(file.id",{"_index":1846,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":1966,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1243,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.displayname",{"_index":921,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname},\\n",{"_index":1544,"title":{},"body":{"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname}\\n",{"_index":925,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":1956,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":1489,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.deletemany",{"_index":1479,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.findone(query",{"_index":1482,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1485,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":824,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1830,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1834,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1861,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1833,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.expiresat",{"_index":1951,"title":{},"body":{"classes/User.html":{}}}],["this.filename",{"_index":997,"title":{},"body":{"classes/File.html":{}}}],["this.files",{"_index":1098,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["this.files(options).save",{"_index":1189,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.create",{"_index":1697,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.files.delete(id",{"_index":1059,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.delete(user.avatar",{"_index":1750,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.deleteallfor(user.id",{"_index":1769,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.findone",{"_index":1194,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.findone(id",{"_index":1063,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findpublicfile(id",{"_index":1064,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.rename(id",{"_index":1085,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":725,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1190,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone(id",{"_index":444,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["this.forgotpasswordlink",{"_index":922,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.health.check",{"_index":1239,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http",{"_index":1573,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":345,"title":{},"body":{"classes/Application.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.ismodified(\"password",{"_index":1946,"title":{},"body":{"classes/User.html":{}}}],["this.isnew",{"_index":342,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.logger.debug",{"_index":1163,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.debug(message",{"_index":1164,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(error",{"_index":1080,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(exception.message",{"_index":1290,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.deleteallfor(user.id",{"_index":1770,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findemailconfirmation",{"_index":1760,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findpasswordreset",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.finduseractivation",{"_index":1745,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailchanged(olduser",{"_index":1768,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailconfirmation(newemail",{"_index":1757,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordchanged(user",{"_index":1759,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordreset(user",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.senduseractivation(user",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.name",{"_index":348,"title":{},"body":{"classes/Application.html":{}}}],["this.on(string(n",{"_index":827,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":826,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1829,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":1945,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":1492,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.deletemany",{"_index":1480,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.findone(query",{"_index":1483,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.reflector.get",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.get(key",{"_index":1598,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.resetpasswordlink",{"_index":1542,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["this.save",{"_index":349,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.sessions",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deletemany",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deleteone",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settings.activate(token",{"_index":1678,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeavatar(avatar.id",{"_index":1701,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changedisplayname(newdisplayname",{"_index":1702,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeemail(newemail",{"_index":1705,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changepassword(oldpassword",{"_index":1706,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.confirmemail(token",{"_index":1709,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.deleteaccount(password",{"_index":1712,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.resenduseractivationemail(user",{"_index":1715,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1159,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1065,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.storage.write(req",{"_index":1090,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["this.times_resent",{"_index":1992,"title":{},"body":{"classes/UserActivation.html":{}}}],["this.tojson",{"_index":355,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["this.token",{"_index":351,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail",{"_index":1443,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1430,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.useractivations",{"_index":1496,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.deletemany",{"_index":1481,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.findone(query",{"_index":1484,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.users",{"_index":2066,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.create(email",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.exists",{"_index":1753,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2067,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.value",{"_index":825,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2320,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1245,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":519,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["throttle(25",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(30",{"_index":1674,"title":{},"body":{"controllers/SettingsController.html":{}}}],["throttle_limit",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":555,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":2443,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1241,"title":{},"body":{"controllers/HealthController.html":{}}}],["times_resent",{"_index":1976,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamps",{"_index":328,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["tls",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["toarray",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":448,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["todto",{"_index":288,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["tojson",{"_index":1986,"title":{},"body":{"classes/UserActivation.html":{}}}],["token",{"_index":289,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["token.dto",{"_index":398,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["token.dto.ts",{"_index":1200,"title":{},"body":{"classes/GenerateApplicationTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:2",{"_index":1201,"title":{},"body":{"classes/GenerateApplicationTokenDto.html":{}}}],["toobject",{"_index":1988,"title":{},"body":{"classes/UserActivation.html":{}}}],["toomanyfields",{"_index":1020,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":1024,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":1025,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1577,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2578,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2214,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2358,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2397,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2311,"title":{},"body":{"license.html":{}}}],["transformcallback",{"_index":1893,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":318,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1865,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":1934,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":1693,"title":{},"body":{"controllers/SettingsController.html":{},"interfaces/WriteOptions.html":{}}}],["transport",{"_index":1364,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1375,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":302,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":872,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2220,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationTokenDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1368,"title":{},"body":{"interfaces/MailerOptions.html":{},"index.html":{}}}],["ua",{"_index":521,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":520,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{}}}],["uid",{"_index":290,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISession.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"controllers/FilesController.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["under",{"_index":2270,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2502,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2633,"title":{},"body":{"license.html":{}}}],["unique",{"_index":303,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unit",{"_index":2194,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2510,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2365,"title":{},"body":{"license.html":{}}}],["unsupported",{"_index":1029,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1027,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":1015,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedmediatypeexception(\"invalid",{"_index":1691,"title":{},"body":{"controllers/SettingsController.html":{}}}],["until",{"_index":2511,"title":{},"body":{"license.html":{}}}],["up",{"_index":2003,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["update(token",{"_index":454,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["updatedat",{"_index":291,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["upload",{"_index":784,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["upload(@currentuser",{"_index":1089,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(user",{"_index":1043,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":773,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["uploadedfile",{"_index":1821,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsessionnotfound",{"_index":792,"title":{"classes/UploadSessionNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["uri",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2243,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":462,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{}}}],["usefindandmodify",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":405,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":561,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":244,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{}}}],["user.activate",{"_index":1747,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.activated",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":1749,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeavatar(newavatarid",{"_index":1752,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changedisplayname(newdisplayname",{"_index":1755,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeemail(confirmation.newemail",{"_index":1766,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changepassword(newpassword",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.comparepassword(oldpassword",{"_index":1758,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.comparepassword(password",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.decorator",{"_index":401,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":1771,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.displayname",{"_index":1486,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.dto",{"_index":1521,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1504,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:7",{"_index":1508,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":1488,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.id",{"_index":416,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["user.id).catch",{"_index":1751,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.id).then(application",{"_index":408,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["user.id).then(deleted",{"_index":1060,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.id).then(file",{"_index":1086,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.name",{"_index":2051,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.todto(partialuserdto",{"_index":2045,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":1765,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user[\"email",{"_index":1198,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["useractivation",{"_index":1343,"title":{"classes/UserActivation.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/UserActivation.html":{},"coverage.html":{}}}],["useractivation.name",{"_index":1350,"title":{},"body":{"modules/MailerModule.html":{}}}],["useractivationemail",{"_index":1413,"title":{"classes/UserActivationEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["useractivationemail(job.data.activationlink",{"_index":1439,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["useractivations",{"_index":1455,"title":{},"body":{"injectables/MailerService.html":{}}}],["useractivationschema",{"_index":1344,"title":{},"body":{"modules/MailerModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.methods.resent",{"_index":1991,"title":{},"body":{"classes/UserActivation.html":{}}}],["useractivationschema.pre(\"save",{"_index":1990,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":1505,"title":{"classes/UserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1512,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1513,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1514,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1515,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1516,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1517,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1518,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1519,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1520,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1509,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1510,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1511,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":562,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernamealreadyexists",{"_index":894,"title":{"classes/UsernameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernamealreadyexists(username",{"_index":2065,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernames",{"_index":1604,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernotactivated",{"_index":615,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":897,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["usernotfound(user.username",{"_index":1772,"title":{},"body":{"injectables/SettingsService.html":{}}}],["usernotloggedin",{"_index":616,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2050,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2062,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":2035,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":1942,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.activate",{"_index":1949,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeavatar",{"_index":1952,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changedisplayname",{"_index":1954,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeemail",{"_index":1955,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changepassword",{"_index":1957,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.comparepassword",{"_index":1958,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":1965,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.deleteavatar",{"_index":1968,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":1969,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":1944,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2026,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":96,"title":{"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1351,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":927,"title":{},"body":{"classes/EmailChangedEmail.html":{},"controllers/FilesController.html":{},"classes/PasswordChangedEmail.html":{},"license.html":{}}}],["utils/chunk",{"_index":866,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/counter",{"_index":1824,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":327,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/rendermjml",{"_index":918,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["utils/settle",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{}}}],["utils/stream",{"_index":1826,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2658,"title":{},"body":{"license.html":{}}}],["valid",{"_index":750,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{}}}],["valid(\"development",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/User.html":{}}}],["validatebeforesave",{"_index":1967,"title":{},"body":{"classes/User.html":{}}}],["validationschema",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":319,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["validly",{"_index":2551,"title":{},"body":{"license.html":{}}}],["value",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2677,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1595,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{}}}],["versions",{"_index":2319,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":1987,"title":{},"body":{"classes/UserActivation.html":{}}}],["visit",{"_index":963,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["visiting",{"_index":2005,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["void",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["want",{"_index":2652,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2557,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2460,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2190,"title":{},"body":{"index.html":{}}}],["website",{"_index":2218,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":802,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":818,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":2288,"title":{},"body":{"license.html":{}}}],["wide",{"_index":2351,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wip",{"_index":449,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["within",{"_index":2463,"title":{},"body":{"license.html":{}}}],["without",{"_index":2303,"title":{},"body":{"license.html":{}}}],["work",{"_index":2274,"title":{},"body":{"license.html":{}}}],["world",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["writable",{"_index":861,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1801,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1811,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1842,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":1875,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1860,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1849,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1844,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":1812,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["wrong",{"_index":1594,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["x",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":2209,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [UsersModule],\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\n\n@Controller()\nexport class AppController {\n  @Get(\"hello\")\n  async hello(): Promise {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AppController } from \"./app.controller\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SettingsModule } from \"./modules/settings/settings.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SettingsModule,\n    UsersModule,\n\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    ThrottlerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    })\n  ],\n  exports: [ConfigModule, Logger, MailerModule],\n  controllers: [AppController],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeName\n                            \n                            \n                                changeToken\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                toDto\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToClass } from \"class-transformer\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      maxlength: 32,\n      minlength: 32,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  token!: string | null;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  changeName!: (newName: string) => Promise;\n  changeToken!: (newToken: string) => Promise;\n  toDto!: () => ApplicationDto;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.changeName = async function(\n  this: Application,\n  newName: string\n): Promise {\n  if (this.name !== newName) {\n    this.name = newName;\n    await this.save();\n  }\n\n  return this;\n};\n\nApplicationSchema.methods.changeToken = async function(\n  this: Application,\n  newToken: string\n): Promise {\n  if (this.token !== newToken) {\n    this.token = newToken;\n    await this.save();\n  }\n\n  return this;\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                token\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  name!: string;\n\n  token!: string | null;\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\n\nexport class ApplicationNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`Application \"${identifier}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateToken(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/token')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Body, Delete, Param } from \"@nestjs/common\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { GenerateApplicationTokenDto } from \"./dto/generate-application-token.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @Post()\n  create(@Body() dto: CreateApplicationDto, @CurrentUser() user: User): Promise {\n    return this.applications.create(dto.name, user.id).then(application => application.toDto());\n  }\n\n  @Delete(\"/:id\")\n  delete(@CurrentUser() user: User, @Param(\"id\") id: string): Promise {\n    return this.applications.delete(id, user.id).then(application => application.toDto());\n  }\n\n  @Post(\"/:id/token\")\n  generateToken(\n    @CurrentUser() user: User,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.applications.generateToken(id, user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_imports\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsModule -->\n\nUsersModule->ApplicationsModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { UsersModule } from \"@/modules/users/users.module\";\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }]),\n    UsersModule\n  ],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport { ApplicationNotFound } from \"./applications.errors\";\n\nimport { Application } from \"./schemas/application.schema\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(name: string, uid: string): Promise {\n    return new this.applications({ name, uid }).save();\n  }\n\n  async delete(id: string, uid: string): Promise {\n    const application = await this.findOne(id, uid);\n\n    return application.deleteOne();\n  }\n\n  async findOne(id: string, uid: string): Promise {\n    const application = await this.applications.findOne({ id, uid });\n    if (!application) throw new ApplicationNotFound(id);\n\n    return application;\n  }\n\n  // TODO: WIP\n  async generateToken(id: string, uid: string): Promise {\n    const application = await this.findOne(id, uid);\n    const token = await generateId(16);\n\n    await application.changeToken(token);\n\n    return {\n      token: crypto\n        .createHmac(\"sha256\", this.config.get(\"API_SECRET\") as string)\n        .update(token)\n        .digest(\"hex\")\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                            \n                                revokeAllSessions\n                            \n                            \n                                revokeSession\n                            \n                            \n                                sessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAllSessions\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAllSessions(user: User, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-all-sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeSession\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeSession(user: User, identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-session/:identifier')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sessions\n                        \n                        \n                    \n                \n            \n            \n                \nsessions(user: User, currentSession: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly users: UsersService) {}\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISession\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    return user;\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: ISession): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n\n  @Delete(\"revoke-session/:identifier\")\n  @UseGuards(AuthGuard)\n  revokeSession(@CurrentUser() user: User, @Param(\"identifier\") identifier: string): Promise {\n    return this.auth.logout(identifier, user.id);\n  }\n\n  @Delete(\"revoke-all-sessions\")\n  @UseGuards(AuthGuard)\n  revokeAllSessions(@CurrentUser() user: User, @Session() session: ISession): Promise {\n    return this.auth.logoutAllDevices(user.id, session.identifier);\n  }\n\n  @Get(\"sessions\")\n  @UseGuards(AuthGuard)\n  sessions(@CurrentUser() user: User, @Session() currentSession: ISession): Promise {\n    return this.auth.getSessions(user.id).then(sessions =>\n      sessions.map(session => ({\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      }))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector, private readonly users: UsersService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isOptional = this.reflector.get(\n      \"AUTH_OPTIONAL\",\n      context.getHandler()\n    );\n\n    const shouldThrow = (error: Error) => {\n      if (!isOptional) throw error;\n      return true;\n    };\n\n    const req = context.switchToHttp().getRequest();\n\n    if (!req.session) {\n      return shouldThrow(new InternalServerErrorException(\"Failed to get session data!\"));\n    }\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) return shouldThrow(new UserNotLoggedIn());\n    if (!user.activated) return shouldThrow(new UserNotActivated());\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [HttpModule, UsersModule],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                logoutAllDevices\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(identifier: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logoutAllDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutAllDevices(uid: string, currentSession?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\nimport { InvalidCredentials, UserNotActivated, InvalidPasswordResetLink } from \"./auth.errors\";\n\n@Injectable()\nexport class AuthService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    await this.mailer.sendPasswordReset(user);\n\n    return true;\n  }\n\n  async getSessions(uid: string): Promise {\n    return this.sessions\n      .find({ \"session.uid\": uid })\n      .project({ _id: 0, expires: 0, \"session.cookie\": 0 })\n      .toArray()\n      .then(sessions => sessions.map(({ session }) => session));\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async logout(identifier: string, uid: string): Promise {\n    await this.sessions.deleteOne({\n      \"session.identifier\": identifier,\n      \"session.uid\": uid\n    });\n  }\n\n  async logoutAllDevices(uid: string, currentSession?: string): Promise {\n    await this.sessions.deleteMany({\n      \"session.identifier\": { $ne: currentSession },\n      \"session.uid\": uid\n    });\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    await this.mailer.sendUserActivation(user);\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.mailer.findPasswordReset({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.id });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await settle([this.logoutAllDevices(user.id), user.changePassword(newPassword)]);\n    await settle([this.mailer.sendPasswordChanged(user), passwordReset.deleteOne()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeDisplayNameDto.html":{"url":"classes/ChangeDisplayNameDto.html","title":"class - ChangeDisplayNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeDisplayNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-display-name.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-display-name.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class ChangeDisplayNameDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeEmailDto.html":{"url":"classes/ChangeEmailDto.html","title":"class - ChangeEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-email.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-email.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class ChangeEmailDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  newEmail!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ChangePasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  oldPassword!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChunkAlreadyUploaded.html":{"url":"classes/ChunkAlreadyUploaded.html","title":"class - ChunkAlreadyUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChunkAlreadyUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chunkIndex: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chunkIndex\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString()@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAccountDto.html":{"url":"classes/DeleteAccountDto.html","title":"class - DeleteAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/delete-account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/delete-account.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteAccountDto {\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameAlreadyExists.html":{"url":"classes/DisplayNameAlreadyExists.html","title":"class - DisplayNameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailAlreadyExists.html":{"url":"classes/EmailAlreadyExists.html","title":"class - EmailAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailChangedEmail.html":{"url":"classes/EmailChangedEmail.html","title":"class - EmailChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/email-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/email-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your email has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your email has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmationEmail.html":{"url":"classes/EmailConfirmationEmail.html","title":"class - EmailConfirmationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/confirm-email.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(confirmEmailLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/confirm-email.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        confirmEmailLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailConfirmationEmail implements Email {\n  constructor(private readonly confirmEmailLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      confirmEmailLink: this.confirmEmailLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Please confirm your email address.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"To confirm your email address, please visit the link below.\",\n      \"This email confirmation link is only valid for the next 72 hours.\\n\",\n      this.confirmEmailLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/file.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            FileDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                rename\n                            \n                            \n                                size\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 1, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { FileDto } from \"../dto/file.dto\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class File extends Document implements FileDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true\n  })\n  filename!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      trim: true,\n      type: String\n    })\n  )\n  folder!: string | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 1,\n    required: true\n  })\n  size!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  rename!: (newFilename: string) => Promise;\n  toDto!: () => FileDto;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(File);\n\nFileSchema.methods.toDto = function(this: File): FileDto {\n  return plainToClass(FileDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\nFileSchema.methods.rename = async function(this: File, newFilename: string): Promise {\n  if (this.filename !== newFilename) {\n    this.filename = newFilename;\n    await this.save();\n  }\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDto.html":{"url":"classes/FileDto.html","title":"class - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class FileDto {\n  createdAt!: Date;\n\n  filename!: string;\n  \n  folder!: string | null;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  public!: boolean;\n\n  size!: number;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotFound.html":{"url":"classes/FileNotFound.html","title":"class - FileNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                rename\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(user: User | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@OptionalAuth()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \nrename(undefined: RenameFileDto, user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('rename/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RenameFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { FilesService } from \"./files.service\";\n\nimport { FileDto } from \"./dto/file.dto\";\nimport { RenameFileDto } from \"./dto/rename-file.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/auth-optional.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\nimport { FileNotFound } from \"./files.errors\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"delete/:id\")\n  delete(@CurrentUser() user: User, @Param(\"id\") id: string): Promise {\n    return this.files.delete(id, user.id).then(deleted => deleted.toDto());\n  }\n\n  @Get(\"download/:id\")\n  @OptionalAuth()\n  async download(\n    @CurrentUser() user: User | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const file = user ? await this.files.findOne(id, user.id) : await this.files.findPublicFile(id);\n    const readable = await this.storage.read(file.id);\n\n    readable.on(\"error\", (error: NodeJS.ErrnoException & Error) => {\n      // prettier-ignore\n      const err = error.code === \"ENOENT\"\n        ? new FileNotFound(id) \n        : new InternalServerErrorException(error);\n\n      // Exception handler disabled when using the @Res() decorator, so we have to log the error manually\n      if (err instanceof InternalServerErrorException) {\n        this.logger.error(error);\n      }\n\n      if (!res.headersSent) {\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Patch(\"rename/:id\")\n  rename(\n    @Body() { newFilename }: RenameFileDto,\n    @CurrentUser() user: User,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.files.rename(id, newFilename, user.id).then(file => file.toDto());\n  }\n\n  @Post(\"upload\")\n  async upload(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map(file =>\n        this.files\n          .create({\n            filename: file.filename,\n            id: file.id,\n            size: file.size,\n            uid: user.id\n          })\n          .then(file => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nFilesModule -->\n\nUsersModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { File, FileSchema } from \"./schemas/file.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: File.name, schema: FileSchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    }),\n\n    UsersModule\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                            \n                                handleStall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, LoggerService } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n    private readonly storage: StorageService\n  ) {}\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    this._debug(`[Job ${job.id}] Deleting ${job.data.fileId}`);\n\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully deleted ${job.data.fileId}`);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, FilesProcessor.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPublicFile\n                            \n                            \n                                    Async\n                                rename\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(files: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPublicFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPublicFile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rename(id: string, newFilename: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newFilename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { FileNotFound } from \"./files.errors\";\n\nimport { File } from \"./schemas/file.schema\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    @InjectModel(File.name)\n    private readonly files: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async create(options: {\n    filename: File[\"filename\"];\n    hidden?: File[\"hidden\"];\n    id: File[\"id\"];\n    public?: File[\"public\"];\n    size: File[\"size\"];\n    uid: File[\"uid\"];\n  }): Promise {\n    return new this.files(options).save();\n  }\n\n  async delete(id: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n\n    await this.filesQueue.add(\"delete\", { fileId: file.id });\n    await file.deleteOne();\n    \n    return file;\n  }\n\n  async deleteAllFor(uid: string): Promise {\n    await this.files\n      .find({ uid })\n      .cursor()\n      .eachAsync(async (file: File) => {\n        await this.filesQueue.add(\"delete\", { fileId: file.id });\n        await file.deleteOne();\n      });\n  }\n\n  async findOne(id: string, uid: string): Promise {\n    const file = await this.files.findOne({ id, uid });\n    if (!file) throw new FileNotFound(id);\n\n    return file;\n  }\n\n  async findPublicFile(id: string): Promise {\n    const file = await this.files.findOne({ id, public: true });\n    if (!file) throw new FileNotFound(id);\n\n    return file;\n  }\n\n  async rename(id: string, newFilename: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n\n    return file.rename(newFilename);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateApplicationTokenDto.html":{"url":"classes/GenerateApplicationTokenDto.html","title":"class - GenerateApplicationTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateApplicationTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/generate-application-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/generate-application-token.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateApplicationTokenDto {\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISession\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISession\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: ISession;\n  user: User | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISession extends Express.Session {\n  identifier: string;\n  ip: string | null;\n  lastUsed: Date;\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationLink.html":{"url":"classes/InvalidEmailConfirmationLink.html","title":"class - InvalidEmailConfirmationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ])\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                    Private\n                                    Async\n                                _send\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                handleStall\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _send(email: Email, job: Job)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-confirmation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-reset')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-user-activation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, Logger, LoggerService, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { EmailConfirmationEmail } from \"./emails/confirm-email.email\";\nimport { EmailChangedEmail } from \"./emails/email-changed.email\";\nimport { PasswordChangedEmail } from \"./emails/password-changed.email\";\nimport { PasswordResetEmail } from \"./emails/password-reset.email\";\nimport { UserActivationEmail } from \"./emails/user.activation.email\";\n\nimport { Email } from \"./interfaces/email.interface\";\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendEmailJob } from \"./interfaces/send-email-job.interface\";\n\nimport { SendEmailChangedJob } from \"./jobs/send-email-changed.job\";\nimport { SendEmailConfirmationJob } from \"./jobs/send-email-confirmation.job\";\nimport { SendPasswordChangedJob } from \"./jobs/send-password-changed.job\";\nimport { SendPasswordResetJob } from \"./jobs/send-password-reset.job\";\nimport { SendUserActivationJob } from \"./jobs/send-user-activation.job\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n\n    @Inject(NODEMAILER_MODULE_OPTIONS)\n    private readonly options: MailerOptions\n  ) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"send-email-changed\")\n  async sendEmailChanged(job: Job): Promise {\n    await this._send(new EmailChangedEmail(job.data.forgotPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-email-confirmation\")\n  async sendEmailConfirmation(job: Job): Promise {\n    await this._send(\n      new EmailConfirmationEmail(job.data.confirmEmailLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-changed\")\n  async sendPasswordChanged(job: Job): Promise {\n    await this._send(\n      new PasswordChangedEmail(job.data.forgotPasswordLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-reset\")\n  async sendPasswordReset(job: Job): Promise {\n    await this._send(new PasswordResetEmail(job.data.resetPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-user-activation\")\n  async sendUserActivation(job: Job): Promise {\n    await this._send(new UserActivationEmail(job.data.activationLink, job.data.displayName), job);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, MailerProcessor.name);\n  }\n\n  private async _send(email: Email, job: Job) {\n    this._debug(`[Job ${job.id}] Starting job \"${job.name}\" for ${job.data.to}`);\n\n    await this.transporter.sendMail({\n      html: await email.html(),\n      subject: email.subject(),\n      text: email.text(),\n      to: job.data.to\n    });\n\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully completed \"${job.name}\" for ${job.data.to}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findEmailConfirmation\n                            \n                            \n                                    Async\n                                findPasswordReset\n                            \n                            \n                                    Async\n                                findUserActivation\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailConfirmations: Model, passwordResets: Model, userActivations: Model, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEmailConfirmation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPasswordReset(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserActivation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://${this.config.get(\"FRONTEND_DOMAIN\")}`\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class MailerService {\n  private readonly baseURL = `http://${this.config.get(\"FRONTEND_DOMAIN\")}`;\n\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  async deleteAllFor(uid: string): Promise {\n    await settle([\n      this.emailConfirmations.deleteMany({ uid }),\n      this.passwordResets.deleteMany({ uid }),\n      this.userActivations.deleteMany({ uid })\n    ]);\n  }\n\n  async findEmailConfirmation(\n    query: FilterQuery\n  ): Promise {\n    return this.emailConfirmations.findOne(query);\n  }\n\n  async findPasswordReset(query: FilterQuery): Promise {\n    return this.passwordResets.findOne(query);\n  }\n\n  async findUserActivation(query: FilterQuery): Promise {\n    return this.userActivations.findOne(query);\n  }\n\n  async sendEmailChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-email-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendEmailConfirmation(newEmail: string, user: User): Promise {\n    const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-email-confirmation\", {\n      confirmEmailLink: `${this.baseURL}/confirm-email/${confirmation.token}`,\n      displayName: user.displayName,\n      to: newEmail\n    });\n  }\n\n  async sendPasswordChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-password-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendPasswordReset(user: User): Promise {\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-password-reset\", {\n      displayName: user.displayName,\n      resetPasswordLink: `${this.baseURL}/reset-password/${reset.token}`,\n      to: user.email\n    });\n  }\n\n  async sendUserActivation(user: User): Promise {\n    const activation = await new this.userActivations({ uid: user.id }).save();\n    \n    await this.emailsQueue.add(\"send-user-activation\", {\n      activationLink: `${this.baseURL}/activate-account/${activation.token}`,\n      displayName: user.displayName,\n      to: user.email\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaxActiveUploadSessionsError.html":{"url":"classes/MaxActiveUploadSessionsError.html","title":"class - MaxActiveUploadSessionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaxActiveUploadSessionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordChangedEmail.html":{"url":"classes/PasswordChangedEmail.html","title":"class - PasswordChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-changed.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your password has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your password has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordResetEmail.html":{"url":"classes/PasswordResetEmail.html","title":"class - PasswordResetEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordResetEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-reset.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resetPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-reset.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordResetEmail implements Email {\n  constructor(private readonly resetPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-reset.mjml\", {\n      displayName: this.displayName,\n      resetPasswordLink: this.resetPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Password Reset Requested.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To reset your password, please visit the link below.\",\n      \"This password reset link is only valid for the next 1 hour.\\n\",\n      this.resetPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    // If its successful but wrong recaptcha version response\n    if ((action && result.action !== action) || (score && result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFileDto.html":{"url":"classes/RenameFileDto.html","title":"class - RenameFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/rename-file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newFilename\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New filename cannot be empty!'})@IsString()@MaxLength(255, {message: 'Filename cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/rename-file.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class RenameFileDto {\n  @IsNotEmpty({ message: \"New filename cannot be empty!\" })\n  @IsString()\n  @MaxLength(255, { message: \"Filename cannot be greater than $constraint1 characters!\" })\n  newFilename!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailChangedJob.html":{"url":"interfaces/SendEmailChangedJob.html","title":"interface - SendEmailChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailConfirmationJob.html":{"url":"interfaces/SendEmailConfirmationJob.html","title":"interface - SendEmailConfirmationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailConfirmationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-confirmation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmEmailLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmEmailLink\n                                    \n                                \n                                \n                                    \n                                        confirmEmailLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailConfirmationJob extends SendEmailJob {\n  confirmEmailLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailJob.html":{"url":"interfaces/SendEmailJob.html","title":"interface - SendEmailJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-email-job.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        displayName\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SendEmailJob {\n  data: Record;\n  displayName: string;\n  to: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordChangedJob.html":{"url":"interfaces/SendPasswordChangedJob.html","title":"interface - SendPasswordChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordResetJob.html":{"url":"interfaces/SendPasswordResetJob.html","title":"interface - SendPasswordResetJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordResetJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-reset.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        resetPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordLink\n                                    \n                                \n                                \n                                    \n                                        resetPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordResetJob extends SendEmailJob {\n  resetPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendUserActivationJob.html":{"url":"interfaces/SendUserActivationJob.html","title":"interface - SendUserActivationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendUserActivationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-user-activation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activationLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendUserActivationJob extends SendEmailJob {\n  activationLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionDto.html":{"url":"interfaces/SessionDto.html","title":"interface - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/session.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ISession\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isCurrent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCurrent\n                                    \n                                \n                                \n                                    \n                                        isCurrent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISession } from \"@/interfaces/session.interface\";\n\nexport interface SessionDto extends ISession {\n  isCurrent: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                confirmEmail\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                resendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-avatar')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \nchangeDisplayName(undefined: ChangeDisplayNameDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-display-name')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeDisplayNameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \nchangeEmail(undefined: ChangeEmailDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-email')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(undefined: ChangePasswordDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount(undefined: DeleteAccountDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-account')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \nresendUserActivation(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resend-user-activation')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { SettingsService } from \"./settings.service\";\n\nimport { ChangeDisplayNameDto } from \"./dto/change-display-name.dto\";\nimport { ChangeEmailDto } from \"./dto/change-email.dto\";\nimport { ChangePasswordDto } from \"./dto/change-password.dto\";\nimport { DeleteAccountDto } from \"./dto/delete-account.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"settings\")\n@Throttle(30, 60)\nexport class SettingsController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly settings: SettingsService,\n    private readonly storage: StorageService\n  ) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.settings.activate(token);\n  }\n\n  @Patch(\"change-avatar\")\n  @UseGuards(AuthGuard)\n  async changeAvatar(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new UnsupportedMediaTypeException(\"Invalid file type!\"), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.create({\n      filename: avatar.filename,\n      hidden: true,\n      id: avatar.id,\n      public: true,\n      size: avatar.size,\n      uid: user.id\n    });\n\n    return this.settings.changeAvatar(avatar.id, user);\n  }\n\n  @Patch(\"change-display-name\")\n  @UseGuards(AuthGuard)\n  changeDisplayName(\n    @Body() { newDisplayName }: ChangeDisplayNameDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changeDisplayName(newDisplayName, user);\n  }\n\n  @Post(\"change-email\")\n  @UseGuards(AuthGuard)\n  changeEmail(@Body() { newEmail }: ChangeEmailDto, @CurrentUser() user: User): Promise {\n    return this.settings.changeEmail(newEmail, user);\n  }\n\n  @Post(\"change-password\")\n  @UseGuards(AuthGuard)\n  changePassword(\n    @Body() { newPassword, oldPassword }: ChangePasswordDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changePassword(oldPassword, newPassword, user);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.settings.confirmEmail(token);\n  }\n\n  @Post(\"delete-account\")\n  @UseGuards(AuthGuard)\n  deleteAccount(@Body() { password }: DeleteAccountDto, @CurrentUser() user: User): Promise {\n    return this.settings.deleteAccount(password, user);\n  }\n\n  @Post(\"resend-user-activation\")\n  @UseGuards(AuthGuard)\n  resendUserActivation(@CurrentUser() user: User): Promise {\n    return this.settings.resendUserActivationEmail(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nSettingsModule -->\n\nUsersModule->SettingsModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\n\nimport { SettingsController } from \"./settings.controller\";\nimport { SettingsService } from \"./settings.service\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n    FilesModule,\n    UsersModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [SettingsService],\n  controllers: [SettingsController],\n  providers: [SettingsService]\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                    Async\n                                changeDisplayName\n                            \n                            \n                                    Async\n                                changeEmail\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                resendUserActivationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, files: FilesService, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(newAvatarId: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeDisplayName(newDisplayName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newDisplayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEmail(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(oldPassword: string, newPassword: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(password: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resendUserActivationEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resendUserActivationEmail(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { AuthService } from \"@/modules/auth/auth.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { InvalidEmailConfirmationLink, InvalidUserActivationLink } from \"./settings.errors\";\n\nimport {\n  DisplayNameAlreadyExists,\n  EmailAlreadyExists,\n  UserNotFound\n} from \"@/modules/users/users.errors\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class SettingsService {\n  constructor(\n    private readonly auth: AuthService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async activate(token: string): Promise {\n    const activation = await this.mailer.findUserActivation({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    await user.activate();\n    await activation.deleteOne();\n  }\n\n  async changeAvatar(newAvatarId: string, user: User): Promise {\n    if (user.avatar) {\n      await this.files.delete(user.avatar, user.id).catch(() => undefined);\n    }\n\n    await user.changeAvatar(newAvatarId);\n\n    return user;\n  }\n\n  async changeDisplayName(newDisplayName: string, user: User): Promise {\n    if (await this.users.exists({ displayName: newDisplayName })) {\n      throw new DisplayNameAlreadyExists(newDisplayName);\n    }\n\n    return user.changeDisplayName(newDisplayName);\n  }\n\n  async changeEmail(newEmail: string, user: User): Promise {\n    if (await this.users.exists({ email: newEmail })) {\n      throw new EmailAlreadyExists(newEmail);\n    }\n\n    await this.mailer.sendEmailConfirmation(newEmail, user);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string, user: User): Promise {\n    if (!(await user.comparePassword(oldPassword))) {\n      throw new IncorrectPassword();\n    }\n\n    await user.changePassword(newPassword);\n    await this.mailer.sendPasswordChanged(user);\n  }\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.mailer.findEmailConfirmation({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationLink();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationLink();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationLink();\n    }\n\n    const oldUser = user.toObject();\n\n    await user.changeEmail(confirmation.newEmail);\n    await settle([confirmation.deleteOne(), this.mailer.sendEmailChanged(oldUser)]);\n  }\n\n  async deleteAccount(password: string, user: User): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.auth.logoutAllDevices(user.id),\n      this.files.deleteAllFor(user.id),\n      this.mailer.deleteAllFor(user.id)\n    ]);\n\n    await user.delete();\n  }\n\n  async resendUserActivationEmail(user: User): Promise {\n    const activation = await this.mailer.findUserActivation({ uid: user.id });\n    if (!activation) throw new UserNotFound(user.username);\n\n    await this.mailer.sendUserActivation(user);\n    await activation.resent();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadSessionNotFound.html":{"url":"classes/UploadSessionNotFound.html","title":"class - UploadSessionNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadSessionNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAvatar\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  activate!: () => Promise;\n  changeAvatar!: (newAvatarId: string) => Promise;\n  changeDisplayName!: (newDisplayName: string) => Promise;\n  changeEmail!: (newEmail: string) => Promise;\n  changePassword!: (newPassword: string) => Promise;\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  deleteAvatar!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.activate = async function(this: User): Promise {\n  if (!this.activated || this.expiresAt) {\n    this.activated = true;\n    this.expiresAt = null;\n\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeAvatar = async function(this: User, newAvatarId: string): Promise {\n  if (this.avatar !== newAvatarId) {\n    this.avatar = newAvatarId;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeDisplayName = async function(\n  this: User,\n  newDisplayName: string\n): Promise {\n  if (this.displayName !== newDisplayName) {\n    this.displayName = newDisplayName;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeEmail = async function(this: User, newEmail: string): Promise {\n  if (this.email !== newEmail) {\n    this.email = newEmail;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changePassword = async function(this: User, newPassword: string): Promise {\n  this.password = newPassword;\n  return this.save();\n};\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  if (!this.deleted) {\n    this.activated = false;\n    this.avatar = null;\n    this.deleted = true;\n    this.email = null;\n    this.password = null;\n\n    await this.save({ validateBeforeSave: false });\n  }\n\n  return this;\n};\n\nUserSchema.methods.deleteAvatar = async function(this: User): Promise {\n  if (this.avatar) {\n    this.avatar = null;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                resent\n                            \n                            \n                                times_resent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times_resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  times_resent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n\n  resent!: () => Promise;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserActivationSchema.methods.resent = async function(\n  this: UserActivation\n): Promise {\n  this.times_resent += 1;\n\n  await this.save();\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivationEmail.html":{"url":"classes/UserActivationEmail.html","title":"class - UserActivationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/user.activation.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activationLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/user.activation.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activationLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class UserActivationEmail implements Email {\n  constructor(private readonly activationLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/user-activation.mjml\", {\n      activationLink: this.activationLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Activate your account.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To finish up the registration process, please activate your account by visiting the link below\",\n      \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n      this.activationLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameAlreadyExists.html":{"url":"classes/UsernameAlreadyExists.html","title":"class - UsernameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NotFoundException, Param, UseGuards } from \"@nestjs/common\";\n\nimport { UsersService } from \"./users.service\";\n\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(private readonly users: UsersService) {}\n\n  @Get(\"@me\")\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new NotFoundException(\"User not found!\");\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \nexists(query: FilterQuery, collation?: CollationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collation\n                                    \n                                            CollationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CollationOptions, FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { EmailAlreadyExists, UsernameAlreadyExists } from \"./users.errors\";\n\nimport { User } from \"./schemas/user.schema\";\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private readonly users: Model) {}\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailAlreadyExists(email);\n    if (await this.users.exists({ username })) throw new UsernameAlreadyExists(username);\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  exists(query: FilterQuery, collation?: CollationOptions): Promise {\n    if (!collation) return this.users.exists(query);\n\n    return this.users\n      .countDocuments(query)\n      .collation(collation)\n      .then(count => !!count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/auth-optional.decorator.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/generate-application-token.dto.ts\n            \n            class\n            GenerateApplicationTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/session.dto.ts\n            \n            interface\n            SessionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/file.dto.ts\n            \n            class\n            FileDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/files/dto/rename-file.dto.ts\n            \n            class\n            RenameFileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ChunkAlreadyUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            FileNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            MaxActiveUploadSessionsError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            UploadSessionNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            variable\n            FileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/confirm-email.email.ts\n            \n            class\n            EmailConfirmationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/email-changed.email.ts\n            \n            class\n            EmailChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-changed.email.ts\n            \n            class\n            PasswordChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-reset.email.ts\n            \n            class\n            PasswordResetEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/user.activation.email.ts\n            \n            class\n            UserActivationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-email-job.interface.ts\n            \n            interface\n            SendEmailJob\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-changed.job.ts\n            \n            interface\n            SendEmailChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-confirmation.job.ts\n            \n            interface\n            SendEmailConfirmationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-changed.job.ts\n            \n            interface\n            SendPasswordChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-reset.job.ts\n            \n            interface\n            SendPasswordResetJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-user-activation.job.ts\n            \n            interface\n            SendUserActivationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-display-name.dto.ts\n            \n            class\n            ChangeDisplayNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-email.dto.ts\n            \n            class\n            ChangeEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/delete-account.dto.ts\n            \n            class\n            DeleteAccountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.controller.ts\n            \n            controller\n            SettingsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidEmailConfirmationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/clamp.ts\n            \n            variable\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/delay.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/renderMJML.ts\n            \n            variable\n            renderMJML\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.1.2\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.16.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.9.20\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.2\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.10\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sharp : ^0.25.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsModule -->\n\nUsersModule->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUsersModule->FilesModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nUsersModule->SettingsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    53 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            clamp   (src/.../clamp.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            delay   (src/.../delay.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            FileSchema   (src/.../file.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../auth-optional.decorator.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            renderMJML   (src/.../renderMJML.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/utils/clamp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (x: number, min: number, max: number): number =>\n  Math.min(Math.max(x, min), max)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (_data: unknown, ctx: ExecutionContext) => ctx.switchToHttp().getRequest().user\n)\n                        \n                    \n\n\n            \n        \n\n    src/utils/delay.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (time: number): Promise =>\n  new Promise((resolve) => setTimeout(resolve, time))\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/file.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FileSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(File)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/auth-optional.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(\"AUTH_OPTIONAL\", optional)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/renderMJML.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            renderMJML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  path: fs.PathLike,\n  data: Record\n): Promise => {\n  const mjml = await fs.promises.readFile(path).then(buffer => buffer.toString());\n\n  const { errors, html } = mjml2html(mjml, {\n    keepComments: false,\n    minify: true,\n    minifyOptions: {\n      collapseWhitespace: true,\n      minifyCSS: true,\n      removeEmptyAttributes: true\n    }\n  });\n\n  if (errors && errors.length) {\n    throw new Error(errors.map(error => error.message).join(\"\\n\"));\n  }\n\n  return ejs.render(html, data, { async: true });\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
