var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.966,1,3.336]],["body/controllers/AdminController.html",[0,2.765,1,5.705,2,2.765,3,0.089,4,0.077,5,0.053,6,5.525,7,3.79,8,5.071,9,0.207,10,0.009,11,3.967,12,0.789,13,5.071,14,5.525,15,4.692,16,6.25,17,4.087,18,4.407,19,6.25,20,6.25,21,0.102,22,0.292,23,3.032,24,2.522,25,2.347,26,3.967,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.336,30,1.311]],["body/injectables/AdminGuard.html",[3,0.082,4,0.071,5,0.049,8,3.83,9,0.192,10,0.009,12,0.725,15,5.413,21,0.093,22,0.268,27,0.005,28,0.007,29,0.005,30,2.128,31,2.616,32,5.074,33,1.393,34,4.581,35,0.636,36,2.08,37,2.327,38,5.824,39,5.824,40,6.208,41,0.385,42,5.739,43,1.513,44,0.882,45,0.474,46,1.295,47,4.636,48,1.656,49,1.944,50,2.785,51,3.643,52,4.308,53,5.739,54,1.999,55,5.739,56,1.904,57,3.205,58,4.636,59,5.074,60,2.54,61,1.582,62,4.636,63,1.618,64,2.399]],["title/injectables/AdminMiddleware.html",[30,1.311,65,3.336]],["body/injectables/AdminMiddleware.html",[3,0.072,4,0.062,5,0.043,8,3.368,9,0.192,10,0.009,12,0.637,21,0.082,22,0.236,27,0.005,28,0.006,29,0.005,30,1.959,31,2.301,33,1.283,35,0.559,36,1.915,37,2.416,41,0.446,43,1.75,44,1.02,45,0.548,46,1.498,48,1.915,49,2,50,2.449,51,5.335,52,3.789,54,1.758,57,3.707,59,4.462,60,2.234,61,1.392,62,4.077,65,4.984,66,4.462,67,5.916,68,4.58,69,6.558,70,6.366,71,5.608,72,4.403,73,7.431,74,5.047,75,5.869,76,4.462,77,5.047,78,2.933,79,5.047,80,5.047,81,2.619,82,3.061]],["title/modules/AdminModule.html",[83,1.253,84,3.133]],["body/modules/AdminModule.html",[1,5.604,2,2.963,3,0.073,4,0.063,5,0.043,9,0.2,10,0.009,12,0.646,13,6.019,14,4.52,21,0.083,22,0.239,27,0.005,28,0.006,29,0.005,36,1.475,41,0.343,43,1.348,44,0.786,45,0.422,46,1.154,48,1.475,65,3.838,83,2.105,84,6.061,85,2.403,86,2.481,87,2.653,88,2.653,89,2.653,90,3.873,91,3.873,92,4.52,93,4.52,94,4.52,95,3.474,96,2.024,97,2.653,98,5.113,99,5.113,100,6.695,101,7.92,102,5.113,103,6.695,104,4.06,105,5.113,106,6.695,107,3.1,108,4.13,109,6.695,110,5.113,111,5.113,112,5.113,113,2.403,114,5.113,115,5.113,116,4.52,117,5.113,118,3.605,119,5.113]],["title/injectables/AdminService.html",[13,2.965,30,1.311]],["body/injectables/AdminService.html",[3,0.091,4,0.078,5,0.054,9,0.187,10,0.009,12,0.805,13,5.131,17,4.612,18,4.493,21,0.104,22,0.298,23,3.091,24,2.114,26,4.881,27,0.006,28,0.007,29,0.006,30,2.269,31,2.904,41,0.428,43,1.679,44,0.979,45,0.526,46,1.438,120,5.633,121,1.204,122,5.633,123,6.371]],["title/modules/AppModule.html",[83,1.253,124,3.336]],["body/modules/AppModule.html",[3,0.039,4,0.034,5,0.023,9,0.205,10,0.009,12,0.348,21,0.045,22,0.129,27,0.003,28,0.004,29,0.003,56,2.14,61,0.76,63,0.777,64,2.203,83,1.487,84,4.816,85,1.296,86,1.337,87,1.43,88,1.43,89,1.43,90,2.227,91,2.735,95,2.227,96,1.091,97,1.43,124,6.678,125,2.437,126,2.437,127,2.437,128,5.651,129,4.557,130,4.816,131,4.141,132,4.335,133,4.816,134,5.563,135,4.335,136,5.651,137,4.921,138,2.227,139,2.397,140,2.757,141,2.437,142,4.293,143,2.069,144,4.293,145,3.982,146,1.482,147,3.795,148,1.839,149,1.121,150,4.293,151,2.757,152,3.222,153,3.222,154,4.293,155,2.227,156,2.069,157,2.757,158,2.757,159,2.437,160,2.757,161,2.069,162,2.757,163,2.069,164,2.227,165,2.757,166,2.757,167,2.227,168,2.757,169,2.227,170,1.602,171,2.227,172,2.437,173,2.757,174,2.757,175,2.757,176,2.757,177,2.757,178,2.757,179,7.745,180,2.757,181,2.757,182,2.757,183,7.576,184,5.272,185,2.757,186,3.467,187,2.757,188,4.293,189,2.757,190,2.757,191,2.757,192,4.293,193,2.757,194,4.293,195,2.757,196,2.757,197,5.951,198,5.951,199,2.757,200,2.757,201,2.757,202,2.757,203,2.757,204,2.227,205,2.757,206,4.258,207,2.757,208,2.757,209,2.757,210,2.757,211,2.757,212,2.757,213,2.757,214,2.757,215,2.757,216,2.757,217,2.757,218,2.757,219,4.293,220,2.757,221,2.757,222,2.757,223,4.293,224,2.757,225,2.757,226,2.757,227,2.757,228,2.757,229,2.835,230,3.346,231,2.944,232,2.069,233,5.951,234,2.757,235,2.355,236,2.757,237,2.757,238,3.222,239,2.757,240,2.757,241,2.757,242,2.757,243,2.757,244,2.757,245,2.757,246,5.272,247,2.757,248,2.757,249,2.757,250,2.757,251,1.43,252,2.757,253,2.757,254,2.757,255,2.757,256,2.757,257,2.757,258,1.382,259,2.757,260,2.757,261,2.757,262,2.437,263,2.757,264,2.757,265,2.757,266,2.227,267,2.227,268,2.227,269,1.944]],["title/classes/Application.html",[22,0.208,270,2.481]],["body/classes/Application.html",[3,0.037,4,0.032,5,0.022,9,0.181,10,0.009,21,0.067,22,0.237,27,0.002,28,0.004,29,0.002,33,0.792,35,0.454,37,0.767,41,0.53,44,0.78,45,0.689,49,1.105,54,1.428,56,1.912,63,1.879,64,3.586,72,2.205,82,1.577,113,1.927,149,1.057,170,1.511,232,1.952,251,2.128,258,2.056,270,4.154,271,0.419,272,2.1,273,3.079,274,4.423,275,1.011,276,5.077,277,2.634,278,4.101,279,5.077,280,2.059,281,3.751,282,3.388,283,3.373,284,3.811,285,2.122,286,2.634,287,4.23,288,2.6,289,2.915,290,2.6,291,2.6,292,2.6,293,0.834,294,2.06,295,2.603,296,3.254,297,5.545,298,3.218,299,4.428,300,3.803,301,2.6,302,2.503,303,3.625,304,2.6,305,2.6,306,1.952,307,4.488,308,3.495,309,3.312,310,3.811,311,2.6,312,3.625,313,2.6,314,2.6,315,2.6,316,3.658,317,2.6,318,2.6,319,4.488,320,1.304,321,1.833,322,1.304,323,1.735,324,1.185,325,4.428,326,2.128,327,1.65,328,4.488,329,2.299,330,2.95,331,1.833,332,1.65,333,2.1,334,2.6,335,1.452,336,1.577,337,2.1,338,1.452,339,2.299,340,6.152,341,2.299,342,2.299,343,2.299,344,1.65,345,1.735,346,1.833,347,1.833,348,1.511,349,1.833,350,2.603,351,1.989,352,2.299,353,2.6,354,2.6,355,2.463,356,1.952,357,2.299,358,2.6,359,1.735,360,1.735,361,2.6,362,2.1,363,1.833,364,1.577,365,2.6,366,4.1,367,2.6,368,2.6,369,2.6,370,2.6,371,1.65,372,2.6,373,2.6,374,2.6,375,2.6,376,2.6,377,2.6,378,4.1,379,4.1,380,2.314,381,2.6,382,2.1,383,2.6,384,2.6,385,1.952,386,2.6,387,2.299,388,2.6,389,2.6,390,2.6,391,2.299,392,2.6,393,2.6,394,2.6,395,2.6,396,2.6,397,1.952,398,2.6,399,1.952,400,1.952,401,1.952]],["title/classes/ApplicationAlreadyExists.html",[22,0.208,402,2.694]],["body/classes/ApplicationAlreadyExists.html",[3,0.076,4,0.066,5,0.045,9,0.129,10,0.009,12,0.672,21,0.135,22,0.389,27,0.005,28,0.006,29,0.005,33,1.647,41,0.357,43,1.402,44,1.169,45,0.439,46,1.201,50,3.333,121,1.573,271,0.857,281,2.761,283,2.861,293,0.754,371,3.377,402,4.166,403,3.55,404,3.18,405,4.166,406,5.32,407,3.367,408,2.871,409,3.752,410,2.224,411,2.425,412,2.501,413,3.226,414,4.845,415,2.501,416,3.226,417,3.55,418,3.55,419,2.668,420,3.226,421,2.354,422,3.226,423,2.861,424,2.971,425,2.861,426,2.971,427,2.971,428,3.752]],["title/classes/ApplicationDto.html",[22,0.208,274,3.133]],["body/classes/ApplicationDto.html",[3,0.075,4,0.065,5,0.044,9,0.166,10,0.009,21,0.085,22,0.318,27,0.005,28,0.006,29,0.005,35,0.581,41,0.581,44,1.162,45,0.714,271,0.845,274,4.803,275,1.679,277,3.923,280,2.232,281,3.923,282,5.045,283,4.066,286,3.923,289,3.551,293,0.841,294,2.105,302,3.005,322,2.632,330,4.394,331,3.702,332,3.332,429,4.641,430,5.249,431,5.249,432,5.532,433,5.249,434,5.249,435,5.249,436,5.249,437,5.249]],["title/classes/ApplicationNotFound.html",[22,0.208,413,2.694]],["body/classes/ApplicationNotFound.html",[3,0.078,4,0.067,5,0.046,9,0.132,10,0.009,12,0.687,21,0.136,22,0.392,27,0.005,28,0.006,29,0.005,33,1.657,41,0.365,44,0.835,50,3.381,121,1.62,271,0.876,281,2.822,283,2.924,293,0.539,371,3.452,402,3.297,403,3.628,404,2.912,405,3.297,407,3.402,408,3.213,409,3.835,410,2.273,411,2.479,412,2.556,413,4.225,414,4.913,415,2.556,416,3.297,417,3.628,418,3.628,419,2.727,420,3.297,421,2.406,422,3.297,423,2.924,424,3.037,425,2.924,426,3.037,427,3.037,428,3.835,438,5.438]],["title/controllers/ApplicationsController.html",[0,1.966,439,3.336]],["body/controllers/ApplicationsController.html",[0,1.553,2,1.553,3,0.05,4,0.043,5,0.03,7,2.128,9,0.193,10,0.009,11,2.227,12,0.443,21,0.057,22,0.164,23,1.702,24,1.164,27,0.003,28,0.005,29,0.003,34,2.039,35,0.389,36,1.486,37,1.802,41,0.481,43,1.889,44,1.101,45,0.591,46,1.617,48,2.068,49,2.222,54,1.222,63,2.021,152,2.634,153,2.634,270,1.959,274,2.474,278,4.932,280,2.495,281,1.82,285,3.671,293,0.894,294,2.216,329,3.102,427,2.877,439,3.868,440,3.102,441,3.703,442,3.124,443,3.703,444,3.509,445,3.509,446,3.102,447,5.814,448,3.509,449,5.949,450,3.509,451,5.381,452,3.102,453,3.102,454,3.509,455,3.509,456,3.509,457,3.509,458,2.634,459,3.102,460,3.509,461,4.074,462,1.702,463,2.341,464,2.634,465,3.438,466,3.102,467,3.124,468,3.102,469,3.102,470,3.509,471,2.634,472,3.509,473,3.509,474,2.227,475,2.474,476,2.474,477,2.474,478,3.509,479,2.474,480,3.509,481,3.509,482,2.474,483,3.509,484,3.509,485,6.729,486,4.555,487,4.584,488,3.509,489,5.152,490,2.834,491,3.102,492,4.584,493,3.509,494,2.834,495,3.509,496,3.509,497,3.509,498,3.509]],["title/modules/ApplicationsModule.html",[83,1.253,128,3.133]],["body/modules/ApplicationsModule.html",[2,3.122,3,0.079,4,0.068,5,0.047,9,0.205,10,0.009,12,0.7,21,0.09,22,0.259,27,0.005,28,0.007,29,0.005,44,0.852,83,2.188,85,2.607,86,2.69,87,2.877,88,2.877,89,2.877,90,4.026,91,4.026,95,3.661,96,2.195,97,2.877,128,6.176,139,3.097,148,3.7,149,2.255,270,3.097,326,2.877,356,5.296,439,5.825,467,5.534,468,4.902,499,4.902,500,4.902,501,4.902,502,5.545,503,5.545,504,4.902,505,3.91,506,4.902]],["title/injectables/ApplicationsService.html",[30,1.311,467,2.694]],["body/injectables/ApplicationsService.html",[3,0.045,4,0.039,5,0.027,9,0.181,10,0.009,12,0.396,21,0.051,22,0.147,24,1.572,25,1.779,27,0.003,28,0.004,29,0.003,30,1.398,31,1.429,35,0.347,36,1.367,37,2.602,41,0.516,43,2.025,44,1.268,45,0.681,46,1.734,48,2.153,49,2.273,54,2.504,56,2.112,60,3.024,61,2.057,63,2.027,121,0.895,145,3.554,146,1.686,149,1.274,231,2.645,270,4.168,278,3.826,282,2.091,283,2.547,285,2.66,293,0.31,312,2.771,323,2.091,324,1.429,330,3.319,332,1.99,338,3.816,402,1.901,413,3.859,422,2.872,427,3.189,441,2.872,442,2.872,443,3.463,462,2.298,467,2.872,482,3.34,504,2.771,506,2.771,507,2.771,508,3.161,509,2.532,510,4.488,511,3.134,512,3.826,513,3.859,514,3.134,515,3.556,516,6.158,517,3.134,518,3.872,519,3.556,520,3.134,521,3.556,522,3.134,523,3.34,524,3.134,525,4.737,526,3.134,527,2.532,528,3.134,529,2.21,530,3.134,531,2.771,532,3.134,533,4.737,534,3.134,535,3.134,536,2.771,537,3.134,538,3.134,539,3.134,540,3.134,541,6.364,542,3.134,543,3.134,544,3.134,545,2.771,546,3.134,547,3.134,548,3.134,549,3.134,550,3.134]],["title/interfaces/AsyncStorageOptions.html",[551,1.145,552,3.336]],["body/interfaces/AsyncStorageOptions.html",[3,0.079,4,0.068,5,0.047,9,0.188,10,0.009,21,0.09,27,0.005,28,0.006,29,0.005,33,1.358,35,0.611,37,1.628,45,0.748,46,1.998,49,1.486,83,2.182,155,3.648,229,4.383,230,5.173,269,5.747,275,1.733,287,4.263,551,1.421,552,5.277,553,2.305,554,3.888,555,3.5,556,6.215,557,7.205,558,4.875,559,4.875,560,4.085,561,3.204,562,3.888,563,2.592,564,4.875,565,4.875]],["title/controllers/AuthController.html",[0,1.966,566,3.336]],["body/controllers/AuthController.html",[0,1.279,2,1.279,3,0.041,4,0.036,5,0.024,7,1.753,9,0.206,10,0.009,11,1.835,12,0.365,21,0.047,22,0.135,23,1.402,24,0.959,27,0.003,28,0.004,29,0.003,35,0.32,36,1.285,37,1.603,41,0.467,43,1.835,44,1.07,45,0.575,46,1.571,48,2.009,49,2.115,54,1.892,56,1.478,57,3.681,61,1.498,63,1.859,71,1.929,78,1.68,81,1.5,104,2.7,152,2.17,153,2.17,232,3.343,235,2.15,251,2.818,289,1.208,293,0.69,294,2.152,335,1.614,336,1.753,380,2.782,411,1.318,412,2.093,415,1.359,419,3.491,461,2.971,462,1.402,463,1.929,465,1.929,466,2.555,486,2.555,566,3.343,567,2.555,568,3.937,569,3.937,570,3.157,571,4.453,572,3.343,573,3.937,574,2.555,575,2.89,576,4.453,577,2.89,578,2.89,579,4.581,580,2.89,581,3.131,582,2.89,583,2.89,584,4.581,585,5.432,586,3.764,587,4.072,588,2.89,589,2.89,590,2.89,591,4.802,592,2.89,593,2.89,594,2.89,595,4.581,596,2.89,597,2.89,598,2.89,599,4.581,600,2.89,601,2.89,602,2.555,603,2.17,604,1.835,605,2.89,606,3.343,607,2.555,608,2.555,609,2.971,610,2.555,611,2.89,612,4.453,613,2.89,614,2.89,615,2.89,616,2.335,617,4.453,618,2.89,619,2.335,620,2.89,621,2.17,622,2.89,623,2.89,624,2.335,625,2.17,626,2.89,627,2.89,628,2.89,629,2.335,630,2.89,631,2.89,632,2.89,633,2.89,634,2.89,635,2.89,636,2.27,637,2.555,638,2.89,639,2.89,640,2.555,641,2.89,642,2.89,643,2.89,644,2.89,645,4.453,646,4.453,647,3.157,648,2.89,649,2.89,650,2.89,651,2.89,652,2.555,653,2.17,654,2.89,655,2.89,656,2.17,657,2.89,658,2.17,659,2.89,660,2.335,661,2.89,662,2.17,663,2.89,664,2.17,665,2.335,666,2.89,667,2.89,668,2.335,669,2.335,670,2.89,671,2.335,672,2.89,673,2.89,674,2.89,675,2.89,676,2.89,677,2.89,678,2.89,679,2.038,680,2.89]],["title/guards/AuthGuard.html",[34,2.582,385,3.336]],["body/guards/AuthGuard.html",[3,0.041,4,0.036,5,0.025,9,0.194,10,0.009,12,0.366,17,3.287,18,2.044,21,0.088,22,0.136,24,2.028,25,3.085,26,3.454,27,0.003,28,0.004,29,0.003,30,1.317,34,2.594,35,0.321,36,1.287,37,2.27,38,4.937,39,3.605,40,5.452,41,0.443,43,1.837,44,1.014,45,0.575,46,1.639,47,5.631,48,1.763,49,1.203,51,4.61,52,2.176,54,2.428,56,2.606,57,3.039,58,2.341,60,3.403,61,2.165,63,1.861,64,2.274,81,2.316,113,1.363,121,0.843,143,2.176,145,3.413,146,1.559,231,3.039,235,2.759,251,2.316,270,2.492,280,1.948,281,3.171,282,1.934,283,3.906,289,1.865,293,0.605,302,1.089,330,3.552,331,2.044,332,1.84,338,1.619,371,1.84,380,2.035,416,2.706,419,1.453,420,4.002,427,2.492,467,3.706,586,1.504,603,2.176,604,1.84,656,2.176,681,2.341,682,2.341,683,3.946,684,4.463,685,4.463,686,2.563,687,6.421,688,2.899,689,3.946,690,2.899,691,4.085,692,4.463,693,2.899,694,2.899,695,4.463,696,2.899,697,2.899,698,2.044,699,2.899,700,2.492,701,2.594,702,2.563,703,2.563,704,2.341,705,2.899,706,3.605,707,3.605,708,2.899,709,2.899,710,1.84,711,4.463,712,2.899,713,2.899,714,1.934,715,2.899,716,2.899,717,2.899,718,2.899,719,2.899,720,3.946,721,2.899,722,2.899,723,2.899,724,2.899,725,2.899,726,3.147,727,2.899,728,2.899,729,3.946,730,2.563,731,2.563,732,3.946,733,2.341,734,2.563,735,2.563,736,2.563,737,2.563]],["title/injectables/AuthMiddleware.html",[30,1.311,67,3.336]],["body/injectables/AuthMiddleware.html",[3,0.068,4,0.059,5,0.04,9,0.196,10,0.009,12,0.603,17,4.147,18,3.369,21,0.078,22,0.223,23,2.318,24,1.585,26,4.063,27,0.004,28,0.006,29,0.004,30,1.889,31,2.178,35,0.529,36,1.847,37,2.131,41,0.43,43,1.687,44,0.983,45,0.528,46,1.445,48,1.378,49,1.725,50,2.318,51,4.895,52,3.587,54,1.664,56,1.585,57,2.668,60,3.194,61,2.126,62,3.859,67,4.805,68,3.72,69,5.659,71,5.145,72,4.147,73,6.817,75,6.382,78,2.777,113,2.246,121,0.903,122,4.224,235,2.857,280,1.41,289,1.997,302,1.795,338,2.668,407,2.114,412,2.246,419,2.396,586,2.479,603,3.587,604,3.033,656,3.587,698,3.369,726,3.369,729,4.224,730,4.224,731,4.224,732,5.659,733,3.859,734,4.224,735,4.224,738,4.224,739,4.778,740,4.778,741,6.401,742,3.033,743,4.778,744,2.897,745,2.396]],["title/modules/AuthModule.html",[83,1.253,129,2.965]],["body/modules/AuthModule.html",[2,2.938,3,0.072,4,0.062,5,0.043,9,0.208,10,0.009,12,0.637,21,0.082,22,0.236,27,0.005,28,0.006,29,0.005,44,1.02,83,2.092,85,2.373,86,2.449,87,2.619,88,2.619,89,2.619,90,3.849,91,3.849,95,3.444,96,1.998,97,2.619,129,5.868,135,5.335,139,3.707,148,3.368,149,2.052,167,4.077,326,3.444,505,3.559,566,5.569,609,6.008,610,4.462,746,4.462,747,5.047,748,4.462,749,4.462,750,5.047,751,6.639,752,5.047,753,3.368,754,4.984,755,4.462,756,4.462,757,3.368,758,4.984,759,4.462,760,4.462,761,5.047,762,5.047]],["title/injectables/AuthService.html",[30,1.311,609,2.965]],["body/injectables/AuthService.html",[3,0.039,4,0.034,5,0.023,9,0.197,10,0.009,12,0.346,17,3.188,18,1.93,21,0.044,22,0.128,24,2.133,25,2.414,26,3.332,27,0.003,28,0.004,29,0.003,30,1.26,31,1.248,35,0.303,36,1.232,37,2.447,41,0.457,43,1.795,44,1.046,45,0.562,46,1.537,48,1.854,49,2.084,54,2.959,56,2.509,60,3.013,61,2.028,63,1.48,64,1.784,96,1.083,121,0.807,149,1.113,235,3.117,258,1.373,280,1.26,285,1.784,293,0.878,302,1.028,324,1.248,348,2.481,380,3.104,510,5.015,529,1.93,568,3.774,569,3.774,570,2.481,572,3.205,573,3.774,574,3.774,581,3.075,609,2.849,625,2.055,636,2.478,647,4.133,664,2.055,665,4.239,679,3.011,700,2.384,726,4.18,733,3.449,753,3.956,755,2.42,756,2.42,757,2.849,759,2.42,760,2.42,763,2.42,764,2.737,765,3.763,766,3.05,767,3.595,768,5.248,769,5.248,770,2.737,771,3.205,772,2.737,773,4.269,774,2.737,775,4.269,776,2.737,777,4.269,778,2.737,779,4.269,780,2.737,781,2.481,782,3.05,783,3.05,784,2.737,785,3.774,786,2.737,787,2.211,788,2.737,789,2.737,790,2.737,791,2.42,792,2.42,793,2.737,794,2.737,795,3.332,796,2.737,797,2.737,798,2.737,799,3.774,800,2.737,801,2.737,802,4.64,803,2.737,804,3.502,805,4.64,806,2.467,807,2.737,808,2.737,809,2.42,810,2.737,811,2.737,812,2.737,813,2.737,814,2.737,815,2.737,816,2.737,817,2.211,818,2.42,819,2.737,820,2.737,821,2.42]],["title/modules/BullBoardModule.html",[83,1.253,130,3.133]],["body/modules/BullBoardModule.html",[3,0.084,4,0.072,5,0.05,9,0.194,10,0.008,12,0.74,21,0.095,22,0.274,27,0.005,28,0.007,29,0.005,83,2.244,85,2.754,86,2.843,87,3.04,88,3.04,89,3.04,90,4.129,91,3.04,95,3.79,96,2.319,97,3.04,107,3.553,130,6.319,131,5.3,139,4.079,161,4.398,163,4.398,822,5.18,823,5.859,824,5.18,825,6.164,826,4.732,827,5.859,828,5.859]],["title/injectables/BullBoardProvider.html",[30,1.311,825,3.133]],["body/injectables/BullBoardProvider.html",[3,0.082,4,0.071,5,0.049,9,0.201,10,0.009,12,0.725,21,0.093,22,0.268,24,2.393,25,2.708,27,0.005,28,0.007,29,0.005,30,2.128,31,2.616,41,0.385,43,1.513,44,0.882,45,0.474,46,1.295,83,1.618,107,4.372,108,4.636,121,1.362,147,5.074,161,5.413,825,5.084,826,5.824,829,5.074,830,5.739,831,7.129,832,6.97,833,5.739,834,6.374,835,4.636,836,3.48,837,5.739,838,4.636,839,5.074,840,5.074,841,5.739,842,5.739]],["title/classes/ChunkAlreadyUploaded.html",[22,0.208,843,2.82]],["body/classes/ChunkAlreadyUploaded.html",[3,0.073,4,0.063,5,0.057,9,0.125,10,0.009,12,0.647,21,0.134,22,0.385,27,0.005,28,0.006,29,0.005,33,1.631,35,0.568,41,0.344,43,1.351,44,0.788,45,0.423,46,1.157,61,1.413,121,1.498,271,0.825,280,1.513,293,0.508,404,3.124,407,3.307,408,3.124,410,2.143,411,3.057,424,2.863,425,2.757,426,2.863,586,2.66,745,2.57,766,3.897,843,4.257,844,3.421,845,4.729,846,3.748,847,5.126,848,4.729,849,3.615,850,2.757,851,3.108,852,3.108,853,3.615,854,3.615,855,2.863,856,2.979,857,3.615,858,3.254,859,3.421,860,3.615,861,4.475,862,2.029,863,3.615,864,3.615,865,3.615,866,3.421,867,3.615,868,3.421,869,3.254,870,3.615,871,3.615]],["title/classes/Counter.html",[22,0.208,872,3.133]],["body/classes/Counter.html",[3,0.061,4,0.052,5,0.036,9,0.103,10,0.009,21,0.069,22,0.198,23,2.058,27,0.004,28,0.005,29,0.004,33,1.14,35,0.47,36,1.703,41,0.561,43,2.033,44,1.185,45,0.636,46,1.74,48,1.224,63,2.31,104,4.449,121,0.801,170,3.43,271,0.683,287,3.579,355,2.863,846,4.477,859,2.831,872,4.162,873,3.751,874,6.787,875,7.337,876,7.337,877,5.902,878,5.218,879,5.902,880,5.218,881,4.482,882,4.242,883,4.242,884,5.902,885,4.242,886,4.242,887,5.902,888,4.242,889,7.984,890,5.902,891,8.591,892,4.242,893,5.902,894,4.242,895,5.902,896,4.242,897,4.242,898,4.242,899,4.242,900,2.281,901,7.337,902,6.787,903,6.787,904,4.242,905,4.242]],["title/classes/CreateApplicationDto.html",[22,0.208,447,3.336]],["body/classes/CreateApplicationDto.html",[3,0.071,4,0.061,5,0.042,9,0.16,10,0.009,21,0.081,22,0.307,27,0.005,28,0.006,29,0.005,35,0.551,41,0.441,44,1.347,45,0.542,64,2.747,270,4.944,271,0.8,275,1.62,283,4.381,293,0.651,294,2.032,296,2.579,300,3.014,320,2.492,330,4.279,332,3.155,351,2.412,447,4.934,531,4.395,881,2.889,906,6.509,907,4.395,908,3.155,909,4.971,910,4.971,911,4.767,912,5.308,913,4.913,914,4.385,915,4.971,916,4.971,917,5.81,918,6.572,919,4.971,920,5.81,921,6.572,922,4.971,923,4.971,924,6.572,925,4.971,926,3.819,927,4.934,928,3.819,929,2.776,930,4.015,931,4.971,932,4.395]],["title/classes/CreateFolderDto.html",[22,0.208,933,3.336]],["body/classes/CreateFolderDto.html",[3,0.081,4,0.07,5,0.048,9,0.138,10,0.008,21,0.092,22,0.335,27,0.005,28,0.007,29,0.005,35,0.628,41,0.481,44,1.352,45,0.591,271,0.913,275,1.765,293,0.816,294,2.213,296,2.944,320,2.844,908,3.601,911,4.379,912,5.781,913,4.776,914,4.776,926,4.16,927,5.373,928,4.557,929,3.168,933,5.373,934,6.933,935,5.016,936,5.887,937,3.644,938,5.016,939,5.673,940,5.016,941,5.673,942,5.016]],["title/interfaces/DeleteFileJob.html",[551,1.145,943,3.336]],["body/interfaces/DeleteFileJob.html",[3,0.096,4,0.083,5,0.057,10,0.008,21,0.109,27,0.006,28,0.007,29,0.006,35,0.742,45,0.553,275,1.953,293,0.835,551,1.726,553,2.799,943,5.946,944,5.92,945,5.92,946,7.708]],["title/classes/DeleteUserDto.html",[22,0.208,947,3.336]],["body/classes/DeleteUserDto.html",[3,0.09,4,0.077,5,0.053,9,0.153,10,0.008,21,0.102,22,0.357,27,0.006,28,0.007,29,0.006,35,0.697,41,0.422,45,0.519,271,1.013,275,1.881,293,0.756,294,1.944,320,3.154,581,3.656,908,3.993,911,3.512,926,4.434,928,4.434,929,3.512,947,5.727,948,6.745,949,4.722,950,4.435,951,6.29]],["title/classes/DiskStorage.html",[22,0.208,952,3.133]],["body/classes/DiskStorage.html",[3,0.057,4,0.049,5,0.034,9,0.184,10,0.009,21,0.092,22,0.187,23,1.941,24,1.328,25,2.943,27,0.004,28,0.005,29,0.004,35,0.443,36,1.634,37,2.313,41,0.526,43,2.065,44,1.204,45,0.647,46,1.768,48,2.177,49,1.927,54,1.973,60,2.506,61,1.103,63,2.016,64,1.672,81,2.939,113,2.662,118,3.994,121,0.756,155,2.076,170,2.325,271,0.644,280,2.313,293,0.882,462,2.748,551,1.031,563,2.662,710,2.54,714,2.67,952,3.994,953,3.232,954,3.987,955,5.664,956,5.664,957,4.575,958,4.575,959,3.003,960,5.042,961,4.001,962,5.008,963,4.001,964,5.008,965,4.001,966,3.994,967,4.001,968,4.174,969,3.994,970,4.001,971,3.779,972,4.001,973,4.252,974,2.67,975,2.426,976,2.67,977,2.821,978,2.821,979,3.537,980,2.67,981,3.537,982,3.537,983,2.54,984,3.537,985,3.537,986,3.537,987,3.537,988,3.537,989,3.537,990,3.537,991,3.537,992,3.537,993,3.537,994,3.537,995,3.537]],["title/interfaces/DiskStorageEngineOptions.html",[551,1.145,960,3.133]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.07,4,0.061,5,0.042,9,0.198,10,0.009,21,0.106,22,0.231,23,2.394,24,1.637,25,2.456,27,0.005,28,0.006,29,0.005,35,0.546,37,1.93,45,0.407,49,1.763,54,2.278,60,2.894,61,1.36,63,2.202,64,2.062,81,3.393,113,2.319,118,4.611,155,2.56,170,2.867,275,1.612,280,1.456,293,0.857,551,1.272,553,2.062,563,2.319,710,3.132,714,3.292,952,3.479,953,3.985,954,3.965,960,5.172,962,4.362,964,4.362,966,3.479,968,4.151,969,3.479,971,3.292,973,4.909,974,3.292,975,2.992,976,3.292,977,3.479,978,3.479,979,4.362,980,5.211,981,4.362,982,4.362,983,3.132,984,4.362,985,4.362,986,4.362,987,4.362,988,4.362,989,4.362,990,4.362,991,4.362,992,4.362,993,4.362,994,4.362,995,4.362]],["title/classes/DisplayNameTaken.html",[22,0.208,996,2.582]],["body/classes/DisplayNameTaken.html",[3,0.074,4,0.064,5,0.057,9,0.127,10,0.009,12,0.658,21,0.138,22,0.396,27,0.005,28,0.006,29,0.005,33,1.668,41,0.35,44,0.8,45,0.43,68,4.377,121,1.631,271,0.839,293,0.516,380,2.374,404,3.456,408,2.832,410,3.148,415,2.448,421,2.998,518,2.702,636,2.177,806,2.448,862,2.061,996,3.938,997,3.306,998,5.208,999,2.832,1000,4.521,1001,3.475,1002,3.026,1003,3.475,1004,3.026,1005,2.908,1006,3.475,1007,3.306,1008,3.026,1009,3.158,1010,2.702,1011,2.702,1012,3.026,1013,3.475,1014,3.026,1015,3.475,1016,3.475]],["title/interfaces/Email.html",[551,1.145,636,1.857]],["body/interfaces/Email.html",[3,0.088,4,0.076,5,0.052,10,0.008,21,0.101,27,0.006,28,0.007,29,0.006,35,0.686,36,2.18,41,0.548,48,2.353,49,2.037,293,0.877,551,1.596,553,2.587,636,3.158,1017,5.473,1018,7.508,1019,6.86,1020,6.86,1021,6.191,1022,6.191,1023,6.191]],["title/classes/EmailConfirmation.html",[22,0.208,1024,2.965]],["body/classes/EmailConfirmation.html",[3,0.057,4,0.049,5,0.034,9,0.183,10,0.009,21,0.092,22,0.264,27,0.004,28,0.005,29,0.004,33,1.091,35,0.441,41,0.525,45,0.646,56,1.322,61,1.098,63,1.124,64,3.768,72,3.037,82,2.416,149,1.62,251,2.067,271,0.642,273,3.978,275,1.393,277,3.404,285,2.742,286,3.404,289,3.271,293,0.775,294,2.206,295,4.165,296,3.703,298,3.986,299,4.968,300,3.425,308,4.328,309,4.562,316,4.531,320,1.998,324,1.816,325,4.783,326,2.93,327,2.529,335,2.225,336,2.416,344,2.529,345,2.659,346,2.81,347,2.81,348,2.316,349,2.81,350,4.165,351,1.933,359,2.659,360,2.659,364,2.416,380,3.254,900,3.037,1024,3.769,1025,6.5,1026,3.218,1027,4.378,1028,5.299,1029,3.985,1030,2.659,1031,3.983,1032,3.985,1033,4.626,1034,3.985,1035,5.765,1036,3.985,1037,3.985,1038,3.985,1039,3.983,1040,2.991,1041,3.985,1042,2.991,1043,3.523,1044,3.985,1045,3.218,1046,3.218,1047,3.218]],["title/classes/EmailTaken.html",[22,0.208,1002,2.582]],["body/classes/EmailTaken.html",[3,0.074,4,0.064,5,0.057,9,0.127,10,0.009,12,0.658,21,0.138,22,0.396,27,0.005,28,0.006,29,0.005,33,1.668,41,0.35,44,0.8,45,0.43,68,4.377,121,1.631,271,0.839,293,0.516,380,2.374,404,3.456,408,2.832,410,3.148,415,2.448,421,2.998,518,2.702,636,2.177,806,2.448,862,2.061,996,3.026,997,3.306,999,2.832,1000,4.521,1001,3.475,1002,3.938,1003,3.475,1004,3.026,1005,2.908,1006,3.475,1007,3.306,1008,3.026,1009,3.158,1010,2.702,1011,2.702,1012,3.026,1013,3.475,1014,3.026,1015,3.475,1016,3.475,1048,5.208]],["title/classes/File.html",[5,0.038,22,0.208]],["body/classes/File.html",[3,0.047,4,0.04,5,0.055,9,0.178,10,0.009,21,0.08,22,0.23,27,0.003,28,0.005,29,0.003,33,0.948,35,0.364,41,0.553,45,0.696,56,1.09,63,0.927,64,3.735,72,2.64,82,1.993,113,2.307,149,1.336,170,2.852,251,2.547,258,3.497,271,0.529,273,3.563,275,1.21,277,3.048,280,1.924,284,4.41,285,2.456,286,3.048,287,3.563,289,2.724,293,0.725,294,2.409,295,3.116,296,3.619,298,3.639,299,4.644,300,2.976,302,1.844,306,2.467,308,4.726,316,4.948,321,2.317,322,1.648,323,2.193,324,1.498,325,5.058,326,2.547,327,2.086,344,2.086,350,3.116,351,2.851,355,3.55,364,1.993,397,2.467,399,2.467,400,2.467,401,2.467,846,2.461,937,2.884,1030,3.92,1049,2.654,1050,4.918,1051,4.41,1052,2.762,1053,3.414,1054,3.414,1055,3.414,1056,3.286,1057,3.286,1058,4.339,1059,3.286,1060,3.729,1061,4.41,1062,2.905,1063,3.286,1064,3.286,1065,3.286,1066,3.286,1067,3.286,1068,3.286,1069,3.286,1070,3.286,1071,3.286,1072,2.905,1073,2.905,1074,3.286,1075,2.905,1076,2.467,1077,2.905,1078,2.467,1079,2.905,1080,3.286,1081,4.908,1082,3.286,1083,3.286,1084,2.905,1085,2.905,1086,3.286,1087,2.905,1088,3.286,1089,3.286]],["title/classes/FileDto.html",[22,0.208,1050,3.133]],["body/classes/FileDto.html",[3,0.07,4,0.06,5,0.041,9,0.178,10,0.009,21,0.08,22,0.304,27,0.005,28,0.006,29,0.005,35,0.542,41,0.593,45,0.729,271,0.788,275,1.604,277,3.792,280,2.157,285,3.054,286,3.792,289,3.255,293,0.825,294,1.514,302,2.444,322,2.455,323,3.267,324,2.232,355,4.043,432,4.876,846,3.263,937,3.234,1050,4.588,1051,5.486,1052,3.435,1053,4.247,1054,4.247,1055,4.247,1060,4.639,1061,4.885,1073,4.329,1090,4.329,1091,4.897,1092,4.897,1093,4.897,1094,4.897,1095,4.897,1096,4.897,1097,4.897,1098,4.897,1099,4.897,1100,4.897]],["title/classes/FileNotDeletable.html",[22,0.208,852,2.694]],["body/classes/FileNotDeletable.html",[3,0.075,4,0.065,5,0.058,9,0.127,10,0.009,12,0.661,21,0.135,22,0.387,27,0.005,28,0.006,29,0.005,33,1.64,35,0.58,41,0.351,61,1.443,121,1.565,271,0.843,280,1.545,293,0.519,404,2.842,407,3.537,408,3.156,410,2.188,411,3.099,424,2.924,425,2.816,426,2.924,586,2.716,745,2.625,766,3.951,843,3.323,844,3.493,845,3.692,846,2.625,848,3.692,849,3.692,850,2.816,851,3.175,852,4.123,853,3.692,854,3.692,855,2.924,856,3.042,857,3.692,858,3.323,859,3.493,860,3.692,861,4.537,862,2.072,863,3.692,864,3.692,865,3.692,866,3.493,867,3.692,868,3.493,869,3.323,870,3.692,871,3.692,1101,5.235]],["title/classes/FileNotFound.html",[22,0.208,856,2.582]],["body/classes/FileNotFound.html",[3,0.075,4,0.065,5,0.058,9,0.127,10,0.009,12,0.661,21,0.135,22,0.387,27,0.005,28,0.006,29,0.005,33,1.64,35,0.58,41,0.351,61,1.443,121,1.565,271,0.843,280,1.545,293,0.519,404,2.842,407,3.341,408,3.341,410,2.188,411,3.099,424,2.924,425,2.816,426,2.924,586,2.716,745,2.625,766,3.951,843,3.323,844,3.493,845,3.692,846,2.625,848,3.692,849,3.692,850,2.816,851,3.175,852,3.175,853,3.692,854,3.692,855,2.924,856,3.951,857,3.692,858,3.323,859,3.493,860,3.692,861,4.537,862,2.072,863,3.692,864,3.692,865,3.692,866,3.493,867,3.692,868,3.493,869,3.323,870,3.692,871,3.692,1102,5.235]],["title/classes/FileTooLarge.html",[22,0.208,1103,2.582]],["body/classes/FileTooLarge.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,43,1.376,44,0.802,45,0.56,46,1.178,121,1.603,271,0.841,293,0.747,850,2.808,999,3.459,1052,3.19,1103,3.944,1104,3.315,1105,5.032,1106,4.529,1107,5.222,1108,4.529,1109,3.484,1110,3.484,1111,3.034,1112,3.484,1113,3.293,1114,3.034,1115,5.032,1116,5.032,1117,3.484,1118,3.034,1119,3.034,1120,3.484,1121,3.034,1122,3.484,1123,3.484,1124,3.484]],["title/controllers/FilesController.html",[0,1.966,1125,3.336]],["body/controllers/FilesController.html",[0,1.172,2,1.172,3,0.038,4,0.033,5,0.049,7,1.606,9,0.2,10,0.009,11,1.682,12,0.335,21,0.043,22,0.124,24,2.1,25,2.377,27,0.002,28,0.004,29,0.002,34,1.539,35,0.293,36,1.2,37,1.983,41,0.391,43,1.535,44,0.895,45,0.481,46,1.314,48,1.68,49,1.961,54,2.204,56,1.932,57,3.534,60,1.841,61,1.417,63,1.449,64,1.107,70,5.426,71,3.885,78,1.539,81,2.666,121,0.5,137,3.429,145,2.324,146,1.425,155,1.374,231,1.479,232,1.989,251,4.118,258,2.086,280,2.43,285,3.442,293,0.864,294,1.8,302,0.995,330,1.539,331,1.868,332,1.682,355,3.259,419,2.92,441,1.606,443,3.116,451,3.124,458,1.989,461,2.776,462,2.493,463,1.768,464,1.989,465,1.768,474,1.682,475,1.868,476,1.868,477,1.868,479,1.868,487,3.858,490,2.14,492,3.858,494,2.14,518,1.374,698,1.868,856,2.418,861,3.429,937,3.109,968,1.682,1050,1.868,1052,1.245,1053,3.678,1054,2.418,1055,1.539,1072,2.342,1113,2.825,1125,3.124,1126,2.342,1127,5.139,1128,2.649,1129,2.649,1130,2.649,1131,2.649,1132,2.649,1133,2.649,1134,4.371,1135,2.649,1136,2.649,1137,2.649,1138,5.823,1139,2.649,1140,2.649,1141,5.139,1142,2.342,1143,2.418,1144,2.342,1145,2.342,1146,2.649,1147,3.361,1148,2.649,1149,1.989,1150,2.342,1151,2.418,1152,2.342,1153,2.418,1154,2.14,1155,2.523,1156,2.14,1157,2.649,1158,1.868,1159,5.139,1160,2.649,1161,2.649,1162,2.649,1163,2.649,1164,2.649,1165,2.649,1166,4.161,1167,2.649,1168,2.649,1169,4.161,1170,2.649,1171,2.649,1172,2.342,1173,1.989,1174,2.649,1175,2.14,1176,2.649,1177,2.649,1178,2.649,1179,2.649,1180,2.649,1181,2.342,1182,2.649,1183,2.649,1184,2.649,1185,2.649,1186,2.649,1187,2.649,1188,2.649,1189,2.342,1190,2.342,1191,1.989,1192,1.989,1193,2.649,1194,2.342,1195,2.649,1196,2.649,1197,2.649,1198,2.342,1199,2.342,1200,2.342,1201,2.649,1202,2.649]],["title/modules/FilesModule.html",[83,1.253,131,2.694]],["body/modules/FilesModule.html",[2,2.701,3,0.064,4,0.055,5,0.052,9,0.211,10,0.009,12,0.562,21,0.072,22,0.208,27,0.004,28,0.006,29,0.004,44,0.938,83,1.964,85,2.093,86,2.161,87,2.311,88,2.311,89,2.311,90,3.613,91,3.613,95,3.167,96,1.763,97,2.311,131,5.31,132,3.874,139,3.408,145,4.382,146,2.395,148,2.972,149,1.811,156,3.343,164,3.597,206,3.597,229,3.282,230,3.874,231,3.408,238,3.343,266,3.597,267,3.597,293,0.441,326,2.311,505,3.14,836,2.7,980,2.972,983,2.827,1078,4.582,1113,2.161,1125,5.227,1143,5.131,1144,3.937,1203,3.937,1204,3.937,1205,3.937,1206,3.937,1207,5.236,1208,5.715,1209,4.453,1210,5.396,1211,4.582,1212,4.453,1213,4.453,1214,3.937,1215,3.937,1216,3.937,1217,4.453,1218,3.937,1219,3.343,1220,3.937]],["title/injectables/FilesProcessor.html",[30,1.311,1208,3.133]],["body/injectables/FilesProcessor.html",[3,0.078,4,0.067,5,0.046,9,0.204,10,0.009,12,0.687,21,0.088,22,0.254,23,2.638,24,1.804,27,0.005,28,0.006,29,0.005,30,2.057,31,2.479,35,0.602,36,2.01,37,2.269,41,0.468,43,1.837,44,1.07,45,0.575,46,1.572,48,1.569,49,1.878,54,2.427,107,3.297,121,1.027,155,3.615,294,1.681,836,3.297,943,4.082,1155,4.917,1156,4.392,1208,4.913,1221,4.808,1222,6.968,1223,5.438,1224,5.438,1225,6.968,1226,7.411,1227,5.438,1228,5.438,1229,4.082,1230,4.808,1231,5.438,1232,5.438,1233,5.438,1234,5.438,1235,5.438,1236,4.808]],["title/injectables/FilesService.html",[30,1.311,1143,2.582]],["body/injectables/FilesService.html",[3,0.04,4,0.035,5,0.065,9,0.186,10,0.009,12,0.357,21,0.046,22,0.132,24,1.776,25,2.011,27,0.003,28,0.004,29,0.003,30,1.291,31,1.287,35,0.313,36,1.262,37,2.521,41,0.483,43,1.896,44,1.105,45,0.655,46,1.624,48,1.99,49,2.173,54,2.658,56,2,60,2.886,61,1.902,63,1.839,107,1.712,121,0.826,149,1.148,229,1.519,258,1.416,280,1.58,285,2.883,293,0.683,302,2.011,324,1.287,338,3.852,348,1.641,355,2.122,382,2.281,412,1.327,441,3.246,442,2.652,443,3.246,462,2.122,482,3.084,508,3.572,510,4.251,512,2.281,513,3.655,515,3.283,516,5.934,518,3.579,519,3.283,521,3.283,523,3.084,527,2.281,529,1.991,831,4.869,832,4.733,835,2.281,836,1.712,840,2.497,852,2.652,856,3.111,937,3.45,946,3.867,1051,3.283,1052,2.056,1053,2.542,1054,2.542,1055,1.641,1113,2.925,1142,2.497,1143,2.542,1151,3.111,1152,2.497,1153,3.79,1154,2.281,1158,3.084,1198,3.867,1199,2.497,1200,3.867,1211,2.12,1214,2.497,1237,2.497,1238,2.824,1239,2.824,1240,2.824,1241,2.824,1242,2.824,1243,2.824,1244,2.824,1245,2.824,1246,2.497,1247,2.824,1248,2.824,1249,2.824,1250,2.824,1251,2.824,1252,2.824,1253,2.824,1254,6.521,1255,2.281,1256,3.867,1257,3.867,1258,2.824,1259,2.497,1260,2.824,1261,2.497,1262,2.824,1263,2.824,1264,2.824,1265,4.374,1266,4.374,1267,5.353,1268,2.824,1269,2.824,1270,2.497,1271,2.824,1272,2.824,1273,2.824,1274,2.824,1275,2.824,1276,2.824,1277,2.824,1278,2.824]],["title/classes/Folder.html",[22,0.208,937,1.966]],["body/classes/Folder.html",[3,0.049,4,0.042,5,0.029,9,0.173,10,0.009,21,0.082,22,0.237,27,0.003,28,0.005,29,0.003,33,0.98,35,0.38,41,0.541,44,0.927,45,0.686,56,1.14,63,1.43,64,3.66,72,3.582,82,3.076,113,2.384,149,1.397,251,2.632,258,3.563,271,0.553,273,3.657,275,1.251,277,3.129,280,2.097,284,4.528,285,2.521,286,3.129,287,2.083,289,2.784,293,0.736,294,2.299,295,3.22,296,3.687,298,3.719,299,4.72,300,3.076,302,1.905,306,2.579,308,4.039,316,5.012,321,2.422,322,1.722,323,2.292,324,1.566,325,4.883,326,2.632,327,2.181,335,1.918,336,2.083,344,2.181,350,3.22,351,2.461,355,3.232,359,2.292,360,2.292,362,2.775,363,2.422,364,3.076,397,4.528,399,2.579,400,2.579,401,2.579,653,2.579,936,4.528,937,3.404,1030,3.385,1053,3.505,1054,3.505,1058,4.485,1060,4.51,1061,4.528,1062,3.037,1075,3.037,1076,2.579,1084,3.037,1085,3.037,1087,3.037,1279,2.775,1280,3.435,1281,3.435,1282,3.435,1283,3.435,1284,3.435,1285,3.435,1286,3.435,1287,3.435,1288,3.435,1289,3.037,1290,2.579,1291,3.037,1292,3.435,1293,5.073,1294,3.435,1295,3.435,1296,3.435,1297,3.435,1298,3.435,1299,3.435]],["title/classes/FolderAlreadyExists.html",[22,0.208,1300,2.965]],["body/classes/FolderAlreadyExists.html",[3,0.084,4,0.072,5,0.05,9,0.142,10,0.009,12,0.74,21,0.129,22,0.372,27,0.005,28,0.007,29,0.005,33,1.61,41,0.393,43,1.544,44,1.223,45,0.484,46,1.322,121,1.503,271,0.943,293,0.788,404,3.326,405,4.429,408,3.326,410,2.449,411,2.671,415,3.433,937,2.593,1151,3.405,1300,4.873,1301,4.398,1302,5.859,1303,4.732,1304,4.732,1305,3.909,1306,4.732]],["title/classes/FolderDto.html",[22,0.208,1060,2.82]],["body/classes/FolderDto.html",[3,0.074,4,0.064,5,0.044,9,0.164,10,0.009,21,0.084,22,0.316,27,0.005,28,0.006,29,0.005,35,0.575,41,0.587,44,1.156,45,0.722,271,0.836,275,1.668,277,3.903,280,2.22,285,3.144,286,3.903,289,3.33,293,0.839,294,1.606,302,2.541,322,2.604,323,3.466,324,2.368,355,3.866,432,5.019,936,5.647,1053,4.371,1054,4.371,1060,5.058,1061,5.078,1307,4.592,1308,5.194,1309,5.194,1310,5.194,1311,5.194,1312,5.194,1313,5.194,1314,5.194,1315,5.194]],["title/classes/FolderNotFound.html",[22,0.208,1151,2.582]],["body/classes/FolderNotFound.html",[3,0.086,4,0.074,5,0.051,9,0.146,10,0.009,12,0.758,21,0.131,22,0.376,27,0.006,28,0.007,29,0.006,33,1.623,41,0.403,44,0.922,121,1.587,271,0.966,293,0.594,404,3.099,405,3.639,408,3.512,410,2.508,411,2.736,415,3.485,937,2.656,1151,4.308,1300,4.005,1301,4.506,1303,4.848,1304,4.848,1305,4.005,1306,4.848,1316,6.002]],["title/controllers/FoldersController.html",[0,1.966,1317,3.336]],["body/controllers/FoldersController.html",[0,1.685,2,1.685,3,0.054,4,0.047,5,0.032,7,2.309,9,0.193,10,0.009,11,2.417,12,0.481,21,0.062,22,0.178,23,1.847,24,1.263,27,0.004,28,0.005,29,0.004,34,2.213,35,0.422,36,1.577,37,2.275,41,0.469,43,1.843,44,1.074,45,0.577,46,1.578,48,2.017,49,2.19,54,1.326,56,1.263,60,1.685,61,1.05,63,1.972,280,2.535,285,3.621,293,0.894,294,2.161,441,3.315,442,3.315,443,3.879,446,3.366,451,5.249,452,3.366,453,3.366,458,2.858,459,3.366,461,3.648,462,1.847,463,2.54,464,2.858,465,4.269,469,3.366,474,2.417,475,2.685,476,2.685,477,2.685,479,2.685,487,4.104,490,3.075,491,3.366,492,4.802,494,3.075,508,3.648,933,5.961,937,2.419,1060,2.417,1151,3.177,1153,3.177,1158,3.855,1255,3.075,1256,3.366,1289,3.366,1317,4.104,1318,3.366,1319,3.807,1320,3.807,1321,3.807,1322,3.807,1323,3.807,1324,3.807,1325,3.366,1326,3.366,1327,3.807,1328,3.807,1329,3.807,1330,3.807,1331,3.807,1332,6.992,1333,3.807,1334,3.807,1335,3.807,1336,3.807,1337,3.807]],["title/modules/FoldersModule.html",[83,1.253,132,2.82]],["body/modules/FoldersModule.html",[2,3.062,3,0.077,4,0.066,5,0.045,9,0.208,10,0.009,12,0.679,21,0.087,22,0.252,27,0.005,28,0.006,29,0.005,44,0.826,83,2.157,85,2.528,86,2.61,87,2.791,88,2.791,89,2.791,90,3.969,91,3.969,95,3.59,96,2.129,97,2.791,131,4.195,132,5.521,139,3.003,148,3.589,149,2.187,163,4.038,326,2.791,505,3.793,937,2.38,1076,4.038,1153,5.281,1211,5.194,1290,5.194,1317,5.742,1326,4.755,1338,4.755,1339,4.755,1340,4.755,1341,5.379,1342,5.379,1343,4.755]],["title/injectables/FoldersService.html",[30,1.311,1153,2.582]],["body/injectables/FoldersService.html",[3,0.042,4,0.037,5,0.025,9,0.171,10,0.009,12,0.374,21,0.048,22,0.139,24,1.507,25,1.705,27,0.003,28,0.004,29,0.003,30,1.34,31,1.351,35,0.328,36,1.31,37,2.582,41,0.507,43,1.99,44,1.252,45,0.673,46,1.704,48,2.112,49,2.249,54,2.55,56,2.212,60,2.95,61,1.939,63,1.983,121,0.858,149,1.205,229,1.594,280,1.34,285,3.156,293,0.725,302,2.073,324,1.351,338,3.723,348,1.723,411,2.819,441,3.346,442,2.753,443,3.346,462,2.203,482,3.202,508,3.682,510,4.361,512,2.394,513,3.75,515,3.408,516,6.107,518,3.798,519,3.408,521,3.408,523,3.202,527,2.394,529,2.09,545,4.879,936,6.033,937,3.112,1076,2.225,1113,2.203,1143,3.875,1151,3.207,1153,2.639,1158,3.891,1189,2.621,1211,2.225,1246,2.621,1255,2.394,1257,2.621,1270,4.014,1300,1.978,1305,3.682,1325,2.621,1343,2.621,1344,2.621,1345,2.964,1346,2.964,1347,2.964,1348,2.964,1349,2.964,1350,4.014,1351,2.964,1352,2.964,1353,2.964,1354,2.964,1355,2.394,1356,2.964,1357,6.667,1358,4.54,1359,4.54,1360,2.964,1361,2.964,1362,5.518,1363,2.621,1364,4.54,1365,2.964,1366,2.964,1367,2.964,1368,2.964,1369,2.964]],["title/classes/ForgotPasswordDto.html",[22,0.208,579,3.336]],["body/classes/ForgotPasswordDto.html",[3,0.086,4,0.074,5,0.051,9,0.181,10,0.009,21,0.098,22,0.347,27,0.006,28,0.007,29,0.006,35,0.667,41,0.404,235,2.383,271,0.969,275,1.831,294,1.861,320,3.019,579,5.576,625,4.519,636,3.678,911,4.499,926,4.317,928,4.317,929,3.362,950,4.245,1033,5.681,1370,6.567,1371,4.863,1372,6,1373,5.576,1374,4.863,1375,6.02,1376,6.02]],["title/classes/GenerateApplicationKeyDto.html",[22,0.208,471,3.336]],["body/classes/GenerateApplicationKeyDto.html",[3,0.095,4,0.082,5,0.056,10,0.008,21,0.108,22,0.31,27,0.006,28,0.007,29,0.006,35,0.734,41,0.445,45,0.547,270,4.397,271,1.067,275,1.941,281,4.358,293,0.78,471,5.911,1377,6.961,1378,5.86,1379,6.629]],["title/classes/GoogleCloudEngine.html",[22,0.208,1380,3.133]],["body/classes/GoogleCloudEngine.html",[3,0.065,4,0.056,5,0.038,9,0.171,10,0.009,21,0.1,22,0.212,23,2.196,24,2.502,25,2.637,27,0.004,28,0.006,29,0.004,33,0.874,35,0.501,36,1.78,37,2.072,41,0.53,43,1.988,44,1.159,45,0.622,46,1.702,48,2.025,49,1.663,54,1.576,56,1.502,61,1.248,63,1.74,113,2.9,121,0.855,155,3.201,271,0.729,275,1.521,280,2.072,293,0.862,351,2.196,462,2.994,551,1.166,560,3.586,563,2.9,881,2.63,954,4.257,957,4.984,958,4.984,959,3.397,966,4.351,968,4.457,969,4.351,971,4.117,974,4.685,975,2.744,976,3.019,977,3.191,1380,4.351,1381,6.114,1382,3.397,1383,6.207,1384,5.318,1385,4.525,1386,5.455,1387,4.525,1388,4.525,1389,4.525,1390,4.525,1391,3.655,1392,3.655,1393,3.397,1394,4.001,1395,4.001,1396,4.001,1397,4.001]],["title/interfaces/GoogleCloudEngineOptions.html",[551,1.145,1384,3.133]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.078,4,0.067,5,0.046,9,0.187,10,0.009,21,0.113,22,0.255,23,2.646,24,2.316,25,2.048,27,0.005,28,0.006,29,0.005,33,1.349,35,0.604,37,1.609,45,0.45,49,1.47,54,1.9,56,1.809,61,1.503,63,1.968,113,2.563,155,3.622,275,1.721,293,0.85,551,1.406,553,2.279,560,4.474,563,2.563,954,4.233,966,3.845,968,4.431,969,3.845,971,3.639,974,4.657,975,3.307,976,3.639,977,3.845,1380,3.845,1381,4.094,1382,4.094,1383,4.821,1384,5.429,1386,4.821,1391,4.405,1392,4.405,1393,4.094,1394,7.176,1395,4.821,1396,4.821,1397,4.821]],["title/controllers/HealthController.html",[0,1.966,1398,3.336]],["body/controllers/HealthController.html",[0,2.222,2,2.222,3,0.072,4,0.062,5,0.042,7,3.045,9,0.191,10,0.009,12,0.634,21,0.082,22,0.235,24,2.785,25,3.152,27,0.005,28,0.006,29,0.005,35,0.556,36,1.909,41,0.337,48,1.449,49,2.262,63,1.416,118,5.218,121,0.949,145,3.695,146,2.701,186,5.344,231,2.804,294,1.552,983,3.188,1398,4.967,1399,4.44,1400,6.616,1401,7.865,1402,5.022,1403,5.022,1404,6.616,1405,6.616,1406,6.616,1407,5.022,1408,6.616,1409,5.022,1410,6.616,1411,6.616,1412,4.056,1413,5.022,1414,5.022,1415,5.022,1416,5.022,1417,5.022,1418,5.022,1419,5.022,1420,5.022,1421,5.022,1422,5.022,1423,5.022,1424,5.022,1425,5.022,1426,5.022,1427,5.022,1428,5.022]],["title/modules/HealthModule.html",[83,1.253,133,3.133]],["body/modules/HealthModule.html",[2,3.443,3,0.093,4,0.08,5,0.055,9,0.203,10,0.009,12,0.821,21,0.106,22,0.304,27,0.006,28,0.007,29,0.006,83,2.194,85,3.054,133,5.486,139,3.628,1398,6.252,1412,5.248,1429,6.497,1430,7.78,1431,6.497]],["title/interfaces/IRequest.html",[51,2.82,551,1.145]],["body/interfaces/IRequest.html",[3,0.085,4,0.073,5,0.05,9,0.195,10,0.009,21,0.097,27,0.006,28,0.007,29,0.006,33,1.427,35,0.661,45,0.492,46,1.667,51,4.689,78,3.467,235,3.475,275,1.821,281,3.095,293,0.591,302,3.013,419,4.023,551,1.538,553,2.493,586,4.35,591,5.274,625,4.478,1432,5.274,1433,5.208,1434,5.965]],["title/interfaces/ISession.html",[551,1.145,1435,3.336]],["body/interfaces/ISession.html",[3,0.089,4,0.077,5,0.053,9,0.151,10,0.008,21,0.101,27,0.006,28,0.007,29,0.006,35,0.688,45,0.674,275,1.867,289,3.413,293,0.809,551,1.601,553,2.596,586,4.523,587,5.673,624,5.016,1031,5.995,1435,5.683,1436,5.49,1437,8.502]],["title/interfaces/ISessionData.html",[551,1.145,587,2.965]],["body/interfaces/ISessionData.html",[3,0.081,4,0.07,5,0.048,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,33,1.096,35,0.628,45,0.726,275,1.765,282,5.495,285,3.442,289,3.277,293,0.89,302,2.945,513,4.34,551,1.462,553,2.371,587,4.776,604,5.228,606,6.182,658,4.259,660,4.582,662,4.259,1438,5.016,1439,5.016,1440,6.652,1441,5.673,1442,5.016,1443,5.016,1444,5.016]],["title/interfaces/IncomingFile.html",[551,1.145,1445,2.965]],["body/interfaces/IncomingFile.html",[3,0.088,4,0.076,5,0.052,10,0.008,21,0.1,27,0.006,28,0.007,29,0.006,35,0.679,45,0.699,275,1.852,293,0.916,551,1.581,553,2.563,1052,3.979,1445,5.013,1446,5.422,1447,4.954,1448,7.484,1449,7.484,1450,6.838]],["title/classes/IncorrectPassword.html",[22,0.208,1451,2.582]],["body/classes/IncorrectPassword.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,4.016,96,2.067,121,1.654,235,2.067,271,0.841,407,3.003,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,2.916,701,3.034,742,3.315,744,3.166,745,2.618,781,3.034,782,3.034,783,3.034,795,3.315,806,3.753,862,2.686,999,3.152,1010,3.522,1011,3.522,1451,3.944,1452,3.315,1453,5.222,1454,3.484,1455,3.484,1456,3.484,1457,3.484]],["title/classes/InsufficientScopes.html",[22,0.208,416,2.694]],["body/classes/InsufficientScopes.html",[3,0.078,4,0.067,5,0.046,9,0.132,10,0.009,12,0.687,21,0.136,22,0.392,27,0.005,28,0.006,29,0.005,33,1.657,41,0.365,44,0.835,50,3.381,121,1.62,271,0.876,281,2.822,283,2.924,293,0.539,371,3.452,402,3.297,403,3.628,404,2.912,405,3.297,407,3.588,408,2.912,409,3.835,410,2.273,411,2.479,412,2.556,413,3.297,414,4.913,415,2.556,416,4.225,417,3.628,418,3.628,419,2.727,420,3.297,421,2.406,422,3.297,423,2.924,424,3.037,425,2.924,426,3.037,427,3.037,428,3.835,1458,5.438]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.208,1459,3.589]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.076,4,0.065,5,0.045,9,0.167,10,0.009,12,0.668,21,0.086,22,0.247,23,2.567,24,1.756,27,0.005,28,0.006,29,0.005,35,0.586,36,1.975,41,0.46,43,1.805,44,1.052,45,0.565,46,1.545,48,1.527,56,2.272,70,4.274,71,3.531,78,3.075,81,2.746,104,4.152,113,3.218,121,1,137,4.568,238,5.698,271,0.852,698,5.659,710,3.359,714,5.064,851,4.602,862,2.094,911,2.955,1172,4.678,1459,5.53,1460,6.71,1461,4.678,1462,7.59,1463,5.292,1464,8.025,1465,5.292,1466,6.846,1467,8.025,1468,5.292,1469,5.292,1470,5.292,1471,6.846,1472,5.292,1473,5.292,1474,5.292,1475,5.292,1476,4.274,1477,4.678]],["title/classes/InvalidAPIKey.html",[22,0.208,420,2.694]],["body/classes/InvalidAPIKey.html",[3,0.078,4,0.067,5,0.046,9,0.132,10,0.009,12,0.687,21,0.136,22,0.392,27,0.005,28,0.006,29,0.005,33,1.657,41,0.365,44,0.835,50,3.73,121,1.62,271,0.876,281,2.822,283,2.924,293,0.539,371,3.452,402,3.297,403,3.628,404,2.912,405,3.297,407,3.402,408,2.912,409,3.835,410,2.273,411,2.479,412,2.556,413,3.297,414,4.913,415,2.556,416,3.297,417,3.628,418,3.628,419,2.727,420,4.225,421,2.406,422,3.297,423,2.924,424,3.037,425,2.924,426,3.037,427,3.037,428,3.835,1478,5.438]],["title/classes/InvalidAvatarFileType.html",[22,0.208,1004,2.582]],["body/classes/InvalidAvatarFileType.html",[3,0.074,4,0.064,5,0.057,9,0.127,10,0.009,12,0.658,21,0.138,22,0.396,27,0.005,28,0.006,29,0.005,33,1.668,41,0.35,44,0.8,45,0.43,68,4.377,121,1.631,271,0.839,293,0.516,380,2.374,404,3.334,408,2.832,410,3.148,415,2.448,421,2.998,518,2.702,636,2.177,806,2.448,862,2.061,996,3.026,997,3.306,999,2.832,1000,5.025,1001,3.475,1002,3.026,1003,3.475,1004,3.938,1005,2.908,1006,3.475,1007,3.306,1008,3.026,1009,3.158,1010,2.702,1011,2.702,1012,3.026,1013,3.475,1014,3.026,1015,3.475,1016,3.475,1479,5.208]],["title/classes/InvalidCredentials.html",[22,0.208,781,2.582]],["body/classes/InvalidCredentials.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,4.016,96,2.067,121,1.654,235,2.067,271,0.841,407,3.003,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,2.916,701,3.034,742,3.315,744,3.166,745,2.618,781,3.944,782,3.034,783,3.034,795,3.315,806,3.753,862,2.686,999,3.152,1010,3.522,1011,3.522,1451,3.034,1452,3.315,1454,3.484,1455,3.484,1456,3.484,1457,3.484,1480,5.222]],["title/classes/InvalidEmailConfirmationToken.html",[22,0.208,1008,2.582]],["body/classes/InvalidEmailConfirmationToken.html",[3,0.074,4,0.064,5,0.057,9,0.127,10,0.009,12,0.658,21,0.138,22,0.396,27,0.005,28,0.006,29,0.005,33,1.668,41,0.35,44,0.8,45,0.43,68,4.377,121,1.631,271,0.839,293,0.516,380,2.374,404,3.334,408,2.832,410,3.148,415,2.448,421,2.998,518,2.702,636,2.177,806,2.448,862,2.061,996,3.026,997,3.306,999,3.148,1000,4.521,1001,3.475,1002,3.026,1003,3.475,1004,3.026,1005,2.908,1006,3.475,1007,3.306,1008,3.938,1009,3.158,1010,2.702,1011,2.702,1012,3.026,1013,3.475,1014,3.026,1015,3.475,1016,3.475,1481,5.208]],["title/classes/InvalidPasswordResetLink.html",[22,0.208,782,2.582]],["body/classes/InvalidPasswordResetLink.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,3.874,96,2.067,121,1.654,235,2.067,271,0.841,407,3.003,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,2.916,701,3.034,742,3.315,744,3.166,745,2.618,781,3.034,782,3.944,783,3.034,795,3.315,806,3.753,862,2.686,999,3.337,1010,3.522,1011,3.522,1451,3.034,1452,3.315,1454,3.484,1455,3.484,1456,3.484,1457,3.484,1482,5.222]],["title/classes/InvalidUserActivationLink.html",[22,0.208,783,2.582]],["body/classes/InvalidUserActivationLink.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,3.874,96,2.067,121,1.654,235,2.067,271,0.841,407,3.003,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,2.916,701,3.034,742,3.315,744,3.166,745,2.618,781,3.034,782,3.034,783,3.944,795,3.315,806,3.753,862,2.686,999,3.337,1010,3.522,1011,3.522,1451,3.034,1452,3.315,1454,3.484,1455,3.484,1456,3.484,1457,3.484,1483,5.222]],["title/classes/LoginDto.html",[22,0.208,584,3.336]],["body/classes/LoginDto.html",[3,0.081,4,0.07,5,0.048,9,0.139,10,0.009,21,0.093,22,0.336,27,0.005,28,0.007,29,0.005,35,0.632,41,0.528,45,0.649,271,0.919,275,1.771,293,0.86,294,2.43,320,2.861,581,3.555,584,5.393,647,4.943,908,4.56,911,4.012,926,4.796,928,4.796,929,4.012,950,5.066,1484,5.045,1485,5.902,1486,5.706,1487,5.045,1488,5.706,1489,5.706]],["title/modules/MailerModule.html",[83,1.253,134,3.133]],["body/modules/MailerModule.html",[3,0.048,4,0.041,5,0.028,9,0.195,10,0.009,12,0.421,21,0.054,22,0.156,25,2.636,27,0.003,28,0.005,29,0.003,36,0.962,37,1.465,41,0.441,43,1.731,44,1.078,45,0.542,46,1.482,48,1.894,49,0.899,63,2.075,83,2.208,85,1.568,86,1.619,87,1.731,88,1.731,89,1.731,90,3.642,91,3.076,95,2.576,96,1.32,97,1.731,134,5.827,139,2.772,145,3.31,146,1.794,156,2.504,206,2.695,229,3.188,230,3.763,231,1.863,238,2.504,266,2.695,267,2.695,268,5.943,269,2.352,280,0.985,363,3.5,561,2.885,563,3.458,572,2.504,765,5.311,836,2.023,900,1.794,1210,4.389,1216,2.949,1490,2.949,1491,2.949,1492,2.949,1493,5.188,1494,3.336,1495,7.073,1496,2.949,1497,4.389,1498,6.113,1499,3.336,1500,6.205,1501,2.949,1502,4.389,1503,3.336,1504,4.389,1505,4.168,1506,3.336,1507,6.205,1508,2.949,1509,4.389,1510,3.336,1511,4.788,1512,4.929,1513,2.949,1514,3.336,1515,3.336,1516,5.241,1517,3.5,1518,2.949,1519,3.336,1520,5.241,1521,2.949,1522,2.949,1523,4.389,1524,5.241,1525,4.389,1526,5.241,1527,2.949,1528,2.949,1529,3.336]],["title/interfaces/MailerModuleAsyncOptions.html",[551,1.145,1498,3.336]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.079,4,0.068,5,0.047,9,0.188,10,0.009,21,0.09,27,0.005,28,0.006,29,0.005,33,1.358,35,0.611,37,1.628,45,0.748,46,1.998,49,1.486,83,2.182,229,4.383,230,5.173,269,5.747,275,1.733,287,4.263,551,1.421,553,2.305,555,3.5,556,6.215,557,7.205,558,4.875,559,4.875,561,3.204,563,2.592,565,4.875,771,5.277,1498,5.277,1505,4.462,1517,3.888,1518,4.875,1530,4.139]],["title/interfaces/MailerOptions.html",[551,1.145,1505,2.82]],["body/interfaces/MailerOptions.html",[3,0.094,4,0.081,5,0.056,9,0.161,10,0.008,21,0.107,27,0.006,28,0.007,29,0.006,33,1.276,72,3.553,83,1.863,551,2.025,553,2.761,555,4.194,929,3.689,1505,4.988,1530,4.959,1531,6.606,1532,6.606,1533,6.606,1534,6.606,1535,6.606,1536,6.606,1537,5.841,1538,6.606,1539,6.606]],["title/interfaces/MailerOptionsFactory.html",[551,1.145,1517,3.133]],["body/interfaces/MailerOptionsFactory.html",[3,0.09,4,0.078,5,0.054,9,0.154,10,0.008,21,0.103,27,0.006,28,0.007,29,0.006,35,0.701,36,2.209,41,0.425,48,1.826,49,2.065,83,2.322,551,1.632,553,2.646,561,3.679,563,3.6,771,4.752,1505,5.228,1517,5.401,1530,5.75,1540,5.596,1541,8.558,1542,6.33]],["title/injectables/MailerProcessor.html",[30,1.311,1493,3.133]],["body/injectables/MailerProcessor.html",[3,0.067,4,0.057,5,0.039,9,0.204,10,0.009,12,0.589,21,0.076,22,0.218,24,2.534,25,2.868,27,0.004,28,0.006,29,0.004,30,1.859,31,2.126,35,0.517,36,1.817,37,2.425,41,0.513,43,1.66,44,0.968,45,0.52,46,1.421,48,1.817,49,2.058,54,2.484,83,1.315,107,2.828,113,2.193,121,0.881,229,2.509,275,1.553,294,1.442,351,2.263,561,3.66,563,2.961,836,2.828,838,5.088,881,2.711,959,3.502,1226,7.05,1229,3.502,1230,4.124,1236,4.124,1493,4.442,1505,4.847,1512,3.502,1513,4.124,1516,4.124,1543,4.124,1544,7.131,1545,7.265,1546,5.569,1547,4.665,1548,4.665,1549,6.299,1550,4.665,1551,4.665,1552,6.299,1553,5.569,1554,4.665,1555,3.112,1556,4.124,1557,3.502,1558,4.665,1559,4.665,1560,4.665,1561,4.665,1562,4.665]],["title/injectables/MailerService.html",[30,1.311,765,2.82]],["body/injectables/MailerService.html",[3,0.054,4,0.047,5,0.032,9,0.198,10,0.009,12,0.482,21,0.062,22,0.178,24,1.817,25,2.056,27,0.004,28,0.005,29,0.004,30,1.616,31,1.739,35,0.422,36,1.579,37,2.345,41,0.497,43,1.953,44,1.138,45,0.612,46,1.672,48,2.019,49,1.886,54,2.231,56,2.322,60,1.688,61,1.052,63,1.806,64,1.594,107,2.313,121,1.034,145,3.908,146,2.051,170,2.217,204,3.081,231,3.057,258,1.913,293,0.832,338,3.908,509,3.081,561,2.217,563,2.573,765,3.475,831,5.652,834,5.662,835,3.081,836,2.313,839,3.372,900,2.051,973,4.11,1018,4.84,1546,4.84,1555,4.669,1556,3.372,1557,2.864,1563,3.372,1564,5.475,1565,5.475,1566,5.475,1567,3.815,1568,5.475,1569,3.815,1570,3.815,1571,5.475,1572,5.662,1573,5.662,1574,3.815,1575,3.081,1576,5.475,1577,3.815,1578,5.475,1579,3.815,1580,4.808,1581,4.84,1582,3.815,1583,3.815,1584,3.815,1585,3.815,1586,2.864,1587,5.475,1588,3.815,1589,3.815,1590,3.815,1591,3.815,1592,3.815,1593,5.475,1594,3.815,1595,3.815,1596,3.815,1597,3.815,1598,5.475,1599,3.815,1600,3.815,1601,3.815,1602,3.815,1603,3.815,1604,3.815]],["title/classes/MaxActiveUploadSessionsError.html",[22,0.208,858,2.82]],["body/classes/MaxActiveUploadSessionsError.html",[3,0.075,4,0.065,5,0.058,9,0.127,10,0.009,12,0.661,21,0.135,22,0.387,27,0.005,28,0.006,29,0.005,33,1.64,35,0.58,41,0.351,61,1.443,121,1.565,271,0.843,280,1.545,293,0.519,404,2.842,407,3.537,408,3.156,410,2.188,411,3.099,424,2.924,425,2.816,426,2.924,586,2.716,745,2.625,766,3.951,843,3.323,844,3.493,845,3.692,846,2.625,848,3.692,849,3.692,850,2.816,851,3.175,852,3.175,853,3.692,854,3.692,855,2.924,856,3.042,857,3.692,858,4.316,859,3.493,860,3.692,861,4.537,862,2.072,863,3.692,864,3.692,865,3.692,866,3.493,867,3.692,868,3.493,869,3.323,870,3.692,871,3.692,1605,5.235]],["title/classes/NoFilesUploaded.html",[22,0.208,1111,2.582]],["body/classes/NoFilesUploaded.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,12,0.674,21,0.139,22,0.399,27,0.005,28,0.006,29,0.005,33,1.677,41,0.358,45,0.44,121,1.64,271,0.859,293,0.528,850,2.869,999,3.566,1052,2.508,1103,3.1,1104,3.386,1105,4.592,1106,3.56,1108,4.592,1109,3.56,1110,3.56,1111,4,1112,3.56,1113,3.339,1114,3.1,1115,5.084,1116,5.084,1117,3.56,1118,3.1,1119,3.1,1120,3.56,1121,3.1,1122,3.56,1123,3.56,1124,3.56,1606,5.335]],["title/classes/ParentFolderNotFound.html",[22,0.208,1305,2.965]],["body/classes/ParentFolderNotFound.html",[3,0.086,4,0.074,5,0.051,9,0.146,10,0.009,12,0.758,21,0.131,22,0.376,27,0.006,28,0.007,29,0.006,33,1.623,41,0.403,44,0.922,121,1.587,271,0.966,293,0.594,404,3.099,405,3.639,408,3.512,410,2.508,411,2.736,415,3.485,937,2.656,1151,3.488,1300,4.005,1301,4.506,1303,4.848,1304,4.848,1305,4.947,1306,4.848,1607,6.002]],["title/classes/PartialUserDto.html",[22,0.208,1608,3.336]],["body/classes/PartialUserDto.html",[3,0.064,4,0.055,5,0.038,8,4.079,9,0.149,10,0.009,21,0.073,22,0.286,27,0.004,28,0.006,29,0.004,33,1.181,35,0.494,41,0.597,45,0.734,76,7.808,271,0.719,275,1.507,277,3.172,280,1.804,286,3.172,289,2.914,293,0.837,294,2.507,302,2.296,322,2.238,355,3.382,432,5.642,581,2.555,636,3.282,647,3.552,804,4.079,855,3.414,949,3.351,1005,3.414,1027,4.079,1608,4.589,1609,5.404,1610,6,1611,4.937,1612,4.464,1613,4.464,1614,4.464,1615,4.464,1616,4.464,1617,4.464,1618,4.464,1619,4.464,1620,4.464,1621,4.464,1622,4.464,1623,4.464,1624,4.464,1625,3.946]],["title/classes/PasswordReset.html",[22,0.208,753,2.965]],["body/classes/PasswordReset.html",[3,0.061,4,0.053,5,0.036,9,0.179,10,0.009,21,0.097,22,0.201,27,0.004,28,0.006,29,0.004,33,1.151,35,0.476,41,0.52,45,0.639,56,1.426,61,1.185,63,1.212,64,3.695,72,3.203,82,2.606,149,1.747,251,2.23,271,0.692,273,4.144,275,1.468,277,3.546,285,2.856,286,3.546,289,3.351,293,0.731,294,2.113,295,3.78,296,3.828,298,4.12,299,4.684,300,3.611,308,3.611,316,4.684,324,1.959,325,4.684,326,3.09,327,2.728,335,2.4,336,2.606,344,2.728,345,2.868,346,3.031,347,3.031,348,2.498,349,3.031,350,3.78,351,2.085,359,2.868,360,2.868,364,2.606,380,3.364,753,3.974,754,3.226,900,3.203,1027,4.56,1030,2.868,1031,4.2,1035,5.96,1039,4.2,1040,3.226,1045,3.471,1046,3.471,1047,3.471,1626,6.475,1627,3.471,1628,4.298,1629,4.298,1630,4.298,1631,4.298,1632,4.298,1633,4.298,1634,3.8,1635,4.298]],["title/guards/RecaptchaGuard.html",[385,3.336,621,3.336]],["body/guards/RecaptchaGuard.html",[3,0.05,4,0.044,5,0.03,9,0.183,10,0.009,12,0.446,21,0.1,22,0.165,24,2.035,25,2.7,27,0.005,28,0.005,29,0.003,30,1.529,35,0.391,36,1.494,37,1.81,38,5.454,39,4.184,40,5.827,41,0.412,43,1.78,44,0.942,45,0.557,46,1.384,47,6.068,48,1.494,49,1.396,54,1.231,56,2.837,57,1.973,58,2.854,60,2.713,61,1.69,63,1.729,71,3.456,78,2.054,81,2.687,113,1.661,121,0.979,143,2.653,145,3.77,146,1.9,231,2.892,251,2.687,281,2.687,293,0.669,340,2.854,364,2.143,419,2.597,461,3.456,465,2.358,509,2.854,603,2.653,604,2.243,621,3.888,656,2.653,681,2.854,683,4.579,687,6.862,689,3.124,691,4.603,698,2.492,710,2.243,736,3.124,737,3.124,862,2.05,999,1.477,1476,2.854,1485,5.639,1586,4.603,1636,2.854,1637,6.752,1638,3.534,1639,3.534,1640,3.534,1641,5.18,1642,3.534,1643,2.854,1644,3.124,1645,2.854,1646,2.854,1647,4.184,1648,3.124,1649,2.854,1650,3.124,1651,2.854,1652,3.124,1653,5.421,1654,3.534,1655,4.579,1656,3.534,1657,3.534,1658,3.534,1659,3.534,1660,3.534,1661,3.534,1662,3.534,1663,3.534,1664,3.534,1665,5.18,1666,3.534,1667,3.534,1668,3.534,1669,3.534,1670,3.534,1671,3.534,1672,3.534,1673,3.534,1674,3.534,1675,3.534,1676,3.534,1677,3.534,1678,3.124,1679,3.534,1680,3.124,1681,3.534,1682,3.534]],["title/classes/RegisterDto.html",[22,0.208,595,3.336]],["body/classes/RegisterDto.html",[3,0.068,4,0.058,5,0.04,9,0.115,10,0.009,21,0.077,22,0.298,27,0.004,28,0.006,29,0.004,35,0.525,41,0.516,45,0.634,271,0.764,275,1.571,293,0.849,294,2.377,296,2.461,298,2.649,310,3.561,320,2.378,581,3.526,595,4.782,636,3.451,647,4.661,911,4.945,913,5.13,914,5.13,926,4.661,928,4.661,929,4.016,930,3.831,950,4.492,1033,5.072,1372,5.145,1373,4.782,1374,3.831,1485,5.399,1487,4.193,1683,4.193,1684,4.743,1685,5.145,1686,4.743,1687,4.743,1688,4.743,1689,5.632,1690,6.797,1691,4.193,1692,4.743,1693,5.632,1694,4.743,1695,3.831,1696,4.193]],["title/classes/ResetPasswordDto.html",[22,0.208,599,3.336]],["body/classes/ResetPasswordDto.html",[3,0.079,4,0.069,5,0.047,9,0.135,10,0.009,21,0.09,22,0.331,27,0.005,28,0.007,29,0.005,35,0.616,41,0.474,45,0.583,61,1.948,96,2.797,271,0.895,275,1.743,293,0.81,294,2.185,298,3.105,320,2.788,380,3.847,581,3.605,599,5.306,679,5.479,908,4.486,911,4.565,913,4.716,914,4.716,926,4.515,928,4.515,929,3.105,1371,4.492,1685,4.492,1695,5.709,1697,6.869,1698,5.561,1699,5.561,1700,5.561,1701,5.561,1702,5.561]],["title/interfaces/SendMailOptions.html",[551,1.145,1555,2.965]],["body/interfaces/SendMailOptions.html",[3,0.09,4,0.078,5,0.053,9,0.186,10,0.008,21,0.103,27,0.006,28,0.007,29,0.006,33,1.219,35,0.699,45,0.679,46,1.725,275,1.885,338,3.524,513,4.635,551,1.626,553,2.637,555,4.005,973,5.739,1555,5.101,1557,5.739,1572,5.578,1573,5.578,1575,5.097,1580,6.417,1703,5.578,1704,6.31,1705,6.31]],["title/classes/SessionDto.html",[22,0.208,1433,3.133]],["body/classes/SessionDto.html",[3,0.078,4,0.067,5,0.046,9,0.133,10,0.009,21,0.089,22,0.327,27,0.005,28,0.006,29,0.005,35,0.606,41,0.577,45,0.721,271,0.88,275,1.724,282,5.144,285,3.222,289,2.922,293,0.851,294,1.69,302,2.626,322,2.742,432,5.144,513,3.316,604,4.893,606,5.787,658,4.105,660,4.417,662,4.105,1433,4.931,1440,6.226,1442,4.834,1443,4.834,1444,4.834,1706,4.834,1707,7.709,1708,6.992,1709,5.468,1710,5.468,1711,5.468,1712,5.468,1713,5.468,1714,5.468]],["title/controllers/SessionsController.html",[0,1.966,1715,3.336]],["body/controllers/SessionsController.html",[0,1.83,2,1.83,3,0.059,4,0.051,5,0.035,7,2.508,9,0.198,10,0.009,11,2.625,12,0.522,21,0.067,22,0.271,23,2.006,24,1.372,27,0.004,28,0.005,29,0.004,34,2.403,35,0.458,36,1.672,37,1.976,41,0.449,43,1.765,44,1.029,45,0.552,46,1.511,48,1.931,49,2.135,54,1.44,56,1.372,63,1.888,280,2.142,285,3.525,293,0.863,294,2.069,321,2.916,322,2.073,462,2.006,463,2.759,474,2.625,475,2.916,476,2.916,477,2.916,479,2.916,487,3.104,492,3.104,586,4.306,587,5.427,624,3.34,652,6.415,664,5.026,766,3.891,767,3.516,817,3.34,1433,2.916,1715,4.352,1716,3.656,1717,6.695,1718,5.798,1719,5.798,1720,4.135,1721,6.695,1722,4.135,1723,4.135,1724,4.135,1725,4.135,1726,4.135,1727,4.135,1728,4.135,1729,3.656,1730,4.135,1731,4.135,1732,4.135,1733,4.135,1734,4.135,1735,4.135,1736,4.135,1737,4.135,1738,4.135,1739,4.135,1740,4.135,1741,4.135,1742,4.135,1743,4.135]],["title/modules/SessionsModule.html",[83,1.253,135,2.82]],["body/modules/SessionsModule.html",[2,3.226,3,0.083,4,0.072,5,0.049,9,0.193,10,0.008,12,0.738,21,0.095,22,0.273,27,0.005,28,0.007,29,0.005,83,2.241,85,2.746,86,2.834,87,3.031,88,3.031,89,3.031,90,4.124,91,4.124,95,3.783,96,2.312,97,3.031,135,5.624,767,5.572,1715,5.966,1729,5.164,1744,5.164,1745,5.164,1746,5.164,1747,5.842,1748,5.842]],["title/injectables/SessionsService.html",[30,1.311,767,2.694]],["body/injectables/SessionsService.html",[3,0.064,4,0.055,5,0.038,9,0.183,10,0.009,12,0.568,21,0.073,22,0.21,24,1.491,25,2.824,27,0.004,28,0.006,29,0.004,30,1.813,31,2.049,35,0.498,36,1.772,37,2.399,41,0.546,43,2.075,44,1.21,45,0.65,46,1.777,48,2.169,49,2.283,54,2.139,63,1.732,121,0.849,149,1.827,275,1.514,324,2.049,351,2.18,442,3.724,462,2.98,482,4.331,508,4.098,515,4.61,516,6.278,518,3.902,519,4.61,521,4.61,523,4.331,766,4.066,767,3.724,881,2.612,1435,3.374,1749,3.973,1750,4.494,1751,8.127,1752,6.141,1753,4.494,1754,4.494,1755,4.494,1756,4.494,1757,6.141,1758,4.494,1759,4.494,1760,4.494,1761,4.494,1762,4.494,1763,4.494,1764,4.494]],["title/interfaces/StorageEngine.html",[551,1.145,954,2.694]],["body/interfaces/StorageEngine.html",[3,0.077,4,0.067,5,0.046,9,0.132,10,0.009,21,0.088,27,0.005,28,0.006,29,0.005,35,0.601,36,2.006,41,0.516,43,2.024,44,1.18,45,0.634,46,1.733,48,2.215,49,2.31,104,4.218,280,2.266,293,0.883,462,3.375,551,1.398,553,2.267,554,5.712,954,4.218,957,5.618,958,5.618,966,4.905,968,4.874,969,4.905,971,4.641,974,5.124,975,3.288,1765,4.794,1766,5.423,1767,5.423,1768,5.423]],["title/modules/StorageModule.html",[83,1.253,1207,2.965]],["body/modules/StorageModule.html",[3,0.052,4,0.045,5,0.031,9,0.184,10,0.009,12,0.457,21,0.059,22,0.169,25,2.726,27,0.003,28,0.005,29,0.003,36,1.044,37,1.555,41,0.458,43,1.8,44,1.049,45,0.563,46,1.541,48,1.97,49,0.975,63,2.136,83,2.26,85,1.701,86,1.755,87,1.877,88,1.877,89,1.877,90,3.765,91,3.225,95,2.734,96,1.432,97,1.877,139,2.021,229,2.834,230,3.345,268,6.118,269,2.551,280,1.068,363,3.716,552,6.231,560,3.968,561,3.062,562,3.716,563,3.56,564,3.199,572,2.716,900,1.946,976,4.147,1155,5.157,1207,5.452,1495,7.223,1496,3.199,1497,4.659,1500,6.416,1501,3.199,1502,4.659,1504,4.659,1507,6.416,1508,3.199,1509,4.659,1520,5.495,1521,3.199,1522,3.199,1523,4.659,1524,5.495,1525,4.659,1526,5.495,1527,3.199,1528,3.199,1769,3.199,1770,3.199,1771,3.199,1772,3.618,1773,3.618,1774,3.618,1775,3.618,1776,3.618,1777,5.02,1778,5.126,1779,3.199,1780,3.618,1781,3.618]],["title/interfaces/StorageOptions.html",[551,1.145,560,2.582]],["body/interfaces/StorageOptions.html",[3,0.09,4,0.077,5,0.053,9,0.186,10,0.009,21,0.102,27,0.006,28,0.007,29,0.006,35,0.697,45,0.678,83,1.774,275,1.881,513,4.626,551,1.621,553,2.629,554,4.435,555,3.993,560,4.434,960,5.38,983,3.993,1219,6.41,1384,5.38,1782,5.561,1783,5.561,1784,5.561,1785,5.561]],["title/interfaces/StorageOptionsFactory.html",[551,1.145,562,3.133]],["body/interfaces/StorageOptionsFactory.html",[3,0.09,4,0.078,5,0.054,9,0.154,10,0.008,21,0.103,27,0.006,28,0.007,29,0.006,35,0.701,36,2.209,41,0.425,48,1.826,49,2.065,83,2.322,155,3.284,551,1.632,553,2.646,554,5.401,560,4.786,561,3.679,562,5.401,563,3.6,1786,5.596,1787,8.558,1788,6.33]],["title/injectables/StorageService.html",[30,1.311,1155,2.694]],["body/injectables/StorageService.html",[3,0.034,4,0.03,5,0.041,9,0.203,10,0.009,12,0.305,21,0.039,22,0.113,24,0.801,25,2.545,27,0.002,28,0.004,29,0.002,30,1.141,31,1.101,35,0.267,36,1.115,37,2.199,41,0.455,43,1.594,44,0.929,45,0.533,46,1.365,48,1.745,49,1.739,54,1.347,56,2.647,57,2.7,60,1.069,61,2.002,63,1.986,64,2.021,81,3.654,83,0.681,104,2.932,113,1.135,121,0.456,229,1.299,258,1.939,275,0.953,280,1.632,293,0.639,302,0.907,322,1.211,335,1.349,336,1.464,351,1.172,355,1.172,462,1.876,560,3.213,561,2.247,563,2.843,602,2.135,653,1.813,662,2.903,668,1.951,669,1.951,671,1.951,710,1.533,714,1.611,872,2.727,881,1.403,952,3.41,954,2.932,959,1.813,968,3.07,971,2.58,974,1.611,975,2.932,976,2.58,977,1.703,980,2.58,983,2.455,1052,2.273,1055,1.403,1103,1.403,1111,2.247,1113,1.172,1114,2.247,1118,2.247,1119,2.247,1121,2.247,1155,2.345,1173,1.813,1181,3.419,1192,4.15,1219,3.63,1380,1.703,1445,2.58,1448,3.419,1449,4.275,1450,3.123,1545,5.705,1586,1.813,1778,1.813,1779,2.135,1782,2.135,1783,2.135,1784,2.135,1785,3.419,1789,2.135,1790,4.836,1791,3.419,1792,3.867,1793,2.415,1794,2.415,1795,5.991,1796,2.415,1797,3.867,1798,2.415,1799,2.415,1800,3.867,1801,2.415,1802,3.867,1803,4.15,1804,2.415,1805,3.867,1806,2.415,1807,3.123,1808,5.347,1809,2.415,1810,2.415,1811,3.123,1812,2.903,1813,2.415,1814,2.415,1815,2.415,1816,2.903,1817,2.415,1818,4.836,1819,1.813,1820,2.135,1821,2.415,1822,2.415,1823,3.867,1824,2.415,1825,2.415,1826,2.415,1827,2.415,1828,2.415,1829,2.415,1830,2.903,1831,2.135,1832,2.415,1833,2.415,1834,1.951,1835,5.528,1836,4.836,1837,2.415,1838,3.867,1839,2.415,1840,2.415,1841,2.415,1842,2.415,1843,4.836,1844,2.415,1845,2.415,1846,2.415,1847,2.415,1848,2.415,1849,2.415,1850,3.867,1851,4.275,1852,2.415,1853,3.867,1854,2.415,1855,2.415,1856,2.415,1857,2.415,1858,2.415,1859,3.867,1860,2.415,1861,2.415,1862,2.415,1863,2.415,1864,5.528,1865,2.415,1866,2.415,1867,2.415,1868,2.415,1869,2.415,1870,2.415,1871,2.415,1872,2.415,1873,2.415,1874,2.415,1875,2.415,1876,2.415,1877,2.135,1878,2.415]],["title/classes/StreamMeter.html",[22,0.208,1816,3.336]],["body/classes/StreamMeter.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,21,0.087,22,0.25,25,2.865,27,0.005,28,0.006,29,0.005,33,1.332,35,0.592,36,1.989,41,0.512,43,1.41,44,0.822,45,0.569,46,1.207,48,1.543,63,1.508,104,4.181,271,0.861,275,1.7,293,0.756,351,2.595,846,3.457,880,6.095,881,3.109,900,3.708,975,3.244,978,4.862,1055,4.433,1816,5.176,1830,5.727,1834,4.321,1879,7.124,1880,4.729,1881,7.629,1882,7.629,1883,6.894,1884,5.349,1885,6.894,1886,6.745,1887,7.629,1888,8.058,1889,5.349,1890,5.349,1891,5.349,1892,6.894,1893,5.349]],["title/classes/TooManyApplications.html",[22,0.208,422,2.694]],["body/classes/TooManyApplications.html",[3,0.078,4,0.067,5,0.046,9,0.132,10,0.009,12,0.687,21,0.136,22,0.392,27,0.005,28,0.006,29,0.005,33,1.657,41,0.365,44,0.835,50,3.381,121,1.62,271,0.876,281,2.822,283,2.924,293,0.539,371,3.452,402,3.297,403,3.628,404,2.912,405,3.297,407,3.588,408,2.912,409,3.835,410,2.273,411,2.479,412,2.556,413,3.297,414,4.913,415,2.556,416,3.297,417,3.628,418,3.628,419,2.727,420,3.297,421,2.406,422,4.225,423,2.924,424,3.037,425,2.924,426,3.037,427,3.037,428,3.835,1894,5.438]],["title/classes/TooManyFields.html",[22,0.208,1114,2.582]],["body/classes/TooManyFields.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,12,0.674,21,0.139,22,0.399,27,0.005,28,0.006,29,0.005,33,1.677,41,0.358,45,0.44,121,1.64,271,0.859,293,0.528,850,2.869,999,3.566,1052,2.508,1103,3.1,1104,3.386,1105,4.592,1106,3.56,1108,4.592,1109,3.56,1110,3.56,1111,3.1,1112,3.56,1113,3.339,1114,4,1115,5.084,1116,5.084,1117,3.56,1118,3.1,1119,3.1,1120,3.56,1121,3.1,1122,3.56,1123,3.56,1124,3.56,1895,5.335]],["title/classes/TooManyFiles.html",[22,0.208,1118,2.582]],["body/classes/TooManyFiles.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,12,0.674,21,0.139,22,0.399,27,0.005,28,0.006,29,0.005,33,1.677,41,0.358,45,0.44,121,1.64,271,0.859,293,0.528,850,2.869,999,3.566,1052,2.508,1103,3.1,1104,3.386,1105,4.592,1106,3.56,1108,4.592,1109,3.56,1110,3.56,1111,3.1,1112,3.56,1113,3.339,1114,3.1,1115,5.084,1116,5.084,1117,3.56,1118,4,1119,3.1,1120,3.56,1121,3.1,1122,3.56,1123,3.56,1124,3.56,1896,5.335]],["title/classes/TooManyParts.html",[22,0.208,1119,2.582]],["body/classes/TooManyParts.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,12,0.674,21,0.139,22,0.399,27,0.005,28,0.006,29,0.005,33,1.677,41,0.358,45,0.44,121,1.64,271,0.859,293,0.528,850,2.869,999,3.566,1052,2.508,1103,3.1,1104,3.386,1105,4.592,1106,3.56,1108,4.592,1109,3.56,1110,3.56,1111,3.1,1112,3.56,1113,3.339,1114,3.1,1115,5.084,1116,5.084,1117,3.56,1118,3.1,1119,4,1120,3.56,1121,3.1,1122,3.56,1123,3.56,1124,3.56,1897,5.335]],["title/classes/UnsupportedContentType.html",[22,0.208,1121,2.582]],["body/classes/UnsupportedContentType.html",[3,0.076,4,0.066,5,0.045,9,0.13,10,0.009,12,0.674,21,0.139,22,0.399,27,0.005,28,0.006,29,0.005,33,1.677,41,0.358,45,0.44,121,1.64,271,0.859,293,0.528,850,2.869,999,3.483,1052,2.508,1103,3.1,1104,3.386,1105,4.592,1106,3.56,1108,5.084,1109,3.56,1110,3.56,1111,3.1,1112,3.56,1113,3.339,1114,3.1,1115,5.084,1116,5.084,1117,3.56,1118,3.1,1119,3.1,1120,3.56,1121,4,1122,3.56,1123,3.56,1124,3.56,1898,5.335]],["title/classes/UpdateFileDto.html",[22,0.208,1134,3.336]],["body/classes/UpdateFileDto.html",[3,0.074,4,0.064,5,0.044,9,0.127,10,0.009,21,0.085,22,0.317,27,0.005,28,0.006,29,0.005,35,0.577,41,0.536,45,0.658,61,1.868,271,0.839,275,1.671,293,0.79,294,2.466,296,2.702,302,2.545,320,2.611,355,3.87,908,3.306,911,4.206,912,5.473,913,4.521,914,4.521,926,3.938,927,5.087,928,4.377,929,2.908,937,3.333,938,4.604,940,4.604,942,4.604,1052,4.058,1053,4.377,1054,4.377,1134,5.087,1899,7.311,1900,4.604,1901,5.208,1902,5.208,1903,8.27,1904,5.208,1905,5.208]],["title/classes/UpdateUserDto.html",[22,0.208,1906,3.336]],["body/classes/UpdateUserDto.html",[3,0.063,4,0.054,5,0.037,9,0.107,10,0.009,21,0.072,22,0.284,27,0.004,28,0.006,29,0.004,35,0.489,41,0.501,44,0.932,45,0.616,46,1.824,61,2.057,271,0.711,275,1.496,293,0.835,294,2.307,296,2.29,298,2.465,310,3.313,320,2.213,581,3.576,636,2.897,679,4.887,908,3.85,911,4.923,913,4.979,914,4.979,926,4.546,927,5.602,928,4.546,929,4.167,930,3.565,949,3.313,950,3.112,1028,5.598,1033,4.887,1372,4.899,1373,4.553,1374,3.565,1685,3.565,1689,5.363,1691,3.902,1693,5.363,1695,4.899,1696,3.902,1906,4.553,1907,6.916,1908,6.127,1909,6.529,1910,6.597,1911,4.414,1912,4.414,1913,4.414,1914,4.414,1915,4.414,1916,4.414,1917,4.414]],["title/classes/UploadSessionNotFound.html",[22,0.208,869,2.82]],["body/classes/UploadSessionNotFound.html",[3,0.073,4,0.063,5,0.057,9,0.125,10,0.009,12,0.647,21,0.134,22,0.385,27,0.005,28,0.006,29,0.005,33,1.631,35,0.568,41,0.344,43,1.351,44,0.788,45,0.423,46,1.157,61,1.413,121,1.498,271,0.825,280,1.979,293,0.74,404,2.803,407,3.307,408,3.314,410,2.143,411,3.057,424,2.863,425,2.757,426,2.863,586,2.66,745,2.57,766,3.897,843,3.254,844,3.421,845,3.615,846,2.57,848,3.615,849,3.615,850,2.757,851,3.108,852,3.108,853,3.615,854,3.615,855,2.863,856,2.979,857,3.615,858,3.254,859,3.421,860,3.615,861,4.475,862,2.029,863,3.615,864,3.615,865,3.615,866,3.421,867,3.615,868,3.421,869,4.257,870,4.729,871,3.615,1918,5.126]],["title/interfaces/UploadedFile.html",[551,1.145,1812,3.336]],["body/interfaces/UploadedFile.html",[3,0.09,4,0.077,5,0.053,9,0.153,10,0.008,21,0.102,27,0.006,28,0.007,29,0.006,33,1.474,35,0.697,45,0.63,275,1.881,280,2.52,293,0.813,551,1.621,553,2.629,846,4.118,1055,4.962,1445,5.48,1447,5.08,1811,5.08,1812,5.727,1919,5.561,1920,5.561]],["title/classes/User.html",[22,0.208,235,1.759]],["body/classes/User.html",[3,0.033,4,0.029,5,0.02,8,3.159,9,0.175,10,0.009,21,0.061,22,0.254,27,0.002,28,0.003,29,0.002,33,0.728,35,0.418,37,0.691,41,0.538,45,0.687,49,1.463,56,1.571,61,0.645,63,1.887,64,3.7,72,2.92,81,1.956,82,2.286,113,1.772,149,0.952,235,2.518,258,3.603,271,0.377,273,3.292,275,0.93,277,2.457,280,1.757,284,3.554,286,2.457,287,2.871,289,2.796,293,0.803,294,2.28,295,3.006,296,3.301,298,2.644,299,4.561,300,4.057,302,2.771,303,3.333,306,1.757,307,4.8,308,4.057,309,5.139,310,4.469,316,4.039,320,1.173,321,1.65,322,1.173,324,1.067,325,4.787,326,1.956,327,1.486,328,4.186,335,1.307,336,1.419,344,1.486,345,2.516,346,1.65,347,2.659,348,2.191,349,2.659,350,3.446,351,2.888,352,2.069,355,3.087,359,2.516,360,1.562,362,1.89,363,1.65,364,1.419,391,2.069,397,3.554,399,1.757,400,1.757,401,1.757,462,2.634,563,2.226,581,2.796,636,2.269,637,2.069,647,2.752,653,1.757,691,2.83,804,3.159,855,3.032,878,2.069,900,1.259,1005,3.032,1027,3.159,1030,3.159,1031,1.65,1033,3.339,1039,2.659,1040,1.757,1053,1.36,1610,3.623,1611,3.825,1690,2.069,1909,1.89,1910,2.069,1921,1.89,1922,4.735,1923,2.34,1924,2.34,1925,2.34,1926,2.34,1927,2.34,1928,2.34,1929,2.34,1930,2.34,1931,2.34,1932,2.34,1933,2.34,1934,2.34,1935,2.34,1936,2.34,1937,2.34,1938,2.34,1939,3.333,1940,3.77,1941,4.735,1942,2.34,1943,2.069,1944,2.069,1945,4.735,1946,2.069,1947,2.34,1948,4.735,1949,1.757,1950,2.069,1951,3.77,1952,5.429,1953,2.34,1954,2.34,1955,2.34,1956,2.34,1957,2.34,1958,2.34,1959,2.069,1960,2.34,1961,2.34,1962,2.34,1963,2.34,1964,2.34,1965,2.34,1966,2.34,1967,2.34,1968,2.34,1969,2.34,1970,4.735,1971,2.34,1972,2.34]],["title/classes/UserActivation.html",[22,0.208,757,2.965]],["body/classes/UserActivation.html",[3,0.056,4,0.048,5,0.033,9,0.172,10,0.009,21,0.091,22,0.183,27,0.004,28,0.005,29,0.004,33,1.079,35,0.434,41,0.523,45,0.642,56,1.853,61,1.081,63,1.106,64,3.729,72,3.003,82,2.378,149,1.594,251,2.034,271,0.631,273,3.943,275,1.377,277,3.374,285,2.718,286,3.374,289,3.253,293,0.702,294,2.19,295,3.544,296,3.677,298,3.957,299,4.498,300,4.297,308,3.386,316,4.498,324,1.787,325,4.754,326,2.897,327,2.489,335,2.19,336,2.378,344,2.489,345,2.616,346,2.765,347,2.765,348,2.279,349,2.765,350,3.544,351,2.709,359,2.616,360,2.616,364,2.378,380,3.23,629,3.167,757,3.726,758,2.944,846,2.8,900,4.186,1027,4.339,1030,3.726,1031,3.937,1035,5.724,1039,3.937,1040,2.944,1045,3.167,1046,3.167,1047,3.167,1077,4.936,1944,3.467,1973,6.47,1974,3.167,1975,6.503,1976,3.921,1977,3.921,1978,5.584,1979,5.253,1980,3.921,1981,3.921,1982,3.921,1983,3.921,1984,3.921,1985,5.584,1986,3.921,1987,3.467,1988,3.921]],["title/classes/UserDto.html",[22,0.208,1610,2.965]],["body/classes/UserDto.html",[3,0.066,4,0.057,5,0.039,8,4.736,9,0.112,10,0.009,21,0.075,22,0.293,27,0.004,28,0.006,29,0.004,35,0.512,41,0.596,45,0.733,271,0.744,275,1.543,277,3.682,280,2.095,286,3.682,289,3.425,293,0.88,294,2.457,302,2.857,322,2.317,355,3.976,432,5.882,581,2.966,636,2.966,647,4.124,804,4.736,855,3.963,1005,3.963,1027,4.736,1610,4.176,1611,5.732,1989,4.085,1990,4.621,1991,4.621,1992,4.621,1993,4.621,1994,4.621,1995,4.621,1996,4.621,1997,4.621,1998,4.621,1999,4.621,2000,4.621,2001,4.621]],["title/classes/UserNotActivated.html",[22,0.208,700,2.481]],["body/classes/UserNotActivated.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,3.874,96,2.067,121,1.654,235,2.067,271,0.841,407,3.337,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,3.79,701,3.034,742,3.315,744,3.166,745,2.618,781,3.034,782,3.034,783,3.034,795,3.315,806,3.753,862,2.686,999,3.152,1010,3.522,1011,3.522,1451,3.034,1452,3.315,1454,3.484,1455,3.484,1456,3.484,1457,3.484,2002,5.222]],["title/classes/UserNotFound.html",[22,0.208,1014,2.582]],["body/classes/UserNotFound.html",[3,0.073,4,0.063,5,0.057,9,0.124,10,0.009,12,0.644,21,0.137,22,0.394,27,0.005,28,0.006,29,0.005,33,1.659,41,0.342,43,1.344,44,1.027,45,0.552,46,1.151,68,4.333,121,1.592,271,0.821,293,0.738,380,2.325,404,3.307,408,3.116,410,3.116,415,2.397,421,2.958,518,3.468,636,2.131,806,2.397,862,2.018,996,2.964,997,3.237,999,2.793,1000,4.46,1001,3.403,1002,2.964,1003,3.403,1004,2.964,1005,2.848,1006,3.403,1007,3.237,1008,2.964,1009,3.092,1010,2.646,1011,2.646,1012,2.964,1013,3.403,1014,3.884,1015,4.46,1016,3.403,2003,5.1]],["title/classes/UserNotLoggedIn.html",[22,0.208,701,2.582]],["body/classes/UserNotLoggedIn.html",[3,0.075,4,0.064,5,0.044,9,0.127,10,0.009,12,0.659,21,0.138,22,0.397,27,0.005,28,0.006,29,0.005,33,1.669,41,0.351,50,4.016,96,2.067,121,1.654,235,2.067,271,0.841,407,3.003,412,2.454,421,3.337,423,2.808,570,3.034,581,2.837,700,2.916,701,3.944,742,3.315,744,3.166,745,2.618,781,3.034,782,3.034,783,3.034,795,3.315,806,3.753,862,2.686,999,3.152,1010,3.522,1011,3.522,1451,3.034,1452,3.315,1454,3.484,1455,3.484,1456,3.484,1457,3.484,2004,5.222]],["title/classes/UsernameTaken.html",[22,0.208,1012,2.582]],["body/classes/UsernameTaken.html",[3,0.074,4,0.064,5,0.057,9,0.127,10,0.009,12,0.658,21,0.138,22,0.396,27,0.005,28,0.006,29,0.005,33,1.668,41,0.35,44,0.8,45,0.43,68,4.377,121,1.631,271,0.839,293,0.516,380,2.374,404,3.456,408,2.832,410,3.148,415,2.448,421,2.998,518,2.702,636,2.177,806,2.448,862,2.061,996,3.026,997,3.306,999,2.832,1000,4.521,1001,3.475,1002,3.026,1003,3.475,1004,3.026,1005,2.908,1006,3.475,1007,3.306,1008,3.026,1009,3.158,1010,2.702,1011,2.702,1012,3.938,1013,3.475,1014,3.026,1015,3.475,1016,3.475,2005,5.208]],["title/controllers/UsersController.html",[0,1.966,2006,3.336]],["body/controllers/UsersController.html",[0,1.286,2,1.286,3,0.042,4,0.036,5,0.038,7,1.763,9,0.207,10,0.009,11,1.845,12,0.367,17,2.406,21,0.047,22,0.136,24,1.809,25,2.048,26,2.839,27,0.003,28,0.004,29,0.003,34,1.69,35,0.322,36,1.29,37,2.06,41,0.469,43,1.84,44,1.072,45,0.576,46,1.575,48,2.013,49,2.119,54,1.899,56,2.193,57,3.691,60,1.286,61,0.802,63,1.968,64,2.279,78,1.69,118,3.154,121,0.549,155,1.508,170,1.69,186,3.613,235,3.32,258,2.243,280,0.858,293,0.691,294,2.157,302,1.092,330,1.69,331,2.05,332,1.845,380,2.039,419,3.069,442,2.712,443,2.712,451,3.358,458,2.183,461,1.94,463,1.94,464,2.183,465,1.94,474,3.461,475,2.05,476,2.05,477,2.05,479,2.05,581,1.87,647,3.168,726,2.05,937,1.286,947,4.596,1004,2.6,1005,2.498,1007,1.845,1014,1.69,1051,2.183,1052,1.367,1053,1.69,1054,1.69,1055,1.69,1113,2.17,1143,2.6,1145,2.57,1149,2.183,1150,2.57,1155,2.712,1156,2.348,1173,2.183,1190,2.57,1191,2.183,1192,2.183,1194,2.57,1355,2.348,1450,3.613,1608,2.183,1610,3.638,1625,4.82,1830,2.183,1834,2.348,1906,4.596,1943,2.57,2006,3.358,2007,2.57,2008,3.955,2009,4.473,2010,3.955,2011,2.57,2012,2.907,2013,4.473,2014,2.907,2015,2.907,2016,2.907,2017,2.907,2018,2.907,2019,2.907,2020,2.907,2021,2.907,2022,2.907,2023,2.907,2024,2.907,2025,2.907,2026,2.907,2027,2.907,2028,2.907,2029,4.82,2030,2.57,2031,2.57,2032,2.907,2033,2.907,2034,2.348,2035,2.907,2036,2.907,2037,2.907,2038,2.907,2039,2.907,2040,2.907,2041,2.907,2042,2.907,2043,2.907,2044,4.473,2045,2.907,2046,2.907,2047,2.907,2048,2.907,2049,2.907,2050,4.473,2051,2.907,2052,2.907,2053,2.907,2054,2.57,2055,2.57,2056,2.907,2057,2.907,2058,2.907,2059,2.907,2060,2.907,2061,2.907,2062,2.907,2063,2.907,2064,2.907,2065,2.907,2066,2.907,2067,2.907,2068,2.907,2069,2.907,2070,2.907,2071,2.907,2072,2.907,2073,2.907,2074,2.907]],["title/modules/UsersModule.html",[83,1.253,136,3.133]],["body/modules/UsersModule.html",[2,2.619,3,0.061,4,0.052,5,0.036,9,0.213,10,0.009,12,0.538,17,4.713,21,0.069,22,0.199,27,0.004,28,0.005,29,0.004,44,0.909,83,1.918,85,2.003,86,2.067,87,2.211,88,2.211,89,2.211,90,3.53,91,3.53,95,3.071,96,1.686,97,2.211,129,5.335,131,4.848,132,5.075,135,5.075,136,6.359,139,3.306,145,3.799,146,2.291,148,2.843,149,1.732,159,3.767,163,3.198,164,3.441,167,3.441,229,2.291,230,2.705,231,2.379,235,1.686,293,0.422,326,3.071,505,3.004,980,2.843,983,2.705,1024,2.843,1042,4.444,1207,5.154,1215,3.767,1218,3.767,1219,3.198,1220,3.767,1949,4.444,2006,5.107,2031,3.767,2034,3.441,2075,3.767,2076,4.261,2077,3.767,2078,3.767,2079,4.261,2080,4.261,2081,3.767,2082,3.767,2083,4.261,2084,4.261]],["title/injectables/UsersService.html",[17,2.389,30,1.311]],["body/injectables/UsersService.html",[3,0.032,4,0.028,5,0.019,9,0.195,10,0.009,12,0.282,17,1.953,21,0.036,22,0.104,24,2.178,25,2.465,26,2.912,27,0.002,28,0.003,29,0.002,30,1.072,31,1.018,35,0.247,36,1.048,37,2.469,41,0.459,43,1.803,44,1.051,45,0.6,46,1.544,48,1.893,49,2.11,54,2.872,56,1.929,60,3.129,61,2.05,63,1.756,121,0.686,149,0.908,235,3.207,251,1.159,258,1.12,280,1.072,285,2.429,293,0.834,302,0.839,324,1.018,338,2.95,348,2.11,380,1.655,411,1.655,427,2.028,441,2.202,442,2.202,443,2.782,467,3.204,508,2.423,510,4.628,513,2.202,516,4.628,518,2.38,523,2.561,529,1.575,581,3.108,636,2.429,647,3.619,664,1.677,665,5.031,679,3.726,686,1.975,702,1.975,703,1.975,714,1.491,726,2.561,765,3.354,766,2.666,767,3.204,771,3.444,785,1.975,791,1.975,792,1.975,799,4.056,802,4.056,804,3.878,805,5.139,806,2.156,809,3.21,817,1.804,818,1.975,821,3.21,855,1.248,937,0.989,996,2.11,1002,2.666,1008,3.07,1009,2.782,1012,2.11,1024,2.423,1028,5.031,1113,2.226,1143,3.07,1153,3.07,1154,1.804,1158,3.235,1350,3.21,1355,1.804,1363,3.21,1451,2.666,1819,2.726,1820,1.975,1908,5.506,2008,3.21,2010,3.21,2011,3.21,2030,1.975,2034,1.804,2081,1.975,2082,1.975,2085,1.975,2086,4.588,2087,2.234,2088,2.234,2089,3.631,2090,2.234,2091,3.631,2092,2.234,2093,2.234,2094,2.234,2095,3.631,2096,5.284,2097,2.234,2098,2.234,2099,2.234,2100,1.804,2101,3.631,2102,3.631,2103,2.234,2104,1.804,2105,2.234,2106,2.234,2107,2.234,2108,2.234,2109,5.812,2110,3.631,2111,3.631,2112,2.234,2113,2.234,2114,3.631,2115,2.234,2116,2.234,2117,2.234,2118,2.234,2119,2.234,2120,2.234,2121,2.234,2122,2.234,2123,2.234,2124,2.234,2125,2.234,2126,4.588]],["title/interfaces/WriteOptions.html",[551,1.145,1803,3.336]],["body/interfaces/WriteOptions.html",[3,0.077,4,0.067,5,0.065,9,0.186,10,0.009,21,0.088,27,0.005,28,0.006,29,0.005,35,0.599,45,0.633,46,1.826,57,3.877,81,3.979,104,4.906,258,2.712,275,1.712,287,4.906,293,0.759,302,2.031,355,2.624,551,1.394,553,2.26,555,3.433,975,4.21,1173,6.074,1191,6.074,1192,6.074,1445,5.117,1586,4.06,1795,6.78,1803,5.212,1807,4.368,1811,4.368,1830,4.06,1831,6.138,1877,4.781,1920,4.781,2055,7.153,2127,4.781]],["title/coverage.html",[2128,4.922]],["body/coverage.html",[0,2.655,1,1.228,5,0.024,6,1.446,10,0.009,13,1.092,15,1.228,17,0.88,22,0.418,27,0.002,28,0.003,29,0.002,30,2.154,32,1.446,34,0.951,37,0.826,45,0.135,51,1.038,61,0.451,65,1.228,66,1.446,67,1.228,83,1.501,120,1.446,137,1.092,138,2.261,161,1.228,169,1.321,171,1.321,235,0.648,270,1.563,272,2.964,274,1.154,333,1.321,335,0.914,337,1.321,356,1.228,385,2.102,402,0.992,403,3.259,413,0.992,416,0.992,420,0.992,422,0.992,429,1.446,439,1.228,440,1.446,447,1.228,467,0.992,471,1.228,474,1.038,507,1.446,551,1.962,552,1.228,554,3.064,555,3.38,560,0.951,562,1.154,563,1.316,566,1.228,567,1.446,579,1.228,584,1.228,587,1.092,595,1.228,599,1.228,609,1.092,616,1.321,619,1.321,621,1.228,636,0.684,682,2.964,700,0.914,701,0.951,704,1.321,706,1.321,707,1.321,738,1.446,753,1.868,754,1.228,757,1.868,758,1.228,763,1.446,765,1.038,767,0.992,781,0.951,782,0.951,783,0.951,787,1.321,825,1.154,826,1.321,829,1.446,843,1.038,844,3.259,851,0.992,852,0.992,856,0.951,858,1.038,869,1.038,872,1.154,873,1.446,900,5.041,906,1.446,907,1.446,933,1.228,934,1.446,935,1.446,937,0.724,943,1.228,944,1.446,945,1.446,947,1.228,948,1.446,949,2.755,952,1.154,953,2.261,954,0.992,960,1.154,978,1.154,996,0.951,997,3.38,1002,0.951,1004,0.951,1008,0.951,1012,0.951,1014,0.951,1017,1.446,1024,1.868,1025,2.261,1026,2.261,1042,1.228,1049,2.261,1050,1.154,1060,1.038,1078,1.228,1090,1.446,1103,0.951,1104,3.38,1111,0.951,1114,0.951,1118,0.951,1119,0.951,1121,0.951,1125,1.228,1126,1.446,1134,1.228,1143,0.951,1147,1.321,1149,1.228,1151,0.951,1153,0.951,1155,0.992,1208,1.154,1221,1.446,1237,1.446,1279,2.261,1290,1.228,1300,1.092,1301,2.755,1305,1.092,1307,1.446,1317,1.228,1318,1.446,1344,1.446,1370,1.446,1371,2.261,1377,1.446,1378,1.446,1380,1.154,1381,2.755,1382,2.755,1384,1.154,1393,1.228,1398,1.228,1399,1.446,1432,1.446,1433,1.154,1435,1.228,1436,1.446,1438,1.446,1439,1.446,1440,1.321,1445,1.092,1446,1.446,1447,2.261,1451,0.951,1452,3.38,1459,1.321,1460,1.446,1461,1.446,1484,1.446,1493,1.154,1498,1.228,1505,1.038,1511,1.321,1512,1.228,1517,1.154,1530,2.755,1540,1.446,1543,1.446,1555,1.092,1557,1.228,1563,1.446,1608,1.228,1609,1.446,1610,1.092,1626,2.261,1627,2.261,1636,4.3,1643,1.321,1645,1.321,1647,1.321,1649,1.321,1651,1.321,1683,1.446,1697,1.446,1703,1.446,1706,1.446,1715,1.228,1716,1.446,1749,1.446,1765,1.446,1777,1.321,1778,1.228,1786,1.446,1789,1.446,1803,1.228,1812,1.228,1816,1.228,1819,1.228,1879,1.446,1880,1.446,1899,1.446,1900,1.446,1906,1.228,1907,1.446,1919,1.446,1921,2.261,1949,1.228,1973,2.964,1974,2.964,1979,1.321,1989,1.446,2006,1.228,2007,1.446,2085,1.446,2100,1.321,2104,1.321,2127,1.446,2128,1.321,2129,1.636,2130,1.636,2131,8.677,2132,8.719,2133,1.446,2134,1.446,2135,1.446,2136,1.446,2137,2.475,2138,1.446,2139,1.446,2140,1.446,2141,6.495,2142,8.738,2143,5.324,2144,5.324,2145,2.475,2146,1.446,2147,4.345,2148,4.345,2149,2.8,2150,6,2151,6.495,2152,2.475,2153,1.446,2154,1.446,2155,1.446,2156,1.446,2157,1.446,2158,1.446,2159,1.446,2160,1.636,2161,1.636,2162,1.636,2163,2.475,2164,2.475,2165,1.636,2166,2.475,2167,2.475,2168,1.446,2169,1.446,2170,1.636,2171,1.446,2172,1.446,2173,1.446,2174,1.446,2175,1.446,2176,1.636,2177,1.636]],["title/dependencies.html",[86,2.597,2178,3.696]],["body/dependencies.html",[5,0.041,10,0.009,12,0.615,22,0.303,27,0.005,28,0.006,29,0.005,78,3.769,86,2.364,107,3.933,108,3.936,141,4.308,143,3.658,146,2.62,149,1.981,152,4.869,153,4.869,155,2.528,156,3.658,320,2.443,322,2.443,324,2.221,419,2.443,586,2.528,604,3.093,606,3.658,607,4.308,608,4.308,836,2.955,838,3.936,1039,3.436,1391,3.936,1392,3.936,1412,3.936,1580,3.658,1581,4.308,1807,3.936,1808,4.308,1851,4.308,1939,4.308,2029,4.308,2179,4.872,2180,4.872,2181,4.872,2182,7.29,2183,4.872,2184,4.872,2185,4.872,2186,4.872,2187,4.872,2188,4.872,2189,4.872,2190,4.872,2191,4.872,2192,6.485,2193,4.872,2194,4.872,2195,4.872,2196,4.872,2197,4.872,2198,4.872,2199,4.872,2200,4.872,2201,4.872,2202,4.872,2203,4.872,2204,4.872,2205,4.872,2206,4.872,2207,4.872,2208,4.308,2209,7.29,2210,4.872,2211,4.872,2212,4.872,2213,4.872,2214,4.872,2215,4.872,2216,4.872,2217,4.872,2218,4.872,2219,4.872,2220,4.872,2221,4.872,2222,4.872,2223,4.872,2224,4.872,2225,4.872,2226,4.872,2227,4.872]],["title/miscellaneous/enumerations.html",[2228,2.606,2229,4.732]],["body/miscellaneous/enumerations.html",[10,0.008,27,0.006,28,0.007,29,0.006,35,0.729,330,4.557,881,5.148,2228,4.643,2229,5.821,2230,6.584,2231,7.842,2232,6.584,2233,6.584,2234,6.584,2235,6.584,2236,6.584,2237,6.584,2238,6.584,2239,6.584,2240,6.584,2241,6.584,2242,6.584]],["title/index.html",[35,0.409,2243,3.268,2244,3.268]],["body/index.html",[4,0.066,10,0.009,27,0.005,28,0.006,29,0.005,204,4.356,427,3.012,851,3.27,862,2.135,1537,4.768,1791,4.768,2128,4.356,2208,6.771,2245,5.393,2246,5.393,2247,6.931,2248,5.393,2249,5.393,2250,5.393,2251,5.393,2252,5.393,2253,5.393,2254,5.393,2255,4.768,2256,5.393,2257,5.393,2258,5.393,2259,8.703,2260,5.393,2261,5.393,2262,5.393,2263,8.557,2264,5.393,2265,5.393,2266,6.931,2267,5.393,2268,5.393,2269,5.393,2270,6.931,2271,6.931,2272,5.393,2273,5.393,2274,5.393,2275,6.931,2276,6.931,2277,5.393,2278,5.393,2279,5.393,2280,5.393,2281,5.393,2282,4.356,2283,5.393,2284,5.393,2285,5.393,2286,5.393,2287,4.768,2288,5.393,2289,5.393,2290,5.393,2291,5.393,2292,5.393,2293,5.393,2294,5.393,2295,5.393,2296,5.393,2297,5.393,2298,4.356]],["title/license.html",[2243,3.268,2244,3.268,2298,2.986]],["body/license.html",[4,0.088,5,0.041,9,0.052,10,0.008,27,0.003,28,0.002,29,0.002,41,0.081,44,0.185,61,1.109,68,2.59,116,1.064,235,0.476,262,1.893,270,0.672,273,0.73,289,0.895,308,0.73,345,0.803,382,1.73,387,2.557,417,0.803,418,0.803,425,1.152,441,2.438,449,1.064,536,1.064,640,1.893,720,1.064,745,1.074,846,0.604,868,2.341,872,1.51,917,1.064,920,3.939,932,3.101,980,0.803,1019,1.73,1020,0.972,1054,2.59,1113,0.584,1175,0.972,1229,0.904,1259,4.269,1261,1.064,1477,1.064,1646,0.972,1680,6.057,1909,0.972,1959,1.064,2228,0.849,2255,1.893,2282,2.337,2287,3.101,2298,7.075,2299,3.508,2300,3.508,2301,1.204,2302,2.142,2303,8.029,2304,6.965,2305,2.142,2306,3.508,2307,4.456,2308,1.204,2309,1.204,2310,1.204,2311,1.204,2312,8.106,2313,8.177,2314,1.204,2315,2.893,2316,5.152,2317,1.204,2318,4.456,2319,1.204,2320,4.021,2321,1.204,2322,1.204,2323,7.257,2324,7.798,2325,2.893,2326,2.893,2327,5.907,2328,4.021,2329,4.829,2330,7.944,2331,4.456,2332,1.204,2333,1.204,2334,1.204,2335,1.204,2336,4.456,2337,6.106,2338,6.285,2339,2.893,2340,5.907,2341,3.508,2342,2.557,2343,8.069,2344,7.167,2345,1.204,2346,1.204,2347,5.907,2348,1.204,2349,4.456,2350,1.204,2351,1.204,2352,1.204,2353,1.204,2354,1.204,2355,2.893,2356,2.142,2357,2.142,2358,4.456,2359,4.456,2360,2.893,2361,2.893,2362,1.204,2363,6.447,2364,2.142,2365,1.204,2366,1.204,2367,1.204,2368,1.204,2369,1.204,2370,1.204,2371,1.204,2372,5.685,2373,5.152,2374,1.204,2375,4.021,2376,5.152,2377,1.204,2378,2.142,2379,2.142,2380,1.204,2381,1.204,2382,2.142,2383,2.142,2384,1.204,2385,2.893,2386,2.893,2387,1.204,2388,4.021,2389,1.204,2390,1.204,2391,4.456,2392,1.204,2393,1.204,2394,1.204,2395,1.204,2396,1.204,2397,1.204,2398,1.204,2399,1.204,2400,1.204,2401,1.204,2402,2.142,2403,1.204,2404,1.204,2405,1.204,2406,2.142,2407,2.142,2408,1.204,2409,1.204,2410,1.204,2411,2.893,2412,3.508,2413,2.893,2414,1.204,2415,1.204,2416,1.204,2417,1.204,2418,1.204,2419,4.456,2420,2.893,2421,2.142,2422,1.204,2423,1.204,2424,1.204,2425,2.142,2426,4.021,2427,1.204,2428,1.204,2429,1.204,2430,1.204,2431,1.204,2432,3.508,2433,2.142,2434,5.435,2435,1.204,2436,1.204,2437,3.508,2438,1.204,2439,2.893,2440,1.204,2441,2.142,2442,5.435,2443,5.907,2444,2.893,2445,2.893,2446,2.142,2447,1.204,2448,3.508,2449,1.064,2450,4.021,2451,2.142,2452,4.456,2453,1.204,2454,1.204,2455,1.204,2456,2.893,2457,1.204,2458,1.204,2459,1.204,2460,1.204,2461,2.893,2462,1.204,2463,4.829,2464,1.204,2465,1.204,2466,1.204,2467,1.204,2468,1.204,2469,1.204,2470,2.893,2471,4.456,2472,2.142,2473,2.893,2474,1.204,2475,2.893,2476,1.204,2477,2.142,2478,1.204,2479,2.142,2480,2.142,2481,2.893,2482,1.204,2483,1.204,2484,2.142,2485,1.204,2486,1.204,2487,1.204,2488,1.204,2489,2.893,2490,1.204,2491,2.142,2492,2.893,2493,1.204,2494,1.204,2495,1.204,2496,1.204,2497,2.142,2498,2.893,2499,2.142,2500,1.204,2501,1.204,2502,2.142,2503,4.021,2504,3.508,2505,2.893,2506,2.893,2507,2.142,2508,3.508,2509,1.204,2510,2.893,2511,1.204,2512,1.204,2513,2.142,2514,2.142,2515,3.508,2516,1.204,2517,1.204,2518,1.204,2519,1.204,2520,2.142,2521,1.204,2522,1.204,2523,4.456,2524,2.142,2525,1.204,2526,2.142,2527,5.152,2528,5.435,2529,1.204,2530,1.204,2531,1.204,2532,1.204,2533,1.204,2534,1.204,2535,1.204,2536,2.142,2537,1.204,2538,2.893,2539,1.204,2540,2.142,2541,1.204,2542,1.204,2543,1.204,2544,1.204,2545,1.204,2546,1.204,2547,1.204,2548,1.204,2549,2.142,2550,1.204,2551,2.893,2552,1.204,2553,2.142,2554,2.893,2555,3.508,2556,1.204,2557,1.204,2558,1.204,2559,1.204,2560,1.204,2561,1.204,2562,1.204,2563,1.204,2564,1.204,2565,1.204,2566,1.204,2567,1.204,2568,1.204,2569,1.204,2570,3.508,2571,2.142,2572,2.142,2573,1.204,2574,2.142,2575,2.142,2576,1.204,2577,1.204,2578,1.204,2579,1.204,2580,1.204,2581,1.204,2582,2.142,2583,1.204,2584,1.204,2585,3.508,2586,2.893,2587,1.893,2588,1.204,2589,1.204,2590,1.204,2591,1.204,2592,2.142,2593,1.204,2594,1.204,2595,2.142,2596,1.204,2597,3.508,2598,2.893,2599,1.204,2600,1.204,2601,1.204,2602,2.142,2603,1.204,2604,1.204,2605,1.204,2606,2.142,2607,1.204,2608,1.204,2609,1.204,2610,1.204,2611,1.204,2612,5.685,2613,1.204,2614,1.204,2615,1.204,2616,1.204,2617,2.142,2618,1.204,2619,1.204,2620,1.204,2621,2.893,2622,1.204,2623,1.204,2624,1.204,2625,1.204,2626,1.204,2627,1.204,2628,1.204,2629,1.204,2630,1.204,2631,1.204,2632,1.204,2633,1.204,2634,1.204,2635,1.204,2636,1.204,2637,1.204,2638,1.204,2639,1.204,2640,1.204,2641,1.204,2642,1.204,2643,1.204,2644,1.204,2645,1.204,2646,1.204,2647,2.142,2648,1.204,2649,1.204,2650,1.204,2651,2.142,2652,2.142,2653,4.021,2654,1.204,2655,1.204,2656,1.204,2657,1.204,2658,1.204,2659,1.204,2660,1.204,2661,1.204,2662,1.204,2663,1.204,2664,1.204,2665,1.204,2666,1.204,2667,1.204,2668,1.204,2669,2.142,2670,1.204,2671,1.204,2672,1.204,2673,1.204,2674,2.893,2675,1.204,2676,1.204,2677,2.142,2678,1.204,2679,1.204,2680,1.204,2681,1.204,2682,1.204,2683,1.204,2684,1.204,2685,1.204,2686,1.204,2687,1.204,2688,1.204,2689,1.204,2690,1.204,2691,1.204,2692,1.204,2693,1.204,2694,1.204,2695,1.204,2696,1.204,2697,2.142,2698,1.204,2699,1.204,2700,1.204,2701,1.204,2702,1.204,2703,1.204,2704,1.204,2705,1.204,2706,1.204,2707,1.204,2708,1.204,2709,3.508,2710,2.142,2711,1.204,2712,1.204,2713,1.204,2714,1.204,2715,1.204,2716,1.204,2717,2.893,2718,1.204,2719,1.204,2720,1.204,2721,1.204,2722,1.204,2723,1.204,2724,1.204,2725,2.142,2726,1.204,2727,1.204,2728,1.204,2729,1.204,2730,1.204,2731,1.204,2732,1.204,2733,1.204,2734,1.204,2735,1.204]],["title/modules.html",[85,2.864]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.207,85,2.804,124,4.478,128,4.207,129,3.98,130,4.207,131,3.617,132,3.787,133,4.207,134,4.207,135,3.787,136,4.207,658,6.886,1207,3.98,2282,7.41,2342,5.274,2736,9.173,2737,9.215,2738,5.965]],["title/overview.html",[2739,5.387]],["body/overview.html",[2,1.52,10,0.009,13,5.133,17,4.137,27,0.003,28,0.005,29,0.003,31,1.566,83,0.969,84,5.244,85,1.615,86,1.667,87,1.782,88,1.782,89,1.782,90,1.782,91,1.782,92,3.037,93,3.037,94,3.037,95,2.632,96,1.36,97,1.782,124,6.801,125,3.037,126,3.037,127,3.037,128,5.783,129,5.38,130,5.424,131,5.104,132,4.883,133,4.253,134,5.935,135,5.012,136,6.265,137,4.444,271,0.553,297,3.037,467,4.664,499,3.037,500,3.037,501,3.037,553,1.436,609,5.133,681,2.775,746,3.037,748,3.037,749,3.037,765,4.883,767,4.664,822,3.037,824,3.037,825,4.253,1143,4.47,1153,4.47,1155,4.664,1203,3.037,1204,3.037,1205,3.037,1206,3.037,1207,5.133,1208,4.253,1338,3.037,1339,3.037,1340,3.037,1490,3.037,1491,3.037,1492,3.037,1493,4.253,1744,3.037,1745,3.037,1746,3.037,1769,3.037,1770,3.037,1771,3.037,2054,3.037,2075,3.037,2077,3.037,2078,3.037,2449,3.037,2739,3.037,2740,3.435,2741,3.435,2742,3.435]],["title/miscellaneous/variables.html",[2228,2.606,2743,4.732]],["body/miscellaneous/variables.html",[3,0.025,10,0.009,27,0.002,28,0.003,29,0.002,35,0.195,37,0.52,40,1.322,45,0.615,46,0.672,49,0.475,56,0.989,61,1.257,63,0.84,64,0.736,72,1.602,81,1.546,96,2.454,137,1.988,138,1.422,155,0.913,169,2.407,170,1.732,171,2.407,172,1.556,235,1.533,272,1.422,283,1.602,293,0.865,319,1.556,330,1.023,333,2.407,335,1.664,337,2.407,338,4.33,339,1.556,340,2.407,341,1.556,342,1.556,343,1.556,351,4.248,356,2.237,357,1.556,412,2.397,474,1.891,570,1.023,581,2.793,616,2.407,619,2.407,629,1.422,636,2.131,668,1.422,669,1.422,671,1.422,682,1.422,691,1.322,704,2.407,706,3.129,707,3.129,710,1.117,744,3.092,753,1.988,754,2.237,757,1.988,758,2.237,787,2.407,804,3.935,806,3.555,846,2.556,855,1.664,862,2.645,866,1.988,881,5.088,900,0.947,978,2.101,1009,1.067,1019,4.764,1020,4.764,1024,1.988,1025,1.422,1026,2.407,1042,2.237,1043,1.556,1049,1.422,1052,0.827,1055,2.251,1078,2.237,1079,1.556,1147,2.407,1149,2.237,1175,3.129,1191,1.322,1229,2.237,1279,1.422,1290,2.237,1291,1.556,1373,2.237,1381,1.322,1382,2.237,1393,2.237,1476,1.422,1485,2.237,1511,3.129,1512,2.908,1553,5.482,1555,3.935,1575,4.764,1580,4.427,1626,1.422,1627,2.407,1634,1.556,1636,1.422,1643,2.407,1644,1.556,1645,2.407,1646,1.422,1647,2.407,1648,1.556,1649,2.407,1650,1.556,1651,2.407,1652,1.556,1653,2.634,1655,2.634,1678,1.556,1777,3.129,1778,2.908,1819,2.237,1886,3.425,1921,1.422,1946,1.556,1949,2.237,1950,1.556,1973,1.422,1974,3.129,1979,2.407,1987,1.556,2100,2.407,2104,2.407,2133,1.556,2134,2.634,2135,1.556,2136,2.634,2137,2.634,2138,2.634,2139,2.634,2140,1.556,2145,1.556,2146,2.634,2152,2.634,2153,2.634,2154,2.634,2155,1.556,2156,2.634,2157,2.634,2158,1.556,2159,2.634,2163,1.556,2164,1.556,2166,2.634,2167,4.03,2168,2.634,2169,1.556,2171,1.556,2172,1.556,2173,1.556,2174,1.556,2175,1.556,2228,1.241,2587,2.634,2743,1.556,2744,2.98,2745,1.76,2746,2.98,2747,1.76,2748,1.76,2749,1.76,2750,1.76,2751,3.874,2752,1.76,2753,1.76,2754,1.76,2755,2.98,2756,2.98,2757,3.874,2758,2.98,2759,1.76,2760,4.558,2761,5.099,2762,2.98,2763,1.76,2764,2.98,2765,1.76,2766,1.76,2767,1.76,2768,2.98,2769,1.76,2770,1.76,2771,1.76,2772,1.76,2773,1.76,2774,1.76,2775,1.76,2776,1.76,2777,1.76,2778,1.76,2779,1.76,2780,1.76,2781,2.98,2782,2.98,2783,4.558,2784,5.897,2785,3.874,2786,3.874,2787,3.874,2788,5.897,2789,5.897,2790,1.76,2791,2.98,2792,2.98,2793,2.98,2794,4.558,2795,1.76,2796,1.76,2797,1.76,2798,1.76,2799,1.76,2800,1.76,2801,1.76,2802,1.76,2803,1.76,2804,1.76,2805,1.76,2806,1.76,2807,2.98,2808,1.76,2809,1.76,2810,1.76,2811,1.76,2812,1.76,2813,1.76,2814,1.76,2815,1.76,2816,1.76,2817,1.76,2818,1.76,2819,1.76,2820,1.76,2821,4.558,2822,1.76,2823,3.874,2824,1.76,2825,1.76,2826,4.558,2827,1.76,2828,1.76,2829,1.76,2830,1.76,2831,1.76,2832,2.98,2833,2.98,2834,2.98,2835,2.98,2836,2.98,2837,2.98,2838,2.98,2839,2.98,2840,1.76]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":900,"title":{},"body":{"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["0.25.4",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1424,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"injectables/MailerService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["1.1",{"_index":2302,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2365,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2384,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2393,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2395,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2314,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2321,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2322,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2335,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2348,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2353,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2354,"title":{},"body":{"license.html":{}}}],["10",{"_index":1955,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2707,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2479,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2710,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2723,"title":{},"body":{"license.html":{}}}],["1024",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["12",{"_index":2740,"title":{},"body":{"overview.html":{}}}],["15",{"_index":2741,"title":{},"body":{"overview.html":{}}}],["16",{"_index":316,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":297,"title":{},"body":{"classes/Application.html":{},"overview.html":{}}}],["2",{"_index":2449,"title":{},"body":{"license.html":{},"overview.html":{}}}],["2).join(path.sep",{"_index":994,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2300,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2388,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2455,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2440,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2447,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2474,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2482,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2488,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2496,"title":{},"body":{"license.html":{}}}],["200",{"_index":1428,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1420,"title":{},"body":{"controllers/HealthController.html":{}}}],["25",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":1058,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["3",{"_index":374,"title":{},"body":{"classes/Application.html":{}}}],["3.0",{"_index":2390,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2498,"title":{},"body":{"license.html":{}}}],["3.1.3",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2499,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2481,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2473,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2535,"title":{},"body":{"license.html":{}}}],["30",{"_index":2593,"title":{},"body":{"license.html":{}}}],["300",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":307,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2571,"title":{},"body":{"license.html":{}}}],["5.1.2",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2595,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2613,"title":{},"body":{"license.html":{}}}],["5.9.20",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":536,"title":{},"body":{"injectables/ApplicationsService.html":{},"license.html":{}}}],["51",{"_index":381,"title":{},"body":{"classes/Application.html":{}}}],["512",{"_index":2057,"title":{},"body":{"controllers/UsersController.html":{}}}],["59",{"_index":2742,"title":{},"body":{"overview.html":{}}}],["6.4.10",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":449,"title":{},"body":{"controllers/ApplicationsController.html":{},"license.html":{}}}],["64",{"_index":1035,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":2054,"title":{},"body":{"controllers/UsersController.html":{},"overview.html":{}}}],["_",{"_index":401,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":1790,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1794,"title":{},"body":{"injectables/StorageService.html":{}}}],["_encoding",{"_index":1887,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":955,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":962,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":956,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":964,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":689,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_handleapikey",{"_index":684,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handleapikey(req",{"_index":692,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession",{"_index":685,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession(req",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_id",{"_index":1437,"title":{},"body":{"interfaces/ISession.html":{}}}],["_req",{"_index":2047,"title":{},"body":{"controllers/UsersController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_size",{"_index":1882,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":1883,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":1885,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_value",{"_index":884,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2691,"title":{},"body":{"license.html":{}}}],["abort",{"_index":1838,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":1867,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1854,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1864,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1835,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2456,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2465,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":984,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2541,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1853,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":1831,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":880,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":412,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["account/${activation.token",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["account/:token",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{}}}],["accurate",{"_index":2735,"title":{},"body":{"license.html":{}}}],["action",{"_index":1653,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2605,"title":{},"body":{"license.html":{}}}],["activate",{"_index":744,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["activateaccount",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activateaccount(@param(\"token",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{}}}],["activateaccount(token",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activated",{"_index":1611,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activation.deleteone",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email.ts",{"_index":2159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.mjml",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activation.schema",{"_index":760,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["activation.schema.ts",{"_index":1974,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":1976,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":1983,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":1977,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":1980,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":1981,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":1982,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["active",{"_index":860,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["actually",{"_index":1958,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":2734,"title":{},"body":{"license.html":{}}}],["addition",{"_index":2367,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2450,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2519,"title":{},"body":{"license.html":{}}}],["address",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2560,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2389,"title":{},"body":{"license.html":{}}}],["again",{"_index":1476,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2598,"title":{},"body":{"license.html":{}}}],["agent",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2546,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2693,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2616,"title":{},"body":{"license.html":{}}}],["all(@currentuser(\"id",{"_index":480,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["all(uid",{"_index":444,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["alleging",{"_index":2607,"title":{},"body":{"license.html":{}}}],["allow",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{},"license.html":{}}}],["allowed",{"_index":428,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["alone",{"_index":2545,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":1696,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":1691,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["already",{"_index":410,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["alter",{"_index":2508,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2283,"title":{},"body":{"index.html":{}}}],["amount",{"_index":426,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{}}}],["angular",{"_index":2254,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2648,"title":{},"body":{"license.html":{}}}],["api",{"_index":371,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["api_key_secret",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":2261,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2377,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2491,"title":{},"body":{"license.html":{}}}],["application",{"_index":270,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{},"license.html":{}}}],["application.comparekey(key",{"_index":718,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.deleteone",{"_index":542,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":470,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":907,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:14",{"_index":923,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.dto.ts:9",{"_index":915,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.generatekey(this.config.get(\"api_key_secret",{"_index":544,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.hassufficientscopes(scopes",{"_index":725,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.name",{"_index":506,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["application.save",{"_index":550,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes",{"_index":546,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes.addtoset(scope",{"_index":549,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.todto",{"_index":485,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.uid",{"_index":727,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.updateone",{"_index":728,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application[\"name",{"_index":533,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application[\"uid",{"_index":534,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationalreadyexists",{"_index":402,"title":{"classes/ApplicationAlreadyExists.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applicationalreadyexists(name",{"_index":538,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationdto",{"_index":274,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":413,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applications",{"_index":427,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["applications.controller",{"_index":503,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":530,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.map(application",{"_index":484,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["applications.service",{"_index":468,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":356,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.comparekey",{"_index":365,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.generatekey",{"_index":369,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.hassufficientscopes",{"_index":393,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":396,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":358,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":439,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationscopes",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["applicationsmodule",{"_index":128,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":467,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2669,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":565,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1467,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["array.from(new",{"_index":547,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["arrayunique",{"_index":924,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["arrayunique({message",{"_index":916,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["asserting",{"_index":2599,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2637,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":552,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["atob(req.headers.authorization",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attached",{"_index":2326,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2507,"title":{},"body":{"license.html":{}}}],["auth",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["auth.controller",{"_index":752,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.ts",{"_index":2136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_optional",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_scopes",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":566,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":129,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2291,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2643,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":609,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":345,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":2342,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avatar",{"_index":1005,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["avatar.filename",{"_index":2059,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id",{"_index":2060,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id).then(user",{"_index":2064,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.size",{"_index":2061,"title":{},"body":{"controllers/UsersController.html":{}}}],["avoid",{"_index":375,"title":{},"body":{"classes/Application.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":2340,"title":{},"body":{"license.html":{}}}],["back",{"_index":2589,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2284,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":999,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1677,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1658,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64",{"_index":378,"title":{},"body":{"classes/Application.html":{}}}],["base64\").tostring(\"binary",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basis",{"_index":2437,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1939,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1957,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1954,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2445,"title":{},"body":{"license.html":{}}}],["before",{"_index":866,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"miscellaneous/variables.html":{}}}],["behalf",{"_index":2540,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2485,"title":{},"body":{"license.html":{}}}],["below",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below.\\n",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beneficial",{"_index":2418,"title":{},"body":{"license.html":{}}}],["binary\")).tostring(\"base64",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":827,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":828,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":829,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":833,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":461,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{}}}],["body[\"error",{"_index":1666,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":355,"title":{},"body":{"classes/Application.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/UpdateFileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2692,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2679,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2737,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"modules.html":{}}}],["btoa",{"_index":333,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["btoa(key",{"_index":392,"title":{},"body":{"classes/Application.html":{}}}],["bucket",{"_index":1383,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1394,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":1886,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(this.key",{"_index":368,"title":{},"body":{"classes/Application.html":{}}}],["buffer.tostring",{"_index":1591,"title":{},"body":{"injectables/MailerService.html":{}}}],["building",{"_index":2248,"title":{},"body":{"index.html":{}}}],["bull",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":130,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":825,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1210,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1216,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1808,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1797,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":1877,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":1848,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2685,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1553,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2464,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1830,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":2053,"title":{},"body":{"controllers/UsersController.html":{}}}],["callback(null",{"_index":1834,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2332,"title":{},"body":{"license.html":{}}}],["catch",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["catch(error",{"_index":364,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1466,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1469,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1842,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2408,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2459,"title":{},"body":{"license.html":{}}}],["cb",{"_index":891,"title":{},"body":{"classes/Counter.html":{}}}],["changed",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed.email",{"_index":2102,"title":{},"body":{"injectables/UsersService.html":{}}}],["changed.email.ts",{"_index":2167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["changed.mjml",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":2654,"title":{},"body":{"license.html":{}}}],["characters",{"_index":914,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["charge",{"_index":2513,"title":{},"body":{"license.html":{}}}],["choice",{"_index":2477,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2536,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":978,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":1893,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":993,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunkalreadyuploaded",{"_index":843,"title":{"classes/ChunkAlreadyUploaded.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["chunkindex",{"_index":848,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["chunks",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2644,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2601,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2374,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2373,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":271,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":1940,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":1941,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2542,"title":{},"body":{"license.html":{}}}],["client",{"_index":1393,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1386,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1784,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1382,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1385,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1387,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1390,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1388,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1389,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1392,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":1948,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":499,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":500,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_providers",{"_index":501,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":746,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":748,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":747,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":749,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":822,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":823,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":824,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1203,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1205,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1204,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1206,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_foldersmodule",{"_index":1338,"title":{},"body":{"modules/FoldersModule.html":{},"overview.html":{}}}],["cluster_foldersmodule_exports",{"_index":1339,"title":{},"body":{"modules/FoldersModule.html":{},"overview.html":{}}}],["cluster_foldersmodule_providers",{"_index":1340,"title":{},"body":{"modules/FoldersModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1490,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1491,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1492,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule",{"_index":1744,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_exports",{"_index":1745,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_providers",{"_index":1746,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1769,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1770,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1771,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2075,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2077,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2076,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2078,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2323,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1667,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["combination",{"_index":2315,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2350,"title":{},"body":{"license.html":{}}}],["come",{"_index":2588,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2663,"title":{},"body":{"license.html":{}}}],["commit",{"_index":863,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["common",{"_index":2401,"title":{},"body":{"license.html":{}}}],["comparekey",{"_index":276,"title":{},"body":{"classes/Application.html":{}}}],["comparepassword",{"_index":1922,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1646,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2585,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2574,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2471,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2660,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2694,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2420,"title":{},"body":{"license.html":{}}}],["config",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1220,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation",{"_index":1009,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["confirmation.deleteone",{"_index":2111,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email",{"_index":2103,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email.ts",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.mjml",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation.newemail",{"_index":2110,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.schema",{"_index":2082,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["confirmation.schema.ts",{"_index":1026,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":1029,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":1038,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":1032,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":1034,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":1036,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":1037,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":2108,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmemail",{"_index":2008,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["confirmemail(@param(\"token",{"_index":2069,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmemail(token",{"_index":2011,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["conflict",{"_index":2688,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":404,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["connect",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":1751,"title":{},"body":{"injectables/SessionsService.html":{}}}],["connectmongo(session",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2652,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2641,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":913,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["constraint1'})@maxlength(32",{"_index":910,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(nodemailer_module_options",{"_index":1559,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1821,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectconnection",{"_index":1760,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(_value",{"_index":882,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(applications",{"_index":686,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(chunkindex",{"_index":845,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(config",{"_index":509,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(connection",{"_index":1750,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(emailsqueue",{"_index":830,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1106,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(files",{"_index":1345,"title":{},"body":{"injectables/FoldersService.html":{}}}],["constructor(folders",{"_index":1238,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(id",{"_index":870,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(logger",{"_index":1463,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["constructor(mailer",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(name",{"_index":405,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{}}}],["constructor(options",{"_index":959,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesProcessor.html":{},"controllers/FoldersController.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"controllers/SessionsController.html":{}}}],["constructor(query",{"_index":1015,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["constructor(storage",{"_index":1223,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["constructor(users",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{}}}],["construe",{"_index":2706,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2704,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["contained",{"_index":2529,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2370,"title":{},"body":{"license.html":{}}}],["content",{"_index":1124,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2369,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":737,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2411,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2501,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2309,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2320,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2316,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2303,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2319,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2611,"title":{},"body":{"license.html":{}}}],["control",{"_index":2402,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2400,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":478,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1157,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"folders",{"_index":1328,"title":{},"body":{"controllers/FoldersController.html":{}}}],["controller(\"health",{"_index":1413,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"sessions",{"_index":1732,"title":{},"body":{"controllers/SessionsController.html":{}}}],["controller(\"users",{"_index":2035,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2399,"title":{},"body":{"license.html":{}}}],["converted",{"_index":377,"title":{},"body":{"classes/Application.html":{}}}],["conveyed",{"_index":2364,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1707,"title":{},"body":{"classes/SessionDto.html":{}}}],["copy",{"_index":2506,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2492,"title":{},"body":{"license.html":{}}}],["correct",{"_index":1011,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["correction",{"_index":2640,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2514,"title":{},"body":{"license.html":{}}}],["counter",{"_index":872,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2680,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2128,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2312,"title":{},"body":{"license.html":{}}}],["create",{"_index":441,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(@body",{"_index":1329,"title":{},"body":{"controllers/FoldersController.html":{}}}],["create(data",{"_index":512,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{}}}],["create(dto",{"_index":446,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["create(email",{"_index":2089,"title":{},"body":{"injectables/UsersService.html":{}}}],["createabsolutelink",{"_index":1564,"title":{},"body":{"injectables/MailerService.html":{}}}],["createabsolutelink(relativelink",{"_index":1568,"title":{},"body":{"injectables/MailerService.html":{}}}],["createapplicationdto",{"_index":447,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1496,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1497,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1501,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1502,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":277,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createfolderdto",{"_index":933,"title":{"classes/CreateFolderDto.html":{}},"body":{"classes/CreateFolderDto.html":{},"controllers/FoldersController.html":{},"coverage.html":{}}}],["createhmac(\"sha256",{"_index":341,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["createmaileroptions",{"_index":1541,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator((field",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":957,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":966,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2308,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":1787,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":958,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":969,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creating",{"_index":867,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["creation",{"_index":2310,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":2487,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1456,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2606,"title":{},"body":{"license.html":{}}}],["crucial",{"_index":854,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["crypto",{"_index":319,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.binarylike",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(size",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.timingsafeequal(buffer.from(hmac_sha256(key",{"_index":367,"title":{},"body":{"classes/Application.html":{}}}],["ctx",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":1721,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentsession.identifier",{"_index":1737,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentuser",{"_index":474,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser(\"id",{"_index":487,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{}}}],["cursor",{"_index":1263,"title":{},"body":{"injectables/FilesService.html":{}}}],["customdecorator",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2653,"title":{},"body":{"license.html":{}}}],["data",{"_index":338,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.displayname},\\n",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.displayname}\\n",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.filename",{"_index":1273,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.folder",{"_index":1254,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.hidden",{"_index":1275,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.interface",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{}}}],["data.interface.ts",{"_index":1439,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["data.link",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.name",{"_index":545,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FoldersService.html":{}}}],["data.parent",{"_index":1357,"title":{},"body":{"injectables/FoldersService.html":{}}}],["data.public",{"_index":1277,"title":{},"body":{"injectables/FilesService.html":{}}}],["date",{"_index":289,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1040,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2587,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1414,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2494,"title":{},"body":{"license.html":{}}}],["death",{"_index":2670,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2603,"title":{},"body":{"license.html":{}}}],["decode",{"_index":384,"title":{},"body":{"classes/Application.html":{}}}],["decorator",{"_index":1176,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":294,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":475,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["decorators/optional",{"_index":1148,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/recaptcha",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/scopes.decorator",{"_index":1150,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["decrement",{"_index":875,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":351,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["defective",{"_index":2636,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2626,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2681,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2404,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2301,"title":{},"body":{"license.html":{}}}],["deletable",{"_index":1051,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":462,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id",{"_index":490,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{}}}],["delete(\"/:id/revoke",{"_index":1738,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"all",{"_index":1741,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"logout",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id",{"_index":453,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["delete('/:id')@usescopes(applicationscopes.files_write",{"_index":1129,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('/:id/revoke",{"_index":1724,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('all",{"_index":1727,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('logout",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@currentuser(\"id",{"_index":1160,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(id",{"_index":971,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(query",{"_index":515,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{}}}],["delete(uid",{"_index":1128,"title":{},"body":{"controllers/FilesController.html":{}}}],["deleted",{"_index":855,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deleted.todto",{"_index":1163,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":943,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deletemany(query",{"_index":1262,"title":{},"body":{"injectables/FilesService.html":{}}}],["deleteone",{"_index":442,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteone(@body",{"_index":2066,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(@currentuser(\"id",{"_index":491,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["deleteone(query",{"_index":519,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{}}}],["deleteone(uid",{"_index":452,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["deleteone(undefined",{"_index":2015,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(user",{"_index":2091,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletes",{"_index":1258,"title":{},"body":{"injectables/FilesService.html":{}}}],["deleteuserdto",{"_index":947,"title":{"classes/DeleteUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deletion",{"_index":1261,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":2559,"title":{},"body":{"license.html":{}}}],["described",{"_index":2339,"title":{},"body":{"license.html":{}}}],["description",{"_index":2255,"title":{},"body":{"index.html":{},"license.html":{}}}],["desirable",{"_index":2729,"title":{},"body":{"license.html":{}}}],["destroy",{"_index":864,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["detailed",{"_index":2566,"title":{},"body":{"license.html":{}}}],["development",{"_index":2262,"title":{},"body":{"index.html":{}}}],["device",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["didn't",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{}}}],["different",{"_index":2517,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2722,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":343,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2406,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2409,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2608,"title":{},"body":{"license.html":{}}}],["directory",{"_index":980,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"license.html":{}}}],["dirname",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1535,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["disabled",{"_index":1174,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2621,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2526,"title":{},"body":{"license.html":{}}}],["disk",{"_index":983,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["diskhealthindicator",{"_index":1404,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":952,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1824,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":960,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":1909,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["displayname",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["displaynametaken",{"_index":996,"title":{"classes/DisplayNameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["distinguishing",{"_index":2713,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2434,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2727,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2446,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2724,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2452,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2563,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2617,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1415,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1405,"title":{},"body":{"controllers/HealthController.html":{}}}],["doc",{"_index":1085,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["doctrines",{"_index":2493,"title":{},"body":{"license.html":{}}}],["document",{"_index":273,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1843,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1127,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(uid",{"_index":1131,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2705,"title":{},"body":{"license.html":{}}}],["dto",{"_index":451,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/UsersController.html":{}}}],["dto).then(application",{"_index":496,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto).then(file",{"_index":1165,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto).then(folder",{"_index":1337,"title":{},"body":{"controllers/FoldersController.html":{}}}],["dto).then(user",{"_index":2043,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/application.dto",{"_index":329,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/create",{"_index":469,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["dto/delete",{"_index":2032,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/file.dto",{"_index":1072,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{}}}],["dto/folder.dto",{"_index":1289,"title":{},"body":{"classes/Folder.html":{},"controllers/FoldersController.html":{}}}],["dto/forgot",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/generate",{"_index":472,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/login.dto",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/partial",{"_index":2033,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/reset",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":1730,"title":{},"body":{"controllers/SessionsController.html":{}}}],["dto/update",{"_index":1145,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto/user.dto",{"_index":1943,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2553,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1507,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2272,"title":{},"body":{"index.html":{}}}],["each",{"_index":920,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["eachasync(async",{"_index":1264,"title":{},"body":{"injectables/FilesService.html":{}}}],["earlier",{"_index":2345,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2714,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2441,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2249,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1581,"title":{},"body":{"injectables/MailerService.html":{},"dependencies.html":{}}}],["ejs.render(this.transpilemjml(mjml",{"_index":1592,"title":{},"body":{"injectables/MailerService.html":{}}}],["elements",{"_index":918,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["email",{"_index":636,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailTaken.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email!'})@isnotempty({message",{"_index":1374,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["email/${confirmation.token",{"_index":2124,"title":{},"body":{"injectables/UsersService.html":{}}}],["email/:token",{"_index":2013,"title":{},"body":{"controllers/UsersController.html":{}}}],["emailchanged",{"_index":2100,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailchanged(olduser.email",{"_index":2115,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation",{"_index":1024,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmation(newemail",{"_index":2122,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation.name",{"_index":2083,"title":{},"body":{"modules/UsersModule.html":{}}}],["emailconfirmations",{"_index":2086,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmationschema",{"_index":1042,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":1044,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1519,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/email",{"_index":2101,"title":{},"body":{"injectables/UsersService.html":{}}}],["emails/password",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["emails/user",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsqueue",{"_index":834,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["emailtaken",{"_index":1002,"title":{"classes/EmailTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["empty",{"_index":929,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring",{"_index":1913,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@maxlength(32",{"_index":1911,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@minlength(8",{"_index":1915,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring",{"_index":950,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring()@maxlength(255",{"_index":938,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/UpdateFileDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":1692,"title":{},"body":{"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":1698,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring({message",{"_index":909,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["encoding",{"_index":1448,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2615,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2701,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1219,"title":{},"body":{"modules/FilesModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["engine.interface",{"_index":977,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1765,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1766,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1767,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1768,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1782,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1783,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":987,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["ensure",{"_index":1010,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["enter",{"_index":1372,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["entire",{"_index":2631,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2397,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2307,"title":{},"body":{"license.html":{}}}],["enum",{"_index":353,"title":{},"body":{"classes/Application.html":{}}}],["enumerations",{"_index":2229,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/application",{"_index":531,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/CreateApplicationDto.html":{}}}],["env.development",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2495,"title":{},"body":{"license.html":{}}}],["err",{"_index":1181,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":982,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(errors.join(\"\\n",{"_index":1604,"title":{},"body":{"injectables/MailerService.html":{}}}],["error.code",{"_index":986,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error.exception.ts",{"_index":1461,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1465,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1468,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["errorcodes",{"_index":1665,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1673,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1671,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1672,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1669,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1670,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":1598,"title":{},"body":{"injectables/MailerService.html":{}}}],["errors.length",{"_index":1603,"title":{},"body":{"injectables/MailerService.html":{}}}],["eslint",{"_index":1534,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["eslint/no",{"_index":1538,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2642,"title":{},"body":{"license.html":{}}}],["even",{"_index":2665,"title":{},"body":{"license.html":{}}}],["event",{"_index":2614,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":874,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":899,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":424,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{}}}],["except",{"_index":2463,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1172,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1472,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1462,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":432,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/FileDto.html":{},"classes/FolderDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":400,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["excluding",{"_index":2602,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2677,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2427,"title":{},"body":{"license.html":{}}}],["execpopulate",{"_index":1087,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["executable",{"_index":2329,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2396,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2328,"title":{},"body":{"license.html":{}}}],["exist",{"_index":415,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["existing",{"_index":865,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["exists",{"_index":411,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"injectables/FoldersService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":1350,"title":{},"body":{"injectables/FoldersService.html":{},"injectables/UsersService.html":{}}}],["expires",{"_index":1031,"title":{},"body":{"classes/EmailConfirmation.html":{},"interfaces/ISession.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":1027,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2579,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2435,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.session",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IRequest.html":{}}}],["express.sessioncookiedata",{"_index":1708,"title":{},"body":{"classes/SessionDto.html":{}}}],["express.sessiondata",{"_index":1441,"title":{},"body":{"interfaces/ISessionData.html":{}}}],["expressed",{"_index":2623,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendMailOptions.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["extent",{"_index":2359,"title":{},"body":{"license.html":{}}}],["extname",{"_index":2050,"title":{},"body":{"controllers/UsersController.html":{}}}],["factory",{"_index":1518,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":564,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1786,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1788,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1540,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1542,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2533,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2573,"title":{},"body":{"license.html":{}}}],["failed",{"_index":1644,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2583,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2661,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2489,"title":{},"body":{"license.html":{}}}],["false",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["fee",{"_index":2537,"title":{},"body":{"license.html":{}}}],["field",{"_index":1191,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":1449,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1117,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2414,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file.deletable",{"_index":1268,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.deleteone",{"_index":1266,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.dto",{"_index":1146,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto.ts",{"_index":1900,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.dto.ts:11",{"_index":1902,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:14",{"_index":1904,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:17",{"_index":1905,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:7",{"_index":1901,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.filename",{"_index":1199,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["file.folder",{"_index":1272,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.hidden",{"_index":1274,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.id",{"_index":1200,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["file.interface",{"_index":1811,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1447,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1232,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":945,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.name",{"_index":1217,"title":{},"body":{"modules/FilesModule.html":{}}}],["file.public",{"_index":1276,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.save",{"_index":1278,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.size",{"_index":1201,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1166,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.uid",{"_index":1271,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"deletable",{"_index":1248,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"filename",{"_index":1249,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"hidden",{"_index":1250,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"id",{"_index":1251,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"public",{"_index":1252,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"size",{"_index":1253,"title":{},"body":{"injectables/FilesService.html":{}}}],["filedto",{"_index":1050,"title":{"classes/FileDto.html":{}},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileid",{"_index":946,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1052,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["filenotdeletable",{"_index":852,"title":{"classes/FileNotDeletable.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"injectables/FilesService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["filenotfound",{"_index":856,"title":{"classes/FileNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["files",{"_index":1113,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["files.controller",{"_index":1212,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1142,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1845,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map(file",{"_index":1197,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1213,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":1868,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1144,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files:read",{"_index":2234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:write",{"_index":2236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_read",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_write",{"_index":2235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fileschema",{"_index":1078,"title":{},"body":{"classes/File.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileschema.methods.todto",{"_index":1088,"title":{},"body":{"classes/File.html":{}}}],["fileschema.post(\"save",{"_index":1083,"title":{},"body":{"classes/File.html":{}}}],["fileschema.pre(\"find",{"_index":1080,"title":{},"body":{"classes/File.html":{}}}],["fileschema.pre(\"findone",{"_index":1082,"title":{},"body":{"classes/File.html":{}}}],["filescontroller",{"_index":1125,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1194,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["filesmodule",{"_index":131,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1208,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesqueue",{"_index":832,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1143,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":1103,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1865,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":2048,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(file.mimetype",{"_index":2052,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":2051,"title":{},"body":{"controllers/UsersController.html":{}}}],["filter",{"_index":1173,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":1852,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1668,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":516,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["final",{"_index":370,"title":{},"body":{"classes/Application.html":{}}}],["finally",{"_index":2580,"title":{},"body":{"license.html":{}}}],["find",{"_index":482,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{}}}],["find(query",{"_index":521,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{}}}],["findone",{"_index":508,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(@currentuser(\"id",{"_index":1335,"title":{},"body":{"controllers/FoldersController.html":{}}}],["findone(query",{"_index":523,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(uid",{"_index":1321,"title":{},"body":{"controllers/FoldersController.html":{}}}],["finish",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finished",{"_index":1836,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":745,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2628,"title":{},"body":{"license.html":{}}}],["folder",{"_index":937,"title":{"classes/Folder.html":{}},"body":{"classes/CreateFolderDto.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ParentFolderNotFound.html":{},"classes/UpdateFileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["folder._id",{"_index":1257,"title":{},"body":{"injectables/FilesService.html":{},"injectables/FoldersService.html":{}}}],["folder.deleteone",{"_index":1365,"title":{},"body":{"injectables/FoldersService.html":{}}}],["folder.dto",{"_index":1327,"title":{},"body":{"controllers/FoldersController.html":{}}}],["folder.dto.ts",{"_index":935,"title":{},"body":{"classes/CreateFolderDto.html":{},"coverage.html":{}}}],["folder.dto.ts:11",{"_index":941,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.dto.ts:7",{"_index":939,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.name",{"_index":1076,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{}}}],["folder.parent",{"_index":1368,"title":{},"body":{"injectables/FoldersService.html":{}}}],["folder.save",{"_index":1369,"title":{},"body":{"injectables/FoldersService.html":{}}}],["folder.todto",{"_index":1332,"title":{},"body":{"controllers/FoldersController.html":{}}}],["folder.uid",{"_index":1364,"title":{},"body":{"injectables/FoldersService.html":{}}}],["folderalreadyexists",{"_index":1300,"title":{"classes/FolderAlreadyExists.html":{}},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"injectables/FoldersService.html":{},"classes/ParentFolderNotFound.html":{},"coverage.html":{}}}],["folderalreadyexists(data.name",{"_index":1360,"title":{},"body":{"injectables/FoldersService.html":{}}}],["folderdto",{"_index":1060,"title":{"classes/FolderDto.html":{}},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"coverage.html":{}}}],["foldernotfound",{"_index":1151,"title":{"classes/FolderNotFound.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/ParentFolderNotFound.html":{},"coverage.html":{}}}],["folders",{"_index":1158,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"injectables/UsersService.html":{}}}],["folders.controller",{"_index":1342,"title":{},"body":{"modules/FoldersModule.html":{}}}],["folders.errors",{"_index":1325,"title":{},"body":{"controllers/FoldersController.html":{},"injectables/FoldersService.html":{}}}],["folders.service",{"_index":1326,"title":{},"body":{"controllers/FoldersController.html":{},"modules/FoldersModule.html":{}}}],["folders:read",{"_index":2238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders:write",{"_index":2240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders_read",{"_index":2237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders_write",{"_index":2239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folderschema",{"_index":1290,"title":{},"body":{"classes/Folder.html":{},"modules/FoldersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["folderschema.methods.todto",{"_index":1298,"title":{},"body":{"classes/Folder.html":{}}}],["folderschema.post(\"save",{"_index":1296,"title":{},"body":{"classes/Folder.html":{}}}],["folderschema.pre(\"find",{"_index":1292,"title":{},"body":{"classes/Folder.html":{}}}],["folderschema.pre(\"findone",{"_index":1294,"title":{},"body":{"classes/Folder.html":{}}}],["folderschema.pre(\"save",{"_index":1295,"title":{},"body":{"classes/Folder.html":{}}}],["folderscontroller",{"_index":1317,"title":{"controllers/FoldersController.html":{}},"body":{"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"coverage.html":{}}}],["foldersmodule",{"_index":132,"title":{"modules/FoldersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["foldersservice",{"_index":1153,"title":{"injectables/FoldersService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":2366,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":407,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":743,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":579,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["form",{"_index":2324,"title":{},"body":{"license.html":{}}}],["format",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["forwardref",{"_index":1211,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{}}}],["foundation",{"_index":2708,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2247,"title":{},"body":{"index.html":{}}}],["free",{"_index":2425,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":973,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":988,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":991,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":1572,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":989,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(template).then(buffer",{"_index":1590,"title":{},"body":{"injectables/MailerService.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":985,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":287,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/Folder.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{}}}],["function(doc",{"_index":1084,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["function(next",{"_index":359,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":397,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["further",{"_index":2522,"title":{},"body":{"license.html":{}}}],["gcloud",{"_index":1785,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2386,"title":{},"body":{"license.html":{}}}],["generateapplicationkeydto",{"_index":471,"title":{"classes/GenerateApplicationKeyDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["generated",{"_index":346,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":335,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":388,"title":{},"body":{"classes/Application.html":{}}}],["generateid(32",{"_index":1045,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{},"classes/Folder.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generateid(9",{"_index":361,"title":{},"body":{"classes/Application.html":{}}}],["generatekey",{"_index":278,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["generatekey(query",{"_index":525,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generatekey(uid",{"_index":455,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["get(\"/:id",{"_index":1334,"title":{},"body":{"controllers/FoldersController.html":{}}}],["get(\"@me",{"_index":2036,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"confirm",{"_index":2068,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"download/:id",{"_index":1167,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"search/@:username",{"_index":2071,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id",{"_index":1322,"title":{},"body":{"controllers/FoldersController.html":{}}}],["get('@me')@usescopes(applicationscopes.users_read",{"_index":2019,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('confirm",{"_index":2012,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('download/:id')@optionalauth()@usescopes(applicationscopes.files_read",{"_index":1132,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('search/@:username",{"_index":2022,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":1402,"title":{},"body":{"controllers/HealthController.html":{}}}],["getclientip",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getsessions",{"_index":1717,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsessions(uid",{"_index":1720,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsize",{"_index":1890,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2243,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":897,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2712,"title":{},"body":{"license.html":{}}}],["global",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2385,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2658,"title":{},"body":{"license.html":{}}}],["google",{"_index":1391,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1380,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1825,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1384,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2504,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2358,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2442,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2419,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2738,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":912,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/UpdateFileDto.html":{}}}],["grow",{"_index":2279,"title":{},"body":{"index.html":{}}}],["guard",{"_index":385,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"classes/Application.html":{},"coverage.html":{}}}],["guards",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":477,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlefiledeletion",{"_index":1222,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1225,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["hapi/joi",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hashed",{"_index":1945,"title":{},"body":{"classes/User.html":{}}}],["hassufficientscopes",{"_index":279,"title":{},"body":{"classes/Application.html":{}}}],["having",{"_index":2356,"title":{},"body":{"license.html":{}}}],["headers",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1400,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1431,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1406,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1407,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1408,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1398,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1409,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":133,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2252,"title":{},"body":{"index.html":{}}}],["held",{"_index":2698,"title":{},"body":{"license.html":{}}}],["helmet",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2288,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2421,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2696,"title":{},"body":{"license.html":{}}}],["hey",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":1053,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/UpdateFileDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["hideschemaproperty",{"_index":1947,"title":{},"body":{"classes/User.html":{}}}],["hmac_sha256",{"_index":337,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hmac_sha256(key",{"_index":390,"title":{},"body":{"classes/Application.html":{}}}],["hook",{"_index":349,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1470,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.\\n",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1018,"title":{},"body":{"interfaces/Email.html":{},"injectables/MailerService.html":{}}}],["http",{"_index":1586,"title":{},"body":{"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1426,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2728,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":751,"title":{},"body":{"modules/AuthModule.html":{}}}],["https",{"_index":1585,"title":{},"body":{"injectables/MailerService.html":{}}}],["https://nestjs.com",{"_index":2295,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1648,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1637,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["id",{"_index":280,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1440,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"coverage.html":{}}}],["ii",{"_index":2462,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["implied",{"_index":2451,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2556,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2552,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2534,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incidental",{"_index":2651,"title":{},"body":{"license.html":{}}}],["include",{"_index":2549,"title":{},"body":{"license.html":{}}}],["included",{"_index":2562,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2398,"title":{},"body":{"license.html":{}}}],["including",{"_index":1259,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["incoming",{"_index":1920,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1445,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":1795,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2336,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1455,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1451,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["increment",{"_index":876,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2548,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2547,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2538,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2407,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2609,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2305,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2502,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2667,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2378,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2600,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2458,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2610,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2630,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["initial",{"_index":2325,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2596,"title":{},"body":{"license.html":{}}}],["inject",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["inject(forwardref",{"_index":1246,"title":{},"body":{"injectables/FilesService.html":{},"injectables/FoldersService.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":1758,"title":{},"body":{"injectables/SessionsService.html":{}}}],["injectmodel",{"_index":529,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":532,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":2105,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(file.name",{"_index":1247,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(folder.name",{"_index":1356,"title":{},"body":{"injectables/FoldersService.html":{}}}],["injectmodel(passwordreset.name",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(user.name",{"_index":2106,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(useractivation.name",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectqueue",{"_index":835,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":839,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":840,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2672,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2253,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2258,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2260,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insufficientscopes",{"_index":416,"title":{"classes/InsufficientScopes.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["intellectual",{"_index":2428,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2490,"title":{},"body":{"license.html":{}}}],["interface",{"_index":551,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":553,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/incoming",{"_index":1810,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1516,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1556,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["interfaces/session",{"_index":1731,"title":{},"body":{"controllers/SessionsController.html":{}}}],["interfaces/session.interface",{"_index":1759,"title":{},"body":{"injectables/SessionsService.html":{}}}],["interfaces/storage",{"_index":976,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1813,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":1814,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":731,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1182,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(result.error",{"_index":1675,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1459,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalid",{"_index":921,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["invalidapikey",{"_index":420,"title":{"classes/InvalidAPIKey.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["invalidavatarfiletype",{"_index":1004,"title":{"classes/InvalidAvatarFileType.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":781,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationtoken",{"_index":1008,"title":{"classes/InvalidEmailConfirmationToken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":782,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":783,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["ioredis",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISessionData.html":{},"guards/RecaptchaGuard.html":{},"classes/SessionDto.html":{},"dependencies.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":887,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":310,"title":{},"body":{"classes/Application.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":1689,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["isboolean",{"_index":1903,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["iscurrent",{"_index":1736,"title":{},"body":{"controllers/SessionsController.html":{}}}],["isemail",{"_index":1033,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":925,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isenum(applicationscopes",{"_index":931,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isession",{"_index":1435,"title":{"interfaces/ISession.html":{}},"body":{"interfaces/ISession.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["isessiondata",{"_index":587,"title":{"interfaces/ISessionData.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["isnotempty",{"_index":926,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":1487,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":908,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":927,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":940,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/UpdateFileDto.html":{}}}],["ispublic",{"_index":1138,"title":{},"body":{"controllers/FilesController.html":{}}}],["isstring",{"_index":928,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["iuaparser.ibrowser",{"_index":1442,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.idevice",{"_index":1443,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.ios",{"_index":1444,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["job",{"_index":1226,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1236,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1231,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["joi",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2286,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpeg",{"_index":1006,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["jpeg|jpg|png/gi",{"_index":2049,"title":{},"body":{"controllers/UsersController.html":{}}}],["js",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":1970,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2604,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2557,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2551,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2676,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2292,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":1600,"title":{},"body":{"injectables/MailerService.html":{}}}],["key",{"_index":281,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"classes/GenerateApplicationKeyDto.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{}}}],["key.dto",{"_index":473,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto.ts",{"_index":1378,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["key.dto.ts:2",{"_index":1379,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{}}}],["key.split",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{}}}],["kind",{"_index":2622,"title":{},"body":{"license.html":{}}}],["know",{"_index":386,"title":{},"body":{"classes/Application.html":{}}}],["known",{"_index":2532,"title":{},"body":{"license.html":{}}}],["language",{"_index":2703,"title":{},"body":{"license.html":{}}}],["large",{"_index":1110,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2349,"title":{},"body":{"license.html":{}}}],["lastused",{"_index":282,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["later",{"_index":1477,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2674,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2686,"title":{},"body":{"license.html":{}}}],["legal",{"_index":2306,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":372,"title":{},"body":{"classes/Application.html":{}}}],["lesser",{"_index":2387,"title":{},"body":{"license.html":{}}}],["level",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2528,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2649,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2355,"title":{},"body":{"license.html":{}}}],["license",{"_index":2298,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2520,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2346,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2276,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2338,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2453,"title":{},"body":{"license.html":{}}}],["limit",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["limitation",{"_index":2376,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2448,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1192,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1536,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["link",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":513,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"interfaces/ISessionData.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/UsersService.html":{}}}],["litigation",{"_index":2597,"title":{},"body":{"license.html":{}}}],["location",{"_index":2731,"title":{},"body":{"license.html":{}}}],["log",{"_index":1177,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":742,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1464,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["login",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["login(undefined",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.email.ts",{"_index":2156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logindto",{"_index":584,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2469,"title":{},"body":{"license.html":{}}}],["logout",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@session",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(session",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":1695,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1686,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":1693,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["look",{"_index":2733,"title":{},"body":{"license.html":{}}}],["loss",{"_index":2657,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2664,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2655,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":350,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["made",{"_index":2341,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1557,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["mail.options",{"_index":1705,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["mailer",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/UsersService.html":{}}}],["mailer.constants",{"_index":1513,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1514,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1515,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":134,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1498,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1505,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1517,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1493,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerservice",{"_index":765,"title":{"injectables/MailerService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2682,"title":{},"body":{"license.html":{}}}],["make",{"_index":2432,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2476,"title":{},"body":{"license.html":{}}}],["making",{"_index":2379,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2662,"title":{},"body":{"license.html":{}}}],["management",{"_index":2410,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2512,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1178,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":1116,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["marks",{"_index":2468,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2351,"title":{},"body":{"license.html":{}}}],["matter",{"_index":2695,"title":{},"body":{"license.html":{}}}],["max",{"_index":1978,"title":{},"body":{"classes/UserActivation.html":{}}}],["max(max_port",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":1979,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxactiveuploadsessionserror",{"_index":858,"title":{"classes/MaxActiveUploadSessionsError.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["maxfiles",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":425,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["maxlength",{"_index":296,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":942,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/UpdateFileDto.html":{}}}],["maxlength(32",{"_index":930,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["me(@currentuser",{"_index":2038,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2018,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.id",{"_index":2062,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2039,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2304,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1416,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1410,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2627,"title":{},"body":{"license.html":{}}}],["message",{"_index":911,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["metadata",{"_index":1851,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["meter",{"_index":1818,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":1869,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":1880,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":1889,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":1884,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":1891,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares/admin.middleware",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1450,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{}}}],["min",{"_index":1077,"title":{},"body":{"classes/File.html":{},"classes/UserActivation.html":{}}}],["min(0",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":298,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":1685,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["minutes",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2228,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1702,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1700,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2275,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":1580,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html",{"_index":1582,"title":{},"body":{"injectables/MailerService.html":{}}}],["mjml2html(mjml",{"_index":1599,"title":{},"body":{"injectables/MailerService.html":{}}}],["mm",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2266,"title":{},"body":{"index.html":{}}}],["model",{"_index":510,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"injectables/UsersService.html":{}}}],["modification",{"_index":2368,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2331,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2717,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2433,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":558,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.errors",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{}}}],["modules/applications/applications.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.service",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/applications/enums/application",{"_index":331,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["modules/auth/auth.errors",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/auth/auth.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["modules/bull",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FoldersModule.html":{},"modules/UsersModule.html":{}}}],["modules/files/files.service",{"_index":1355,"title":{},"body":{"injectables/FoldersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/folders/dto/folder.dto",{"_index":1073,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{}}}],["modules/folders/folders.errors",{"_index":1152,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["modules/folders/folders.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["modules/folders/folders.service",{"_index":1154,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["modules/folders/schemas/folder.schema",{"_index":1074,"title":{},"body":{"classes/File.html":{}}}],["modules/health/health.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/sessions/dto/session.dto",{"_index":1434,"title":{},"body":{"interfaces/IRequest.html":{}}}],["modules/sessions/interfaces/session",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/sessions/sessions.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["modules/sessions/sessions.service",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/storage/storage.module",{"_index":1215,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["modules/storage/storage.service",{"_index":1156,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/UsersController.html":{}}}],["modules/users/schemas/user.schema",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{}}}],["modules/users/users.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["mongo",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":324,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"injectables/FoldersService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1411,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":505,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2287,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":2590,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["mozilla",{"_index":2299,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2726,"title":{},"body":{"license.html":{}}}],["ms",{"_index":1039,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1633,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":1041,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":1944,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["multiple",{"_index":373,"title":{},"body":{"classes/Application.html":{}}}],["myśliwiec",{"_index":2293,"title":{},"body":{"index.html":{}}}],["n",{"_index":889,"title":{},"body":{"classes/Counter.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/ParentFolderNotFound.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["names",{"_index":1910,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ne",{"_index":1743,"title":{},"body":{"controllers/SessionsController.html":{}}}],["necessary",{"_index":2470,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2647,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2208,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2297,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":836,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":559,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1412,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":741,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/ResetPasswordDto.html":{},"injectables/StorageService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":2096,"title":{},"body":{"injectables/UsersService.html":{}}}],["newdisplayname",{"_index":1908,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newemail",{"_index":1028,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpassword",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"interfaces/MailerOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2246,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailer",{"_index":838,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1552,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer/lib/mailer",{"_index":1704,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["nodemailer_module_id",{"_index":1511,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1512,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1111,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["non",{"_index":2426,"title":{},"body":{"license.html":{}}}],["note",{"_index":2721,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":408,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/ParentFolderNotFound.html":{},"classes/TooManyApplications.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["nothing",{"_index":2690,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2327,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2523,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2591,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2584,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2454,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2259,"title":{},"body":{"index.html":{}}}],["null",{"_index":302,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"injectables/FoldersService.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{},"classes/UpdateFileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["number",{"_index":846,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1946,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.values(applicationscopes",{"_index":354,"title":{},"body":{"classes/Application.html":{}}}],["obligation",{"_index":2543,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2539,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2505,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1475,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["offer",{"_index":2439,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2544,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2381,"title":{},"body":{"license.html":{}}}],["olduser",{"_index":2112,"title":{},"body":{"injectables/UsersService.html":{}}}],["on(\"error",{"_index":1871,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":1872,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":1873,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":1875,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":1874,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1545,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":877,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":890,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":868,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["ones",{"_index":1260,"title":{},"body":{"injectables/FilesService.html":{}}}],["ongoing",{"_index":2582,"title":{},"body":{"license.html":{}}}],["open",{"_index":2277,"title":{},"body":{"index.html":{}}}],["option",{"_index":2521,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/FolderAlreadyExists.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"interfaces/SendMailOptions.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1147,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":563,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{}}}],["options.field",{"_index":1849,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter",{"_index":1832,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1833,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.html",{"_index":1593,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.imports",{"_index":1521,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1527,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":561,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":555,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limits",{"_index":1829,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.mjml",{"_index":1594,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.mjml.data",{"_index":1596,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.transformers",{"_index":1859,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1526,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1523,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1524,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1528,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1529,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1781,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2558,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2567,"title":{},"body":{"license.html":{}}}],["original",{"_index":2486,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2715,"title":{},"body":{"license.html":{}}}],["os",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1805,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2317,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2412,"title":{},"body":{"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2416,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2739,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1961,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2413,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2311,"title":{},"body":{"license.html":{}}}],["package",{"_index":2178,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":376,"title":{},"body":{"classes/Application.html":{}}}],["param",{"_index":463,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":492,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/FolderAlreadyExists.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":936,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"injectables/FoldersService.html":{}}}],["parent._id",{"_index":1359,"title":{},"body":{"injectables/FoldersService.html":{}}}],["parentfoldernotfound",{"_index":1305,"title":{"classes/ParentFolderNotFound.html":{}},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"injectables/FoldersService.html":{},"classes/ParentFolderNotFound.html":{},"coverage.html":{}}}],["parseboolpipe",{"_index":1141,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":387,"title":{},"body":{"classes/Application.html":{},"license.html":{}}}],["partialfilterexpression",{"_index":352,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["partialuserdto",{"_index":1608,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2318,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1120,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["party",{"_index":2666,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2461,"title":{},"body":{"license.html":{}}}],["pass",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":1881,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteUserDto.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":1371,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":1701,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1699,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1375,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchangedemail",{"_index":2104,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordchangedemail(user.email",{"_index":2125,"title":{},"body":{"injectables/UsersService.html":{}}}],["passwordreset",{"_index":753,"title":{"classes/PasswordReset.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordreset(email",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.deleteone",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":761,"title":{},"body":{"modules/AuthModule.html":{}}}],["passwordreset.uid",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresets",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetschema",{"_index":754,"title":{},"body":{"modules/AuthModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1635,"title":{},"body":{"classes/PasswordReset.html":{}}}],["passwordresetted",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetted(user.email",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":464,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/UsersController.html":{}}}],["patch(\"/:id",{"_index":494,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{}}}],["patch(\"@me",{"_index":2040,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":459,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FoldersController.html":{}}}],["patch('/:id')@usescopes(applicationscopes.files_write",{"_index":1135,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('@me",{"_index":2027,"title":{},"body":{"controllers/UsersController.html":{}}}],["patent",{"_index":2372,"title":{},"body":{"license.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["path.isabsolute(options.directory",{"_index":981,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":995,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":992,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1422,"title":{},"body":{"controllers/HealthController.html":{}}}],["payloadtoolargeexception",{"_index":1105,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2415,"title":{},"body":{"license.html":{}}}],["perform",{"_index":418,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["performance",{"_index":2634,"title":{},"body":{"license.html":{}}}],["period",{"_index":379,"title":{},"body":{"classes/Application.html":{}}}],["permits",{"_index":2518,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2480,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2671,"title":{},"body":{"license.html":{}}}],["pick",{"_index":556,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1857,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1861,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1862,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2684,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2561,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":321,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"controllers/SessionsController.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":398,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":1971,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(filedto",{"_index":1089,"title":{},"body":{"classes/File.html":{}}}],["plaintoclass(folderdto",{"_index":1299,"title":{},"body":{"classes/Folder.html":{}}}],["plaintoclass(sessiondto",{"_index":1735,"title":{},"body":{"controllers/SessionsController.html":{}}}],["plaintoclass(userdto",{"_index":1972,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":862,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"guards/RecaptchaGuard.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":1007,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["poolsize",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["populate(\"folder",{"_index":1086,"title":{},"body":{"classes/File.html":{}}}],["populate(\"parent",{"_index":1297,"title":{},"body":{"classes/Folder.html":{}}}],["port",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2333,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2668,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2360,"title":{},"body":{"license.html":{}}}],["post",{"_index":465,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{}}}],["post(\"/:id/key",{"_index":497,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"@me/avatar",{"_index":2045,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"@me/delete",{"_index":2065,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"forgot",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"reset",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1185,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/:id/key')@throttle(25",{"_index":456,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post('@me/avatar",{"_index":2025,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('@me/delete",{"_index":2016,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('forgot",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload')@usescopes(applicationscopes.files_write",{"_index":1139,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@throttle(25",{"_index":448,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["power",{"_index":2405,"title":{},"body":{"license.html":{}}}],["pre",{"_index":347,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2394,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1959,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2683,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2586,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1229,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process(\"delete",{"_index":1234,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1561,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1227,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1550,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1230,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1558,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1233,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerService.html":{},"index.html":{}}}],["profits",{"_index":2656,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2245,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2564,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2675,"title":{},"body":{"license.html":{}}}],["project",{"_index":2278,"title":{},"body":{"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1196,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":325,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":303,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1030,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({enum",{"_index":313,"title":{},"body":{"classes/Application.html":{}}}],["prop({lowercase",{"_index":295,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1067,"title":{},"body":{"classes/File.html":{}}}],["prop({ref",{"_index":1062,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["prop({required",{"_index":1934,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":275,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"injectables/SessionsService.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":2429,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":1583,"title":{},"body":{"injectables/MailerService.html":{}}}],["protocol}://${this.config.get(\"frontend_domain",{"_index":1588,"title":{},"body":{"injectables/MailerService.html":{}}}],["prove",{"_index":2635,"title":{},"body":{"license.html":{}}}],["provide",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":932,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["provided!'})@isoptional",{"_index":922,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["provider",{"_index":1500,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2702,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2697,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2576,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2689,"title":{},"body":{"license.html":{}}}],["public",{"_index":1054,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/UpdateFileDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["publish",{"_index":2711,"title":{},"body":{"license.html":{}}}],["published",{"_index":2716,"title":{},"body":{"license.html":{}}}],["pump",{"_index":1807,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":1866,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1858,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2629,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2403,"title":{},"body":{"license.html":{}}}],["put",{"_index":2730,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1642,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2633,"title":{},"body":{"license.html":{}}}],["query",{"_index":518,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"injectables/SessionsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{}}}],["query(\"folder",{"_index":1186,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"hidden",{"_index":1187,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"public",{"_index":1188,"title":{},"body":{"controllers/FilesController.html":{}}}],["queue",{"_index":831,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":328,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["read",{"_index":1791,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1800,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":968,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1171,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1863,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1184,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1850,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1401,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2510,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1485,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1650,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1649,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1643,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1645,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1652,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1651,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_url",{"_index":1647,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":621,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.7",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2594,"title":{},"body":{"license.html":{}}}],["received",{"_index":2592,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2515,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2503,"title":{},"body":{"license.html":{}}}],["record",{"_index":1573,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["recursive",{"_index":990,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":1960,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["ref",{"_index":1075,"title":{},"body":{"classes/File.html":{},"classes/Folder.html":{}}}],["reference",{"_index":2687,"title":{},"body":{"license.html":{}}}],["references",{"_index":2720,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":687,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2700,"title":{},"body":{"license.html":{}}}],["register",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1504,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1508,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1509,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdto",{"_index":595,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regulation",{"_index":2555,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2575,"title":{},"body":{"license.html":{}}}],["reject",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1846,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2678,"title":{},"body":{"license.html":{}}}],["relativelink",{"_index":1570,"title":{},"body":{"injectables/MailerService.html":{}}}],["relativelink.substring(relativelink.startswith",{"_index":1589,"title":{},"body":{"injectables/MailerService.html":{}}}],["relevant",{"_index":2732,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2531,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1660,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":2524,"title":{},"body":{"license.html":{}}}],["removed",{"_index":2457,"title":{},"body":{"license.html":{}}}],["rename",{"_index":2719,"title":{},"body":{"license.html":{}}}],["render",{"_index":1565,"title":{},"body":{"injectables/MailerService.html":{}}}],["render(template",{"_index":1571,"title":{},"body":{"injectables/MailerService.html":{}}}],["repair",{"_index":2639,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2257,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2483,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2484,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2431,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1657,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":1878,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.headers.authorization",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.pipe(busboy",{"_index":1876,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":730,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":734,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":735,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":732,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":729,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":419,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["requested",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1532,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2472,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1664,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1180,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1183,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1474,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2618,"title":{},"body":{"license.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"classes/ResetPasswordDto.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reset.email",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset.email.ts",{"_index":2153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.mjml",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset.schema",{"_index":756,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["reset.schema.ts",{"_index":1627,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1628,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1632,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1629,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1630,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1631,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":599,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetted.email",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetted.email.ts",{"_index":2154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetted.mjml",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resize(512",{"_index":2056,"title":{},"body":{"controllers/UsersController.html":{}}}],["resolve",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1847,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2444,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2500,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2509,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1681,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1674,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1682,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1676,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2673,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revoke",{"_index":1718,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(@currentuser(\"id",{"_index":1739,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(uid",{"_index":1723,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall",{"_index":1719,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(@currentuser(\"id",{"_index":1742,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(uid",{"_index":1726,"title":{},"body":{"controllers/SessionsController.html":{}}}],["right",{"_index":2357,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2363,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2632,"title":{},"body":{"license.html":{}}}],["root",{"_index":1587,"title":{},"body":{"injectables/MailerService.html":{}}}],["rotate",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":721,"title":{},"body":{"guards/AuthGuard.html":{}}}],["royalty",{"_index":2424,"title":{},"body":{"license.html":{}}}],["run",{"_index":2263,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["safety",{"_index":1962,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2382,"title":{},"body":{"license.html":{}}}],["same",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":348,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2250,"title":{},"body":{"index.html":{}}}],["schema",{"_index":326,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"classes/Folder.html":{},"modules/FoldersModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":327,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":357,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":1043,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(file",{"_index":1079,"title":{},"body":{"classes/File.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(folder",{"_index":1291,"title":{},"body":{"classes/Folder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1634,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1950,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":1987,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":504,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":2081,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemas/file.schema",{"_index":1214,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/folder.schema",{"_index":1343,"title":{},"body":{"modules/FoldersModule.html":{},"injectables/FoldersService.html":{}}}],["schemas/password",{"_index":755,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user",{"_index":759,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user.schema",{"_index":2034,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":917,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["scopes",{"_index":283,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"miscellaneous/variables.html":{}}}],["scopes.enum",{"_index":332,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["scopes.enum.ts",{"_index":2231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scopes.every(scope",{"_index":394,"title":{},"body":{"classes/Application.html":{}}}],["scopes.length",{"_index":724,"title":{},"body":{"guards/AuthGuard.html":{}}}],["score",{"_index":1655,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2009,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2072,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2021,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2337,"title":{},"body":{"license.html":{}}}],["secret",{"_index":340,"title":{},"body":{"classes/Application.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2443,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2497,"title":{},"body":{"license.html":{}}}],["secure",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2478,"title":{},"body":{"license.html":{}}}],["sell",{"_index":2438,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2380,"title":{},"body":{"license.html":{}}}],["send",{"_index":1546,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["send(job",{"_index":1549,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["send(options",{"_index":1576,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmailoptions",{"_index":1555,"title":{"interfaces/SendMailOptions.html":{}},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["separate",{"_index":2352,"title":{},"body":{"license.html":{}}}],["seperator",{"_index":383,"title":{},"body":{"classes/Application.html":{}}}],["server",{"_index":851,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2467,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2638,"title":{},"body":{"license.html":{}}}],["session",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/MaxActiveUploadSessionsError.html":{},"controllers/SessionsController.html":{},"classes/UploadSessionNotFound.html":{},"dependencies.html":{}}}],["session.destroy(error",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SessionsController.html":{}}}],["session.ip",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["session_secret",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":1433,"title":{"classes/SessionDto.html":{}},"body":{"interfaces/IRequest.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["sessions",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"classes/UploadSessionNotFound.html":{},"injectables/UsersService.html":{}}}],["sessions.controller",{"_index":1748,"title":{},"body":{"modules/SessionsModule.html":{}}}],["sessions.map",{"_index":1734,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessions.service",{"_index":1729,"title":{},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{}}}],["sessionscontroller",{"_index":1715,"title":{"controllers/SessionsController.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"coverage.html":{}}}],["sessionsmodule",{"_index":135,"title":{"modules/SessionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionsservice",{"_index":767,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":878,"title":{},"body":{"classes/Counter.html":{},"classes/User.html":{}}}],["set(data.scopes)).foreach(scope",{"_index":548,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["set(value",{"_index":893,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(auth_guard_optional",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_guard_scopes",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":837,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":841,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settle",{"_index":1819,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle(files.map(file",{"_index":1840,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2612,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2417,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":2029,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["side",{"_index":2251,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1055,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2568,"title":{},"body":{"license.html":{}}}],["smtp_from",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1531,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1539,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2313,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2371,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2650,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2550,"title":{},"body":{"license.html":{}}}],["specify",{"_index":722,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sponsors",{"_index":2281,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application",{"_index":2230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../application.schema.ts",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.schema.ts",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../folder.schema.ts",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../optional",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scopes.decorator.ts",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../successful",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/optional",{"_index":2135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/scopes.decorator.ts",{"_index":2140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/internal",{"_index":1460,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/auth.guard.ts:29",{"_index":688,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:37",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:53",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:81",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:96",{"_index":690,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1636,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:26",{"_index":1638,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:33",{"_index":1640,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:81",{"_index":1639,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1432,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":738,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":739,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":740,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:16",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":440,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:21",{"_index":445,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:29",{"_index":450,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:37",{"_index":454,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:42",{"_index":460,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:52",{"_index":457,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":403,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:13",{"_index":438,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.errors.ts:19",{"_index":1458,"title":{},"body":{"classes/InsufficientScopes.html":{}}}],["src/modules/applications/applications.errors.ts:25",{"_index":1478,"title":{},"body":{"classes/InvalidAPIKey.html":{}}}],["src/modules/applications/applications.errors.ts:31",{"_index":1894,"title":{},"body":{"classes/TooManyApplications.html":{}}}],["src/modules/applications/applications.errors.ts:8",{"_index":406,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":502,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":507,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:18",{"_index":511,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:26",{"_index":514,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:44",{"_index":517,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:48",{"_index":520,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:55",{"_index":522,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:59",{"_index":524,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:63",{"_index":526,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:70",{"_index":528,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":429,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:11",{"_index":433,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:13",{"_index":434,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:15",{"_index":435,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:17",{"_index":436,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:20",{"_index":437,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":430,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":431,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":906,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/generate",{"_index":1377,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["src/modules/applications/enums/application",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":272,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:29",{"_index":290,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:30",{"_index":318,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:40",{"_index":301,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:57",{"_index":304,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:65",{"_index":305,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:74",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:80",{"_index":314,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:89",{"_index":317,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:91",{"_index":288,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:92",{"_index":291,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:93",{"_index":292,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:94",{"_index":315,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:101",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:46",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:51",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:63",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:86",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:96",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1452,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1482,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":1483,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2002,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1453,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:33",{"_index":2004,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1480,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":750,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:40",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:70",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:91",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1370,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1484,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1488,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1489,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1486,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1683,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1684,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1687,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1688,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1694,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1697,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/emails/password",{"_index":2152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/successful",{"_index":2155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/user",{"_index":2158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/password",{"_index":1626,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/user",{"_index":1973,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/bull",{"_index":826,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts",{"_index":1090,"title":{},"body":{"classes/FileDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts:10",{"_index":1092,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:12",{"_index":1093,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:14",{"_index":1094,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:17",{"_index":1095,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:19",{"_index":1096,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:21",{"_index":1097,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:23",{"_index":1098,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:25",{"_index":1099,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:27",{"_index":1100,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:8",{"_index":1091,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/update",{"_index":1899,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1126,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:54",{"_index":1130,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:60",{"_index":1136,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:71",{"_index":1133,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:99",{"_index":1140,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":844,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:15",{"_index":1102,"title":{},"body":{"classes/FileNotFound.html":{}}}],["src/modules/files/files.errors.ts:21",{"_index":1605,"title":{},"body":{"classes/MaxActiveUploadSessionsError.html":{}}}],["src/modules/files/files.errors.ts:29",{"_index":1918,"title":{},"body":{"classes/UploadSessionNotFound.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":847,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":1101,"title":{},"body":{"classes/FileNotDeletable.html":{}}}],["src/modules/files/files.module.ts",{"_index":1209,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1221,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1224,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:16",{"_index":1228,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1237,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:16",{"_index":1239,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:28",{"_index":1240,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:50",{"_index":1241,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:60",{"_index":1242,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:72",{"_index":1243,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:76",{"_index":1244,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:80",{"_index":1245,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":944,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/file.schema.ts",{"_index":1049,"title":{},"body":{"classes/File.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/file.schema.ts:18",{"_index":1056,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:19",{"_index":1071,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:24",{"_index":1057,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:31",{"_index":1059,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:37",{"_index":1063,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:42",{"_index":1064,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:52",{"_index":1065,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:57",{"_index":1066,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:63",{"_index":1068,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:72",{"_index":1070,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:74",{"_index":1069,"title":{},"body":{"classes/File.html":{}}}],["src/modules/folders/dto/create",{"_index":934,"title":{},"body":{"classes/CreateFolderDto.html":{},"coverage.html":{}}}],["src/modules/folders/dto/folder.dto.ts",{"_index":1307,"title":{},"body":{"classes/FolderDto.html":{},"coverage.html":{}}}],["src/modules/folders/dto/folder.dto.ts:11",{"_index":1310,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:13",{"_index":1311,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:15",{"_index":1312,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:17",{"_index":1313,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:19",{"_index":1314,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:21",{"_index":1315,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:6",{"_index":1308,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/dto/folder.dto.ts:9",{"_index":1309,"title":{},"body":{"classes/FolderDto.html":{}}}],["src/modules/folders/folders.controller.ts",{"_index":1318,"title":{},"body":{"controllers/FoldersController.html":{},"coverage.html":{}}}],["src/modules/folders/folders.controller.ts:19",{"_index":1319,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/modules/folders/folders.controller.ts:24",{"_index":1320,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/modules/folders/folders.controller.ts:29",{"_index":1323,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/modules/folders/folders.controller.ts:37",{"_index":1324,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/modules/folders/folders.errors.ts",{"_index":1301,"title":{},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/ParentFolderNotFound.html":{},"coverage.html":{}}}],["src/modules/folders/folders.errors.ts:14",{"_index":1607,"title":{},"body":{"classes/ParentFolderNotFound.html":{}}}],["src/modules/folders/folders.errors.ts:3",{"_index":1302,"title":{},"body":{"classes/FolderAlreadyExists.html":{}}}],["src/modules/folders/folders.errors.ts:8",{"_index":1316,"title":{},"body":{"classes/FolderNotFound.html":{}}}],["src/modules/folders/folders.module.ts",{"_index":1341,"title":{},"body":{"modules/FoldersModule.html":{}}}],["src/modules/folders/folders.service.ts",{"_index":1344,"title":{},"body":{"injectables/FoldersService.html":{},"coverage.html":{}}}],["src/modules/folders/folders.service.ts:13",{"_index":1346,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:22",{"_index":1347,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:41",{"_index":1348,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:45",{"_index":1349,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:54",{"_index":1351,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:58",{"_index":1352,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:62",{"_index":1353,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/folders.service.ts:66",{"_index":1354,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/modules/folders/schemas/folder.schema.ts",{"_index":1279,"title":{},"body":{"classes/Folder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:16",{"_index":1280,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:17",{"_index":1288,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:22",{"_index":1281,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:31",{"_index":1282,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:38",{"_index":1283,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:44",{"_index":1284,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:49",{"_index":1285,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:58",{"_index":1287,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/folders/schemas/folder.schema.ts:60",{"_index":1286,"title":{},"body":{"classes/Folder.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1399,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1403,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1429,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":1017,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":1021,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":1022,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":1023,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1530,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1703,"title":{},"body":{"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1494,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:33",{"_index":1506,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:49",{"_index":1510,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:63",{"_index":1503,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:77",{"_index":1499,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1543,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:16",{"_index":1554,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:18",{"_index":1547,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:22",{"_index":1548,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:27",{"_index":1551,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1563,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:14",{"_index":1567,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:22",{"_index":1569,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:29",{"_index":1574,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:34",{"_index":1577,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:42",{"_index":1579,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/sessions/dto/session.dto.ts",{"_index":1706,"title":{},"body":{"classes/SessionDto.html":{},"coverage.html":{}}}],["src/modules/sessions/dto/session.dto.ts:11",{"_index":1712,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:13",{"_index":1713,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:19",{"_index":1714,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:5",{"_index":1709,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:7",{"_index":1710,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:9",{"_index":1711,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/interfaces/session",{"_index":1438,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["src/modules/sessions/interfaces/session.interface.ts",{"_index":1436,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts",{"_index":1716,"title":{},"body":{"controllers/SessionsController.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts:21",{"_index":1722,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:36",{"_index":1725,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:44",{"_index":1728,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.module.ts",{"_index":1747,"title":{},"body":{"modules/SessionsModule.html":{}}}],["src/modules/sessions/sessions.service.ts",{"_index":1749,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.service.ts:10",{"_index":1752,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:14",{"_index":1753,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:18",{"_index":1754,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:22",{"_index":1755,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:26",{"_index":1756,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":953,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":961,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":972,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":967,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":970,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":963,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":965,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1381,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1446,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":554,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":1919,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2127,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1104,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":1895,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":1896,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":1897,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":1107,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":1898,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1606,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1772,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1775,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1776,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1774,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1773,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1789,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":1796,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":1793,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":1806,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":1799,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":1798,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":1801,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":1804,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/delete",{"_index":948,"title":{},"body":{"classes/DeleteUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/partial",{"_index":1609,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":1907,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":1989,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":1993,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":1994,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":1995,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":1996,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":1997,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":1998,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":1999,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":2000,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":2001,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":1990,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":1991,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":1992,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/emails/email",{"_index":2166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/emails/password",{"_index":2169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/email",{"_index":1025,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1921,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":1935,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":1938,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":1926,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":1928,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":1936,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":1927,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":1937,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":1923,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":1924,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":1925,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":1929,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":1930,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":1931,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":1932,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":1933,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2007,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":2020,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":2028,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:49",{"_index":2026,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:89",{"_index":2017,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:94",{"_index":2014,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:99",{"_index":2023,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":997,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:14",{"_index":1048,"title":{},"body":{"classes/EmailTaken.html":{}}}],["src/modules/users/users.errors.ts:20",{"_index":1479,"title":{},"body":{"classes/InvalidAvatarFileType.html":{}}}],["src/modules/users/users.errors.ts:26",{"_index":1481,"title":{},"body":{"classes/InvalidEmailConfirmationToken.html":{}}}],["src/modules/users/users.errors.ts:32",{"_index":2005,"title":{},"body":{"classes/UsernameTaken.html":{}}}],["src/modules/users/users.errors.ts:38",{"_index":2003,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:8",{"_index":998,"title":{},"body":{"classes/DisplayNameTaken.html":{}}}],["src/modules/users/users.module.ts",{"_index":2079,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2085,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:101",{"_index":2099,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:155",{"_index":2097,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:31",{"_index":2087,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:46",{"_index":2088,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:73",{"_index":2090,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:80",{"_index":2092,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:93",{"_index":2093,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:97",{"_index":2094,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":873,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":885,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":886,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":888,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":883,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":892,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":894,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":896,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":898,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/generateid.ts",{"_index":2174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":1879,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["start",{"_index":2264,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2267,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2268,"title":{},"body":{"index.html":{}}}],["started",{"_index":2244,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2256,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1495,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1471,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2554,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2624,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2289,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2709,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2659,"title":{},"body":{"license.html":{}}}],["storage",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1779,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1809,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1780,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1777,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1778,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":954,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1207,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1218,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["storageoptions",{"_index":560,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":562,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1155,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":975,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":1816,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["strict",{"_index":1602,"title":{},"body":{"injectables/MailerService.html":{}}}],["string",{"_index":293,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"classes/FolderNotFound.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1641,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":1019,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2516,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2475,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2362,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2525,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1678,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["successfullogin",{"_index":2157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":2330,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":417,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["sufficiently",{"_index":2565,"title":{},"body":{"license.html":{}}}],["super",{"_index":859,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"application",{"_index":414,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(\"display",{"_index":1001,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"email",{"_index":1003,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"file",{"_index":857,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"folder",{"_index":1304,"title":{},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/ParentFolderNotFound.html":{}}}],["super(\"invalid",{"_index":421,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["super(\"missing",{"_index":1122,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":1112,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"parent",{"_index":1306,"title":{},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/ParentFolderNotFound.html":{}}}],["super(\"please",{"_index":1457,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"this",{"_index":853,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"too",{"_index":1115,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"username",{"_index":1013,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"you",{"_index":423,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1454,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`application",{"_index":409,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(`chunk",{"_index":849,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`file",{"_index":1109,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(`folder",{"_index":1303,"title":{},"body":{"classes/FolderAlreadyExists.html":{},"classes/FolderNotFound.html":{},"classes/ParentFolderNotFound.html":{}}}],["super(`upload",{"_index":871,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`user",{"_index":1016,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2282,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2620,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2736,"title":{},"body":{"modules.html":{}}}],["t",{"_index":691,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{}}}],["tasks",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":1575,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"miscellaneous/variables.html":{}}}],["templates/email",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/password",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/user",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2572,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2581,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2570,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1430,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2344,"title":{},"body":{"license.html":{}}}],["test",{"_index":2271,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2274,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2273,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2270,"title":{},"body":{"index.html":{}}}],["text",{"_index":1020,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["thanks",{"_index":2280,"title":{},"body":{"index.html":{}}}],["then(application",{"_index":489,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(applications",{"_index":483,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(deleted",{"_index":1162,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(file",{"_index":1202,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(folder",{"_index":1256,"title":{},"body":{"injectables/FilesService.html":{},"controllers/FoldersController.html":{}}}],["then(id",{"_index":362,"title":{},"body":{"classes/Application.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["then(parent",{"_index":1358,"title":{},"body":{"injectables/FoldersService.html":{}}}],["then(res",{"_index":1663,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(token",{"_index":1046,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2645,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2334,"title":{},"body":{"license.html":{}}}],["third",{"_index":2460,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":1828,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._getmetadata(auth_guard_optional",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(auth_guard_scopes",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1654,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1656,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._handleapikey(req",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._handlesession(req",{"_index":713,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._size",{"_index":1892,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._value",{"_index":901,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":1964,"title":{},"body":{"classes/User.html":{}}}],["this.applications",{"_index":481,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications(data).save",{"_index":539,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.countdocuments",{"_index":535,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create",{"_index":488,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete",{"_index":2117,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.applications.deletemany(query",{"_index":540,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.deleteone",{"_index":493,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.exists",{"_index":537,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.find(query).sort",{"_index":543,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.findone",{"_index":717,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.applications.findone(query",{"_index":541,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.generatekey",{"_index":498,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.updateone",{"_index":495,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.activateaccount(token",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.forgotpassword(email",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.register(email",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1965,"title":{},"body":{"classes/User.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1396,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1397,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1395,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_secret",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.config.get(\"max_file_size",{"_index":1195,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1193,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"node_env",{"_index":1584,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1661,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":1757,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1525,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1522,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1418,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(file.id",{"_index":1841,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":1966,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1421,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1425,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":1967,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":2121,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailconfirmations.findone",{"_index":2107,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1597,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":902,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1823,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1827,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1856,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1826,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.files",{"_index":1198,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["this.files.create",{"_index":2058,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.files.delete",{"_index":1363,"title":{},"body":{"injectables/FoldersService.html":{},"injectables/UsersService.html":{}}}],["this.files.deleteone",{"_index":1161,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.find(query",{"_index":1269,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.findone",{"_index":1169,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findone(query",{"_index":1267,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.updateone",{"_index":1164,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":842,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1265,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.folders",{"_index":1270,"title":{},"body":{"injectables/FilesService.html":{},"injectables/FoldersService.html":{}}}],["this.folders.create(dto",{"_index":1330,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.folders.delete",{"_index":2118,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.folders.deletemany(query",{"_index":1361,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.folders.deleteone",{"_index":1333,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.folders.exists",{"_index":1189,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FoldersService.html":{}}}],["this.folders.exists(query",{"_index":1366,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.folders.find(query",{"_index":1367,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.folders.findone",{"_index":1255,"title":{},"body":{"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{}}}],["this.folders.findone(query",{"_index":1362,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.folders.updateone",{"_index":1336,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.health.check",{"_index":1417,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http",{"_index":1659,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":363,"title":{},"body":{"classes/Application.html":{},"classes/Folder.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.id}.${token",{"_index":389,"title":{},"body":{"classes/Application.html":{}}}],["this.ismodified(\"password",{"_index":1953,"title":{},"body":{"classes/User.html":{}}}],["this.isnew",{"_index":360,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.key",{"_index":366,"title":{},"body":{"classes/Application.html":{}}}],["this.logger.error(error",{"_index":1179,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.logger.error(exception.message",{"_index":1473,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.createabsolutelink(\"/forgot",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/activate",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.createabsolutelink(`/confirm",{"_index":2123,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/reset",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.send",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1427,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.on(string(n",{"_index":905,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":904,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1822,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":1952,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordresets.findone",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.populate(\"folder",{"_index":1081,"title":{},"body":{"classes/File.html":{}}}],["this.populate(\"parent",{"_index":1293,"title":{},"body":{"classes/Folder.html":{}}}],["this.reflector.get(key",{"_index":736,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["this.render(options.mjml.template",{"_index":1595,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.save",{"_index":391,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["this.scopes.includes(scope",{"_index":395,"title":{},"body":{"classes/Application.html":{}}}],["this.sessions.delete",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["this.sessions.deletemany(query",{"_index":1761,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.deleteone",{"_index":1740,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.deleteone(query",{"_index":1762,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.find",{"_index":1733,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.find(query).toarray",{"_index":1763,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.findone(query",{"_index":1764,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1235,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1170,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.storage.write(req",{"_index":1190,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.tojson",{"_index":399,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["this.token",{"_index":1047,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail(job.data",{"_index":1562,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1560,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.useractivations",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useractivations.findone",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":2116,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.confirmemail(token",{"_index":2070,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.create(email",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.deleteone(me",{"_index":2067,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.exists",{"_index":2109,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2120,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":726,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.users.updateavatar(me",{"_index":2063,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.updateone(me",{"_index":2042,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.value",{"_index":903,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2392,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1423,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":466,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle(25",{"_index":486,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle_limit",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["timely",{"_index":2511,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1419,"title":{},"body":{"controllers/HealthController.html":{}}}],["timesresent",{"_index":1975,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamps",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["tls",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["todto",{"_index":284,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/User.html":{}}}],["tojson",{"_index":1984,"title":{},"body":{"classes/UserActivation.html":{}}}],["token",{"_index":380,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"classes/UserActivation.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toobject",{"_index":1986,"title":{},"body":{"classes/UserActivation.html":{}}}],["toomanyapplications",{"_index":422,"title":{"classes/TooManyApplications.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["toomanyfields",{"_index":1114,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":1118,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":1119,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1662,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2646,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2290,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2430,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2466,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2383,"title":{},"body":{"license.html":{}}}],["transformcallback",{"_index":1888,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":322,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1860,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":1942,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":2055,"title":{},"body":{"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["transpilemjml",{"_index":1566,"title":{},"body":{"injectables/MailerService.html":{}}}],["transpilemjml(mjml",{"_index":1578,"title":{},"body":{"injectables/MailerService.html":{}}}],["transport",{"_index":1533,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1544,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":299,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"classes/Folder.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2296,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderAlreadyExists.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":323,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{}}}],["types.array",{"_index":312,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{}}}],["types.objectid",{"_index":1061,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{}}}],["typescript",{"_index":1537,"title":{},"body":{"interfaces/MailerOptions.html":{},"index.html":{}}}],["ua",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["uid",{"_index":285,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"interfaces/ISessionData.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["uid).then(folder",{"_index":1331,"title":{},"body":{"controllers/FoldersController.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["under",{"_index":2343,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2569,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2699,"title":{},"body":{"license.html":{}}}],["unique",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unique!'})@isenum(applicationscopes",{"_index":919,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["unit",{"_index":2269,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2577,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2436,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":1000,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["unsupported",{"_index":1123,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1121,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":1108,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["until",{"_index":2578,"title":{},"body":{"license.html":{}}}],["up",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update(data",{"_index":342,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["updateavatar",{"_index":2010,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateavatar(@currentuser",{"_index":2046,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(me",{"_index":2024,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(user",{"_index":2095,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":286,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/Folder.html":{},"classes/FolderDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["updatefiledto",{"_index":1134,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updateone",{"_index":443,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateone(@body",{"_index":2041,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateone(dto",{"_index":458,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/UsersController.html":{}}}],["updateone(query",{"_index":527,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/FoldersService.html":{}}}],["updateone(user",{"_index":2098,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":1906,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["upload",{"_index":861,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["upload(uid",{"_index":1137,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":850,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["uploadedfile",{"_index":1812,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsessionnotfound",{"_index":869,"title":{"classes/UploadSessionNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotDeletable.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["uri",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["usage",{"_index":723,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":382,"title":{},"body":{"classes/Application.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["useexisting",{"_index":557,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["usefindandmodify",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":479,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":235,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/User.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user.activated",{"_index":733,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":2126,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.comparepassword(password",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.decorator",{"_index":476,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/FoldersController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":2119,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.displayname",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":1625,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":949,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":1912,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":1914,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:29",{"_index":1916,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":1917,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":951,"title":{},"body":{"classes/DeleteUserDto.html":{}}}],["user.dto.ts:7",{"_index":1612,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":2114,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.expiresat",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":2084,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.todto",{"_index":2044,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.todto(partialuserdto",{"_index":2074,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":2113,"title":{},"body":{"injectables/UsersService.html":{}}}],["user[\"email",{"_index":1376,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["user[field",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractivation",{"_index":757,"title":{"classes/UserActivation.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivation(email",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivation.name",{"_index":762,"title":{},"body":{"modules/AuthModule.html":{}}}],["useractivations",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivationschema",{"_index":758,"title":{},"body":{"modules/AuthModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.pre(\"save",{"_index":1988,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":1610,"title":{"classes/UserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1616,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1617,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1618,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1619,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1620,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1621,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1622,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1623,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1624,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1613,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1614,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1615,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernames",{"_index":1690,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernametaken",{"_index":1012,"title":{"classes/UsernameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernotactivated",{"_index":700,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":1014,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usernotfound(username",{"_index":2073,"title":{},"body":{"controllers/UsersController.html":{}}}],["usernotloggedin",{"_index":701,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2080,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2030,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":2031,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users:read",{"_index":2242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users_read",{"_index":2241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":1949,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.comparepassword",{"_index":1956,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":1963,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":1969,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":1951,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2006,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":136,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usescopes",{"_index":1149,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usescopes(applicationscopes.files_read",{"_index":1168,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_write",{"_index":1159,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.users_read",{"_index":2037,"title":{},"body":{"controllers/UsersController.html":{}}}],["useunifiedtopology",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1520,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":1175,"title":{},"body":{"controllers/FilesController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["utils/atob",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["utils/btoa",{"_index":334,"title":{},"body":{"classes/Application.html":{}}}],["utils/chunk",{"_index":979,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/counter",{"_index":1815,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":336,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Folder.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/settle",{"_index":1820,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["utils/stream",{"_index":1817,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2725,"title":{},"body":{"license.html":{}}}],["valid",{"_index":1373,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":309,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/User.html":{}}}],["validatebeforesave",{"_index":1968,"title":{},"body":{"classes/User.html":{}}}],["validationlevel",{"_index":1601,"title":{},"body":{"injectables/MailerService.html":{}}}],["validationschema",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":320,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["validly",{"_index":2619,"title":{},"body":{"license.html":{}}}],["value",{"_index":881,"title":{},"body":{"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2743,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1680,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{}}}],["versions",{"_index":2391,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":1985,"title":{},"body":{"classes/UserActivation.html":{}}}],["visit",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visiting",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["want",{"_index":2718,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2625,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2527,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2265,"title":{},"body":{"index.html":{}}}],["website",{"_index":2294,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":879,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":895,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":2361,"title":{},"body":{"license.html":{}}}],["wide",{"_index":2423,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2530,"title":{},"body":{"license.html":{}}}],["without",{"_index":2375,"title":{},"body":{"license.html":{}}}],["work",{"_index":2347,"title":{},"body":{"license.html":{}}}],["world",{"_index":2422,"title":{},"body":{"license.html":{}}}],["writable",{"_index":974,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1792,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1802,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1837,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":1870,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1855,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1844,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1839,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":1803,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["wrong",{"_index":1679,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["yes",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{}}}],["you'd",{"_index":2285,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/FoldersModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\n@Module({\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFoldersModule\n\nFoldersModule\n\nAppModule -->\n\nFoldersModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            FoldersModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsModule\n                        \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { FoldersModule } from \"./modules/folders/folders.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SessionsModule } from \"./modules/sessions/sessions.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_KEY_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    ThrottlerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    }),\n\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    FoldersModule,\n    HealthModule,\n    SessionsModule,\n    UsersModule\n  ],\n  exports: [ApplicationsModule, ConfigModule, Logger, MailerModule, UsersModule],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                compareKey\n                            \n                            \n                                createdAt\n                            \n                            \n                                generateKey\n                            \n                            \n                                hasSufficientScopes\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSufficientScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 18, minlength: 18, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Types.Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({enum: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { btoa } from \"@/utils/btoa\";\nimport { generateId } from \"@/utils/generateId\";\n\nconst HMAC_SHA256 = (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\");\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 18,\n    minlength: 18,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          key: {\n            $type: \"string\"\n          }\n        }\n      },\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  key!: string | null;\n\n  @Prop(\n    raw({\n      default: null,\n      type: Date\n    })\n  )\n  lastUsed!: Date | null;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop({\n    enum: Object.values(ApplicationScopes),\n    type: [String]\n  })\n  scopes!: Types.Array;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  compareKey!: (key: string, secret: string) => boolean;\n  generateKey!: (secret: string) => Promise;\n  hasSufficientScopes!: (scopes: ApplicationScopes[]) => boolean;\n  toDto!: () => ApplicationDto;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(9)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.compareKey = function(\n  this: Application,\n  key: string,\n  secret: string\n): boolean {\n  if (!this.key) return false;\n\n  return crypto.timingSafeEqual(Buffer.from(HMAC_SHA256(key, secret)), Buffer.from(this.key));\n};\n\nApplicationSchema.methods.generateKey = async function(\n  this: Application,\n  secret: string\n): Promise {\n  /**\n   ** The final api key length must be a multiple of 3 to avoid padding when converted to base64.\n   ** Application ID (18) + period (1) + Application secret token (32) = 51\n   ** The period is used as a seperator so when we decode the base64 in the auth guard, we know\n   ** which part is our application id and secret token.\n   */\n  const token = await generateId(16);\n  const key = `${this.id}.${token}`;\n\n  this.key = HMAC_SHA256(key, secret);\n\n  await this.save();\n\n  return btoa(key);\n};\n\nApplicationSchema.methods.hasSufficientScopes = function(\n  this: Application,\n  scopes: ApplicationScopes[]\n) {\n  return scopes.every(scope => this.scopes.includes(scope));\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationAlreadyExists.html":{"url":"classes/ApplicationAlreadyExists.html","title":"class - ApplicationAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  @Exclude()\n  key!: string | null;\n\n  lastUsed!: Date | null;\n\n  name!: string;\n\n  scopes!: ApplicationScopes[];\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                create\n                            \n                            \n                                deleteOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/key')@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: CreateApplicationDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { GenerateApplicationKeyDto } from \"./dto/generate-application-key.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @Get()\n  all(@CurrentUser(\"id\") uid: string): Promise {\n    return this.applications\n      .find({ uid })\n      .then(applications => applications.map(application => application.toDto()));\n  }\n\n  @Post()\n  @Throttle(25, 60)\n  create(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    return this.applications.create({ ...dto, uid }).then(application => application.toDto());\n  }\n\n  @Delete(\"/:id\")\n  deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.applications.deleteOne({ id, uid }).then(application => application.toDto());\n  }\n\n  @Patch(\"/:id\")\n  updateOne(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.applications.updateOne({ id, uid }, dto).then(application => application.toDto());\n  }\n\n  @Post(\"/:id/key\")\n  @Throttle(25, 60)\n  async generateKey(\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return {\n      key: await this.applications.generateKey({ id, uid })\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }])],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { FilterQuery, Model, Types } from \"mongoose\";\n\nimport {\n  ApplicationAlreadyExists,\n  ApplicationNotFound,\n  TooManyApplications\n} from \"./applications.errors\";\n\nimport { ApplicationScopes } from \"./enums/application-scopes.enum\";\n\nimport { Application } from \"./schemas/application.schema\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(data: {\n    name: Application[\"name\"];\n    scopes: ApplicationScopes[];\n    uid: Application[\"uid\"];\n  }): Promise {\n    const { name, uid } = data;\n\n    if ((await this.applications.countDocuments({ uid })) > 50) {\n      throw new TooManyApplications();\n    }\n\n    if (await this.applications.exists({ name, uid })) {\n      throw new ApplicationAlreadyExists(name);\n    }\n\n    return new this.applications(data).save();\n  }\n\n  async delete(query: FilterQuery): Promise {\n    await this.applications.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.deleteOne();\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.applications.find(query).sort(\"-lastUsed\");\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.applications.findOne(query);\n  }\n\n  async generateKey(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.generateKey(this.config.get(\"API_KEY_SECRET\") as string);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      name: Application[\"name\"];\n      scopes: ApplicationScopes[];\n    }\n  ): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    application.name = data.name;\n    application.scopes = new Types.Array();\n\n    Array.from(new Set(data.scopes)).forEach(scope => application.scopes.addToSet(scope));\n\n    return application.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: Express.Session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Express.Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\n\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { ISessionData } from \"@/modules/sessions/interfaces/session-data.interface\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.auth.activateAccount(token);\n  }\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISessionData\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    return user;\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: Express.Session): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Private\n                                    Async\n                                _handleAPIKey\n                            \n                            \n                                    Private\n                                    Async\n                                _handleSession\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, config: ConfigService, reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:96\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleAPIKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                ApplicationScopes[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleSession(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { InsufficientScopes, InvalidAPIKey } from \"@/modules/applications/applications.errors\";\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { atob } from \"@/utils/atob\";\n\nexport const AUTH_GUARD_OPTIONAL = \"AUTH_GUARD_OPTIONAL\";\nexport const AUTH_GUARD_SCOPES = \"AUTH_GUARD_SCOPES\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly config: ConfigService,\n    private readonly reflector: Reflector,\n    private readonly users: UsersService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const optional = this._getMetadata(AUTH_GUARD_OPTIONAL, context);\n    const scopes = this._getMetadata(AUTH_GUARD_SCOPES, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      return req.headers.authorization\n        ? await this._handleAPIKey(req, scopes)\n        : await this._handleSession(req);\n    } catch (error) {\n      if (!optional) throw error;\n      return true;\n    }\n  }\n\n  private async _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[]) {\n    const key = req.headers.authorization && atob(req.headers.authorization);\n    if (!key) throw new InvalidAPIKey();\n\n    const [id, token] = key.split(\".\");\n    if (!id || !token) throw new InvalidAPIKey();\n\n    const application = await this.applications.findOne({ id });\n\n    if (!application || !application.compareKey(key, this.config.get(\"API_SECRET\") as string)) {\n      throw new InvalidAPIKey();\n    }\n\n    // Only allow routes that specify scopes to allow the usage of an API key.\n    if (!scopes || !scopes.length || !application.hasSufficientScopes(scopes)) {\n      throw new InsufficientScopes();\n    }\n\n    const user = await this.users.findOne({ id: application.uid });\n    if (!user) throw new InvalidAPIKey();\n\n    await application.updateOne({ lastUsed: new Date() });\n\n    req.user = user;\n\n    return true;\n  }\n\n  private async _handleSession(req: IRequest) {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UserNotLoggedIn();\n    if (!user.activated) throw new UserNotActivated();\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n\n  private _getMetadata(key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSessionsModule\n\nSessionsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SessionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\n\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    HttpModule,\n\n    MongooseModule.forFeature([\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ]),\n\n    SessionsModule\n  ],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, sessions: SessionsService, users: UsersService, passwordResets: Model, userActivations: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activateAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport {\n  InvalidCredentials,\n  InvalidPasswordResetLink,\n  InvalidUserActivationLink,\n  UserNotActivated\n} from \"./auth.errors\";\n\nimport { passwordReset } from \"./emails/password-reset.email\";\nimport { passwordResetted } from \"./emails/password-resetted.email\";\nimport { userActivation } from \"./emails/user-activation.email\";\n\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n    private readonly users: UsersService,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model\n  ) {}\n\n  async activateAccount(token: string): Promise {\n    const activation = await this.userActivations.findOne({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    user.activated = true;\n    user.expiresAt = null;\n\n    await user.save();\n    await activation.deleteOne();\n  }\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.mailer.send(\n      passwordReset(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/reset-password/${reset.token}`)\n      })\n    );\n\n    return true;\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    const activation = await new this.userActivations({ uid: user.id }).save();\n\n    await this.mailer.send(\n      userActivation(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/activate-account/${activation.token}`)\n      })\n    );\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.passwordResets.findOne({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.uid });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await this.sessions.delete({ \"session.uid\": user.id });\n\n    user.password = newPassword;\n\n    await user.save();\n    await passwordReset.deleteOne();\n\n    await this.mailer.send(\n      passwordResetted(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChunkAlreadyUploaded.html":{"url":"classes/ChunkAlreadyUploaded.html","title":"class - ChunkAlreadyUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChunkAlreadyUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chunkIndex: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chunkIndex\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This file is crucial and cannot be deleted!\");\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor() {\n    super(\"File does not exists!\");\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString({message: 'Application name must be a $constraint1'})@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ArrayUnique({message: 'Application scope elements must be unique!'})@IsEnum(ApplicationScopes, {each: true, message: 'Invalid application scopes provided!'})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayUnique, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { ApplicationScopes } from \"../enums/application-scopes.enum\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString({ message: \"Application name must be a $constraint1\" })\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ArrayUnique({ message: \"Application scope elements must be unique!\" })\n  @IsEnum(ApplicationScopes, { each: true, message: \"Invalid application scopes provided!\" })\n  @IsOptional()\n  scopes: ApplicationScopes[] = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFolderDto.html":{"url":"classes/CreateFolderDto.html","title":"class - CreateFolderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFolderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/dto/create-folder.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Folder name cannot be empty!'})@IsString()@MaxLength(255, {message: 'Folder name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/create-folder.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/create-folder.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nexport class CreateFolderDto {\n  @IsNotEmpty({ message: \"Folder name cannot be empty!\" })\n  @IsString()\n  @MaxLength(255, { message: \"Folder name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @IsOptional()\n  @IsString()\n  parent!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDto.html":{"url":"classes/DeleteUserDto.html","title":"class - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/delete-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/delete-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameTaken.html":{"url":"classes/DisplayNameTaken.html","title":"class - DisplayNameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTaken.html":{"url":"classes/EmailTaken.html","title":"class - EmailTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/file.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            FileDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FolderDto | Types.ObjectId | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({ref: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 1, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { FileDto } from \"../dto/file.dto\";\n\nimport { FolderDto } from \"@/modules/folders/dto/folder.dto\";\n\nimport { Folder } from \"@/modules/folders/schemas/folder.schema\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class File extends Document implements FileDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: true\n  })\n  deletable!: boolean;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true\n  })\n  filename!: string;\n\n  @Prop({\n    ref: Folder.name,\n    type: Types.ObjectId\n  })\n  folder!: FolderDto | Types.ObjectId | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 1,\n    required: true\n  })\n  size!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  toDto!: () => FileDto;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(File);\n\nFileSchema.pre(\"find\", function() {\n  this.populate(\"folder\");\n});\n\nFileSchema.pre(\"findOne\", function() {\n  this.populate(\"folder\");\n});\n\nFileSchema.post(\"save\", function(doc, next) {\n  doc\n    .populate(\"folder\")\n    .execPopulate()\n    .then(() => next())\n    .catch(error => next(error));\n});\n\nFileSchema.methods.toDto = function(this: File): FileDto {\n  return plainToClass(FileDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDto.html":{"url":"classes/FileDto.html","title":"class - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FolderDto | Types.ObjectId | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { Types } from \"mongoose\";\n\nimport { FolderDto } from \"@/modules/folders/dto/folder.dto\";\n\nexport class FileDto {\n  createdAt!: Date;\n\n  deletable!: boolean;\n\n  filename!: string;\n\n  folder!: FolderDto | Types.ObjectId | null;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  public!: boolean;\n\n  size!: number;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotDeletable.html":{"url":"classes/FileNotDeletable.html","title":"class - FileNotDeletable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotDeletable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This file is crucial and cannot be deleted!\");\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor() {\n    super(\"File does not exists!\");\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotFound.html":{"url":"classes/FileNotFound.html","title":"class - FileNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This file is crucial and cannot be deleted!\");\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor() {\n    super(\"File does not exists!\");\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                updateOne\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(uid: string | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@OptionalAuth()@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: UpdateFileDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(uid: string, folder: string | undefined, hidden: boolean | undefined, isPublic: boolean | undefined, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hidden\n                                    \n                                            boolean | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isPublic\n                                    \n                                            boolean | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  ParseBoolPipe,\n  Patch,\n  Post,\n  Req,\n  Res,\n  Query,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { FileNotFound } from \"./files.errors\";\nimport { FilesService } from \"./files.service\";\n\nimport { FileDto } from \"./dto/file.dto\";\nimport { UpdateFileDto } from \"./dto/update-file.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/optional-auth\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { FolderNotFound } from \"@/modules/folders/folders.errors\";\n\nimport { FoldersService } from \"@/modules/folders/folders.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly folders: FoldersService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"/:id\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  delete(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.files.deleteOne({ id, uid }).then(deleted => deleted.toDto());\n  }\n\n  @Patch(\"/:id\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  updateOne(\n    @Body() dto: UpdateFileDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.files.updateOne({ id, uid }, dto).then(file => file.toDto());\n  }\n\n  @Get(\"download/:id\")\n  @OptionalAuth()\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async download(\n    @CurrentUser(\"id\") uid: string | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const file = uid\n      ? await this.files.findOne({ id, uid })\n      : await this.files.findOne({ id, public: true });\n\n    if (!file) throw new FileNotFound();\n\n    const readable = await this.storage.read(file.id);\n\n    readable.on(\"error\", (error: Error) => {\n      // Exception filter disabled when using the @Res() decorator, so we have to log the error manually\n      this.logger.error(error);\n\n      if (!res.headersSent) {\n        const err = new InternalServerErrorException(error);\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Post(\"upload\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async upload(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"folder\") folder: string | undefined,\n    @Query(\"hidden\", ParseBoolPipe) hidden: boolean | undefined,\n    @Query(\"public\", ParseBoolPipe) isPublic: boolean | undefined,\n    @Req() req: Request\n  ): Promise {\n    if (folder && !(await this.folders.exists({ id: folder, uid }))) {\n      throw new FolderNotFound();\n    }\n\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map(file =>\n        this.files\n          .create(\n            {\n              filename: file.filename,\n              folder: folder || null,\n              hidden: hidden || false,\n              id: file.id,\n              public: isPublic || false,\n              size: file.size\n            },\n            uid\n          )\n          .then(file => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module, forwardRef } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { File, FileSchema } from \"./schemas/file.schema\";\n\nimport { FoldersModule } from \"@/modules/folders/folders.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    forwardRef(() => FoldersModule),\n\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: File.name, schema: FileSchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(private readonly storage: StorageService) {}\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(folders: FoldersService, files: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        folders\n                                                  \n                                                        \n                                                                        FoldersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { FileNotDeletable, FileNotFound } from \"./files.errors\";\n\nimport { File } from \"./schemas/file.schema\";\n\nimport { FolderNotFound } from \"@/modules/folders/folders.errors\";\nimport { FoldersService } from \"@/modules/folders/folders.service\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    @Inject(forwardRef(() => FoldersService))\n    private readonly folders: FoldersService,\n\n    @InjectModel(File.name)\n    private readonly files: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async create(\n    data: {\n      deletable?: File[\"deletable\"];\n      filename: File[\"filename\"];\n      folder: string | null;\n      hidden?: File[\"hidden\"];\n      id: File[\"id\"];\n      public?: File[\"public\"];\n      size: File[\"size\"];\n    },\n    uid: string\n  ): Promise {\n    const folder = data.folder\n      ? await this.folders.findOne({ id: data.folder, uid }).then(folder => folder && folder._id)\n      : null;\n\n    if (!folder && data.folder) throw new FolderNotFound();\n\n    return new this.files({ ...data, folder, uid }).save();\n  }\n\n  // Deletes ALL files including ones with deletable: false. Used for account deletion\n  async delete(query: FilterQuery): Promise {\n    await this.files\n      .deleteMany(query)\n      .cursor()\n      .eachAsync(async (file: File) => {\n        await this.filesQueue.add(\"delete\", { fileId: file.id });\n        await file.deleteOne();\n      });\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const file = await this.files.findOne(query);\n\n    if (!file) throw new FileNotFound();\n    if (!file.deletable) throw new FileNotDeletable();\n\n    await this.filesQueue.add(\"delete\", { fileId: file.id });\n    await file.deleteOne();\n\n    return file;\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.files.find(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.files.findOne(query);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      filename: string;\n      folder: string | null;\n      hidden: boolean;\n      public: boolean;\n    }\n  ): Promise {\n    const file = await this.files.findOne(query);\n    if (!file) throw new FileNotFound();\n\n    if (data.folder) {\n      const folder = await this.folders\n        .findOne({ id: data.folder, uid: file.uid })\n        .then(folder => folder && folder._id);\n\n      if (!folder) throw new FolderNotFound();\n\n      file.folder = folder;\n    }\n\n    file.filename = data.filename;\n    file.hidden = data.hidden;\n    file.public = data.public;\n\n    return file.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Folder.html":{"url":"classes/Folder.html","title":"class - Folder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Folder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/schemas/folder.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            FolderDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                public\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Folder | Types.ObjectId | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({ref: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/schemas/folder.schema.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { FolderDto } from \"../dto/folder.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Folder extends Document implements FolderDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true\n  })\n  name!: string;\n\n  @Prop({\n    ref: Folder.name,\n    type: Types.ObjectId\n  })\n  parent!: Folder | Types.ObjectId | null;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  toDto!: () => FolderDto;\n}\n\nexport const FolderSchema = SchemaFactory.createForClass(Folder);\n\nFolderSchema.pre(\"find\", function(this: Folder) {\n  this.populate(\"parent\");\n});\n\nFolderSchema.pre(\"findOne\", function(this: Folder) {\n  this.populate(\"parent\");\n});\n\nFolderSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nFolderSchema.post(\"save\", function(doc, next) {\n  doc\n    .populate(\"parent\")\n    .execPopulate()\n    .then(() => next())\n    .catch(error => next(error));\n});\n\nFolderSchema.methods.toDto = function(this: Folder): FolderDto {\n  return plainToClass(FolderDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FolderAlreadyExists.html":{"url":"classes/FolderAlreadyExists.html","title":"class - FolderAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FolderAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/folders.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/folders/folders.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, NotFoundException } from \"@nestjs/common\";\n\nexport class FolderAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Folder \"${name}\" already exists!`);\n  }\n}\nexport class FolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Folder does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FolderDto.html":{"url":"classes/FolderDto.html","title":"class - FolderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FolderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/dto/folder.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                public\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FolderDto | Types.ObjectId | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/folders/dto/folder.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { Types } from \"mongoose\";\n\nexport class FolderDto {\n  createdAt!: Date;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  name!: string;\n\n  parent!: FolderDto | Types.ObjectId | null;\n\n  public!: boolean;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FolderNotFound.html":{"url":"classes/FolderNotFound.html","title":"class - FolderNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FolderNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/folders.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/folders/folders.errors.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, NotFoundException } from \"@nestjs/common\";\n\nexport class FolderAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Folder \"${name}\" already exists!`);\n  }\n}\nexport class FolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Folder does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FoldersController.html":{"url":"controllers/FoldersController.html","title":"controller - FoldersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FoldersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/folders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                folders\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteOne\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateFolderDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/folders/folders.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateFolderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/folders/folders.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/folders/folders.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(dto: CreateFolderDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/folders/folders.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateFolderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\n\nimport { FolderNotFound } from \"./folders.errors\";\nimport { FoldersService } from \"./folders.service\";\n\nimport { CreateFolderDto } from \"./dto/create-folder.dto\";\nimport { FolderDto } from \"./dto/folder.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"folders\")\n@UseGuards(AuthGuard)\nexport class FoldersController {\n  constructor(private readonly folders: FoldersService) {}\n\n  @Post()\n  create(@Body() dto: CreateFolderDto, @CurrentUser(\"id\") uid: string): Promise {\n    return this.folders.create(dto, uid).then(folder => folder.toDto());\n  }\n\n  @Delete(\"/:id\")\n  deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.folders.deleteOne({ id, uid }).then(folder => folder.toDto());\n  }\n\n  @Get(\"/:id\")\n  async findOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const folder = await this.folders.findOne({ id, uid });\n    if (!folder) throw new FolderNotFound();\n\n    return folder.toDto();\n  }\n\n  @Patch(\"/:id\")\n  async updateOne(\n    @Body() dto: CreateFolderDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.folders.updateOne({ id, uid }, dto).then(folder => folder.toDto());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FoldersModule.html":{"url":"modules/FoldersModule.html","title":"module - FoldersModule","body":"\n                   \n\n\n\n\n    Modules\n    FoldersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FoldersModule\n\n\n\ncluster_FoldersModule_exports\n\n\n\ncluster_FoldersModule_providers\n\n\n\n\nFoldersService \n\nFoldersService \n\n\n\nFoldersModule\n\nFoldersModule\n\nFoldersService  -->\n\nFoldersModule->FoldersService \n\n\n\n\n\nFoldersService\n\nFoldersService\n\nFoldersModule -->\n\nFoldersService->FoldersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/folders/folders.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FoldersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FoldersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FoldersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FoldersController } from \"./folders.controller\";\nimport { FoldersService } from \"./folders.service\";\n\nimport { Folder, FolderSchema } from \"./schemas/folder.schema\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [\n    forwardRef(() => FilesModule),\n\n    MongooseModule.forFeature([{ name: Folder.name, schema: FolderSchema }])\n  ],\n  exports: [FoldersService],\n  controllers: [FoldersController],\n  providers: [FoldersService]\n})\nexport class FoldersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FoldersService.html":{"url":"injectables/FoldersService.html","title":"injectable - FoldersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FoldersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/folders.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(files: FilesService, folders: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/folders/folders.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        folders\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/folders/folders.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { FilterQuery, Model } from \"mongoose\";\n\nimport { FolderAlreadyExists, FolderNotFound, ParentFolderNotFound } from \"./folders.errors\";\n\nimport { Folder } from \"./schemas/folder.schema\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\n\n@Injectable()\nexport class FoldersService {\n  constructor(\n    @Inject(forwardRef(() => FilesService))\n    private readonly files: FilesService,\n\n    @InjectModel(Folder.name)\n    private readonly folders: Model\n  ) {}\n\n  async create(\n    data: {\n      name: string;\n      parent: string | null;\n    },\n    uid: string\n  ): Promise {\n    const parent = data.parent\n      ? await this.folders.findOne({ id: data.parent, uid }).then(parent => parent && parent._id)\n      : null;\n\n    if (!parent && data.parent) throw new ParentFolderNotFound();\n\n    const exists = await this.folders.exists({ name: data.name, parent, uid });\n    if (exists) throw new FolderAlreadyExists(data.name);\n\n    return new this.folders({ name: data.name, parent, uid }).save();\n  }\n\n  async delete(query: FilterQuery): Promise {\n    await this.folders.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const folder = await this.folders.findOne(query);\n    if (!folder) throw new FolderNotFound();\n\n    await this.files.delete({ folder: folder._id, uid: folder.uid });\n\n    return folder.deleteOne();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.folders.exists(query);\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.folders.find(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.folders.findOne(query);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      name: string;\n      parent: string | null;\n    }\n  ): Promise {\n    const folder = await this.folders.findOne(query);\n    if (!folder) throw new FolderNotFound();\n\n    if (data.parent) {\n      const parent = await this.folders\n        .findOne({ id: data.parent, uid: folder.uid })\n        .then(parent => parent && parent._id);\n\n      if (!parent) throw new ParentFolderNotFound();\n\n      folder.parent = parent;\n    }\n\n    folder.name = data.name;\n\n    return folder.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateApplicationKeyDto.html":{"url":"classes/GenerateApplicationKeyDto.html","title":"class - GenerateApplicationKeyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateApplicationKeyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/generate-application-key.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/generate-application-key.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateApplicationKeyDto {\n  key!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { SessionDto } from \"@/modules/sessions/dto/session.dto\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: Express.Session & SessionDto;\n  user: (User & { [key: string]: any }) | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        expires\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISessionData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISessionData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISessionData } from \"./session-data.interface\";\n\nexport interface ISession {\n  _id: string;\n  expires: Date;\n  session: ISessionData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISessionData.html":{"url":"interfaces/ISessionData.html","title":"interface - ISessionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISessionData extends Express.SessionData {\n  identifier: string;\n\n  ip: string | null;\n\n  lastUsed: Date;\n\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsufficientScopes.html":{"url":"classes/InsufficientScopes.html","title":"class - InsufficientScopes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsufficientScopes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAPIKey.html":{"url":"classes/InvalidAPIKey.html","title":"class - InvalidAPIKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAPIKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAvatarFileType.html":{"url":"classes/InvalidAvatarFileType.html","title":"class - InvalidAvatarFileType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAvatarFileType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnprocessableEntityException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationToken.html":{"url":"classes/InvalidEmailConfirmationToken.html","title":"class - InvalidEmailConfirmationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    })\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(@Inject(NODEMAILER_MODULE_OPTIONS) private readonly options: MailerOptions) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @Process(\"send\")\n  async send(job: Job): Promise {\n    await this.transporter.sendMail(job.data);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAbsoluteLink\n                            \n                            \n                                    Async\n                                render\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                transpileMJML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAbsoluteLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAbsoluteLink(relativeLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relativeLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render(template: fs.PathLike, data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            fs.PathLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(options: SendMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                SendMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transpileMJML\n                        \n                        \n                    \n                \n            \n            \n                \ntranspileMJML(mjml: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mjml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import ejs from \"ejs\";\nimport fs from \"fs\";\nimport mjml2html from \"mjml\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\nexport class MailerService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  createAbsoluteLink(relativeLink: string): string {\n    const protocol = this.config.get(\"NODE_ENV\") === \"production\" ? \"https\" : \"http\";\n    const root = `${protocol}://${this.config.get(\"FRONTEND_DOMAIN\")}/`;\n\n    return root + relativeLink.substring(relativeLink.startsWith(\"/\") ? 1 : 0);\n  }\n\n  async render(template: fs.PathLike, data: Record): Promise {\n    const mjml = await fs.promises.readFile(template).then(buffer => buffer.toString());\n    return ejs.render(this.transpileMJML(mjml), data, { async: true });\n  }\n\n  async send(options: SendMailOptions): Promise {\n    options.html = options.mjml\n      ? await this.render(options.mjml.template, options.mjml.data || {})\n      : options.html;\n\n    await this.emailsQueue.add(\"send\", options);\n  }\n\n  transpileMJML(mjml: string): string {\n    const { errors, html } = mjml2html(mjml, { keepComments: false, validationLevel: \"strict\" });\n    if (errors && errors.length) throw new Error(errors.join(\"\\n\"));\n\n    return html;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaxActiveUploadSessionsError.html":{"url":"classes/MaxActiveUploadSessionsError.html","title":"class - MaxActiveUploadSessionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaxActiveUploadSessionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This file is crucial and cannot be deleted!\");\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor() {\n    super(\"File does not exists!\");\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentFolderNotFound.html":{"url":"classes/ParentFolderNotFound.html","title":"class - ParentFolderNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentFolderNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/folders/folders.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/folders/folders.errors.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, NotFoundException } from \"@nestjs/common\";\n\nexport class FolderAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Folder \"${name}\" already exists!`);\n  }\n}\nexport class FolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Folder does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    // If its successful but wrong recaptcha version response\n    if ((action && result.action !== action) || (score && result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendMailOptions.html":{"url":"interfaces/SendMailOptions.html","title":"interface - SendMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-mail-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mjml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mjml\n                                    \n                                \n                                \n                                    \n                                        mjml:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\n\nimport Mail from \"nodemailer/lib/mailer\";\n\nexport interface SendMailOptions extends Mail.Options {\n  mjml?: {\n    data?: Record;\n    template: fs.PathLike;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionDto.html":{"url":"classes/SessionDto.html","title":"class - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/dto/session.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookie\n                            \n                            \n                                identifier\n                            \n                            \n                                ip\n                            \n                            \n                                lastUsed\n                            \n                            \n                                ua\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookie\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Express.SessionCookieData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class SessionDto {\n  @Exclude()\n  cookie!: Express.SessionCookieData;\n\n  identifier!: string;\n\n  ip!: string | null;\n\n  lastUsed!: Date;\n\n  ua!: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SessionsController.html":{"url":"controllers/SessionsController.html","title":"controller - SessionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SessionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sessions\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                revoke\n                            \n                            \n                                revokeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string, currentSession: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \nrevoke(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/revoke')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAll\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAll(uid: string, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('all')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { plainToClass } from \"class-transformer\";\n\nimport { Controller, Delete, Get, Param, Session, UseGuards } from \"@nestjs/common\";\n\nimport { SessionsService } from \"./sessions.service\";\n\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { ISessionData } from \"./interfaces/session-data.interface\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"sessions\")\n@UseGuards(AuthGuard)\nexport class SessionsController {\n  constructor(private readonly sessions: SessionsService) {}\n\n  @Get()\n  async getSessions(\n    @CurrentUser(\"id\") uid: string,\n    @Session() currentSession: ISessionData\n  ): Promise {\n    const sessions = await this.sessions.find({ \"session.uid\": uid });\n\n    return sessions.map(({ session }) =>\n      plainToClass(SessionDto, {\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      })\n    );\n  }\n\n  @Delete(\"/:id/revoke\")\n  revoke(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.sessions.deleteOne({\n      \"session.identifier\": id,\n      \"session.uid\": uid\n    });\n  }\n\n  @Delete(\"all\")\n  revokeAll(@CurrentUser(\"id\") uid: string, @Session() session: ISessionData): Promise {\n    return this.sessions.delete({\n      \"session.identifier\": { $ne: session.identifier },\n      \"session.uid\": uid\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionsModule.html":{"url":"modules/SessionsModule.html","title":"module - SessionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nSessionsService \n\nSessionsService \n\n\n\nSessionsModule\n\nSessionsModule\n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sessions/sessions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SessionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { SessionsController } from \"./sessions.controller\";\nimport { SessionsService } from \"./sessions.service\";\n\n@Module({\n  exports: [SessionsService],\n  controllers: [SessionsController],\n  providers: [SessionsService]\n})\nexport class SessionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection, FilterQuery } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"./interfaces/session.interface\";\n\n@Injectable()\nexport class SessionsService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  async delete(query: FilterQuery): Promise {\n    await this.sessions.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    await this.sessions.deleteOne(query);\n  }\n\n  find(query: FilterQuery): Promise {\n    return this.sessions.find(query).toArray();\n  }\n\n  findOne(query: FilterQuery): Promise {\n    return this.sessions.findOne(query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyApplications.html":{"url":"classes/TooManyApplications.html","title":"class - TooManyApplications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyApplications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:31\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New filename cannot be empty!'})@IsString()@MaxLength(255, {message: 'Filename cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-file.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-file.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-file.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-file.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nexport class UpdateFileDto {\n  @IsNotEmpty({ message: \"New filename cannot be empty!\" })\n  @IsString()\n  @MaxLength(255, { message: \"Filename cannot be greater than $constraint1 characters!\" })\n  filename!: string;\n\n  @IsOptional()\n  @IsString()\n  folder!: string | null;\n\n  @IsBoolean()\n  hidden!: boolean;\n\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                newDisplayName\n                            \n                            \n                                    Optional\n                                newEmail\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsOptional()@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsOptional()@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class UpdateUserDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName?: string;\n\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  newEmail?: string;\n\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword?: string;\n\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadSessionNotFound.html":{"url":"classes/UploadSessionNotFound.html","title":"class - UploadSessionNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadSessionNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This file is crucial and cannot be deleted!\");\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor() {\n    super(\"File does not exists!\");\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  this.activated = false;\n  this.avatar = null;\n  this.deleted = true;\n  this.email = null;\n  this.password = null;\n\n  return this.save({ validateBeforeSave: false });\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                timesResent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timesResent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  timesResent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameTaken.html":{"url":"classes/UsernameTaken.html","title":"class - UsernameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:32\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                deleteOne\n                            \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(undefined: DeleteUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')@UseScopes(ApplicationScopes.USERS_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(me: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/avatar')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: UpdateUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport { Body, Controller, Get, Param, Patch, Post, Req, UseGuards } from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { InvalidAvatarFileType, UserNotFound } from \"./users.errors\";\nimport { UsersService } from \"./users.service\";\n\nimport { DeleteUserDto } from \"./dto/delete-user.dto\";\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly storage: StorageService,\n    private readonly users: UsersService\n  ) {}\n\n  @Get(\"@me\")\n  @UseScopes(ApplicationScopes.USERS_READ)\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Patch(\"@me\")\n  updateOne(@Body() dto: UpdateUserDto, @CurrentUser() me: User): Promise {\n    return this.users.updateOne(me, dto).then(user => user.toDto());\n  }\n\n  @Post(\"@me/avatar\")\n  async updateAvatar(@CurrentUser() me: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new InvalidAvatarFileType(), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.create(\n      {\n        deletable: false,\n        filename: avatar.filename,\n        folder: null,\n        hidden: true,\n        id: avatar.id,\n        public: true,\n        size: avatar.size\n      },\n      me.id\n    );\n\n    return this.users.updateAvatar(me, avatar.id).then(user => user.toDto());\n  }\n\n  @Post(\"@me/delete\")\n  deleteOne(@Body() { password }: DeleteUserDto, @CurrentUser() me: User): Promise {\n    return this.users.deleteOne(me, password);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.users.confirmEmail(token);\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new UserNotFound(username);\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\n\n\nFoldersModule\n\nFoldersModule\n\nUsersModule -->\n\nFoldersModule->UsersModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            FoldersModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { FoldersModule } from \"@/modules/folders/folders.module\";\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n\n    FilesModule,\n\n    FoldersModule,\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n\n    SessionsModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, files: FilesService, folders: FoldersService, mailer: MailerService, sessions: SessionsService, emailConfirmations: Model, users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        folders\n                                                  \n                                                        \n                                                                        FoldersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(user: User, newAvatarId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(user: User, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport {\n  DisplayNameTaken,\n  EmailTaken,\n  InvalidEmailConfirmationToken,\n  UsernameTaken\n} from \"./users.errors\";\n\nimport { emailChanged } from \"./emails/email-changed.email\";\nimport { emailConfirmation } from \"./emails/email-confirmation.email\";\nimport { passwordChangedEmail } from \"./emails/password-changed.email\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { User } from \"./schemas/user.schema\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { FoldersService } from \"@/modules/folders/folders.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly files: FilesService,\n    private readonly folders: FoldersService,\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(User.name)\n    private readonly users: Model\n  ) {}\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.emailConfirmations.findOne({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationToken();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationToken();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationToken();\n    }\n\n    const oldUser = user.toObject();\n\n    user.email = confirmation.newEmail;\n\n    await user.save();\n    await confirmation.deleteOne();\n\n    await this.mailer.send(\n      emailChanged(oldUser.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailTaken();\n    if (await this.users.exists({ username })) throw new UsernameTaken();\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async deleteOne(user: User, password: string): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.applications.delete({ uid: user.id }),\n      this.files.delete({ folder: null, uid: user.id }),\n      this.folders.delete({ uid: user.id }),\n      this.sessions.delete({ \"session.uid\": user.id })\n    ]);\n\n    return user.delete();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.users.exists(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  async updateOne(\n    user: User,\n    data: {\n      newDisplayName?: string;\n      newEmail?: string;\n      newPassword?: string;\n      password: string;\n    }\n  ): Promise {\n    const { newDisplayName, newEmail, newPassword, password } = data;\n\n    if (!(await user.comparePassword(password))) {\n      throw new IncorrectPassword();\n    }\n\n    if (newDisplayName && newDisplayName !== user.displayName) {\n      if (await this.users.exists({ displayName: newDisplayName })) {\n        throw new DisplayNameTaken();\n      }\n\n      user.displayName = newDisplayName;\n    }\n\n    if (newEmail && newEmail !== user.email) {\n      if (await this.users.exists({ email: newEmail })) {\n        throw new EmailTaken();\n      }\n\n      const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n      await this.mailer.send(\n        emailConfirmation(newEmail, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(`/confirm-email/${confirmation.token}`)\n        })\n      );\n    }\n\n    if (newPassword) {\n      user.password = newPassword;\n\n      await this.mailer.send(\n        passwordChangedEmail(user.email, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n        })\n      );\n    }\n\n    await user.save();\n\n    return user;\n  }\n\n  async updateAvatar(user: User, newAvatarId: string): Promise {\n    if (user.avatar) {\n      await this.files.delete({ id: user.avatar, uid: user.id }).catch(() => undefined);\n    }\n\n    user.avatar = newAvatarId;\n\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/optional-auth.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/scopes.decorator.ts\n            \n            variable\n            UseScopes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_OPTIONAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_SCOPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InsufficientScopes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InvalidAPIKey\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            TooManyApplications\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/generate-application-key.dto.ts\n            \n            class\n            GenerateApplicationKeyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            HMAC_SHA256\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-reset.email.ts\n            \n            variable\n            passwordReset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-resetted.email.ts\n            \n            variable\n            passwordResetted\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/successful-login.email.ts\n            \n            variable\n            successfulLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/user-activation.email.ts\n            \n            variable\n            userActivation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/file.dto.ts\n            \n            class\n            FileDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ChunkAlreadyUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            FileNotDeletable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            FileNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            MaxActiveUploadSessionsError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            UploadSessionNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            variable\n            FileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/folders/dto/create-folder.dto.ts\n            \n            class\n            CreateFolderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/folders/dto/folder.dto.ts\n            \n            class\n            FolderDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/folders/folders.controller.ts\n            \n            controller\n            FoldersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/folders/folders.errors.ts\n            \n            class\n            FolderAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/folders/folders.errors.ts\n            \n            class\n            FolderNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/folders/folders.errors.ts\n            \n            class\n            ParentFolderNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/folders/folders.service.ts\n            \n            injectable\n            FoldersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/folders/schemas/folder.schema.ts\n            \n            class\n            Folder\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/folders/schemas/folder.schema.ts\n            \n            variable\n            FolderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-mail-options.interface.ts\n            \n            interface\n            SendMailOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/dto/session.dto.ts\n            \n            class\n            SessionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session-data.interface.ts\n            \n            interface\n            ISessionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.controller.ts\n            \n            controller\n            SessionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/delete-user.dto.ts\n            \n            class\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-changed.email.ts\n            \n            variable\n            emailChanged\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-confirmation.email.ts\n            \n            variable\n            emailConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/password-changed.email.ts\n            \n            variable\n            passwordChangedEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidAvatarFileType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidEmailConfirmationToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.1.2\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.16.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.9.20\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.2\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.10\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sharp : ^0.25.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationScopes   (src/.../application-scopes.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/enums/application-scopes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationScopes\n                    \n                \n                        \n                            \n                                 FILES_READ\n                            \n                        \n                        \n                            \n                                Value : files:read\n                            \n                        \n                        \n                            \n                                 FILES_WRITE\n                            \n                        \n                        \n                            \n                                Value : files:write\n                            \n                        \n                        \n                            \n                                 FOLDERS_READ\n                            \n                        \n                        \n                            \n                                Value : folders:read\n                            \n                        \n                        \n                            \n                                 FOLDERS_WRITE\n                            \n                        \n                        \n                            \n                                Value : folders:write\n                            \n                        \n                        \n                            \n                                 USERS_READ\n                            \n                        \n                        \n                            \n                                Value : users:read\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FoldersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FoldersModule\n\n\n\ncluster_FoldersModule_exports\n\n\n\ncluster_FoldersModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFoldersModule\n\nFoldersModule\n\nUsersModule -->\n\nFoldersModule->UsersModule\n\n\n\nAppModule -->\n\nFoldersModule->AppModule\n\n\n\n\n\nFoldersService \n\nFoldersService \n\nFoldersService  -->\n\nFoldersModule->FoldersService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nSessionsService \n\nSessionsService \n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nFoldersService\n\nFoldersService\n\nFoldersModule -->\n\nFoldersService->FoldersModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    59 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            AUTH_GUARD_OPTIONAL   (src/.../auth.guard.ts)\n                        \n                        \n                            AUTH_GUARD_SCOPES   (src/.../auth.guard.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            emailChanged   (src/.../email-changed.email.ts)\n                        \n                        \n                            emailConfirmation   (src/.../email-confirmation.email.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            FileSchema   (src/.../file.schema.ts)\n                        \n                        \n                            FolderSchema   (src/.../folder.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            HMAC_SHA256   (src/.../application.schema.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../optional-auth.ts)\n                        \n                        \n                            passwordChangedEmail   (src/.../password-changed.email.ts)\n                        \n                        \n                            passwordReset   (src/.../password-reset.email.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            passwordResetted   (src/.../password-resetted.email.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            successfulLogin   (src/.../successful-login.email.ts)\n                        \n                        \n                            userActivation   (src/.../user-activation.email.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            UseScopes   (src/.../scopes.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HMAC_SHA256\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/guards/auth.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_OPTIONAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_OPTIONAL\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_SCOPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_SCOPES\"\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((field: string, ctx: ExecutionContext) => {\n  const user = ctx.switchToHttp().getRequest().user;\n  return field ? user && user[field] : user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-changed.mjml\"\n  },\n  subject: \"Bytebin - Email Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your email has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-confirmation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-confirmation.mjml\"\n  },\n  subject: \"Bytebin - Please confirm your email address\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"To confirm your email address, please visit the link below.\",\n    \"This email confirmation link is only valid for the next 72 hours.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/file.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FileSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(File)\n                        \n                    \n\n\n            \n        \n\n    src/modules/folders/schemas/folder.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FolderSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Folder)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/optional-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_OPTIONAL, optional)\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/password-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordChangedEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-changed.mjml\"\n  },\n  subject: \"Bytebin - Password Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your password has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-reset.mjml\"\n  },\n  subject: \"Bytebin - Password reset requested\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To reset your password, please visit the link below.\",\n    \"This password reset link is only valid for the next 1 hour.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-resetted.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordResetted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-resetted.mjml\"\n  },\n  subject: \"Bytebin - Your password has been reset\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"Your password has been reset.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/successful-login.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            successfulLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/user-activation.mjml\"\n  },\n  subject: \"Bytebin - Successful Login\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To finish up the registration process, please activate your account by visiting the link below\",\n    \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/user-activation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userActivation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/user-activation.mjml\"\n  },\n  subject: \"Bytebin - Activate your account\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To finish up the registration process, please activate your account by visiting the link below\",\n    \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/scopes.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UseScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...scopes: ApplicationScopes[]): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_SCOPES, scopes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
