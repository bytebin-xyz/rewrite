var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.938,1,3.306]],["body/controllers/AdminController.html",[0,2.706,1,5.631,2,2.706,3,0.078,4,0.066,5,0.042,6,5.44,7,3.896,8,5.001,9,0.212,10,0.009,11,4.097,12,0.962,13,5.001,14,5.44,15,4.614,16,6.158,17,3.747,18,3.896,19,6.158,20,6.158,21,0.091,22,0.24,23,2.706,24,2.294,25,1.972,26,3.564,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.306,30,1.347]],["body/injectables/AdminGuard.html",[3,0.072,4,0.06,5,0.038,8,3.748,9,0.196,10,0.009,12,0.88,15,5.328,21,0.083,22,0.22,27,0.005,28,0.007,29,0.005,30,2.171,31,2.631,32,4.977,33,1.47,34,4.51,35,0.513,36,1.845,37,2.217,38,5.736,39,5.736,40,6.133,41,0.436,42,5.633,43,1.275,44,1.063,45,0.377,46,1.138,47,4.544,48,1.461,49,1.647,50,3.132,51,3.564,52,4.221,53,5.633,54,1.848,55,5.633,56,1.991,57,3.132,58,4.544,59,4.977,60,2.551,61,1.495,62,4.544,63,1.461,64,2.551]],["title/injectables/AdminMiddleware.html",[30,1.347,65,3.306]],["body/injectables/AdminMiddleware.html",[3,0.063,4,0.053,5,0.033,8,3.279,9,0.195,10,0.009,12,0.77,21,0.073,22,0.192,27,0.005,28,0.006,29,0.005,30,1.991,31,2.302,33,1.348,35,0.449,36,1.692,37,2.302,41,0.505,43,1.477,44,1.23,45,0.436,46,1.318,48,1.692,49,1.693,50,2.74,51,5.261,52,3.693,54,1.617,57,3.626,59,4.354,60,2.232,61,1.308,62,3.976,65,4.887,66,4.354,67,5.83,68,6.276,69,6.458,70,6.276,71,5.533,72,4.499,73,7.346,74,4.928,75,5.762,76,4.354,77,4.928,78,2.852,79,4.928,80,4.928,81,2.377,82,3.279]],["title/modules/AdminModule.html",[83,1.285,84,3.104]],["body/modules/AdminModule.html",[1,5.514,2,2.891,3,0.063,4,0.053,5,0.034,9,0.204,10,0.009,12,0.781,13,5.953,14,4.413,21,0.074,22,0.195,27,0.005,28,0.006,29,0.005,36,1.296,41,0.386,43,1.131,44,0.942,45,0.334,46,1.009,48,1.296,65,3.743,83,2.143,84,5.987,85,2.409,86,2.49,87,2.673,88,2.673,89,2.673,90,3.938,91,3.938,92,4.413,93,4.413,94,4.413,95,3.522,96,1.908,97,2.673,98,4.995,99,4.995,100,6.58,101,7.822,102,4.995,103,6.58,104,3.658,105,4.995,106,6.58,107,3.018,108,4.029,109,6.58,110,4.995,111,4.995,112,4.995,113,2.071,114,4.995,115,4.995,116,4.413,117,4.995,118,3.324,119,4.995]],["title/injectables/AdminService.html",[13,2.936,30,1.347]],["body/injectables/AdminService.html",[3,0.08,4,0.067,5,0.042,9,0.191,10,0.009,12,0.982,13,5.062,17,4.24,18,3.976,21,0.093,22,0.245,23,2.761,24,1.918,26,4.403,27,0.006,28,0.007,29,0.006,30,2.322,31,2.935,41,0.486,43,1.422,44,1.185,45,0.42,46,1.27,120,5.551,121,1.27,122,5.068,123,6.283]],["title/controllers/AppController.html",[0,1.938,124,3.306]],["body/controllers/AppController.html",[0,3.322,2,2.733,3,0.079,4,0.067,5,0.042,9,0.156,10,0.009,12,0.972,21,0.092,22,0.243,27,0.006,28,0.007,29,0.006,35,0.567,36,1.962,37,2.318,41,0.481,48,1.614,49,1.751,63,1.614,124,5.666,125,5.495,126,8.685,127,1.992,128,6.22,129,6.22,130,6.22,131,5.495]],["title/modules/AppModule.html",[83,1.285,132,3.306]],["body/modules/AppModule.html",[2,1.833,3,0.034,4,0.028,5,0.018,9,0.21,10,0.009,12,0.416,21,0.039,22,0.104,27,0.003,28,0.004,29,0.003,56,2.235,61,0.706,63,0.69,64,2.329,83,1.498,84,4.719,85,1.284,86,1.327,87,1.424,88,1.424,89,1.424,90,2.232,91,2.753,95,2.232,96,1.017,97,1.424,124,3.854,132,6.562,133,2.351,134,2.351,135,2.351,136,5.566,137,4.464,138,4.719,139,4.245,140,4.719,141,5.477,142,4.719,143,5.566,144,4.387,145,2.147,146,2.319,147,2.661,148,2.351,149,4.171,150,1.994,151,4.171,152,3.899,153,1.424,154,3.685,155,1.872,156,1.169,157,4.171,158,2.661,159,3.126,160,3.126,161,4.171,162,2.153,163,1.994,164,2.661,165,2.661,166,2.661,167,2.351,168,2.661,169,1.994,170,2.661,171,2.147,172,2.661,173,2.661,174,2.661,175,2.661,176,2.147,177,1.54,178,2.147,179,2.351,180,2.661,181,2.661,182,2.661,183,2.661,184,2.661,185,2.661,186,7.638,187,2.661,188,2.661,189,2.661,190,7.465,191,5.144,192,2.661,193,3.365,194,2.661,195,4.171,196,2.661,197,2.661,198,2.661,199,4.171,200,2.661,201,4.171,202,2.661,203,2.661,204,5.823,205,5.823,206,2.661,207,2.661,208,2.661,209,2.661,210,2.661,211,2.351,212,2.661,213,4.149,214,2.661,215,2.661,216,2.661,217,2.661,218,2.661,219,2.661,220,2.661,221,2.661,222,2.661,223,2.661,224,2.661,225,2.661,226,4.171,227,2.661,228,2.661,229,2.661,230,4.171,231,2.661,232,2.661,233,2.661,234,2.661,235,2.661,236,2.86,237,3.255,238,2.86,239,2.147,240,5.823,241,2.661,242,2.167,243,2.661,244,2.661,245,3.126,246,2.661,247,2.661,248,2.661,249,2.661,250,2.661,251,2.661,252,2.661,253,5.144,254,2.661,255,2.661,256,2.661,257,2.661,258,1.608,259,2.661,260,2.661,261,2.661,262,2.661,263,2.661,264,2.661,265,1.48,266,2.661,267,2.661,268,2.661,269,2.351,270,2.661,271,2.661,272,2.661,273,2.147,274,2.147,275,2.147,276,1.872]],["title/classes/Application.html",[22,0.172,277,2.453]],["body/classes/Application.html",[3,0.034,4,0.029,5,0.018,9,0.176,10,0.009,21,0.062,22,0.201,27,0.003,28,0.004,29,0.003,33,0.866,35,0.244,37,1.469,41,0.613,44,0.974,45,0.544,49,1.557,54,1.916,56,2.065,61,0.711,63,1.823,64,3.884,72,2.329,82,1.781,113,1.738,127,2.03,156,1.176,265,2.329,277,3.907,278,0.471,279,2.159,280,3.267,281,4.461,282,0.927,283,5.163,284,5.163,285,2.87,286,4.165,287,2.08,288,4.246,289,4.165,290,4.165,291,2.49,292,2.87,293,5.163,294,4.395,295,2.677,296,2.677,297,3.398,298,2.677,299,2.677,300,0.816,301,2.788,302,3.525,303,4.84,304,3.381,305,4.677,306,4.219,307,2.677,308,3.353,309,3.38,310,2.677,311,2.677,312,2.159,313,3.702,314,3.696,315,3.38,316,3.869,317,2.677,318,2.677,319,2.677,320,2.677,321,2.677,322,4.561,323,2.159,324,1.549,325,1.291,326,1.382,327,4.474,328,2.329,329,1.781,330,4.165,331,2.365,332,1.549,333,1.694,334,2.159,335,1.883,336,2.365,337,5.868,338,2.365,339,2.365,340,2.365,341,1.781,342,1.781,343,1.883,344,1.883,345,1.617,346,1.883,347,2.788,348,2.089,349,5.841,350,2.329,351,2.006,352,2.365,353,2.677,354,1.883,355,1.883,356,2.006,357,2.365,358,2.006,359,1.781,360,2.677,361,4.19,362,3.869,363,2.677,364,4.19,365,2.677,366,2.677,367,2.677,368,1.488,369,2.677,370,2.677,371,2.677,372,2.677,373,3.38,374,2.677,375,2.159,376,2.159,377,2.159,378,2.677,379,2.677]],["title/classes/ApplicationDto.html",[22,0.172,281,3.104]],["body/classes/ApplicationDto.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,21,0.08,22,0.271,27,0.005,28,0.007,29,0.005,35,0.494,41,0.66,44,1.444,45,0.571,127,1.735,278,0.954,281,4.881,282,1.535,285,4.255,287,2.511,288,4.624,289,6.173,292,4.255,297,3.985,300,0.826,308,4.023,324,3.136,380,4.787,381,5.419,382,5.419,383,5.419,384,5.419,385,5.419,386,5.734,387,5.419]],["title/classes/ApplicationNotFound.html",[22,0.172,388,3.104]],["body/classes/ApplicationNotFound.html",[3,0.076,4,0.064,5,0.041,9,0.151,10,0.009,12,0.937,21,0.109,22,0.289,27,0.006,28,0.007,29,0.006,33,1.658,41,0.464,43,1.358,44,1.132,45,0.401,46,1.212,50,4.111,121,1.494,278,1.056,288,3.624,300,0.776,388,5.203,389,4.838,390,4.291,391,4.921,392,5.998,393,4.111,394,5.299,395,3.795,396,4.22,397,3.472,398,5.299]],["title/controllers/ApplicationsController.html",[0,1.938,399,3.306]],["body/controllers/ApplicationsController.html",[0,1.813,2,1.813,3,0.052,4,0.044,5,0.028,7,2.611,9,0.207,10,0.009,11,2.746,12,0.645,21,0.061,22,0.161,23,1.813,24,1.26,27,0.004,28,0.006,29,0.004,34,2.388,35,0.376,36,1.499,37,1.897,41,0.516,43,1.51,44,1.258,45,0.446,46,1.348,48,1.73,49,1.826,54,1.354,63,1.73,127,2.136,242,3.326,277,2.294,281,2.903,286,5.38,287,2.587,288,2.493,300,0.764,331,3.646,399,4.33,400,3.646,401,4.066,402,3.845,403,3.708,404,4.127,405,5.415,406,4.692,407,4.127,408,5.779,409,3.646,410,4.127,411,4.127,412,4.127,413,4.127,414,4.127,415,2.903,416,2.903,417,3.492,418,3.646,419,4.127,420,4.127,421,3.092,422,4.127,423,4.127,424,4.22,425,2.903,426,2.903,427,2.903,428,2.388,429,4.127,430,2.903,431,4.127,432,4.127,433,5.779,434,5.779,435,4.127,436,3.646,437,5.106,438,4.127,439,4.127,440,4.127,441,2.746]],["title/modules/ApplicationsModule.html",[83,1.285,136,3.104]],["body/modules/ApplicationsModule.html",[2,3.054,3,0.069,4,0.058,5,0.037,9,0.21,10,0.009,12,0.849,21,0.08,22,0.212,27,0.005,28,0.007,29,0.005,44,1.025,83,2.231,85,2.621,86,2.71,87,2.909,88,2.909,89,2.909,90,4.101,91,4.101,95,3.72,96,2.076,97,2.909,136,6.107,146,3.021,155,3.823,156,2.388,277,3.021,328,3.021,351,5.208,399,5.742,417,5.472,418,4.801,442,4.801,443,4.801,444,4.801,445,5.435,446,5.435,447,4.801,448,4.072,449,5.435]],["title/injectables/ApplicationsService.html",[30,1.347,417,2.665]],["body/injectables/ApplicationsService.html",[3,0.045,4,0.038,5,0.024,9,0.188,10,0.009,12,0.557,21,0.052,22,0.139,24,1.588,25,1.666,27,0.003,28,0.005,29,0.003,30,1.588,31,1.664,35,0.325,36,1.35,37,2.462,41,0.581,43,1.699,44,1.499,45,0.502,46,1.517,48,1.865,49,1.907,54,2.016,56,1.839,60,2.356,61,1.631,63,1.753,121,1.051,152,3.757,153,1.907,156,1.565,238,2.892,277,3.996,286,4.197,287,2.358,291,4.247,300,0.88,326,1.839,345,2.152,388,2.506,401,4.324,402,3.462,403,2.892,417,3.143,447,3.147,450,3.147,451,4.197,452,4.197,453,2.874,454,5.064,455,3.563,456,5.203,457,3.563,458,3.143,459,3.563,460,4.197,461,3.563,462,4.596,463,3.563,464,2.874,465,5.203,466,3.563,467,2.67,468,3.563,469,3.563,470,3.563,471,4.596,472,5.203,473,3.563,474,3.563,475,3.563,476,3.563]],["title/interfaces/AsyncStorageOptions.html",[477,0.892,478,3.306]],["body/interfaces/AsyncStorageOptions.html",[3,0.069,4,0.058,5,0.036,9,0.192,10,0.009,21,0.08,27,0.005,28,0.007,29,0.005,33,1.432,35,0.492,37,1.537,45,0.602,46,1.774,49,1.251,83,2.225,162,3.574,236,4.481,237,5.1,276,5.67,282,1.533,294,4.184,477,1.092,478,5.189,479,1.959,480,3.801,481,3.595,482,6.118,483,7.121,484,4.773,485,4.773,486,4.008,487,3.264,488,3.801,489,2.524,490,4.773,491,4.773]],["title/controllers/AuthController.html",[0,1.938,492,3.306]],["body/controllers/AuthController.html",[0,1.035,2,1.035,3,0.03,4,0.025,5,0.016,7,1.491,9,0.21,10,0.009,11,1.568,12,0.368,17,1.888,18,1.491,21,0.035,22,0.092,23,1.035,24,1.156,25,0.755,26,1.364,27,0.002,28,0.004,29,0.002,34,1.364,35,0.215,36,0.983,37,1.351,41,0.538,43,1.574,44,1.312,45,0.465,46,1.405,48,1.804,49,1.829,54,1.558,56,1.339,57,3.312,61,1.26,63,1.735,71,1.568,78,1.364,81,1.137,104,2.106,127,2.227,159,1.766,160,1.766,239,3.055,242,3.061,258,2.869,297,1.101,300,0.616,332,1.364,333,1.491,356,1.766,368,2.106,393,2.64,395,1.491,403,1.31,406,1.658,415,2.664,416,1.658,424,1.491,425,1.658,426,1.658,427,1.658,428,1.364,430,3.34,441,2.52,492,2.838,493,2.082,494,3.346,495,3.004,496,3.346,497,2.838,498,3.346,499,3.787,500,3.787,501,3.159,502,2.357,503,4.075,504,2.357,505,2.397,506,2.357,507,2.357,508,4.075,509,4.748,510,3.844,511,4.33,512,4.928,513,2.357,514,2.357,515,2.357,516,2.357,517,2.357,518,2.357,519,4.075,520,2.357,521,2.357,522,2.357,523,4.075,524,2.357,525,2.357,526,2.357,527,3.787,528,2.357,529,2.357,530,2.357,531,2.357,532,2.357,533,2.357,534,4.195,535,2.357,536,2.357,537,2.082,538,1.766,539,1.568,540,2.082,541,2.357,542,3.055,543,2.082,544,2.082,545,2.396,546,2.082,547,2.357,548,3.346,549,2.357,550,2.357,551,2.357,552,1.766,553,2.357,554,1.901,555,3.787,556,2.357,557,1.901,558,2.357,559,1.766,560,1.766,561,2.357,562,2.357,563,2.357,564,2.357,565,2.357,566,1.901,567,2.357,568,2.357,569,2.357,570,1.383,571,2.082,572,2.192,573,1.31,574,2.357,575,2.357,576,1.901,577,2.357,578,2.357,579,2.357,580,2.357,581,3.787,582,3.787,583,2.367,584,2.357,585,2.357,586,2.357,587,2.357,588,4.195,589,2.357,590,2.357,591,1.766,592,2.357,593,1.901,594,2.357,595,2.082,596,2.357,597,1.901,598,2.357,599,2.082,600,2.357,601,2.357,602,1.901,603,1.901,604,2.357,605,1.901,606,2.357,607,2.357,608,2.357,609,2.357,610,2.357,611,2.357,612,2.357,613,1.491,614,2.357,615,3.787,616,2.357,617,2.357,618,2.357,619,2.357,620,2.357,621,2.082,622,2.357,623,2.357,624,2.357,625,2.357,626,2.082,627,2.357]],["title/guards/AuthGuard.html",[34,2.553,628,3.559]],["body/guards/AuthGuard.html",[3,0.041,4,0.035,5,0.022,9,0.199,10,0.009,12,0.509,17,3.225,18,2.06,21,0.072,22,0.127,24,1.975,25,2.581,26,3.374,27,0.003,28,0.005,29,0.003,30,1.486,34,2.817,35,0.297,36,1.263,37,2.252,38,5.218,39,3.926,40,4.847,41,0.5,43,1.464,44,1.22,45,0.433,46,1.307,47,2.626,48,1.512,49,1.127,51,4.765,52,2.44,54,2.384,56,2.737,57,3.241,58,2.626,60,3.506,61,2.055,63,1.678,64,2.64,81,2.348,113,1.35,121,0.984,150,2.44,152,3.596,153,1.742,238,3.241,242,2.703,277,2.706,287,2.122,288,2.941,297,1.521,300,0.315,308,1.623,335,2.29,368,2.706,396,4.871,401,3.424,417,3.908,510,1.967,511,1.81,538,2.44,539,2.166,591,2.44,629,2.626,630,2.626,631,4.868,632,4.868,633,2.876,634,6.653,635,3.256,636,4.868,637,3.256,638,4.868,639,3.256,640,3.256,641,2.29,642,3.256,643,2.817,644,2.941,645,2.876,646,2.876,647,4.703,648,4.868,649,3.256,650,2.876,651,2.06,652,4.868,653,3.256,654,3.256,655,2.29,656,3.256,657,3.256,658,3.256,659,3.256,660,3.239,661,3.256,662,3.256,663,4.3,664,2.876,665,2.876,666,4.3,667,2.626,668,2.876,669,2.876]],["title/injectables/AuthMiddleware.html",[30,1.347,67,3.306]],["body/injectables/AuthMiddleware.html",[3,0.059,4,0.05,5,0.031,9,0.199,10,0.009,12,0.728,17,3.792,18,2.946,21,0.069,22,0.182,23,2.046,24,1.421,26,3.634,27,0.004,28,0.006,29,0.004,30,1.917,31,2.175,35,0.424,36,1.629,37,2.021,41,0.486,43,1.421,44,1.185,45,0.42,46,1.269,48,1.208,49,1.454,50,2.588,51,4.812,52,3.489,54,1.527,56,1.646,57,2.588,60,3.217,61,2.019,62,3.756,67,4.705,68,5.065,69,5.547,71,5.06,72,4.228,73,6.718,75,6.277,78,2.695,113,1.931,121,0.941,122,3.756,242,2.644,287,1.527,297,2.175,308,2.321,335,3.275,510,2.813,511,2.588,538,3.489,539,3.098,572,2.695,591,3.489,641,3.275,660,3.098,663,4.113,664,4.113,665,4.113,666,5.547,667,3.756,668,4.113,669,4.113,670,4.113,671,4.656,672,4.656,673,2.588,674,6.279,675,3.098,676,4.656,677,2.695,678,2.492]],["title/modules/AuthModule.html",[83,1.285,137,2.936]],["body/modules/AuthModule.html",[2,3.142,3,0.072,4,0.061,5,0.038,9,0.196,10,0.009,12,0.889,21,0.084,22,0.222,27,0.005,28,0.007,29,0.005,83,2.279,85,2.742,86,2.835,87,3.043,88,3.043,89,3.043,90,4.188,91,4.188,95,3.828,96,2.172,97,3.043,137,5.835,146,3.161,492,5.864,545,5.765,546,5.022,679,5.022,680,5.022,681,5.022,682,5.685,683,7.152,684,5.685]],["title/injectables/AuthService.html",[30,1.347,545,2.791]],["body/injectables/AuthService.html",[3,0.034,4,0.029,5,0.018,9,0.188,10,0.009,12,0.418,17,2.912,18,1.694,21,0.039,22,0.104,24,1.576,25,2.153,26,2.988,27,0.003,28,0.004,29,0.003,30,1.279,31,1.25,35,0.244,36,1.087,37,2.44,41,0.579,43,1.647,44,1.372,45,0.487,46,1.47,48,1.823,49,1.883,54,2.599,56,2.241,60,2.645,61,1.551,63,1.515,64,1.212,121,0.847,156,1.176,242,2.783,265,1.488,282,0.927,287,0.878,291,3.508,300,0.875,326,1.382,348,1.335,368,3.247,393,2.329,428,1.549,464,2.159,494,3.702,495,2.651,496,3.702,497,3.14,498,3.702,501,3.435,505,2.422,511,2.329,512,1.694,534,5.16,545,2.651,559,2.006,570,1.701,583,3.504,588,3.702,599,4.561,613,1.694,643,2.425,660,3.435,667,2.159,685,2.365,686,4.19,687,4.19,688,2.677,689,6.725,690,3.869,691,3.696,692,4.19,693,4.19,694,2.677,695,4.19,696,2.677,697,4.19,698,2.677,699,4.19,700,2.677,701,4.19,702,2.677,703,4.19,704,2.677,705,4.19,706,2.677,707,1.617,708,4.19,709,4.19,710,2.365,711,1.781,712,2.006,713,2.532,714,3.119,715,2.677,716,2.677,717,2.677,718,2.365,719,2.365,720,2.677,721,2.763,722,1.883,723,2.677,724,2.677,725,2.677,726,2.677,727,2.365,728,2.677,729,2.677,730,2.677,731,2.677,732,2.365,733,2.788,734,2.677,735,2.677,736,2.677,737,2.365,738,2.677,739,2.677]],["title/modules/BullBoardModule.html",[83,1.285,138,3.104]],["body/modules/BullBoardModule.html",[3,0.073,4,0.062,5,0.039,9,0.198,10,0.009,12,0.9,21,0.085,22,0.225,27,0.005,28,0.007,29,0.005,83,2.292,85,2.776,86,2.87,87,3.08,88,3.08,89,3.08,90,4.212,91,3.08,95,3.858,96,2.199,97,3.08,107,3.477,138,6.254,139,5.483,146,4.007,169,4.313,171,4.643,740,5.085,741,5.756,742,5.085,743,6.096,744,4.643,745,5.756,746,5.756]],["title/injectables/BullBoardProvider.html",[30,1.347,743,3.104]],["body/injectables/BullBoardProvider.html",[3,0.072,4,0.06,5,0.038,9,0.205,10,0.009,12,0.88,21,0.083,22,0.22,24,2.171,25,2.277,27,0.005,28,0.007,29,0.005,30,2.171,31,2.631,41,0.436,43,1.275,44,1.063,45,0.377,46,1.138,83,1.64,107,4.296,108,4.544,121,1.437,154,4.977,169,5.328,743,5.003,744,5.736,747,4.977,748,5.633,749,7.059,750,6.884,751,5.633,752,6.282,753,4.544,754,3.403,755,5.633,756,4.544,757,4.977,758,4.977,759,5.633,760,5.633]],["title/classes/ChangeDisplayNameDto.html",[22,0.172,761,3.306]],["body/classes/ChangeDisplayNameDto.html",[3,0.071,4,0.06,5,0.038,9,0.14,10,0.009,21,0.082,22,0.275,27,0.005,28,0.007,29,0.005,35,0.507,41,0.431,44,1.331,45,0.372,61,1.873,127,1.782,278,0.979,282,1.562,300,0.683,302,3.094,316,4.17,325,2.684,761,5.288,762,5.288,763,6.213,764,4.917,765,5.806,766,6.234,767,4.193,768,7.199,769,4.917,770,4.489,771,6.234,772,4.696,773,4.696,774,5.566,775,3.923,776,3.923,777,4.917,778,2.979,779,4.489]],["title/classes/ChangeEmailDto.html",[22,0.172,780,3.306]],["body/classes/ChangeEmailDto.html",[3,0.076,4,0.064,5,0.04,9,0.15,10,0.009,21,0.088,22,0.287,27,0.006,28,0.007,29,0.006,35,0.543,41,0.461,45,0.399,127,1.908,278,1.049,282,1.63,300,0.713,325,2.874,570,2.328,762,5.519,767,3.986,775,4.095,776,4.095,778,3.189,780,5.519,781,5.265,782,5.319,783,5.624,784,5.942,785,5.182,786,4.807,787,3.965,788,5.96]],["title/classes/ChangePasswordDto.html",[22,0.172,789,3.306]],["body/classes/ChangePasswordDto.html",[3,0.07,4,0.059,5,0.037,9,0.138,10,0.009,21,0.081,22,0.273,27,0.005,28,0.007,29,0.005,35,0.5,41,0.541,45,0.468,61,1.856,127,2.238,278,0.965,282,1.547,300,0.785,304,3.173,325,2.644,505,2.95,613,4.869,762,5.766,767,4.041,772,4.651,773,4.651,775,4.278,776,4.278,778,3.741,787,3.648,789,5.238,790,4.108,791,6.208,792,4.651,793,4.844,794,5.639,795,4.844,796,6.175,797,4.844,798,4.423]],["title/classes/ChunkAlreadyUploaded.html",[22,0.172,799,2.936]],["body/classes/ChunkAlreadyUploaded.html",[3,0.066,4,0.055,5,0.035,9,0.13,10,0.009,12,0.807,21,0.117,22,0.309,27,0.005,28,0.006,29,0.005,33,1.698,35,0.47,41,0.399,43,1.169,44,0.974,45,0.345,46,1.043,61,1.37,121,1.359,278,0.908,287,1.693,300,0.651,390,4.002,391,3.435,393,2.87,501,4.474,511,2.87,573,2.87,673,3.738,678,2.763,799,4.474,800,3.632,801,4.518,802,5.038,803,3.86,804,5.162,805,5.038,806,3.868,807,3.119,808,2.87,809,4.254,810,3.119,811,2.87,812,3.632,813,3.435,814,3.632,815,3.868,816,3.632,817,3.868,818,3.868,819,4.73,820,2.082,821,3.868,822,3.868,823,3.868,824,3.632,825,3.868,826,3.632,827,3.435,828,3.868,829,3.868]],["title/classes/Counter.html",[22,0.172,830,3.104]],["body/classes/Counter.html",[3,0.052,4,0.044,5,0.028,9,0.103,10,0.009,21,0.061,22,0.161,23,1.809,27,0.004,28,0.005,29,0.004,33,1.193,35,0.375,36,1.497,41,0.639,43,1.721,44,1.434,45,0.509,46,1.536,48,1.068,63,2.099,104,4.014,121,0.832,177,3.34,278,0.725,294,3.486,350,3.208,707,4.592,721,2.204,803,4.567,814,2.897,830,4.059,831,3.637,832,6.662,833,7.219,834,7.219,835,5.77,836,5.098,837,5.77,838,5.098,839,4.117,840,4.117,841,5.77,842,4.117,843,4.117,844,5.77,845,4.117,846,7.879,847,5.77,848,8.5,849,4.117,850,5.77,851,4.117,852,5.77,853,4.117,854,4.117,855,4.117,856,4.117,857,7.219,858,6.662,859,6.662,860,4.117,861,4.117]],["title/classes/CreateApplicationDto.html",[22,0.172,405,3.306]],["body/classes/CreateApplicationDto.html",[3,0.074,4,0.063,5,0.039,9,0.147,10,0.009,21,0.086,22,0.284,27,0.006,28,0.007,29,0.006,35,0.533,41,0.452,44,1.664,45,0.391,127,1.872,277,4.611,278,1.029,282,1.611,300,0.705,302,3.25,325,2.82,405,5.454,767,3.952,770,4.716,772,4.843,773,4.843,775,4.047,776,4.047,778,3.129,779,4.716,792,3.89,862,6.43,863,5.165,864,6.43,865,5.847]],["title/classes/DeleteAccountDto.html",[22,0.172,866,3.306]],["body/classes/DeleteAccountDto.html",[3,0.078,4,0.066,5,0.042,9,0.155,10,0.009,21,0.091,22,0.293,27,0.006,28,0.007,29,0.006,35,0.561,41,0.476,45,0.412,127,1.972,278,1.084,282,1.663,300,0.728,325,2.97,505,2.985,767,3.07,775,4.178,776,4.178,778,3.296,787,4.097,792,4.097,796,6.639,866,5.631,867,6.639,868,5.44,869,6.158]],["title/interfaces/DeleteFileJob.html",[477,0.892,870,3.306]],["body/interfaces/DeleteFileJob.html",[3,0.084,4,0.071,5,0.045,10,0.008,21,0.098,27,0.006,28,0.007,29,0.006,35,0.603,45,0.443,282,1.737,300,0.81,477,1.338,479,2.4,870,5.882,871,5.849,872,5.849,873,7.645]],["title/classes/DiskStorage.html",[22,0.172,874,3.104]],["body/classes/DiskStorage.html",[3,0.049,4,0.041,5,0.026,9,0.187,10,0.009,21,0.081,22,0.151,23,1.703,24,1.183,25,2.474,27,0.004,28,0.005,29,0.004,35,0.353,36,1.434,37,2.198,41,0.598,43,1.749,44,1.457,45,0.517,46,1.561,48,1.928,49,1.627,54,1.814,60,2.504,61,1.029,63,1.823,64,1.755,81,2.667,113,2.293,118,3.679,121,0.783,162,2.001,177,2.243,278,0.682,287,2.534,300,0.854,403,3.074,458,3.34,477,0.783,489,2.582,651,2.452,655,2.727,874,3.89,875,3.127,876,3.894,877,5.529,878,5.529,879,4.46,880,4.46,881,3.127,882,4.944,883,3.876,884,4.885,885,3.876,886,4.885,887,3.876,888,3.89,889,3.876,890,4.078,891,3.89,892,3.876,893,3.876,894,4.885,895,2.579,896,2.342,897,2.579,898,2.727,899,2.727,900,3.424,901,2.579,902,3.424,903,3.424,904,2.452,905,3.424,906,3.424,907,3.127,908,3.127,909,3.424,910,3.424,911,3.424,912,3.424,913,3.424,914,3.424,915,3.424,916,3.424]],["title/interfaces/DiskStorageEngineOptions.html",[477,0.892,882,3.104]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.061,4,0.052,5,0.033,9,0.202,10,0.009,21,0.095,22,0.188,23,2.115,24,1.469,25,2.056,27,0.005,28,0.006,29,0.005,35,0.439,37,1.826,45,0.322,49,1.487,54,2.106,60,2.907,61,1.278,63,2,64,2.179,81,3.097,113,1.996,118,4.272,162,2.484,177,2.786,282,1.421,287,1.579,300,0.83,458,2.908,477,0.973,479,1.745,489,2.248,651,3.045,655,3.386,874,3.386,875,3.883,876,3.879,882,5.083,884,4.252,886,4.252,888,3.386,890,4.063,891,3.386,894,5.672,895,3.203,896,2.908,897,3.203,898,3.386,899,3.386,900,4.252,901,5.129,902,4.252,903,4.252,904,3.045,905,4.252,906,4.252,907,3.883,908,3.883,909,4.252,910,4.252,911,4.252,912,4.252,913,4.252,914,4.252,915,4.252,916,4.252]],["title/classes/DisplayNameAlreadyExists.html",[22,0.172,917,2.791]],["body/classes/DisplayNameAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.847,21,0.119,22,0.315,27,0.005,28,0.007,29,0.005,33,1.724,41,0.419,43,1.227,44,1.309,45,0.363,46,1.095,121,1.095,278,0.954,300,0.826,390,3.713,395,4.39,570,1.578,573,3.857,583,3.459,801,5.039,807,4.624,917,4.39,918,3.812,919,5.199,920,5.419,921,3.141,922,4.06,923,3.274,924,4.06,925,4.06,926,3.429,927,5.199,928,4.06,929,3.606,930,4.06]],["title/interfaces/Email.html",[477,0.892,570,1.285]],["body/interfaces/Email.html",[3,0.077,4,0.065,5,0.041,10,0.009,21,0.09,27,0.006,28,0.007,29,0.006,35,0.555,36,1.938,41,0.625,48,2.095,49,1.73,300,0.851,477,1.232,479,2.211,570,2.175,931,5.386,932,5.085,933,5.085,934,5.085,935,6.097,936,6.097,937,6.097]],["title/classes/EmailAlreadyExists.html",[22,0.172,923,2.665]],["body/classes/EmailAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.847,21,0.119,22,0.315,27,0.005,28,0.007,29,0.005,33,1.724,41,0.419,43,1.227,44,1.309,45,0.363,46,1.095,121,1.095,278,0.954,300,0.826,390,3.713,395,4.39,570,2.02,573,3.857,583,3.459,801,5.039,807,4.624,917,3.429,918,3.812,919,4.06,921,2.454,922,4.06,923,4.192,924,5.199,925,4.06,926,3.429,927,5.199,928,4.06,929,3.606,930,4.06,938,5.419]],["title/classes/EmailChangedEmail.html",[22,0.172,939,3.306]],["body/classes/EmailChangedEmail.html",[3,0.062,4,0.053,5,0.033,9,0.163,10,0.009,21,0.072,22,0.192,23,2.16,24,1.987,25,1.574,27,0.005,28,0.006,29,0.005,35,0.448,36,1.689,41,0.601,43,1.113,44,0.927,45,0.329,46,0.993,48,1.894,49,1.508,63,1.894,96,1.878,113,2.7,121,0.993,278,0.865,300,0.852,505,1.694,570,2.354,820,1.982,921,3.519,932,4.696,933,4.696,934,4.696,939,4.879,940,7.143,941,3.965,942,4.342,943,4.342,944,5.136,945,4.342,946,4.342,947,4.342,948,3.271,949,3.11,950,3.458,951,4.342,952,4.342,953,3.271,954,5.752,955,4.879,956,3.458,957,3.965,958,4.342,959,3.683,960,2.537,961,4.342,962,3.458]],["title/classes/EmailConfirmation.html",[22,0.172,963,3.104]],["body/classes/EmailConfirmation.html",[3,0.049,4,0.041,5,0.026,9,0.186,10,0.009,21,0.081,22,0.215,27,0.004,28,0.005,29,0.004,33,1.14,35,0.352,41,0.597,45,0.516,56,1.364,61,1.025,63,1.001,64,4.046,72,3.065,82,2.568,127,2.246,156,1.696,258,2.332,278,0.679,280,4.069,282,1.22,285,3.575,291,3.101,292,3.575,297,3.603,300,0.747,301,4.279,302,3.9,303,4.667,304,4.06,305,5.133,306,3.668,314,4.438,315,4.447,325,1.862,326,1.992,327,4.936,328,3.065,329,2.568,332,2.234,333,2.442,341,2.568,342,2.568,343,2.715,344,2.715,345,2.332,346,2.715,347,4.279,348,1.924,354,2.715,355,2.715,359,2.568,368,3.9,721,2.95,722,3.878,782,4.279,783,4.524,963,3.878,964,6.406,965,3.114,966,4.279,967,3.86,968,2.715,969,3.86,970,3.86,971,5.658,972,3.86,973,3.86,974,3.86,975,3.878,976,2.892,977,3.86,978,2.892,979,3.41,980,3.86,981,3.114,982,3.114,983,3.114]],["title/classes/EmailConfirmationEmail.html",[22,0.172,984,3.306]],["body/classes/EmailConfirmationEmail.html",[3,0.061,4,0.052,5,0.033,9,0.161,10,0.009,21,0.071,22,0.188,23,2.12,24,1.963,25,1.545,27,0.005,28,0.006,29,0.005,35,0.44,36,1.669,41,0.597,43,1.092,44,0.91,45,0.323,46,0.975,48,1.877,49,1.489,63,1.877,72,2.683,113,2.667,121,0.975,278,0.849,300,0.849,570,2.407,785,3.395,820,2.594,921,3.494,932,4.662,933,4.662,934,4.662,948,3.211,949,3.053,950,3.395,951,4.263,952,4.263,953,3.211,956,3.395,957,3.893,960,3.32,962,3.395,984,4.819,985,7.1,986,4.263,987,4.826,988,4.826,989,5.836,990,4.826,991,4.826,992,4.826,993,6.432,994,6.432,995,6.432,996,4.263,997,3.893,998,3.211,999,4.826,1000,4.826]],["title/classes/File.html",[5,0.03,22,0.172]],["body/classes/File.html",[3,0.042,4,0.035,5,0.047,9,0.163,10,0.009,21,0.072,22,0.191,27,0.003,28,0.005,29,0.003,33,1.012,35,0.299,37,0.933,41,0.634,45,0.555,49,1.133,54,1.076,56,1.159,63,1.27,64,4.011,113,2.029,127,2.417,156,1.441,177,2.832,265,3.861,278,0.577,280,3.704,282,1.083,285,3.255,287,2.13,290,4.722,291,2.823,292,3.255,294,2.956,297,3.032,300,0.794,301,3.256,302,3.861,303,5.163,304,3.757,305,5.022,306,3.256,308,2.919,309,2.645,312,2.645,314,4.909,323,2.645,324,1.898,326,1.692,327,5.163,328,2.72,329,2.182,330,3.947,341,2.182,347,3.256,348,2.919,350,3.609,362,2.457,373,3.947,375,2.645,376,2.645,377,2.645,803,2.526,968,3.443,1001,2.645,1002,4.886,1003,2.734,1004,5.172,1005,4.119,1006,4.119,1007,4.387,1008,3.388,1009,3.279,1010,4.893,1011,3.279,1012,3.279,1013,3.279,1014,3.279,1015,3.279,1016,3.279,1017,3.279,1018,3.279,1019,3.279,1020,3.279,1021,3.279,1022,2.897,1023,2.645,1024,4.864,1025,2.457,1026,2.897,1027,3.279,1028,3.279,1029,3.279,1030,4.893]],["title/classes/FileDto.html",[22,0.172,1002,3.104]],["body/classes/FileDto.html",[3,0.065,4,0.054,5,0.034,9,0.127,10,0.009,21,0.075,22,0.259,27,0.005,28,0.006,29,0.005,35,0.463,41,0.678,45,0.587,127,1.626,278,0.893,282,1.472,285,4.124,287,2.434,291,3.578,292,4.124,297,3.677,300,0.839,308,3.316,324,2.939,350,4.376,386,5.558,803,3.433,1002,4.679,1003,3.465,1004,6.553,1005,5.219,1006,5.219,1008,4.293,1031,4.485,1032,5.077,1033,5.077,1034,5.077,1035,5.077,1036,5.077,1037,5.077,1038,5.077,1039,5.077,1040,5.077]],["title/classes/FileNotFound.html",[22,0.172,810,2.665]],["body/classes/FileNotFound.html",[3,0.066,4,0.055,5,0.035,9,0.13,10,0.009,12,0.807,21,0.117,22,0.309,27,0.005,28,0.006,29,0.005,33,1.698,35,0.47,41,0.399,43,1.169,44,0.974,45,0.345,46,1.043,61,1.37,121,1.359,278,0.908,287,1.693,300,0.767,390,4.24,391,4.474,393,3.738,501,4.474,511,2.87,573,2.87,673,3.738,678,2.763,799,3.435,800,3.632,801,4.062,802,3.868,803,2.664,805,3.868,806,3.868,807,3.119,808,2.87,809,4.254,810,4.062,811,2.87,812,3.632,813,3.435,814,3.632,815,3.868,816,3.632,817,3.868,818,3.868,819,4.73,820,2.082,821,3.868,822,3.868,823,3.868,824,3.632,825,3.868,826,3.632,827,3.435,828,3.868,829,3.868,1041,5.162]],["title/classes/FileTooLarge.html",[22,0.172,1042,2.553]],["body/classes/FileTooLarge.html",[3,0.065,4,0.055,5,0.034,9,0.128,10,0.009,12,0.798,21,0.124,22,0.328,27,0.005,28,0.006,29,0.005,33,1.769,41,0.395,43,1.156,44,0.963,45,0.447,46,1.032,121,1.697,278,0.898,300,0.72,808,2.838,811,2.838,1003,3.118,1042,3.864,1043,3.23,1044,4.949,1045,4.442,1046,5.105,1047,3.948,1048,4.224,1049,3.397,1050,2.955,1051,3.397,1052,3.328,1053,2.955,1054,4.949,1055,4.949,1056,3.397,1057,2.955,1058,2.955,1059,3.397,1060,2.955,1061,3.397,1062,3.397,1063,3.397]],["title/controllers/FilesController.html",[0,1.938,1064,3.306]],["body/controllers/FilesController.html",[0,1.268,2,1.268,3,0.037,4,0.031,5,0.041,7,1.826,9,0.202,10,0.009,11,1.92,12,0.451,21,0.042,22,0.113,24,1.856,25,1.947,27,0.003,28,0.004,29,0.003,34,1.67,35,0.263,36,1.152,37,1.973,41,0.47,43,1.377,44,1.147,45,0.407,46,1.229,48,1.578,49,1.727,54,1.995,56,2.149,57,3.65,60,1.306,61,1.437,63,1.405,70,5.594,71,4.046,78,1.67,81,2.611,121,0.583,127,1.947,144,3.271,152,2.469,153,1.544,162,1.489,238,1.604,242,3.256,258,3.271,287,2.563,291,1.392,300,0.741,402,1.92,403,3.01,406,2.03,409,2.549,415,3.125,416,2.03,424,3.426,425,2.03,426,2.03,427,2.03,428,1.67,430,2.03,436,2.549,437,4.784,441,2.955,510,3.674,641,3.125,810,1.743,819,3.125,890,1.826,907,2.328,908,2.328,959,2.162,1002,2.03,1003,1.348,1007,4.057,1008,1.67,1022,2.549,1024,3.328,1052,3.032,1064,3.328,1065,2.549,1066,5.415,1067,2.885,1068,2.885,1069,2.885,1070,2.885,1071,2.885,1072,2.885,1073,4.557,1074,2.885,1075,2.885,1076,2.885,1077,2.885,1078,2.885,1079,2.549,1080,2.549,1081,2.683,1082,2.549,1083,2.885,1084,2.885,1085,3.583,1086,2.885,1087,2.885,1088,2.683,1089,2.328,1090,2.885,1091,2.885,1092,2.885,1093,2.885,1094,2.885,1095,2.885,1096,2.885,1097,2.885,1098,3.924,1099,2.885,1100,2.885,1101,2.885,1102,2.885,1103,2.885,1104,3.924,1105,2.885,1106,2.549,1107,2.885,1108,2.885,1109,2.885,1110,2.885,1111,2.885,1112,2.549,1113,2.328,1114,2.885,1115,2.885,1116,2.885,1117,2.885,1118,2.885,1119,2.885,1120,4.441,1121,2.885,1122,2.885,1123,2.549,1124,2.328,1125,2.162,1126,2.885,1127,2.549,1128,2.885,1129,2.885,1130,2.885,1131,2.549,1132,2.885,1133,2.549,1134,2.885,1135,2.885]],["title/modules/FilesModule.html",[83,1.285,139,2.791]],["body/modules/FilesModule.html",[2,2.664,3,0.056,4,0.047,5,0.041,9,0.214,10,0.009,12,0.691,21,0.065,22,0.173,27,0.004,28,0.006,29,0.004,44,1.144,83,2.015,85,2.133,86,2.205,87,2.367,88,2.367,89,2.367,90,3.703,91,3.703,95,3.245,96,1.689,97,2.367,139,5.509,146,3.371,152,4.336,153,2.367,155,3.111,156,1.943,163,3.314,213,3.567,236,3.371,237,3.836,238,3.371,245,3.314,273,3.567,274,3.567,300,0.428,328,2.459,448,3.314,754,2.672,901,2.942,904,2.798,1025,4.543,1052,2.205,1064,5.184,1081,5.303,1082,3.907,1136,3.907,1137,3.907,1138,3.907,1139,3.907,1140,5.19,1141,5.667,1142,4.422,1143,5.356,1144,4.422,1145,4.422,1146,3.907,1147,3.907,1148,3.907,1149,4.422,1150,3.907,1151,3.314,1152,3.907]],["title/injectables/FilesProcessor.html",[30,1.347,1141,3.104]],["body/injectables/FilesProcessor.html",[3,0.048,4,0.041,5,0.026,9,0.185,10,0.009,12,0.593,21,0.056,22,0.148,24,1.663,25,2.36,27,0.004,28,0.005,29,0.004,30,1.663,31,1.773,35,0.346,36,1.413,37,1.812,41,0.593,43,1.737,44,1.447,45,0.513,46,1.55,48,1.912,49,1.262,54,1.787,81,3.357,104,4.393,107,2.294,121,1.101,127,2.229,144,3.849,162,3.289,236,2.111,300,0.617,754,2.294,767,1.893,870,2.845,1088,4.206,1089,3.062,1113,3.062,1141,3.832,1153,3.354,1154,4.813,1155,4.813,1156,4.813,1157,5.448,1158,4.813,1159,3.062,1160,5.616,1161,3.797,1162,4.813,1163,3.797,1164,4.813,1165,5.629,1166,3.797,1167,4.813,1168,7.724,1169,5.629,1170,3.797,1171,5.448,1172,3.797,1173,3.797,1174,4.813,1175,5.629,1176,3.797,1177,2.845,1178,3.354,1179,3.797,1180,3.797,1181,3.797,1182,3.354,1183,6.15,1184,6.15,1185,2.845,1186,4.813,1187,3.354,1188,3.354,1189,3.797,1190,3.797,1191,5.448,1192,3.797,1193,3.354,1194,3.354,1195,2.526,1196,3.354,1197,3.354,1198,3.797]],["title/injectables/FilesService.html",[30,1.347,1081,2.665]],["body/injectables/FilesService.html",[3,0.04,4,0.034,5,0.053,9,0.187,10,0.009,12,0.496,21,0.047,22,0.124,24,1.457,25,1.528,27,0.003,28,0.005,29,0.003,30,1.457,31,1.482,35,0.289,36,1.238,37,2.463,41,0.578,43,1.69,44,1.408,45,0.526,46,1.509,48,1.867,49,1.908,54,2.449,56,1.687,60,2.161,61,1.523,63,1.777,64,1.436,107,1.916,121,0.965,156,1.394,287,2.449,291,4.093,300,0.868,326,1.637,402,3.176,403,2.654,451,3.851,452,3.851,454,4.785,458,2.884,460,3.851,462,4.217,467,2.377,471,4.217,489,1.482,718,2.802,749,5.151,750,5.07,753,2.559,754,1.916,758,2.802,810,1.916,873,4.217,1003,1.482,1005,2.232,1006,3.358,1007,3.577,1008,1.836,1024,4.3,1052,2.38,1080,2.802,1081,2.884,1098,4.217,1131,2.802,1133,4.217,1146,2.802,1199,2.802,1200,4.774,1201,3.172,1202,3.172,1203,4.774,1204,3.851,1205,3.172,1206,3.172,1207,3.172,1208,3.172,1209,4.774,1210,3.172,1211,4.774,1212,3.172,1213,3.172,1214,3.172,1215,3.172,1216,3.172,1217,3.172,1218,3.172,1219,3.172,1220,3.172,1221,4.774,1222,4.774,1223,3.172,1224,3.172,1225,4.774,1226,3.172]],["title/classes/ForgotPasswordDto.html",[22,0.172,503,3.306]],["body/classes/ForgotPasswordDto.html",[3,0.075,4,0.063,5,0.04,9,0.184,10,0.009,21,0.087,22,0.286,27,0.006,28,0.007,29,0.006,35,0.539,41,0.458,127,1.896,242,2.203,278,1.042,282,1.624,325,2.856,428,3.427,503,5.497,570,2.541,767,3.975,775,4.079,776,4.079,778,3.169,783,5.608,784,5.918,785,5.161,786,4.777,787,3.94,790,4.437,1227,6.481,1228,5.922,1229,5.922]],["title/classes/GenerateApplicationKeyDto.html",[22,0.172,421,3.306]],["body/classes/GenerateApplicationKeyDto.html",[3,0.083,4,0.07,5,0.044,10,0.008,21,0.096,22,0.256,27,0.006,28,0.007,29,0.006,35,0.597,41,0.507,45,0.438,277,4.336,278,1.153,282,1.726,288,5.033,300,0.755,421,5.845,1230,6.891,1231,5.786,1232,6.55]],["title/classes/GoogleCloudEngine.html",[22,0.172,1233,3.104]],["body/classes/GoogleCloudEngine.html",[3,0.056,4,0.047,5,0.03,9,0.173,10,0.009,21,0.089,22,0.172,23,1.934,24,2.268,25,2.21,27,0.004,28,0.006,29,0.004,33,0.91,35,0.401,36,1.568,37,1.963,41,0.602,43,1.682,44,1.402,45,0.497,46,1.501,48,1.791,49,1.399,54,1.444,56,1.556,61,1.168,63,1.568,113,2.506,121,0.889,162,3.119,278,0.774,282,1.337,287,2.264,300,0.834,348,2.194,403,3.36,458,3.651,477,0.889,486,3.498,489,2.823,707,2.659,876,4.17,879,4.875,880,4.875,881,3.55,888,4.252,890,4.367,891,4.252,895,4.592,896,2.659,897,2.929,898,3.096,1233,4.252,1234,6.028,1235,3.298,1236,6.097,1237,5.227,1238,4.401,1239,5.339,1240,4.401,1241,4.401,1242,4.401,1243,4.401,1244,3.55,1245,3.55,1246,3.298,1247,3.888,1248,3.888,1249,3.888,1250,3.888]],["title/interfaces/GoogleCloudEngineOptions.html",[477,0.892,1237,3.104]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.068,4,0.057,5,0.036,9,0.191,10,0.009,21,0.101,22,0.208,23,2.347,24,2.098,25,1.71,27,0.005,28,0.007,29,0.005,33,1.421,35,0.487,37,1.519,45,0.357,49,1.237,54,1.752,56,1.888,61,1.418,63,1.783,113,2.215,162,3.548,282,1.521,300,0.823,458,3.227,477,1.079,479,1.936,486,4.399,489,2.494,876,4.153,888,3.757,890,4.349,891,3.757,895,4.574,896,3.227,897,3.554,898,3.757,1233,3.757,1234,4.002,1235,4.002,1236,4.718,1237,5.347,1239,4.718,1244,4.308,1245,4.308,1246,4.002,1247,7.09,1248,4.718,1249,4.718,1250,4.718]],["title/controllers/HealthController.html",[0,1.938,1251,3.306]],["body/controllers/HealthController.html",[0,2.154,2,2.154,3,0.062,4,0.052,5,0.033,7,3.102,9,0.195,10,0.009,12,0.766,21,0.072,22,0.191,24,2.534,25,2.659,27,0.005,28,0.006,29,0.005,35,0.447,36,1.686,41,0.379,48,1.272,49,1.923,63,1.272,118,4.852,121,0.991,127,1.57,152,3.613,153,2.624,193,5.243,238,2.725,904,3.102,1251,4.87,1252,4.331,1253,6.5,1254,7.764,1255,4.902,1256,4.902,1257,6.5,1258,6.5,1259,6.5,1260,4.902,1261,6.5,1262,4.902,1263,6.5,1264,6.5,1265,3.954,1266,4.902,1267,4.902,1268,4.902,1269,4.902,1270,4.902,1271,4.902,1272,4.902,1273,4.902,1274,4.902,1275,4.902,1276,4.902,1277,4.902,1278,4.902,1279,4.331,1280,4.902,1281,4.902]],["title/modules/HealthModule.html",[83,1.285,140,3.104]],["body/modules/HealthModule.html",[2,3.384,3,0.082,4,0.069,5,0.043,9,0.207,10,0.009,12,1.002,21,0.094,22,0.25,27,0.006,28,0.007,29,0.006,83,2.243,85,3.093,140,5.419,146,3.566,1251,6.186,1265,5.174,1282,6.414,1283,7.703,1284,6.414]],["title/interfaces/IRequest.html",[51,2.791,477,0.892]],["body/interfaces/IRequest.html",[3,0.075,4,0.063,5,0.04,9,0.2,10,0.009,21,0.087,27,0.006,28,0.007,29,0.006,33,1.511,35,0.536,45,0.489,46,1.477,51,4.624,78,3.405,242,3.322,282,1.617,308,3.963,428,3.405,477,1.189,479,2.133,510,4.802,511,4.622,512,5.26,559,4.409,1285,5.198]],["title/interfaces/ISession.html",[477,0.892,512,2.791]],["body/interfaces/ISession.html",[3,0.071,4,0.06,5,0.038,10,0.009,21,0.082,27,0.005,28,0.007,29,0.005,33,1.154,35,0.509,45,0.584,282,1.565,289,6.58,291,3.934,297,3.624,300,0.864,308,3.869,393,4.535,477,1.128,479,2.024,512,4.474,539,5.428,542,6.58,593,4.503,595,4.932,597,4.503,1204,5.703,1286,4.932,1287,5.582,1288,5.582,1289,5.582,1290,5.582]],["title/interfaces/IncomingFile.html",[477,0.892,1291,2.936]],["body/interfaces/IncomingFile.html",[3,0.077,4,0.065,5,0.041,10,0.009,21,0.089,27,0.006,28,0.007,29,0.006,35,0.55,45,0.561,282,1.643,300,0.889,477,1.22,479,2.189,1003,3.918,1291,4.94,1292,5.334,1293,4.87,1294,7.411,1295,7.411,1296,6.767]],["title/classes/IncorrectPassword.html",[22,0.172,1297,2.665]],["body/classes/IncorrectPassword.html",[3,0.068,4,0.058,5,0.036,9,0.135,10,0.009,12,0.84,21,0.123,22,0.325,27,0.005,28,0.007,29,0.005,33,1.76,41,0.416,50,4.624,96,2.052,121,1.75,278,0.945,397,3.993,495,3.399,505,2.378,572,3.109,643,3.109,644,3.245,673,3.836,675,3.574,677,3.109,678,2.875,713,3.245,714,3.245,820,2.166,960,3.561,1047,3.327,1297,4.168,1298,3.574,1299,5.372,1300,3.779,1301,3.779,1302,3.779,1303,3.399,1304,3.399,1305,3.779,1306,3.779]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.172,1307,3.559]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.066,4,0.055,5,0.035,9,0.169,10,0.009,12,0.809,21,0.076,22,0.202,23,2.274,24,1.58,27,0.005,28,0.006,29,0.005,35,0.472,36,1.748,41,0.521,43,1.525,44,1.271,45,0.451,46,1.361,48,1.343,56,2.381,70,4.176,71,3.444,78,2.996,81,2.497,104,3.745,113,2.793,121,1.046,144,4.07,245,5.611,278,0.911,641,5.579,651,3.275,655,5.268,767,2.581,809,4.738,820,2.087,1106,4.573,1159,4.176,1160,6.397,1307,5.434,1308,6.615,1309,4.573,1310,7.488,1311,5.177,1312,6.736,1313,7.931,1314,5.177,1315,5.177,1316,5.177,1317,6.736,1318,5.177,1319,5.177,1320,5.177,1321,5.177,1322,4.176,1323,4.573]],["title/classes/InvalidAPIKey.html",[22,0.172,396,3.104]],["body/classes/InvalidAPIKey.html",[3,0.078,4,0.066,5,0.042,9,0.155,10,0.009,12,0.962,21,0.111,22,0.293,27,0.006,28,0.007,29,0.006,33,1.677,41,0.476,50,4.509,121,1.639,278,1.084,288,3.72,300,0.596,388,4.332,389,4.967,390,4.022,391,4.097,393,3.423,394,5.44,395,3.896,396,5.287,397,3.564,398,5.44,1324,6.158]],["title/classes/InvalidCredentials.html",[22,0.172,713,2.665]],["body/classes/InvalidCredentials.html",[3,0.068,4,0.058,5,0.036,9,0.135,10,0.009,12,0.84,21,0.123,22,0.325,27,0.005,28,0.007,29,0.005,33,1.76,41,0.416,50,4.624,96,2.052,121,1.75,278,0.945,397,3.993,495,3.399,505,2.378,572,3.109,643,3.109,644,3.245,673,3.836,675,3.574,677,3.109,678,2.875,713,4.168,714,3.245,820,2.166,960,3.561,1047,3.327,1297,3.245,1298,3.574,1300,3.779,1301,3.779,1302,3.779,1303,3.399,1304,3.399,1305,3.779,1306,3.779,1325,5.372]],["title/classes/InvalidEmailConfirmationLink.html",[22,0.172,1326,3.104]],["body/classes/InvalidEmailConfirmationLink.html",[3,0.076,4,0.064,5,0.041,9,0.151,10,0.009,12,0.937,21,0.109,22,0.289,27,0.006,28,0.007,29,0.006,33,1.658,41,0.464,121,1.691,242,2.232,278,1.056,397,4.28,570,1.747,820,2.982,960,4.32,998,3.991,1047,4.037,1303,4.679,1304,4.679,1326,5.203,1327,4.838,1328,5.998,1329,4.22,1330,3.991]],["title/classes/InvalidPasswordResetLink.html",[22,0.172,714,2.665]],["body/classes/InvalidPasswordResetLink.html",[3,0.068,4,0.058,5,0.036,9,0.135,10,0.009,12,0.84,21,0.123,22,0.325,27,0.005,28,0.007,29,0.005,33,1.76,41,0.416,50,4.471,96,2.052,121,1.75,278,0.945,397,3.993,495,3.399,505,2.378,572,3.109,643,3.109,644,3.245,673,3.836,675,3.574,677,3.109,678,2.875,713,3.245,714,4.168,820,2.166,960,3.561,1047,3.676,1297,3.245,1298,3.574,1300,3.779,1301,3.779,1302,3.779,1303,3.399,1304,3.399,1305,3.779,1306,3.779,1331,5.372]],["title/classes/InvalidUserActivationLink.html",[22,0.172,1329,3.104]],["body/classes/InvalidUserActivationLink.html",[3,0.076,4,0.064,5,0.041,9,0.151,10,0.009,12,0.937,21,0.109,22,0.289,27,0.006,28,0.007,29,0.006,33,1.658,41,0.464,121,1.691,242,2.232,278,1.056,397,4.28,570,1.747,820,2.982,960,4.32,998,3.991,1047,4.037,1303,4.679,1304,4.679,1326,4.22,1327,4.838,1329,5.203,1330,3.991,1332,5.998]],["title/classes/LoginDto.html",[22,0.172,508,3.306]],["body/classes/LoginDto.html",[3,0.071,4,0.06,5,0.038,9,0.141,10,0.009,21,0.082,22,0.276,27,0.005,28,0.007,29,0.005,35,0.51,41,0.601,45,0.52,127,2.488,278,0.985,282,1.568,300,0.833,325,2.7,505,2.904,508,5.308,583,4.2,767,3.532,775,4.54,776,4.54,778,3.791,787,4.714,792,4.714,1333,4.946,1334,5.823,1335,5.599,1336,4.946,1337,5.599,1338,5.599]],["title/modules/MailerModule.html",[83,1.285,141,3.104]],["body/modules/MailerModule.html",[3,0.038,4,0.032,5,0.02,9,0.206,10,0.009,12,0.465,21,0.044,22,0.116,25,2.133,27,0.003,28,0.004,29,0.003,36,0.773,37,1.295,41,0.478,43,1.4,44,1.421,45,0.414,46,1.249,48,1.604,49,0.69,63,1.822,83,2.194,85,1.436,86,1.485,87,1.594,88,1.594,89,1.594,90,3.565,91,2.956,95,2.435,96,1.138,97,1.594,141,5.636,146,2.53,152,3.07,153,1.594,155,2.095,156,1.309,163,2.232,213,2.402,236,3.07,237,3.494,238,1.656,245,2.232,273,2.402,274,2.402,275,5.665,276,2.095,287,0.977,328,3.07,358,3.41,448,2.232,487,2.749,489,3.28,497,2.232,691,5.141,721,1.594,733,1.982,754,1.799,963,2.095,978,3.41,1143,4.02,1148,2.631,1339,2.631,1340,2.631,1341,2.631,1342,4.94,1343,2.978,1344,6.821,1345,2.631,1346,4.02,1347,5.903,1348,2.978,1349,5.884,1350,2.631,1351,4.02,1352,2.978,1353,4.02,1354,3.912,1355,2.978,1356,5.884,1357,2.631,1358,4.02,1359,2.978,1360,4.455,1361,4.633,1362,2.631,1363,2.978,1364,2.978,1365,4.879,1366,3.201,1367,2.631,1368,2.631,1369,2.631,1370,3.41,1371,2.631,1372,2.631,1373,2.095,1374,3.41,1375,2.631,1376,2.631,1377,2.978,1378,2.978,1379,2.978,1380,2.978,1381,4.879,1382,2.631,1383,2.631,1384,4.02,1385,4.879,1386,4.02,1387,4.879,1388,2.631,1389,2.631,1390,2.978]],["title/interfaces/MailerModuleAsyncOptions.html",[477,0.892,1347,3.306]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.069,4,0.058,5,0.036,9,0.192,10,0.009,21,0.08,27,0.005,28,0.007,29,0.005,33,1.432,35,0.492,37,1.537,45,0.602,46,1.774,49,1.251,83,2.225,236,4.481,237,5.1,276,5.67,282,1.533,294,4.184,477,1.092,479,1.959,481,3.595,482,6.118,483,7.121,484,4.773,485,4.773,487,3.264,489,2.524,491,4.773,690,5.189,1347,5.189,1354,4.382,1366,3.801,1367,4.773,1391,4.049]],["title/interfaces/MailerOptions.html",[477,0.892,1354,2.791]],["body/interfaces/MailerOptions.html",[3,0.083,4,0.07,5,0.044,9,0.164,10,0.008,21,0.096,27,0.006,28,0.007,29,0.006,33,1.349,72,3.629,83,1.9,477,1.573,479,2.367,481,4.343,778,3.493,1354,4.925,1391,4.891,1392,6.527,1393,6.527,1394,6.527,1395,6.527,1396,6.527,1397,6.527,1398,5.766,1399,6.527,1400,6.527]],["title/interfaces/MailerOptionsFactory.html",[477,0.892,1366,3.104]],["body/interfaces/MailerOptionsFactory.html",[3,0.079,4,0.067,5,0.042,9,0.157,10,0.009,21,0.092,27,0.006,28,0.007,29,0.006,35,0.569,36,1.966,41,0.483,48,1.619,49,1.755,83,2.376,477,1.261,479,2.263,487,3.77,489,3.539,690,4.676,1354,5.162,1366,5.33,1391,5.677,1401,5.513,1402,8.485,1403,6.241]],["title/injectables/MailerProcessor.html",[30,1.347,1342,3.104]],["body/injectables/MailerProcessor.html",[3,0.029,4,0.024,5,0.015,9,0.205,10,0.009,12,0.353,21,0.033,22,0.088,24,1.779,25,2.38,27,0.002,28,0.003,29,0.002,30,1.117,31,1.055,35,0.206,36,0.95,37,2.373,41,0.596,43,1.683,44,1.402,45,0.497,46,1.502,48,1.928,49,1.755,54,2.32,61,0.972,81,2.559,83,0.658,96,1.398,104,3.654,107,1.365,113,0.937,121,0.74,127,2.192,144,2.788,236,1.256,242,1.717,282,0.81,300,0.447,348,1.126,487,1.365,489,2.155,505,2.151,570,2.206,707,1.365,754,1.365,756,2.952,767,1.126,932,1.365,933,1.365,934,1.365,939,1.693,948,1.503,955,3.976,984,1.693,998,2.435,1113,1.822,1154,3.233,1155,3.233,1156,3.233,1158,3.233,1159,1.822,1160,4.28,1162,3.233,1164,3.233,1165,4.076,1167,3.233,1168,7.915,1169,4.076,1174,3.233,1175,4.076,1177,1.693,1178,1.996,1182,1.996,1183,4.687,1184,4.687,1185,1.693,1186,4.687,1187,1.996,1188,1.996,1193,1.996,1194,1.996,1196,1.996,1197,1.996,1330,2.435,1342,2.575,1354,3.357,1361,1.693,1362,1.996,1365,1.996,1404,1.996,1405,4.614,1406,3.66,1407,5.514,1408,3.233,1409,3.233,1410,3.233,1411,3.233,1412,3.233,1413,2.259,1414,2.259,1415,3.66,1416,2.259,1417,2.259,1418,2.259,1419,2.259,1420,2.259,1421,3.66,1422,5.83,1423,2.259,1424,3.66,1425,2.259,1426,3.66,1427,2.259,1428,3.66,1429,2.259,1430,3.66,1431,2.259,1432,3.66,1433,3.233,1434,2.259,1435,2.259,1436,2.259,1437,2.259,1438,3.66,1439,1.693,1440,3.66,1441,1.693,1442,2.259,1443,1.693,1444,2.259,1445,1.307,1446,1.503,1447,1.503,1448,1.693,1449,5.83,1450,3.66,1451,1.693,1452,2.259,1453,1.693,1454,1.693,1455,2.259,1456,1.693,1457,2.259,1458,2.259,1459,2.259,1460,2.259,1461,5.83,1462,4.614,1463,2.259,1464,5.83,1465,3.66,1466,2.259,1467,2.259,1468,2.259,1469,2.259,1470,2.259,1471,2.259,1472,4.614,1473,2.259,1474,2.259,1475,2.259,1476,2.259,1477,2.259]],["title/injectables/MailerService.html",[30,1.347,691,2.791]],["body/injectables/MailerService.html",[3,0.032,4,0.027,5,0.017,9,0.193,10,0.009,12,0.394,21,0.037,22,0.098,24,2.176,25,2.282,27,0.002,28,0.004,29,0.002,30,1.221,31,1.179,35,0.23,36,1.038,37,2.483,41,0.594,43,1.702,44,1.419,45,0.503,46,1.52,48,1.904,49,1.93,54,2.408,56,1.756,61,1.319,63,1.289,96,1.528,107,1.525,121,0.808,152,3.143,153,1.351,156,1.109,238,2.224,242,3.21,282,0.885,291,3.314,300,0.635,326,1.303,345,3.002,348,1.258,428,1.461,441,3.306,451,3.227,453,2.036,454,5.635,460,3.227,467,1.891,505,1.949,570,1.165,691,2.531,707,1.525,711,2.662,712,1.891,733,1.679,749,4.561,752,4.39,753,2.036,754,1.525,757,2.229,782,3.306,921,2.791,944,2.814,955,2.997,963,1.775,989,2.036,998,2.662,1279,3.534,1330,2.662,1368,2.229,1369,2.229,1371,2.229,1372,2.229,1373,1.775,1375,2.229,1376,2.229,1408,3.534,1409,3.534,1410,3.534,1411,3.534,1412,3.534,1478,2.229,1479,4.969,1480,4.969,1481,4,1482,4,1483,4.969,1484,4.969,1485,4.969,1486,4,1487,2.524,1488,2.524,1489,6.643,1490,2.524,1491,4.995,1492,4,1493,2.524,1494,4,1495,2.524,1496,4,1497,2.524,1498,4,1499,2.524,1500,4,1501,2.524,1502,4,1503,2.524,1504,4,1505,2.524,1506,2.524,1507,2.524,1508,2.524,1509,2.524,1510,2.524,1511,2.524,1512,2.524,1513,2.524,1514,2.524,1515,6.164,1516,6.164,1517,4,1518,5.654,1519,2.524,1520,2.524,1521,2.524,1522,2.524,1523,2.036,1524,2.524,1525,2.524,1526,2.524,1527,2.036,1528,2.524,1529,2.524]],["title/classes/MaxActiveUploadSessionsError.html",[22,0.172,813,2.936]],["body/classes/MaxActiveUploadSessionsError.html",[3,0.067,4,0.057,5,0.036,9,0.133,10,0.009,12,0.825,21,0.118,22,0.312,27,0.005,28,0.007,29,0.005,33,1.711,35,0.481,41,0.408,61,1.401,121,1.528,278,0.929,287,1.732,300,0.661,390,4.046,391,3.513,393,2.935,501,4.54,511,2.935,573,2.935,673,4.203,678,2.826,799,3.513,800,3.714,801,4.122,802,3.956,803,2.725,805,3.956,806,3.956,807,3.19,808,2.935,809,4.317,810,3.19,811,2.935,812,3.714,813,4.54,814,3.714,815,3.956,816,3.714,817,3.956,818,3.956,819,4.8,820,2.129,821,3.956,822,3.956,823,3.956,824,3.714,825,3.956,826,3.714,827,3.513,828,3.956,829,3.956,1530,5.28]],["title/classes/NoFilesUploaded.html",[22,0.172,1050,2.553]],["body/classes/NoFilesUploaded.html",[3,0.066,4,0.056,5,0.035,9,0.131,10,0.009,12,0.816,21,0.124,22,0.33,27,0.005,28,0.006,29,0.005,33,1.778,41,0.404,45,0.349,121,1.738,278,0.919,300,0.506,808,2.902,811,2.902,1003,2.438,1042,3.021,1043,3.303,1044,4.507,1045,3.473,1047,4.074,1048,4.285,1049,3.473,1050,3.92,1051,3.473,1052,3.377,1053,3.021,1054,5.003,1055,5.003,1056,3.473,1057,3.021,1058,3.021,1059,3.473,1060,3.021,1061,3.473,1062,3.473,1063,3.473,1531,5.22]],["title/classes/PartialUserDto.html",[22,0.172,1532,3.306]],["body/classes/PartialUserDto.html",[3,0.055,4,0.046,5,0.029,8,3.982,9,0.15,10,0.009,21,0.064,22,0.233,27,0.004,28,0.006,29,0.004,33,1.237,35,0.395,41,0.682,45,0.59,76,7.73,127,2.565,278,0.764,282,1.325,285,3.327,287,1.963,292,3.327,297,3.2,300,0.81,308,2.984,324,2.512,350,3.809,386,6.267,505,2.063,570,2.256,583,2.984,921,2.71,966,3.982,1195,3.982,1532,4.484,1533,5.287,1534,3.834,1535,5.931,1536,4.828,1537,4.484,1538,4.339,1539,4.339,1540,4.339,1541,4.339,1542,4.339,1543,4.339,1544,4.339,1545,4.339,1546,4.339,1547,4.339,1548,4.339,1549,4.339,1550,4.339,1551,3.834]],["title/classes/PasswordChangedEmail.html",[22,0.172,1439,3.306]],["body/classes/PasswordChangedEmail.html",[3,0.062,4,0.053,5,0.033,9,0.163,10,0.009,21,0.072,22,0.192,23,2.16,24,1.987,25,1.574,27,0.005,28,0.006,29,0.005,35,0.448,36,1.689,41,0.601,43,1.113,44,0.927,45,0.329,46,0.993,48,1.894,49,1.508,63,1.894,96,1.878,113,2.7,121,0.993,278,0.865,300,0.852,505,2.516,570,2.126,820,1.982,921,3.519,932,4.696,933,4.696,934,4.696,941,3.965,942,4.342,943,4.342,944,5.136,945,4.342,946,4.342,947,4.342,948,3.271,949,3.11,950,3.458,953,3.271,954,5.752,955,4.879,956,3.458,957,3.965,958,4.342,959,3.683,960,2.537,961,4.342,962,3.458,1439,4.879,1552,6.522,1553,4.342,1554,4.915]],["title/classes/PasswordReset.html",[22,0.172,733,2.936]],["body/classes/PasswordReset.html",[3,0.053,4,0.045,5,0.028,9,0.182,10,0.009,21,0.086,22,0.163,27,0.004,28,0.006,29,0.004,33,1.204,35,0.38,41,0.591,45,0.511,56,1.475,61,1.108,63,1.083,64,3.965,72,3.238,82,2.777,127,2.149,156,1.834,258,2.521,278,0.734,280,4.246,282,1.289,285,3.73,291,3.236,292,3.73,297,3.696,300,0.703,301,3.876,302,4.037,303,4.832,304,4.203,305,4.832,306,3.876,314,3.685,326,2.154,327,4.832,328,3.238,329,2.777,332,2.415,333,2.64,341,2.777,342,2.777,343,2.936,344,2.936,345,2.521,346,2.936,347,3.876,348,2.081,354,2.936,355,2.936,359,2.777,368,4.037,721,3.117,722,4.098,733,3.876,966,4.465,968,2.936,971,5.858,975,4.098,976,3.127,981,3.366,982,3.366,983,3.366,1370,3.127,1555,6.383,1556,3.366,1557,4.173,1558,4.173,1559,4.173,1560,4.173,1561,4.173,1562,4.173,1563,3.687,1564,4.173]],["title/classes/PasswordResetEmail.html",[22,0.172,1441,3.306]],["body/classes/PasswordResetEmail.html",[3,0.062,4,0.052,5,0.033,9,0.162,10,0.009,21,0.071,22,0.189,23,2.131,24,1.97,25,1.553,27,0.005,28,0.006,29,0.005,35,0.442,36,1.674,41,0.598,43,1.098,44,0.915,45,0.325,46,0.98,48,1.882,49,1.495,63,1.882,72,2.697,96,2.771,113,2.676,121,0.98,177,2.808,278,0.854,300,0.85,505,2.5,570,2.112,785,3.413,820,1.956,921,3.501,932,4.671,933,4.671,934,4.671,948,3.228,949,3.069,950,3.413,953,3.228,956,3.413,960,3.331,962,3.413,996,4.286,997,3.913,1441,4.836,1523,5.851,1552,6.494,1553,4.286,1565,4.286,1566,4.851,1567,4.851,1568,4.851,1569,4.851,1570,4.851,1571,4.851,1572,6.454,1573,4.851,1574,4.286,1575,4.851]],["title/guards/RecaptchaGuard.html",[560,3.306,628,3.559]],["body/guards/RecaptchaGuard.html",[3,0.043,4,0.037,5,0.023,9,0.186,10,0.009,12,0.533,21,0.088,22,0.133,24,1.829,25,2.261,27,0.005,28,0.005,29,0.003,30,1.538,35,0.311,36,1.308,37,1.705,38,5.339,39,4.065,40,5.729,41,0.464,43,1.498,44,1.131,45,0.443,46,1.211,47,5.962,48,1.308,49,1.167,54,1.119,56,2.988,57,1.897,58,2.752,60,2.714,61,1.591,63,1.555,71,3.353,78,1.975,81,2.431,113,1.415,121,1.018,150,2.556,152,3.68,153,1.826,238,2.802,258,3.045,288,3.045,300,0.641,337,2.752,359,2.27,406,2.4,415,3.546,453,2.752,510,3.045,538,2.556,539,2.27,560,3.776,591,2.556,629,2.752,634,6.755,641,2.4,650,3.014,651,2.159,820,2.032,1047,1.645,1185,2.556,1322,2.752,1334,5.538,1576,2.752,1577,5.04,1578,4.834,1579,6.619,1580,3.412,1581,3.412,1582,3.412,1583,4.834,1584,3.412,1585,5.04,1586,3.412,1587,2.752,1588,2.752,1589,2.752,1590,4.065,1591,3.014,1592,2.752,1593,3.014,1594,2.752,1595,3.014,1596,5.295,1597,3.412,1598,4.452,1599,3.412,1600,3.412,1601,3.412,1602,3.412,1603,3.412,1604,3.412,1605,3.412,1606,3.412,1607,3.412,1608,5.04,1609,3.412,1610,3.412,1611,3.412,1612,3.412,1613,3.412,1614,3.412,1615,3.412,1616,3.412,1617,3.412,1618,3.412,1619,3.412,1620,3.412,1621,3.412,1622,3.412,1623,3.014,1624,3.412,1625,3.412,1626,3.412]],["title/classes/RegisterDto.html",[22,0.172,519,3.306]],["body/classes/RegisterDto.html",[3,0.059,4,0.049,5,0.031,9,0.116,10,0.009,21,0.068,22,0.244,27,0.004,28,0.006,29,0.004,35,0.421,41,0.586,45,0.507,127,2.428,278,0.813,282,1.383,300,0.822,302,2.569,304,2.675,316,3.462,325,2.229,505,2.876,519,4.681,570,2.377,583,3.949,766,5.519,767,4.375,769,4.082,770,3.727,771,5.519,772,5.045,773,5.045,775,4.403,776,4.403,777,4.082,778,3.788,779,3.727,783,4.979,784,5.039,785,4.395,786,3.727,787,4.157,794,3.727,798,5.039,1334,5.303,1336,4.082,1627,4.082,1628,4.621,1629,4.621,1630,4.621,1631,4.621,1632,6.698,1633,4.621]],["title/classes/RenameFileDto.html",[22,0.172,1073,3.306]],["body/classes/RenameFileDto.html",[3,0.075,4,0.063,5,0.04,9,0.148,10,0.009,21,0.087,22,0.285,27,0.006,28,0.007,29,0.006,35,0.536,41,0.455,45,0.394,61,1.94,127,1.884,278,1.035,282,1.617,300,0.708,302,3.271,325,2.838,767,3.963,772,4.862,773,4.862,775,4.063,776,4.063,778,3.149,792,3.915,864,6.456,1003,3.883,1024,5.956,1073,5.476,1634,6.456,1635,5.198,1636,5.884,1637,5.884,1638,5.884]],["title/classes/ResetPasswordDto.html",[22,0.172,523,3.306]],["body/classes/ResetPasswordDto.html",[3,0.069,4,0.058,5,0.037,9,0.137,10,0.009,21,0.08,22,0.272,27,0.005,28,0.007,29,0.005,35,0.497,41,0.539,45,0.466,61,1.849,96,2.66,127,2.23,278,0.959,282,1.541,300,0.783,304,3.155,325,2.629,368,4.645,505,2.945,523,5.218,613,4.856,767,4.032,772,4.634,773,4.634,775,4.266,776,4.266,778,2.917,790,4.084,792,4.634,793,4.815,794,5.618,795,4.815,797,4.815,798,4.397,1639,6.78,1640,5.451,1641,5.451]],["title/interfaces/SendEmailChangedJob.html",[477,0.892,1448,3.306]],["body/interfaces/SendEmailChangedJob.html",[3,0.081,4,0.068,5,0.043,9,0.159,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,33,1.583,35,0.578,45,0.425,282,1.694,300,0.796,477,1.283,479,2.302,570,2.229,944,6.004,1445,4.757,1446,4.224,1447,4.224,1448,5.736,1642,4.224,1643,5.12]],["title/interfaces/SendEmailConfirmationJob.html",[477,0.892,1451,3.306]],["body/interfaces/SendEmailConfirmationJob.html",[3,0.081,4,0.068,5,0.043,9,0.159,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,33,1.583,35,0.578,45,0.425,282,1.694,300,0.796,477,1.283,479,2.302,570,2.229,989,6.884,1445,4.757,1446,4.224,1447,4.224,1451,5.736,1642,4.224,1644,5.608]],["title/interfaces/SendEmailJob.html",[477,0.892,1445,2.553]],["body/interfaces/SendEmailJob.html",[3,0.08,4,0.067,5,0.042,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,35,0.572,45,0.548,282,1.684,300,0.857,335,5.983,477,1.27,479,2.278,570,1.83,921,3.851,1445,4.403,1645,5.551,1646,5.551,1647,7.229]],["title/interfaces/SendPasswordChangedJob.html",[477,0.892,1453,3.306]],["body/interfaces/SendPasswordChangedJob.html",[3,0.081,4,0.068,5,0.043,9,0.159,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,33,1.583,35,0.578,45,0.425,282,1.694,300,0.796,477,1.283,479,2.302,505,2.188,570,1.848,944,6.004,1445,4.757,1446,4.224,1447,4.224,1453,5.736,1642,4.224,1643,5.12]],["title/interfaces/SendPasswordResetJob.html",[477,0.892,1454,3.306]],["body/interfaces/SendPasswordResetJob.html",[3,0.081,4,0.068,5,0.043,9,0.159,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,33,1.583,35,0.578,45,0.425,282,1.694,300,0.796,477,1.283,479,2.302,505,2.188,570,1.848,1445,4.757,1446,4.224,1447,4.224,1454,5.736,1523,6.884,1642,4.224,1648,5.608]],["title/interfaces/SendUserActivationJob.html",[477,0.892,1456,3.306]],["body/interfaces/SendUserActivationJob.html",[3,0.081,4,0.068,5,0.043,9,0.159,10,0.009,21,0.093,27,0.006,28,0.007,29,0.006,33,1.583,35,0.578,45,0.425,242,2.362,282,1.694,300,0.796,477,1.283,479,2.302,570,1.848,1445,4.757,1446,4.224,1447,4.224,1456,5.736,1527,6.884,1642,4.224,1649,5.608]],["title/interfaces/SessionDto.html",[477,0.892,552,3.306]],["body/interfaces/SessionDto.html",[3,0.082,4,0.069,5,0.043,9,0.162,10,0.009,21,0.095,27,0.006,28,0.007,29,0.006,33,1.596,35,0.586,45,0.431,282,1.708,350,4.597,477,1.301,479,2.334,512,5.232,552,5.784,559,4.823,626,7.574,1650,5.686]],["title/controllers/SettingsController.html",[0,1.938,1651,3.306]],["body/controllers/SettingsController.html",[0,1.084,2,1.084,3,0.031,4,0.026,5,0.033,7,1.561,9,0.203,10,0.009,11,1.641,12,0.385,21,0.036,22,0.096,24,1.494,25,1.567,27,0.002,28,0.004,29,0.002,34,1.428,35,0.225,36,1.019,37,1.392,41,0.547,43,1.6,44,1.374,45,0.488,46,1.429,48,1.834,49,1.889,54,1.289,56,1.973,57,3.388,63,1.834,64,2.216,78,1.428,118,2.614,121,0.498,127,2.264,159,1.848,160,1.848,162,1.273,177,1.428,193,3.168,242,3.355,265,1.371,287,0.809,291,1.19,300,0.629,368,3.103,406,1.735,415,3.443,416,1.735,424,3.856,425,1.735,426,1.735,427,1.735,428,1.428,430,4.568,441,1.641,505,1.354,510,3.372,540,2.179,548,2.179,570,0.718,572,1.428,613,2.485,761,4.182,763,3.443,765,1.848,780,4.182,782,1.641,789,4.182,791,1.99,866,4.182,1003,1.152,1005,1.735,1006,1.735,1008,1.428,1048,1.561,1052,1.958,1079,2.179,1081,2.373,1088,2.373,1089,1.99,1123,2.179,1124,1.99,1125,1.848,1127,2.179,1296,3.168,1330,1.641,1537,3.668,1651,2.943,1652,2.179,1653,3.928,1654,3.928,1655,3.168,1656,3.948,1657,3.168,1658,3.948,1659,3.47,1660,3.47,1661,3.928,1662,2.466,1663,2.466,1664,3.928,1665,2.466,1666,2.466,1667,3.928,1668,2.466,1669,2.466,1670,2.466,1671,2.466,1672,2.466,1673,2.466,1674,3.928,1675,2.466,1676,2.466,1677,2.466,1678,2.466,1679,2.466,1680,2.179,1681,2.466,1682,3.928,1683,2.466,1684,2.466,1685,2.466,1686,2.466,1687,2.466,1688,2.466,1689,2.466,1690,2.466,1691,2.466,1692,4.324,1693,2.614,1694,2.179,1695,4.895,1696,2.466,1697,2.466,1698,2.466,1699,2.466,1700,2.179,1701,2.466,1702,2.466,1703,2.179,1704,2.466,1705,2.466,1706,2.466,1707,3.928,1708,2.466,1709,1.99,1710,2.466,1711,1.848,1712,2.466,1713,2.466,1714,3.928,1715,2.466,1716,2.466,1717,1.99,1718,2.466,1719,2.466,1720,2.179,1721,2.179,1722,2.466,1723,2.466,1724,2.466,1725,2.466,1726,2.466,1727,2.466,1728,2.466,1729,2.466,1730,2.466,1731,3.928,1732,2.466,1733,2.466,1734,2.466,1735,2.466,1736,2.466,1737,2.466,1738,2.466,1739,2.466,1740,2.466,1741,2.466,1742,2.466,1743,2.466]],["title/modules/SettingsModule.html",[83,1.285,142,3.104]],["body/modules/SettingsModule.html",[2,2.797,3,0.06,4,0.051,5,0.032,9,0.211,10,0.009,12,0.743,21,0.07,22,0.185,27,0.005,28,0.006,29,0.005,83,2.09,85,2.291,86,2.369,87,2.543,88,2.543,89,2.543,90,3.842,91,3.842,95,3.407,96,1.815,97,2.543,137,5.476,139,5.207,142,6.285,146,3.539,152,3.991,153,2.543,167,4.198,171,3.833,236,2.641,237,3.006,238,2.641,300,0.46,901,3.161,904,3.006,1140,5.32,1147,4.198,1150,4.198,1151,3.56,1152,4.198,1651,5.379,1693,5.908,1694,4.198,1744,4.198,1745,4.751,1746,4.198,1747,4.198,1748,4.751,1749,4.751]],["title/injectables/SettingsService.html",[30,1.347,1693,2.936]],["body/injectables/SettingsService.html",[3,0.031,4,0.026,5,0.017,9,0.191,10,0.009,12,0.383,17,2.772,18,1.55,21,0.036,22,0.096,24,1.854,25,1.945,26,2.821,27,0.002,28,0.004,29,0.002,30,1.193,31,1.144,35,0.223,36,1.014,37,2.444,41,0.562,43,1.646,44,1.371,45,0.487,46,1.469,48,1.83,49,1.886,54,2.818,56,2.288,60,3.375,61,1.978,63,1.014,121,0.79,239,3.931,242,3.347,258,1.48,287,1.282,291,1.182,300,0.832,368,3.091,401,2.749,417,3.36,428,1.418,441,1.63,505,0.844,545,3.518,570,1.138,613,3.083,621,2.165,633,2.165,645,2.165,646,2.165,660,2.6,677,2.261,690,3.652,691,3.518,710,2.165,711,2.6,712,1.836,727,2.165,732,2.165,737,2.165,765,2.928,782,2.6,791,1.976,917,1.55,921,1.109,923,1.48,998,2.6,1052,2.43,1081,3.36,1297,2.944,1326,3.912,1329,3.912,1330,3.7,1655,3.152,1656,3.152,1657,3.152,1658,3.152,1659,3.452,1660,3.452,1680,3.452,1693,2.6,1700,2.165,1750,2.165,1751,3.907,1752,2.45,1753,3.907,1754,2.45,1755,3.907,1756,2.45,1757,2.165,1758,3.907,1759,2.45,1760,3.907,1761,2.45,1762,3.907,1763,2.45,1764,2.45,1765,3.907,1766,2.45,1767,3.907,1768,2.45,1769,2.45,1770,2.45,1771,2.45,1772,3.907,1773,2.45,1774,2.45,1775,2.45,1776,2.45,1777,2.45,1778,2.45,1779,2.45,1780,4.305,1781,2.45,1782,2.45,1783,2.45,1784,2.45,1785,2.45,1786,2.45,1787,2.45,1788,2.45,1789,2.45,1790,2.45,1791,2.45,1792,2.45,1793,2.45,1794,2.45,1795,2.45,1796,2.45,1797,2.45,1798,2.45,1799,2.45,1800,2.45]],["title/interfaces/StorageEngine.html",[477,0.892,876,2.665]],["body/interfaces/StorageEngine.html",[3,0.067,4,0.057,5,0.036,9,0.133,10,0.009,21,0.078,27,0.005,28,0.007,29,0.005,35,0.484,36,1.777,41,0.586,43,1.716,44,1.43,45,0.507,46,1.532,48,1.966,49,1.965,104,3.807,287,2.487,300,0.856,403,3.807,458,4.137,477,1.073,479,1.925,480,5.634,876,4.137,879,5.524,880,5.524,888,4.818,890,4.796,891,4.818,895,5.044,896,3.208,1801,4.691,1802,5.31,1803,5.31,1804,5.31]],["title/modules/StorageModule.html",[83,1.285,1140,2.936]],["body/modules/StorageModule.html",[3,0.044,4,0.037,5,0.024,9,0.187,10,0.009,12,0.546,21,0.051,22,0.136,25,2.284,27,0.003,28,0.005,29,0.003,36,0.907,37,1.46,41,0.518,43,1.516,44,1.263,45,0.448,46,1.353,48,1.737,49,0.809,63,1.934,83,2.301,85,1.686,86,1.743,87,1.871,88,1.871,89,1.871,90,3.817,91,3.253,95,2.746,96,1.335,97,1.871,146,1.943,236,2.852,237,3.246,275,6.014,276,2.459,287,1.147,358,3.844,478,6.144,486,3.876,487,3.1,488,3.609,489,3.482,490,3.088,497,2.619,721,1.871,897,4.045,1088,5.08,1140,5.366,1344,7.125,1345,3.088,1346,4.533,1349,6.301,1350,3.088,1351,4.533,1353,4.533,1356,6.301,1357,3.088,1358,4.533,1381,5.37,1382,3.088,1383,3.088,1384,4.533,1385,5.37,1386,4.533,1387,5.37,1388,3.088,1389,3.088,1805,3.088,1806,3.088,1807,3.088,1808,3.496,1809,3.496,1810,3.496,1811,3.496,1812,3.496,1813,4.903,1814,5.018,1815,3.088,1816,3.496,1817,3.496]],["title/interfaces/StorageOptions.html",[477,0.892,486,2.553]],["body/interfaces/StorageOptions.html",[3,0.079,4,0.066,5,0.042,9,0.189,10,0.009,21,0.091,27,0.006,28,0.007,29,0.006,35,0.565,45,0.544,83,1.805,282,1.67,477,1.253,479,2.248,480,4.361,481,4.125,486,4.367,882,5.309,904,3.922,1151,6.343,1204,6.087,1237,5.309,1818,5.476,1819,5.476,1820,5.476,1821,5.476]],["title/interfaces/StorageOptionsFactory.html",[477,0.892,488,3.104]],["body/interfaces/StorageOptionsFactory.html",[3,0.079,4,0.067,5,0.042,9,0.157,10,0.009,21,0.092,27,0.006,28,0.007,29,0.006,35,0.569,36,1.966,41,0.483,48,1.619,49,1.755,83,2.376,162,3.221,477,1.261,479,2.263,480,5.33,486,4.722,487,3.77,488,5.33,489,3.539,1822,5.513,1823,8.485,1824,6.241]],["title/injectables/StorageService.html",[30,1.347,1088,2.665]],["body/injectables/StorageService.html",[3,0.029,4,0.025,5,0.032,9,0.207,10,0.009,12,0.361,21,0.034,22,0.09,24,0.706,25,2.125,27,0.002,28,0.004,29,0.002,30,1.139,31,1.08,35,0.211,36,0.968,37,2.082,41,0.513,43,1.336,44,1.113,45,0.422,46,1.192,48,1.531,49,1.461,54,1.224,56,2.778,57,2.606,60,1.047,61,1.893,63,1.791,64,2.123,81,3.33,83,0.673,104,2.606,113,0.959,121,0.467,236,1.286,265,2.074,282,0.826,287,1.765,300,0.611,308,1.153,324,1.338,332,1.338,333,1.463,348,1.153,350,1.286,356,1.733,403,2.074,458,2.254,486,3.113,487,2.254,489,2.756,537,2.043,597,3.009,602,1.865,603,1.865,605,1.865,651,1.463,655,1.627,707,1.397,711,1.539,712,1.733,830,2.624,874,3.298,876,2.832,881,1.865,890,2.966,895,1.539,896,2.832,897,2.482,898,1.627,901,2.482,904,2.36,1003,2.19,1008,1.338,1042,1.338,1050,2.159,1052,1.153,1053,2.159,1057,2.159,1058,2.159,1060,2.159,1088,2.254,1104,3.295,1125,4.03,1151,3.513,1233,1.627,1291,2.482,1294,3.295,1295,4.142,1296,3.009,1407,5.573,1578,1.865,1709,1.865,1711,2.795,1717,1.865,1814,1.733,1815,2.043,1818,2.043,1819,2.043,1820,2.043,1821,3.295,1825,2.043,1826,4.688,1827,3.295,1828,3.73,1829,2.312,1830,2.312,1831,5.863,1832,2.312,1833,3.73,1834,2.312,1835,2.312,1836,3.73,1837,2.312,1838,3.73,1839,4.03,1840,2.312,1841,3.73,1842,2.312,1843,3.009,1844,5.213,1845,2.312,1846,2.312,1847,3.009,1848,2.795,1849,2.312,1850,2.312,1851,2.312,1852,2.795,1853,2.312,1854,4.688,1855,2.312,1856,2.312,1857,3.73,1858,2.312,1859,2.312,1860,2.312,1861,2.312,1862,2.312,1863,2.312,1864,2.043,1865,2.312,1866,2.312,1867,5.379,1868,4.688,1869,2.312,1870,3.73,1871,2.312,1872,2.312,1873,2.312,1874,2.312,1875,4.688,1876,2.312,1877,2.312,1878,2.312,1879,2.312,1880,2.312,1881,2.312,1882,3.73,1883,4.142,1884,2.312,1885,3.73,1886,2.312,1887,2.312,1888,2.312,1889,2.312,1890,2.312,1891,3.73,1892,2.312,1893,2.312,1894,2.312,1895,2.312,1896,5.379,1897,2.312,1898,2.312,1899,2.312,1900,2.312,1901,2.312,1902,2.312,1903,2.312,1904,2.312,1905,2.312,1906,2.312,1907,2.312,1908,2.312,1909,2.043,1910,2.312]],["title/classes/StreamMeter.html",[22,0.172,1852,3.306]],["body/classes/StreamMeter.html",[3,0.067,4,0.056,5,0.035,9,0.131,10,0.009,21,0.077,22,0.204,25,2.411,27,0.005,28,0.006,29,0.005,33,1.403,35,0.477,36,1.76,41,0.582,43,1.185,44,0.988,45,0.454,46,1.058,48,1.358,63,1.358,104,3.772,278,0.921,282,1.502,300,0.729,348,2.61,707,3.163,721,3.631,803,3.502,838,5.994,896,3.163,899,4.774,1008,4.357,1711,5.641,1717,4.223,1852,5.084,1911,7.036,1912,4.625,1913,7.529,1914,7.529,1915,6.785,1916,5.235,1917,6.785,1918,6.651,1919,7.529,1920,7.965,1921,5.235,1922,5.235,1923,5.235,1924,6.785,1925,5.235]],["title/classes/TooManyFields.html",[22,0.172,1053,2.553]],["body/classes/TooManyFields.html",[3,0.066,4,0.056,5,0.035,9,0.131,10,0.009,12,0.816,21,0.124,22,0.33,27,0.005,28,0.006,29,0.005,33,1.778,41,0.404,45,0.349,121,1.738,278,0.919,300,0.506,808,2.902,811,2.902,1003,2.438,1042,3.021,1043,3.303,1044,4.507,1045,3.473,1047,4.074,1048,4.285,1049,3.473,1050,3.021,1051,3.473,1052,3.377,1053,3.92,1054,5.003,1055,5.003,1056,3.473,1057,3.021,1058,3.021,1059,3.473,1060,3.021,1061,3.473,1062,3.473,1063,3.473,1926,5.22]],["title/classes/TooManyFiles.html",[22,0.172,1057,2.553]],["body/classes/TooManyFiles.html",[3,0.066,4,0.056,5,0.035,9,0.131,10,0.009,12,0.816,21,0.124,22,0.33,27,0.005,28,0.006,29,0.005,33,1.778,41,0.404,45,0.349,121,1.738,278,0.919,300,0.506,808,2.902,811,2.902,1003,2.438,1042,3.021,1043,3.303,1044,4.507,1045,3.473,1047,4.074,1048,4.285,1049,3.473,1050,3.021,1051,3.473,1052,3.377,1053,3.021,1054,5.003,1055,5.003,1056,3.473,1057,3.92,1058,3.021,1059,3.473,1060,3.021,1061,3.473,1062,3.473,1063,3.473,1927,5.22]],["title/classes/TooManyParts.html",[22,0.172,1058,2.553]],["body/classes/TooManyParts.html",[3,0.066,4,0.056,5,0.035,9,0.131,10,0.009,12,0.816,21,0.124,22,0.33,27,0.005,28,0.006,29,0.005,33,1.778,41,0.404,45,0.349,121,1.738,278,0.919,300,0.506,808,2.902,811,2.902,1003,2.438,1042,3.021,1043,3.303,1044,4.507,1045,3.473,1047,4.074,1048,4.285,1049,3.473,1050,3.021,1051,3.473,1052,3.377,1053,3.021,1054,5.003,1055,5.003,1056,3.473,1057,3.021,1058,3.92,1059,3.473,1060,3.021,1061,3.473,1062,3.473,1063,3.473,1928,5.22]],["title/classes/UnsupportedContentType.html",[22,0.172,1060,2.553]],["body/classes/UnsupportedContentType.html",[3,0.066,4,0.056,5,0.035,9,0.131,10,0.009,12,0.816,21,0.124,22,0.33,27,0.005,28,0.006,29,0.005,33,1.778,41,0.404,45,0.349,121,1.738,278,0.919,300,0.506,808,2.902,811,2.902,1003,2.438,1042,3.021,1043,3.303,1044,4.507,1045,3.473,1047,3.976,1048,4.757,1049,3.473,1050,3.021,1051,3.473,1052,3.377,1053,3.021,1054,5.003,1055,5.003,1056,3.473,1057,3.021,1058,3.021,1059,3.473,1060,3.92,1061,3.473,1062,3.473,1063,3.473,1929,5.22]],["title/classes/UploadSessionNotFound.html",[22,0.172,827,2.936]],["body/classes/UploadSessionNotFound.html",[3,0.066,4,0.055,5,0.035,9,0.13,10,0.009,12,0.807,21,0.117,22,0.309,27,0.005,28,0.006,29,0.005,33,1.698,35,0.47,41,0.399,43,1.169,44,0.974,45,0.345,46,1.043,61,1.37,121,1.359,278,0.908,287,2.206,300,0.767,390,4.24,391,3.435,393,2.87,501,4.474,511,2.87,573,2.87,673,3.738,678,2.763,799,3.435,800,3.632,801,4.062,802,3.868,803,2.664,805,3.868,806,3.868,807,3.119,808,2.87,809,4.254,810,3.119,811,2.87,812,3.632,813,3.435,814,3.632,815,3.868,816,3.632,817,3.868,818,3.868,819,4.73,820,2.082,821,3.868,822,3.868,823,3.868,824,3.632,825,3.868,826,3.632,827,4.474,828,5.038,829,3.868,1930,5.162]],["title/interfaces/UploadedFile.html",[477,0.892,1848,3.306]],["body/interfaces/UploadedFile.html",[3,0.079,4,0.066,5,0.042,9,0.156,10,0.009,21,0.091,27,0.006,28,0.007,29,0.006,33,1.56,35,0.565,45,0.505,282,1.67,287,2.777,300,0.788,477,1.253,479,2.248,803,4.199,1008,4.9,1291,5.413,1293,5,1847,5,1848,5.654,1931,5.476,1932,5.476]],["title/classes/User.html",[22,0.172,242,1.642]],["body/classes/User.html",[3,0.023,4,0.019,5,0.012,8,2.635,9,0.164,10,0.009,21,0.045,22,0.181,27,0.002,28,0.003,29,0.002,33,0.632,35,0.279,37,1.698,41,0.619,45,0.55,49,1.759,54,1.842,56,1.4,61,0.482,63,1.879,64,3.875,72,2.582,81,1.475,82,2.035,113,1.268,127,2.158,156,0.799,242,2.64,265,3.626,278,0.32,280,2.938,282,0.677,285,2.201,287,1.7,290,3.194,292,2.201,294,4.072,297,2.788,300,0.792,301,2.635,302,3.121,303,3.735,304,2.292,305,4.339,306,3.972,308,3.538,309,2.467,312,1.466,313,4.102,314,3.777,315,4.528,316,3.882,323,1.466,324,1.052,325,0.877,326,0.938,327,4.611,328,1.7,329,1.209,330,3.194,332,1.052,333,1.15,341,1.209,342,2.035,343,1.279,344,2.152,345,1.848,346,2.152,347,3.09,348,2.583,350,3.121,354,2.152,355,1.279,356,1.362,357,1.606,358,1.362,359,1.209,362,4.473,373,5.056,375,1.466,376,1.466,377,1.466,403,2.582,489,1.849,505,2.058,570,1.352,571,1.606,583,1.974,613,2.505,677,2.292,721,0.973,722,1.279,763,1.279,765,3.48,768,1.606,782,3.09,783,2.786,836,1.606,921,1.793,953,2.035,966,2.635,968,2.786,975,2.152,976,1.362,1005,1.279,1195,3.09,1535,3.09,1536,3.194,1537,3.48,1583,2.467,1632,1.606,1655,3.194,1656,3.194,1657,3.194,1658,3.194,1757,4.102,1933,1.466,1934,3.96,1935,3.96,1936,1.818,1937,1.818,1938,1.818,1939,1.818,1940,1.818,1941,1.818,1942,1.818,1943,1.818,1944,1.818,1945,1.818,1946,1.818,1947,1.818,1948,1.818,1949,1.818,1950,1.818,1951,1.818,1952,1.818,1953,1.818,1954,1.818,1955,1.818,1956,1.818,1957,1.818,1958,2.702,1959,3.058,1960,3.96,1961,1.818,1962,1.606,1963,1.818,1964,1.606,1965,3.96,1966,1.606,1967,1.818,1968,3.96,1969,1.362,1970,1.606,1971,3.058,1972,5.181,1973,1.818,1974,1.818,1975,1.818,1976,1.818,1977,3.96,1978,3.058,1979,1.818,1980,5.181,1981,1.818,1982,1.818,1983,3.96,1984,1.818,1985,1.818,1986,1.818,1987,1.818,1988,1.606,1989,1.818,1990,1.818,1991,1.818,1992,1.818,1993,3.058,1994,1.818,1995,1.818,1996,1.818,1997,3.96,1998,1.818,1999,1.818]],["title/classes/UserActivation.html",[22,0.172,1373,3.104]],["body/classes/UserActivation.html",[3,0.046,4,0.039,5,0.024,9,0.17,10,0.009,21,0.077,22,0.14,27,0.003,28,0.005,29,0.003,33,1.083,35,0.328,37,1.023,41,0.601,45,0.52,49,1.213,54,1.18,56,1.852,61,0.955,63,1.359,64,3.973,72,2.913,82,2.394,127,2.174,156,1.581,177,2.082,258,2.173,278,0.633,280,3.91,282,1.16,285,3.436,291,2.98,292,3.436,294,3.166,297,3.518,300,0.658,301,3.486,302,3.774,303,4.517,304,3.929,305,4.517,306,4.517,314,3.315,326,1.857,327,4.801,328,2.913,329,2.394,332,2.082,333,2.276,341,2.394,342,2.394,343,2.531,344,2.531,345,2.173,346,2.531,347,3.486,348,2.612,354,2.531,355,2.531,359,2.394,362,2.696,368,3.774,566,2.902,721,4.031,722,3.686,803,2.704,966,4.112,968,3.686,971,5.477,975,3.686,976,2.696,981,2.902,982,2.902,983,2.902,1023,4.227,1373,4.348,1374,2.696,1964,3.178,2000,6.427,2001,2.902,2002,6.18,2003,6.18,2004,3.597,2005,3.597,2006,3.597,2007,4.629,2008,4.985,2009,3.597,2010,3.597,2011,3.597,2012,3.597,2013,3.597,2014,5.24,2015,3.597,2016,3.178,2017,3.597,2018,3.597,2019,3.597]],["title/classes/UserActivationEmail.html",[22,0.172,1443,3.306]],["body/classes/UserActivationEmail.html",[3,0.062,4,0.052,5,0.033,9,0.163,10,0.009,21,0.072,22,0.19,23,2.143,24,1.977,25,1.561,27,0.005,28,0.006,29,0.005,35,0.444,36,1.68,41,0.599,43,1.104,44,0.92,45,0.326,46,0.985,48,1.887,49,1.5,63,1.887,113,2.686,121,0.985,278,0.858,300,0.851,570,2.118,572,4.209,677,4.209,820,1.966,824,3.431,921,3.508,932,4.681,933,4.681,934,4.681,948,3.245,949,3.085,950,3.431,953,3.245,956,3.431,960,2.517,962,3.431,997,3.934,1177,3.654,1195,3.245,1443,4.853,1527,5.866,1574,4.308,2020,4.308,2021,4.877,2022,4.877,2023,4.877,2024,4.877,2025,4.877,2026,4.877,2027,4.877,2028,6.477,2029,4.877,2030,4.877,2031,4.877,2032,4.877,2033,4.877,2034,4.308,2035,4.877]],["title/classes/UserDto.html",[22,0.172,1535,2.936]],["body/classes/UserDto.html",[3,0.057,4,0.048,5,0.03,8,4.644,9,0.113,10,0.009,21,0.066,22,0.239,27,0.004,28,0.006,29,0.004,35,0.41,41,0.681,45,0.589,127,2.512,278,0.791,282,1.357,285,3.88,287,2.29,292,3.88,297,3.782,300,0.852,308,3.738,324,2.603,350,4.502,386,6.543,505,2.406,570,2.032,583,3.48,921,3.16,966,4.644,1195,4.644,1535,4.081,1536,5.63,1537,5.23,2036,3.973,2037,4.498,2038,4.498,2039,4.498,2040,4.498,2041,4.498,2042,4.498,2043,4.498,2044,4.498,2045,4.498,2046,4.498,2047,4.498,2048,4.498]],["title/classes/UserNotActivated.html",[22,0.172,643,2.553]],["body/classes/UserNotActivated.html",[3,0.068,4,0.058,5,0.036,9,0.135,10,0.009,12,0.84,21,0.123,22,0.325,27,0.005,28,0.007,29,0.005,33,1.76,41,0.416,50,4.471,96,2.052,121,1.75,278,0.945,397,3.993,495,3.399,505,2.378,572,3.109,643,3.993,644,3.245,673,4.237,675,3.574,677,3.109,678,2.875,713,3.245,714,3.245,820,2.166,960,3.561,1047,3.327,1297,3.245,1298,3.574,1300,3.779,1301,3.779,1302,3.779,1303,3.399,1304,3.399,1305,3.779,1306,3.779,2049,5.372]],["title/classes/UserNotFound.html",[22,0.172,929,2.936]],["body/classes/UserNotFound.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.847,21,0.119,22,0.315,27,0.005,28,0.007,29,0.005,33,1.724,41,0.419,43,1.227,44,1.309,45,0.363,46,1.095,121,1.095,278,0.954,300,0.826,390,4.096,395,4.39,570,1.578,573,3.857,583,3.816,801,4.875,807,4.624,917,3.429,918,3.812,919,4.06,921,2.454,922,4.06,923,3.274,924,4.06,925,4.06,926,3.429,927,5.734,928,4.06,929,4.616,930,4.06,2050,5.419]],["title/classes/UserNotLoggedIn.html",[22,0.172,644,2.665]],["body/classes/UserNotLoggedIn.html",[3,0.068,4,0.058,5,0.036,9,0.135,10,0.009,12,0.84,21,0.123,22,0.325,27,0.005,28,0.007,29,0.005,33,1.76,41,0.416,50,4.624,96,2.052,121,1.75,278,0.945,397,3.993,495,3.399,505,2.378,572,3.109,643,3.109,644,4.168,673,3.836,675,3.574,677,3.109,678,2.875,713,3.245,714,3.245,820,2.166,960,3.561,1047,3.327,1297,3.245,1298,3.574,1300,3.779,1301,3.779,1302,3.779,1303,3.399,1304,3.399,1305,3.779,1306,3.779,2051,5.372]],["title/classes/UsernameAlreadyExists.html",[22,0.172,926,2.791]],["body/classes/UsernameAlreadyExists.html",[3,0.069,4,0.058,5,0.037,9,0.136,10,0.009,12,0.847,21,0.119,22,0.315,27,0.005,28,0.007,29,0.005,33,1.724,41,0.419,43,1.227,44,1.309,45,0.363,46,1.095,121,1.095,278,0.954,300,0.826,390,3.713,395,4.39,570,1.578,573,3.857,583,3.816,801,5.039,807,4.624,917,3.429,918,3.812,919,4.06,921,2.454,922,4.06,923,3.274,924,4.06,925,4.06,926,4.39,927,5.734,928,4.06,929,3.606,930,4.06,2052,5.419]],["title/controllers/UsersController.html",[0,1.938,2053,3.306]],["body/controllers/UsersController.html",[0,2.109,2,2.109,3,0.061,4,0.051,5,0.032,7,3.037,9,0.212,10,0.009,11,3.194,12,0.75,17,3.196,21,0.071,22,0.187,23,2.109,24,1.465,26,3.71,27,0.005,28,0.006,29,0.005,34,2.779,35,0.437,36,1.663,37,2.053,41,0.496,43,1.451,44,1.209,45,0.429,46,1.295,48,1.663,49,1.484,54,1.575,56,1.697,60,2.174,61,1.274,63,1.663,127,2.052,242,3.071,300,0.699,390,2.569,416,3.377,424,3.037,425,3.377,426,3.377,427,3.377,430,3.377,583,3.598,660,3.194,812,3.377,1532,3.597,1535,4.801,1551,4.241,1962,4.241,2053,4.803,2054,4.241,2055,6.41,2056,4.801,2057,4.801,2058,4.801,2059,4.801,2060,4.801,2061,4.801,2062,4.241,2063,4.801,2064,3.872,2065,4.801,2066,4.801,2067,4.801,2068,4.801,2069,4.801,2070,4.801,2071,4.801,2072,4.801]],["title/modules/UsersModule.html",[83,1.285,143,3.104]],["body/modules/UsersModule.html",[2,3.054,3,0.069,4,0.058,5,0.037,9,0.21,10,0.009,12,0.849,17,4.515,21,0.08,22,0.212,27,0.005,28,0.007,29,0.005,44,1.025,83,2.231,85,2.621,86,2.71,87,2.909,88,2.909,89,2.909,90,4.101,91,4.101,95,3.72,96,2.076,97,2.909,143,6.107,146,3.021,155,3.823,156,2.388,242,2.022,328,3.021,448,4.072,1969,5.208,2053,5.742,2062,4.801,2064,4.384,2073,4.801,2074,4.801,2075,4.801,2076,5.435,2077,5.435,2078,5.435]],["title/injectables/UsersService.html",[17,2.2,30,1.347]],["body/injectables/UsersService.html",[3,0.053,4,0.045,5,0.028,9,0.192,10,0.009,12,0.652,17,2.904,21,0.061,22,0.163,24,1.274,25,1.336,26,3.371,27,0.004,28,0.006,29,0.004,30,1.778,31,1.949,35,0.38,36,1.511,37,2.251,41,0.562,43,1.644,44,1.37,45,0.486,46,1.467,48,1.741,49,1.832,54,1.911,60,2.637,61,1.781,63,1.884,121,0.843,122,3.366,156,1.834,242,1.553,265,2.32,300,0.815,326,2.154,345,2.521,402,3.876,452,4.699,454,5.441,464,3.366,467,3.127,505,2.503,570,1.954,573,3.238,583,3.945,660,2.777,921,1.89,923,2.521,926,2.64,1195,2.777,1489,7.174,1491,5.928,1780,5.146,2064,3.366,2079,3.687,2080,4.173,2081,5.825,2082,4.173,2083,5.825,2084,7.262,2085,7.262,2086,4.173,2087,5.825,2088,4.173,2089,4.173,2090,4.173,2091,4.173,2092,4.173,2093,5.825,2094,4.173,2095,4.173,2096,4.173,2097,4.173,2098,4.173]],["title/interfaces/WriteOptions.html",[477,0.892,1839,3.306]],["body/interfaces/WriteOptions.html",[3,0.067,4,0.057,5,0.051,9,0.19,10,0.009,21,0.078,27,0.005,28,0.007,29,0.005,35,0.482,45,0.507,46,1.616,57,3.8,81,3.651,104,4.447,265,2.944,282,1.513,294,4.833,300,0.733,308,2.64,350,2.944,477,1.07,479,1.92,481,3.523,896,4.13,1124,6.453,1125,5.994,1291,5.037,1578,4.271,1709,6.453,1711,3.967,1721,7.067,1831,6.687,1839,5.122,1843,4.271,1847,4.271,1864,6.039,1909,4.678,1932,4.678,2099,4.678]],["title/coverage.html",[2100,4.883]],["body/coverage.html",[0,2.61,1,1.208,5,0.019,6,1.424,10,0.009,13,1.072,15,1.208,17,0.804,22,0.344,27,0.002,28,0.003,29,0.002,30,2.17,32,1.424,34,0.933,37,0.786,45,0.108,51,1.02,61,0.428,65,1.208,66,1.424,67,1.208,83,1.534,120,1.424,124,1.208,125,1.424,144,0.974,145,2.228,169,1.208,176,1.3,178,1.3,242,1.028,277,1.535,279,2.923,281,1.134,332,0.933,334,1.3,351,1.208,380,1.424,388,1.134,389,2.228,393,0.896,396,1.134,399,1.208,400,1.424,405,1.208,417,0.974,421,1.208,424,1.02,450,1.424,477,1.601,478,1.208,480,3.021,481,3.213,486,0.933,488,1.134,489,1.29,492,1.208,493,1.424,503,1.208,505,0.952,508,1.208,512,1.02,519,1.208,523,1.208,545,1.02,552,1.208,554,1.3,557,1.3,560,1.208,570,1.25,628,2.228,630,2.228,643,0.933,644,0.974,647,1.3,670,1.424,685,1.424,691,1.02,711,1.072,713,0.974,714,0.974,721,4.977,733,1.072,743,1.134,744,1.3,747,1.424,761,1.208,762,2.715,763,1.134,764,1.424,780,1.208,781,1.424,789,1.208,790,2.715,799,1.072,800,3.021,809,1.02,810,0.974,813,1.072,827,1.072,830,1.134,831,1.424,862,1.424,863,1.424,866,1.208,867,1.424,868,1.424,870,1.208,871,1.424,872,1.424,874,1.134,875,2.228,876,0.974,882,1.134,899,1.134,917,1.02,918,3.021,923,0.974,926,1.02,929,1.072,931,1.424,939,1.208,940,1.424,941,2.228,949,1.02,963,1.134,964,2.228,965,2.228,978,1.208,984,1.208,985,1.424,986,1.424,1001,2.228,1002,1.134,1025,1.208,1031,1.424,1042,0.933,1043,3.333,1050,0.933,1053,0.933,1057,0.933,1058,0.933,1060,0.933,1064,1.208,1065,1.424,1073,1.208,1081,0.974,1085,1.3,1088,0.974,1141,1.134,1153,1.424,1199,1.424,1227,1.424,1230,1.424,1231,1.424,1233,1.134,1234,2.715,1235,2.715,1237,1.134,1246,1.208,1251,1.208,1252,1.424,1285,1.424,1286,1.424,1291,1.072,1292,1.424,1293,2.228,1297,0.974,1298,3.213,1307,1.3,1308,1.424,1309,1.424,1326,1.134,1327,2.228,1329,1.134,1333,1.424,1342,1.134,1347,1.208,1354,1.02,1360,1.3,1361,1.208,1366,1.134,1370,1.208,1373,1.134,1374,1.208,1391,2.715,1401,1.424,1404,1.424,1439,1.208,1441,1.208,1443,1.208,1445,0.933,1448,1.208,1451,1.208,1453,1.208,1454,1.208,1456,1.208,1478,1.424,1532,1.208,1533,1.424,1534,1.424,1535,1.072,1552,2.228,1555,2.228,1556,2.228,1565,1.424,1576,4.249,1587,1.3,1588,1.3,1590,1.3,1592,1.3,1594,1.3,1627,1.424,1634,1.424,1635,1.424,1639,1.424,1642,3.213,1643,2.228,1644,1.424,1645,1.424,1646,1.424,1648,1.424,1649,1.424,1650,1.424,1651,1.208,1652,1.424,1693,1.072,1750,1.424,1801,1.424,1813,1.3,1814,1.208,1822,1.424,1825,1.424,1839,1.208,1848,1.208,1852,1.208,1911,1.424,1912,1.424,1931,1.424,1933,2.228,1969,1.208,2000,2.923,2001,2.923,2008,1.3,2020,1.424,2036,1.424,2053,1.208,2054,1.424,2079,1.424,2099,1.424,2100,1.3,2101,1.612,2102,1.612,2103,8.717,2104,8.439,2105,8.497,2106,1.424,2107,1.424,2108,1.424,2109,1.424,2110,2.44,2111,1.424,2112,1.424,2113,6.206,2114,6.97,2115,5.268,2116,3.624,2117,2.44,2118,1.424,2119,4.829,2120,2.762,2121,2.762,2122,3.624,2123,4.294,2124,2.762,2125,2.44,2126,2.762,2127,2.44,2128,1.612,2129,1.424,2130,1.424,2131,1.424,2132,1.424,2133,1.424,2134,1.424,2135,1.424,2136,1.424,2137,1.424,2138,1.424,2139,1.424,2140,1.424,2141,1.612,2142,1.612]],["title/dependencies.html",[86,2.65,2143,3.669]],["body/dependencies.html",[5,0.032,10,0.009,12,0.743,22,0.248,27,0.005,28,0.006,29,0.005,78,3.684,86,2.369,107,3.846,108,3.833,148,4.198,150,3.56,153,2.543,156,2.088,159,4.77,160,4.77,162,2.452,163,3.56,324,2.75,325,2.291,326,2.452,510,2.871,511,2.641,539,3.161,542,3.833,543,4.198,544,4.198,754,2.871,756,3.833,975,3.343,1244,3.833,1245,3.833,1265,3.833,1692,4.198,1843,3.833,1844,4.198,1883,4.198,1958,4.198,2144,4.751,2145,4.751,2146,4.751,2147,7.178,2148,4.751,2149,4.751,2150,4.751,2151,4.751,2152,4.751,2153,4.751,2154,4.751,2155,4.751,2156,4.751,2157,4.751,2158,4.751,2159,4.751,2160,4.751,2161,4.751,2162,4.751,2163,4.751,2164,4.751,2165,4.751,2166,4.751,2167,4.751,2168,4.751,2169,4.751,2170,4.198,2171,4.751,2172,4.751,2173,4.751,2174,4.751,2175,4.751,2176,4.198,2177,7.178,2178,4.751,2179,4.751,2180,4.751,2181,4.751,2182,4.751,2183,4.751,2184,4.751,2185,4.751,2186,4.751,2187,4.751,2188,4.751,2189,4.751,2190,4.751,2191,4.751,2192,4.751,2193,4.751,2194,4.751,2195,4.751]],["title/index.html",[35,0.334,2196,3.241,2197,3.241]],["body/index.html",[4,0.057,10,0.009,27,0.005,28,0.007,29,0.005,211,4.664,401,3.714,719,4.664,809,3.341,820,2.129,1398,4.664,1827,4.664,2100,4.259,2176,6.678,2198,5.28,2199,5.28,2200,6.823,2201,5.28,2202,5.28,2203,5.28,2204,5.28,2205,5.28,2206,5.28,2207,5.28,2208,4.664,2209,5.28,2210,5.28,2211,5.28,2212,8.623,2213,5.28,2214,5.28,2215,5.28,2216,8.474,2217,5.28,2218,5.28,2219,6.823,2220,5.28,2221,5.28,2222,5.28,2223,6.823,2224,6.823,2225,5.28,2226,5.28,2227,5.28,2228,6.823,2229,6.823,2230,5.28,2231,5.28,2232,5.28,2233,5.28,2234,4.259,2235,5.28,2236,5.28,2237,5.28,2238,5.28,2239,4.664,2240,5.28,2241,5.28,2242,5.28,2243,5.28,2244,5.28,2245,5.28,2246,5.28,2247,5.28,2248,5.28,2249,5.28,2250,4.259]],["title/license.html",[2196,3.241,2197,3.241,2250,2.959]],["body/license.html",[4,0.075,5,0.032,9,0.051,10,0.008,27,0.003,28,0.002,29,0.002,41,0.088,44,0.216,61,1.029,68,3.472,116,1.009,131,1.009,242,0.425,269,1.805,277,0.635,280,0.723,297,0.954,314,0.723,342,0.76,402,2.578,576,1.648,678,1.093,763,0.804,803,0.59,816,1.437,826,2.372,830,1.437,901,0.76,933,1.234,934,0.69,959,0.856,1006,3.028,1007,0.856,1052,0.57,1177,0.856,1323,1.009,1589,0.922,1623,5.924,1703,1.009,1988,1.009,2034,1.805,2208,1.805,2234,2.235,2239,2.978,2250,6.989,2251,3.371,2252,3.371,2253,1.142,2254,2.043,2255,7.91,2256,6.821,2257,4.304,2258,2.043,2259,3.371,2260,4.304,2261,1.142,2262,1.142,2263,1.142,2264,1.142,2265,7.99,2266,8.062,2267,1.142,2268,2.771,2269,4.996,2270,1.142,2271,2.043,2272,4.304,2273,1.142,2274,3.875,2275,1.142,2276,1.142,2277,7.119,2278,7.672,2279,2.771,2280,2.771,2281,5.751,2282,3.875,2283,4.674,2284,7.822,2285,4.304,2286,1.142,2287,4.674,2288,1.142,2289,1.142,2290,1.142,2291,4.304,2292,5.951,2293,6.132,2294,2.771,2295,5.751,2296,3.371,2297,2.448,2298,7.951,2299,7.027,2300,1.142,2301,1.142,2302,5.751,2303,1.142,2304,4.304,2305,1.142,2306,1.142,2307,1.142,2308,1.142,2309,1.142,2310,2.771,2311,2.043,2312,2.043,2313,4.304,2314,4.304,2315,2.771,2316,2.771,2317,1.142,2318,6.295,2319,2.043,2320,1.142,2321,1.142,2322,1.142,2323,1.142,2324,1.142,2325,1.142,2326,1.142,2327,1.142,2328,5.528,2329,4.996,2330,1.142,2331,3.875,2332,4.996,2333,1.142,2334,2.043,2335,2.043,2336,1.142,2337,1.142,2338,2.043,2339,2.043,2340,1.142,2341,2.771,2342,2.771,2343,1.142,2344,3.875,2345,1.142,2346,1.142,2347,4.304,2348,1.142,2349,1.142,2350,1.142,2351,1.142,2352,1.142,2353,1.142,2354,1.142,2355,1.142,2356,1.142,2357,1.142,2358,2.043,2359,1.142,2360,1.142,2361,1.142,2362,2.043,2363,2.043,2364,1.142,2365,1.142,2366,1.142,2367,2.771,2368,3.371,2369,2.771,2370,1.142,2371,1.142,2372,1.142,2373,1.142,2374,1.142,2375,1.142,2376,4.304,2377,2.771,2378,2.043,2379,1.142,2380,1.142,2381,2.043,2382,3.875,2383,1.142,2384,1.142,2385,1.142,2386,1.142,2387,1.142,2388,3.371,2389,2.043,2390,1.142,2391,5.278,2392,1.142,2393,1.142,2394,3.371,2395,2.771,2396,1.142,2397,2.771,2398,1.142,2399,2.043,2400,5.278,2401,5.751,2402,2.771,2403,2.771,2404,2.043,2405,1.142,2406,3.371,2407,1.142,2408,1.009,2409,3.875,2410,2.043,2411,4.304,2412,1.142,2413,1.142,2414,1.142,2415,2.771,2416,1.142,2417,1.142,2418,1.142,2419,1.142,2420,2.771,2421,1.142,2422,4.674,2423,1.142,2424,1.142,2425,1.142,2426,1.142,2427,1.142,2428,1.142,2429,2.771,2430,4.304,2431,2.043,2432,2.771,2433,1.142,2434,2.771,2435,1.142,2436,2.043,2437,1.142,2438,2.043,2439,2.043,2440,2.771,2441,1.142,2442,1.142,2443,2.043,2444,1.142,2445,1.142,2446,1.142,2447,1.142,2448,1.142,2449,2.771,2450,1.142,2451,2.043,2452,2.771,2453,1.142,2454,1.142,2455,1.142,2456,1.142,2457,2.043,2458,2.771,2459,2.043,2460,1.142,2461,1.142,2462,2.043,2463,3.875,2464,3.371,2465,2.771,2466,2.771,2467,2.043,2468,3.371,2469,1.142,2470,2.771,2471,1.142,2472,1.142,2473,2.043,2474,2.043,2475,3.371,2476,1.142,2477,1.142,2478,3.371,2479,1.142,2480,1.142,2481,2.043,2482,1.142,2483,1.142,2484,4.304,2485,2.043,2486,1.142,2487,2.043,2488,4.996,2489,5.278,2490,1.142,2491,1.142,2492,1.142,2493,1.142,2494,1.142,2495,1.142,2496,1.142,2497,2.043,2498,1.142,2499,2.771,2500,1.142,2501,2.043,2502,1.142,2503,1.142,2504,1.142,2505,1.142,2506,1.142,2507,1.142,2508,1.142,2509,1.142,2510,2.043,2511,1.142,2512,2.771,2513,1.142,2514,2.043,2515,2.771,2516,3.371,2517,1.142,2518,1.142,2519,1.142,2520,1.142,2521,1.142,2522,1.142,2523,1.142,2524,1.142,2525,1.142,2526,1.142,2527,1.142,2528,1.142,2529,1.142,2530,1.142,2531,3.371,2532,2.043,2533,2.043,2534,1.142,2535,2.043,2536,2.043,2537,1.142,2538,1.142,2539,1.142,2540,1.142,2541,1.142,2542,1.142,2543,2.043,2544,1.142,2545,1.142,2546,3.371,2547,2.771,2548,1.142,2549,1.142,2550,1.142,2551,1.142,2552,2.043,2553,1.142,2554,1.142,2555,2.043,2556,1.142,2557,3.371,2558,2.771,2559,1.142,2560,1.142,2561,1.142,2562,2.043,2563,1.142,2564,1.142,2565,1.142,2566,2.043,2567,1.142,2568,1.142,2569,1.142,2570,1.142,2571,1.142,2572,5.528,2573,1.142,2574,1.142,2575,1.142,2576,1.142,2577,2.043,2578,1.142,2579,1.142,2580,1.142,2581,2.771,2582,1.142,2583,1.142,2584,1.142,2585,1.142,2586,1.142,2587,1.142,2588,1.142,2589,1.142,2590,1.142,2591,1.142,2592,1.142,2593,1.142,2594,1.142,2595,1.142,2596,1.142,2597,1.142,2598,1.142,2599,1.142,2600,1.142,2601,1.142,2602,1.142,2603,1.142,2604,1.142,2605,1.142,2606,1.142,2607,2.043,2608,1.142,2609,1.142,2610,1.142,2611,2.043,2612,2.043,2613,3.875,2614,1.142,2615,1.142,2616,1.142,2617,1.142,2618,1.142,2619,1.142,2620,1.142,2621,1.142,2622,1.142,2623,1.142,2624,1.142,2625,1.142,2626,1.142,2627,1.142,2628,1.142,2629,2.043,2630,1.142,2631,1.142,2632,1.142,2633,1.142,2634,2.771,2635,1.142,2636,1.142,2637,1.142,2638,2.043,2639,1.142,2640,1.142,2641,1.142,2642,1.142,2643,1.142,2644,1.142,2645,1.142,2646,1.142,2647,1.142,2648,1.142,2649,1.142,2650,1.142,2651,1.142,2652,1.142,2653,1.142,2654,0.922,2655,1.142,2656,1.142,2657,1.142,2658,1.142,2659,2.043,2660,1.142,2661,1.142,2662,1.142,2663,1.142,2664,1.142,2665,1.142,2666,1.142,2667,1.142,2668,1.142,2669,1.142,2670,1.142,2671,3.371,2672,2.043,2673,1.142,2674,1.142,2675,1.142,2676,1.142,2677,1.142,2678,1.142,2679,2.771,2680,1.142,2681,1.142,2682,1.142,2683,1.142,2684,1.142,2685,1.142,2686,2.043,2687,1.142,2688,1.142,2689,1.142,2690,1.142,2691,1.142,2692,1.142,2693,1.142,2694,1.142,2695,1.142,2696,1.142]],["title/modules.html",[85,2.919]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.193,85,2.874,132,4.466,136,4.193,137,3.965,138,4.193,139,3.771,140,4.193,141,4.193,142,4.193,143,4.193,593,7.324,1140,3.965,2234,7.324,2297,5.265,2697,9.08,2698,9.128,2699,5.96]],["title/overview.html",[2700,5.348]],["body/overview.html",[2,1.547,10,0.009,13,5.139,17,3.851,27,0.003,28,0.005,29,0.003,31,1.645,83,1.026,84,5.259,85,1.699,86,1.756,87,1.885,88,1.885,89,1.885,90,1.885,91,1.885,92,3.112,93,3.112,94,3.112,95,2.761,96,1.345,97,1.885,132,6.736,133,3.112,134,3.112,135,3.112,136,5.778,137,5.139,138,5.434,139,5.328,140,4.295,141,5.924,142,5.924,143,5.778,144,4.061,278,0.62,417,4.666,442,3.112,443,3.112,444,3.112,479,1.277,545,4.887,629,2.841,679,3.112,680,3.112,681,3.112,691,4.887,740,3.112,742,3.112,743,4.295,1081,4.666,1088,4.666,1136,3.112,1137,3.112,1138,3.112,1139,3.112,1140,5.139,1141,4.295,1339,3.112,1340,3.112,1341,3.112,1342,4.295,1693,5.139,1720,3.112,1744,3.112,1746,3.112,1747,3.112,1805,3.112,1806,3.112,1807,3.112,2073,3.112,2074,3.112,2075,3.112,2408,3.112,2700,3.112,2701,3.522,2702,3.522,2703,3.522,2704,3.522]],["title/miscellaneous/variables.html",[2654,2.959,2705,4.695]],["body/miscellaneous/variables.html",[3,0.03,10,0.009,27,0.002,28,0.004,29,0.002,35,0.214,37,1.347,40,1.759,45,0.528,46,0.763,49,1.097,54,0.77,56,1.674,60,1.063,61,1.686,63,0.98,64,2.876,81,1.821,118,1.562,144,2.281,145,1.894,162,1.212,176,3.046,177,1.359,178,3.046,179,2.074,265,1.305,279,1.894,300,0.796,322,2.074,332,2.185,334,3.046,335,4.468,336,2.074,337,3.046,338,2.074,339,2.074,340,2.074,348,4.415,351,2.829,352,2.074,424,2.389,554,3.046,557,3.046,566,1.894,576,3.046,602,3.046,603,1.894,605,1.894,630,1.894,647,3.82,651,1.485,707,5.35,711,2.512,721,1.256,803,3.796,820,1.523,899,2.656,932,1.418,949,2.389,964,1.894,965,3.046,978,2.829,979,2.074,1001,1.894,1003,1.096,1008,2.741,1023,3.046,1025,2.829,1026,2.074,1085,3.046,1112,2.074,1185,1.759,1234,1.759,1235,2.829,1246,2.829,1322,1.894,1334,2.829,1360,3.82,1361,3.549,1370,2.829,1374,2.829,1433,2.074,1555,1.894,1556,3.046,1563,2.074,1576,1.894,1583,1.894,1587,3.046,1588,3.046,1589,1.894,1590,3.046,1591,2.074,1592,3.046,1593,2.074,1594,3.046,1595,2.074,1596,3.336,1598,3.336,1647,2.074,1813,3.82,1814,3.549,1918,4.184,1933,1.894,1966,2.074,1969,2.829,1970,2.074,2000,1.894,2001,3.82,2007,3.336,2008,3.046,2016,2.074,2106,2.074,2107,3.336,2108,2.074,2109,3.336,2110,3.336,2111,3.336,2112,3.336,2117,2.074,2118,3.336,2125,2.074,2127,2.074,2129,2.074,2130,3.336,2131,2.074,2132,3.336,2133,2.074,2134,2.074,2135,3.336,2136,2.074,2137,3.336,2138,2.074,2139,2.074,2140,2.074,2170,2.074,2654,1.894,2705,2.074,2706,3.776,2707,2.348,2708,2.348,2709,2.348,2710,2.348,2711,2.348,2712,2.348,2713,2.348,2714,2.348,2715,2.348,2716,2.348,2717,2.348,2718,3.776,2719,3.776,2720,3.776,2721,3.776,2722,2.348,2723,2.348,2724,5.946,2725,3.776,2726,2.348,2727,2.348,2728,3.776,2729,2.348,2730,3.776,2731,2.348,2732,2.348,2733,2.348,2734,2.348,2735,2.348,2736,2.348,2737,2.348,2738,2.348,2739,2.348,2740,2.348,2741,2.348,2742,2.348,2743,2.348,2744,2.348,2745,2.348,2746,2.348,2747,2.348,2748,2.348,2749,2.348,2750,2.348,2751,2.348,2752,2.348,2753,2.348,2754,2.348,2755,2.348,2756,3.776,2757,2.348,2758,2.348,2759,2.348,2760,2.348,2761,2.348,2762,2.348,2763,2.348,2764,2.348,2765,2.348,2766,2.348,2767,2.348,2768,2.348,2769,2.348,2770,4.736,2771,2.348,2772,2.348,2773,2.348,2774,2.348,2775,2.348,2776,2.348,2777,3.776,2778,2.348,2779,2.348,2780,2.348,2781,2.348,2782,2.348,2783,2.348,2784,2.348,2785,2.348,2786,2.348,2787,2.348,2788,2.348,2789,2.348]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["0.25.4",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1277,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/PasswordResetEmail.html":{},"controllers/SettingsController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["1.1",{"_index":2254,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2320,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2340,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2349,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2351,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2267,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2275,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2276,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2290,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2303,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2308,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2309,"title":{},"body":{"license.html":{}}}],["10",{"_index":1975,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2669,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2438,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2672,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2684,"title":{},"body":{"license.html":{}}}],["1024",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{}}}],["11",{"_index":2701,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2702,"title":{},"body":{"overview.html":{}}}],["16",{"_index":303,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2408,"title":{},"body":{"license.html":{},"overview.html":{}}}],["2).join(path.sep",{"_index":915,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2252,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2344,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2414,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2398,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2405,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2433,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2441,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2448,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2456,"title":{},"body":{"license.html":{}}}],["200",{"_index":1281,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1273,"title":{},"body":{"controllers/HealthController.html":{}}}],["23",{"_index":2704,"title":{},"body":{"overview.html":{}}}],["25",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":1010,"title":{},"body":{"classes/File.html":{}}}],["3.0",{"_index":2346,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2458,"title":{},"body":{"license.html":{}}}],["3.1.3",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2459,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2440,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2432,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2496,"title":{},"body":{"license.html":{}}}],["30",{"_index":2553,"title":{},"body":{"license.html":{}}}],["300",{"_index":564,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":313,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2532,"title":{},"body":{"license.html":{}}}],["5.1.2",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2555,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2573,"title":{},"body":{"license.html":{}}}],["5.9.20",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2372,"title":{},"body":{"license.html":{}}}],["512",{"_index":1723,"title":{},"body":{"controllers/SettingsController.html":{}}}],["54",{"_index":2703,"title":{},"body":{"overview.html":{}}}],["6.4.10",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1703,"title":{},"body":{"controllers/SettingsController.html":{},"license.html":{}}}],["64",{"_index":971,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2033,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["7.0.0",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":999,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["8",{"_index":1720,"title":{},"body":{"controllers/SettingsController.html":{},"overview.html":{}}}],["_",{"_index":377,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":1826,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1830,"title":{},"body":{"injectables/StorageService.html":{}}}],["_data",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_debug",{"_index":1154,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_debug(message",{"_index":1162,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_encoding",{"_index":1919,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":877,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":884,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":878,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":886,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":1577,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":1581,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_handleapikey",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handleapikey(req",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession(req",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_id",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["_req",{"_index":1710,"title":{},"body":{"controllers/SettingsController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_send",{"_index":1406,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_send(email",{"_index":1415,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_size",{"_index":1914,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":1915,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":1917,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_value",{"_index":841,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2652,"title":{},"body":{"license.html":{}}}],["abort",{"_index":1870,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":1899,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1886,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1896,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1867,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2415,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2424,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":905,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2502,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1885,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":1864,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":838,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"controllers/SettingsController.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["account')@useguards(authguard",{"_index":1686,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto",{"_index":1699,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto.ts",{"_index":868,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:6",{"_index":869,"title":{},"body":{"classes/DeleteAccountDto.html":{}}}],["account/${activation.token",{"_index":1529,"title":{},"body":{"injectables/MailerService.html":{}}}],["account/:token",{"_index":1664,"title":{},"body":{"controllers/SettingsController.html":{}}}],["accurate",{"_index":2696,"title":{},"body":{"license.html":{}}}],["action",{"_index":1596,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":556,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2565,"title":{},"body":{"license.html":{}}}],["activate",{"_index":677,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activate(token",{"_index":1753,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activateaccount",{"_index":1654,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(@param(\"token",{"_index":1705,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(token",{"_index":1662,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activated",{"_index":1536,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":1330,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["activation')@useguards(authguard",{"_index":1690,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activation.deleteone",{"_index":1775,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.job",{"_index":1457,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["activation.job.ts",{"_index":1649,"title":{},"body":{"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["activation.mjml",{"_index":2027,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["activation.resent",{"_index":1800,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.schema",{"_index":1376,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["activation.schema.ts",{"_index":2001,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":2004,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":2012,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":2005,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":2009,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":2010,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":2011,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:56",{"_index":2006,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":1773,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activationlink",{"_index":1527,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendUserActivationJob.html":{},"classes/UserActivationEmail.html":{}}}],["active",{"_index":818,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["actually",{"_index":1987,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":2695,"title":{},"body":{"license.html":{}}}],["addition",{"_index":2322,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2409,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2480,"title":{},"body":{"license.html":{}}}],["address",{"_index":995,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2521,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2345,"title":{},"body":{"license.html":{}}}],["again",{"_index":1322,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2558,"title":{},"body":{"license.html":{}}}],["agent",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2507,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2655,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2576,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":2567,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2637,"title":{},"body":{"license.html":{}}}],["alone",{"_index":2506,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":777,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":769,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["already",{"_index":807,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["alter",{"_index":2468,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2235,"title":{},"body":{"index.html":{}}}],["amount",{"_index":817,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["angular",{"_index":2207,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2608,"title":{},"body":{"license.html":{}}}],["api",{"_index":398,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/InvalidAPIKey.html":{}}}],["api_secret",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":2214,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2333,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":124,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":2451,"title":{},"body":{"license.html":{}}}],["application",{"_index":277,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{},"license.html":{}}}],["application.comparekey(key",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.deleteone",{"_index":473,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":420,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":863,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:7",{"_index":865,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.generatekey(this.config.get(\"api_secret",{"_index":476,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.name",{"_index":449,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["application.todto",{"_index":434,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.uid",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.updatelastused",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{}}}],["applicationdto",{"_index":281,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":388,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InvalidAPIKey.html":{},"coverage.html":{}}}],["applicationnotfound(id",{"_index":472,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications",{"_index":401,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["applications.controller",{"_index":446,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":468,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.service",{"_index":418,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":351,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.changename",{"_index":360,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.comparekey",{"_index":363,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.generatekey",{"_index":367,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":372,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.updatelastused",{"_index":378,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":353,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":399,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationsmodule",{"_index":136,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":417,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2629,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":132,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":491,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1313,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["asserting",{"_index":2559,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2597,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":478,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":2130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2280,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2467,"title":{},"body":{"license.html":{}}}],["auth",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["auth.controller",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_guard_optional",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":492,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":137,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2243,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2603,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":545,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":342,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":2297,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avatar",{"_index":1537,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["avatar')@useguards(authguard",{"_index":1668,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.filename",{"_index":1726,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.id",{"_index":1727,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.size",{"_index":1728,"title":{},"body":{"controllers/SettingsController.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2295,"title":{},"body":{"license.html":{}}}],["back",{"_index":2549,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2236,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1047,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1620,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1601,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64\").tostring(\"binary",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1479,"title":{},"body":{"injectables/MailerService.html":{}}}],["basis",{"_index":2394,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1958,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1986,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1974,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2403,"title":{},"body":{"license.html":{}}}],["before",{"_index":824,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{}}}],["behalf",{"_index":2501,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2444,"title":{},"body":{"license.html":{}}}],["below",{"_index":997,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["below.\\n",{"_index":961,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["beneficial",{"_index":2375,"title":{},"body":{"license.html":{}}}],["binary\")).tostring(\"base64",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":745,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":746,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":747,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":751,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":415,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["body[\"error",{"_index":1609,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":350,"title":{},"body":{"classes/Application.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"interfaces/SessionDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2653,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2640,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2698,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"modules.html":{}}}],["btoa",{"_index":2132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bucket",{"_index":1236,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1247,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":1918,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(this.key",{"_index":366,"title":{},"body":{"classes/Application.html":{}}}],["buffer.tostring",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":2201,"title":{},"body":{"index.html":{}}}],["bull",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":138,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":743,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1143,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1148,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1844,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1833,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":1909,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":1880,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2646,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1433,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2423,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1711,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":1718,"title":{},"body":{"controllers/SettingsController.html":{}}}],["callback(null",{"_index":1717,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2286,"title":{},"body":{"license.html":{}}}],["catch",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{}}}],["catch(error",{"_index":359,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1312,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1315,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1874,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2364,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2418,"title":{},"body":{"license.html":{}}}],["cb",{"_index":848,"title":{},"body":{"classes/Counter.html":{}}}],["changeavatar",{"_index":1655,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeavatar(@currentuser",{"_index":1708,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeavatar(newavatarid",{"_index":1755,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeavatar(user",{"_index":1666,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changed",{"_index":955,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email",{"_index":1438,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.email.ts",{"_index":941,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["changed.email.ts:15",{"_index":946,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:19",{"_index":947,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:5",{"_index":943,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:8",{"_index":945,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.job",{"_index":1450,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.job.ts",{"_index":1643,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["changed.mjml",{"_index":1554,"title":{},"body":{"classes/PasswordChangedEmail.html":{}}}],["changedisplayname",{"_index":1656,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changedisplayname(newdisplayname",{"_index":1758,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changedisplayname(undefined",{"_index":1670,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changedisplaynamedto",{"_index":761,"title":{"classes/ChangeDisplayNameDto.html":{}},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changeemail",{"_index":1657,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeemail(@body",{"_index":1732,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemail(newemail",{"_index":1760,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeemail(undefined",{"_index":1673,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemaildto",{"_index":780,"title":{"classes/ChangeEmailDto.html":{}},"body":{"classes/ChangeEmailDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changename",{"_index":283,"title":{},"body":{"classes/Application.html":{}}}],["changepassword",{"_index":1658,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changepassword(oldpassword",{"_index":1762,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changepassword(undefined",{"_index":1677,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changepassworddto",{"_index":789,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["character",{"_index":2614,"title":{},"body":{"license.html":{}}}],["characters",{"_index":773,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["charge",{"_index":2473,"title":{},"body":{"license.html":{}}}],["choice",{"_index":2436,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2497,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":899,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":1925,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":914,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunkalreadyuploaded",{"_index":799,"title":{"classes/ChunkAlreadyUploaded.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["chunkindex",{"_index":805,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["chunks",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2604,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2561,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2330,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2329,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":2135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":278,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":1959,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":1960,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2503,"title":{},"body":{"license.html":{}}}],["client",{"_index":1246,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1239,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1820,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1235,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1238,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1240,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1243,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1241,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1242,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1245,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":1968,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":442,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":443,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_providers",{"_index":444,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":680,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":681,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":740,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":741,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":742,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1136,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1138,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1137,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1139,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1339,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1340,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1341,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1744,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":1746,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1745,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_providers",{"_index":1747,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1805,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1806,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1807,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2073,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2074,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":2075,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2277,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1610,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["collapsewhitespace",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collation",{"_index":2084,"title":{},"body":{"injectables/UsersService.html":{}}}],["collation(collation",{"_index":2096,"title":{},"body":{"injectables/UsersService.html":{}}}],["collationoptions",{"_index":2085,"title":{},"body":{"injectables/UsersService.html":{}}}],["combination",{"_index":2268,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2305,"title":{},"body":{"license.html":{}}}],["come",{"_index":2548,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2623,"title":{},"body":{"license.html":{}}}],["commit",{"_index":821,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["common",{"_index":2357,"title":{},"body":{"license.html":{}}}],["comparekey",{"_index":284,"title":{},"body":{"classes/Application.html":{}}}],["comparepassword",{"_index":1934,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1589,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":1477,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["compliance",{"_index":2546,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2535,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2430,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2620,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2656,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2377,"title":{},"body":{"license.html":{}}}],["config",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1152,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["configmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["configure",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":994,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["confirmation",{"_index":998,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{}}}],["confirmation.deleteone",{"_index":1790,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.job",{"_index":1452,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["confirmation.job.ts",{"_index":1644,"title":{},"body":{"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["confirmation.mjml",{"_index":952,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["confirmation.newemail",{"_index":1789,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.schema",{"_index":1369,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["confirmation.schema.ts",{"_index":965,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":967,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":974,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":969,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":970,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":972,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":973,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":1788,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmemail",{"_index":1659,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemail(@param(\"token",{"_index":1736,"title":{},"body":{"controllers/SettingsController.html":{}}}],["confirmemail(token",{"_index":1680,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemaillink",{"_index":989,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"interfaces/SendEmailConfirmationJob.html":{}}}],["conflict",{"_index":2649,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":801,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["connect",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["connectmongo(session",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2612,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2601,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":772,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1855,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":2090,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(_value",{"_index":839,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(activationlink",{"_index":2021,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["constructor(applications",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SettingsService.html":{}}}],["constructor(chunkindex",{"_index":802,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(config",{"_index":453,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(confirmemaillink",{"_index":987,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["constructor(connection",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(displayname",{"_index":919,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(email",{"_index":924,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(emailsqueue",{"_index":748,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1045,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(files",{"_index":1201,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(forgotpasswordlink",{"_index":942,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["constructor(id",{"_index":828,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(identifier",{"_index":391,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(logger",{"_index":1159,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["constructor(options",{"_index":881,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{}}}],["constructor(resetpasswordlink",{"_index":1566,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["constructor(username",{"_index":927,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(users",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["construe",{"_index":2668,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2666,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["contained",{"_index":2490,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2326,"title":{},"body":{"license.html":{}}}],["content",{"_index":1063,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2325,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2367,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2461,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2262,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2274,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2269,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2255,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2273,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2571,"title":{},"body":{"license.html":{}}}],["control",{"_index":2358,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2356,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":429,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":562,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1090,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1266,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"settings",{"_index":1701,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller(\"users",{"_index":2065,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2355,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2319,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2466,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2452,"title":{},"body":{"license.html":{}}}],["correct",{"_index":1304,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["correction",{"_index":2600,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2474,"title":{},"body":{"license.html":{}}}],["count",{"_index":2098,"title":{},"body":{"injectables/UsersService.html":{}}}],["countdocuments(query",{"_index":2095,"title":{},"body":{"injectables/UsersService.html":{}}}],["counter",{"_index":830,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2641,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2100,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2265,"title":{},"body":{"license.html":{}}}],["create",{"_index":402,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(@body",{"_index":431,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(dto",{"_index":404,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(email",{"_index":2081,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(name",{"_index":456,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["create(options",{"_index":1203,"title":{},"body":{"injectables/FilesService.html":{}}}],["createapplicationdto",{"_index":405,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1345,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1346,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1350,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1351,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":285,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createhmac(\"sha256",{"_index":338,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["createmaileroptions",{"_index":1402,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":879,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":888,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2261,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":1823,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":880,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":891,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creating",{"_index":825,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["creation",{"_index":2263,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":2446,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1302,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2566,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":322,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.binarylike",{"_index":336,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(size",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.timingsafeequal(buffer.from(hmac_sha256(key",{"_index":365,"title":{},"body":{"classes/Application.html":{}}}],["ctx",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":534,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["currentsession.identifier",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["currentuser",{"_index":424,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":1223,"title":{},"body":{"injectables/FilesService.html":{}}}],["customdecorator",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2613,"title":{},"body":{"license.html":{}}}],["data",{"_index":335,"title":{},"body":{"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":976,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2034,"title":{},"body":{"classes/UserActivationEmail.html":{},"license.html":{}}}],["db",{"_index":1267,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2454,"title":{},"body":{"license.html":{}}}],["death",{"_index":2630,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2563,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":1109,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/auth",{"_index":1086,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/current",{"_index":425,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["decorators/recaptcha",{"_index":555,"title":{},"body":{"controllers/AuthController.html":{}}}],["decrement",{"_index":833,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":348,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["defective",{"_index":2596,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2586,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2642,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2360,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2253,"title":{},"body":{"license.html":{}}}],["delay",{"_index":2137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":403,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id",{"_index":435,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete(\"delete/:id",{"_index":1091,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(\"logout",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(\"revoke",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id",{"_index":410,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete('delete/:id",{"_index":1067,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('logout",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('revoke",{"_index":527,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@currentuser",{"_index":436,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["delete(id",{"_index":458,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(user",{"_index":409,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteaccount",{"_index":1660,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["deleteaccount(@body",{"_index":1739,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccount(password",{"_index":1765,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deleteaccount(undefined",{"_index":1684,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccountdto",{"_index":866,"title":{"classes/DeleteAccountDto.html":{}},"body":{"classes/DeleteAccountDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["deleteallfor",{"_index":451,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteallfor(uid",{"_index":460,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteavatar",{"_index":1935,"title":{},"body":{"classes/User.html":{}}}],["deleted",{"_index":1195,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["deleted.todto",{"_index":1094,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":870,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deleting",{"_index":1190,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["deletion",{"_index":2323,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":2520,"title":{},"body":{"license.html":{}}}],["described",{"_index":2294,"title":{},"body":{"license.html":{}}}],["description",{"_index":2208,"title":{},"body":{"index.html":{},"license.html":{}}}],["desirable",{"_index":2690,"title":{},"body":{"license.html":{}}}],["destroy",{"_index":822,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["detailed",{"_index":2527,"title":{},"body":{"license.html":{}}}],["development",{"_index":2215,"title":{},"body":{"index.html":{}}}],["device",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{}}}],["didn't",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["different",{"_index":2477,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2683,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":340,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2362,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2365,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2568,"title":{},"body":{"license.html":{}}}],["directory",{"_index":901,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"injectables/StorageService.html":{},"license.html":{}}}],["dirname",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1396,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["disabled",{"_index":1108,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2581,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2487,"title":{},"body":{"license.html":{}}}],["disk",{"_index":904,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["diskhealthindicator",{"_index":1257,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":874,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1858,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":882,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":763,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"coverage.html":{},"license.html":{}}}],["displayname",{"_index":921,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendEmailJob.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["displaynamealreadyexists",{"_index":917,"title":{"classes/DisplayNameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["displaynamealreadyexists(newdisplayname",{"_index":1781,"title":{},"body":{"injectables/SettingsService.html":{}}}],["distinguishing",{"_index":2675,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2391,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2688,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2404,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2685,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2411,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2524,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2577,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1268,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1258,"title":{},"body":{"controllers/HealthController.html":{}}}],["doctrines",{"_index":2453,"title":{},"body":{"license.html":{}}}],["document",{"_index":280,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1875,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1066,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(user",{"_index":1069,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2667,"title":{},"body":{"license.html":{}}}],["dto",{"_index":408,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/application.dto",{"_index":331,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/change",{"_index":1695,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/create",{"_index":419,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/delete",{"_index":1698,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/file.dto",{"_index":1022,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/generate",{"_index":422,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/login.dto",{"_index":549,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/partial",{"_index":2063,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":550,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/rename",{"_index":1083,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/reset",{"_index":551,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":553,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/user.dto",{"_index":1962,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2514,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1356,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2225,"title":{},"body":{"index.html":{}}}],["each",{"_index":2257,"title":{},"body":{"license.html":{}}}],["eachasync(async",{"_index":1224,"title":{},"body":{"injectables/FilesService.html":{}}}],["earlier",{"_index":2300,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2676,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2399,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2202,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["ejs.render(html",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":570,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangeEmailDto.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["email!'})@isnotempty({message",{"_index":786,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["email')@useguards(authguard",{"_index":1675,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto",{"_index":1697,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto.ts",{"_index":781,"title":{},"body":{"classes/ChangeEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:7",{"_index":788,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["email.email",{"_index":1436,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.email.ts",{"_index":986,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["email.email.ts:15",{"_index":991,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:19",{"_index":992,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:5",{"_index":988,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:8",{"_index":990,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.html",{"_index":1474,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.subject",{"_index":1475,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.text",{"_index":1476,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email/${confirmation.token",{"_index":1521,"title":{},"body":{"injectables/MailerService.html":{}}}],["email/:token",{"_index":1682,"title":{},"body":{"controllers/SettingsController.html":{}}}],["emailalreadyexists",{"_index":923,"title":{"classes/EmailAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["emailalreadyexists(email",{"_index":2091,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailalreadyexists(newemail",{"_index":1783,"title":{},"body":{"injectables/SettingsService.html":{}}}],["emailchangedemail",{"_index":939,"title":{"classes/EmailChangedEmail.html":{}},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailchangedemail(job.data.forgotpasswordlink",{"_index":1463,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmation",{"_index":963,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["emailconfirmation.name",{"_index":1378,"title":{},"body":{"modules/MailerModule.html":{}}}],["emailconfirmationemail",{"_index":984,"title":{"classes/EmailConfirmationEmail.html":{}},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailconfirmationemail(job.data.confirmemaillink",{"_index":1466,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmations",{"_index":1483,"title":{},"body":{"injectables/MailerService.html":{}}}],["emailconfirmationschema",{"_index":978,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":980,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1377,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/confirm",{"_index":1435,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/email",{"_index":1437,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/password",{"_index":1440,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/user.activation.email",{"_index":1444,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailsqueue",{"_index":752,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["empty",{"_index":778,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring",{"_index":787,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@maxlength(255",{"_index":1636,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":770,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":793,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["encoding",{"_index":1294,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2575,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2663,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1151,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface",{"_index":898,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1801,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1802,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1803,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1804,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1818,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1819,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":908,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["ensure",{"_index":1303,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["enter",{"_index":784,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["entire",{"_index":2591,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2353,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2260,"title":{},"body":{"license.html":{}}}],["env.development",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2455,"title":{},"body":{"license.html":{}}}],["err",{"_index":1104,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":903,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(errors.map(error",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.code",{"_index":907,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["error.exception.ts",{"_index":1309,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1311,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1314,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.message).join(\"\\n",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorcodes",{"_index":1608,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1616,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1614,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1615,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1612,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1613,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.length",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":1395,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["eslint/no",{"_index":1399,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2602,"title":{},"body":{"license.html":{}}}],["even",{"_index":2625,"title":{},"body":{"license.html":{}}}],["event",{"_index":2574,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":832,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":856,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":815,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["except",{"_index":2422,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1106,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1318,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1310,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":386,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":376,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["excluding",{"_index":2562,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2638,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2383,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2283,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2352,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2282,"title":{},"body":{"license.html":{}}}],["exist",{"_index":395,"title":{},"body":{"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/InvalidAPIKey.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["existing",{"_index":823,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["exists",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":2083,"title":{},"body":{"injectables/UsersService.html":{}}}],["expires",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":966,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2540,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2392,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["express.session",{"_index":1287,"title":{},"body":{"interfaces/ISession.html":{}}}],["expressed",{"_index":2583,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}}}],["extent",{"_index":2314,"title":{},"body":{"license.html":{}}}],["extname",{"_index":1714,"title":{},"body":{"controllers/SettingsController.html":{}}}],["factory",{"_index":1367,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":490,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1822,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1824,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1401,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1403,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2494,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2534,"title":{},"body":{"license.html":{}}}],["failed",{"_index":1185,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2544,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2621,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2449,"title":{},"body":{"license.html":{}}}],["false",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":2498,"title":{},"body":{"license.html":{}}}],["field",{"_index":1124,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"interfaces/WriteOptions.html":{}}}],["fieldname",{"_index":1295,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1056,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2370,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file.deleteone",{"_index":1222,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.dto",{"_index":1084,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto.ts",{"_index":1635,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["file.dto.ts:7",{"_index":1637,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["file.filename",{"_index":1132,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1133,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["file.interface",{"_index":1847,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1293,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1180,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":872,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.name",{"_index":1149,"title":{},"body":{"modules/FilesModule.html":{}}}],["file.rename(newfilename",{"_index":1226,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.size",{"_index":1134,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1120,"title":{},"body":{"controllers/FilesController.html":{}}}],["file[\"filename",{"_index":1214,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"hidden",{"_index":1215,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"id",{"_index":1216,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"public",{"_index":1217,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"size",{"_index":1218,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"uid",{"_index":1219,"title":{},"body":{"injectables/FilesService.html":{}}}],["filedto",{"_index":1002,"title":{"classes/FileDto.html":{}},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileid",{"_index":873,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1003,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"classes/RenameFileDto.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filenotfound",{"_index":810,"title":{"classes/FileNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["filenotfound(id",{"_index":1098,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files",{"_index":1052,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"license.html":{}}}],["files.controller",{"_index":1144,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1080,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1877,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map(file",{"_index":1130,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1145,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":1900,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1082,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["fileschema",{"_index":1025,"title":{},"body":{"classes/File.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileschema.methods.rename",{"_index":1029,"title":{},"body":{"classes/File.html":{}}}],["fileschema.methods.todto",{"_index":1027,"title":{},"body":{"classes/File.html":{}}}],["filescontroller",{"_index":1064,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1127,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["filesmodule",{"_index":139,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1141,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesprocessor.name",{"_index":1198,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["filesqueue",{"_index":750,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1081,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":1042,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1897,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":1712,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(file.mimetype",{"_index":1716,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":1715,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filter",{"_index":1709,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":1884,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1611,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":1489,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["finally",{"_index":2541,"title":{},"body":{"license.html":{}}}],["find",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{}}}],["findemailconfirmation",{"_index":1480,"title":{},"body":{"injectables/MailerService.html":{}}}],["findemailconfirmation(query",{"_index":1488,"title":{},"body":{"injectables/MailerService.html":{}}}],["findone",{"_index":452,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":462,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["findone(query",{"_index":2087,"title":{},"body":{"injectables/UsersService.html":{}}}],["findpasswordreset",{"_index":1481,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpasswordreset(query",{"_index":1492,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpublicfile",{"_index":1200,"title":{},"body":{"injectables/FilesService.html":{}}}],["findpublicfile(id",{"_index":1209,"title":{},"body":{"injectables/FilesService.html":{}}}],["finduseractivation",{"_index":1482,"title":{},"body":{"injectables/MailerService.html":{}}}],["finduseractivation(query",{"_index":1494,"title":{},"body":{"injectables/MailerService.html":{}}}],["finish",{"_index":2029,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["finished",{"_index":1868,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":678,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2588,"title":{},"body":{"license.html":{}}}],["folder",{"_index":1004,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{}}}],["following",{"_index":2321,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":673,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":676,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":503,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotpasswordlink",{"_index":944,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{}}}],["form",{"_index":2278,"title":{},"body":{"license.html":{}}}],["format",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["found",{"_index":812,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"controllers/UsersController.html":{}}}],["foundation",{"_index":2670,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2200,"title":{},"body":{"index.html":{}}}],["free",{"_index":2381,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":894,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":909,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":912,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":910,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(path).then(buffer",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":906,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":294,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/File.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"interfaces/WriteOptions.html":{}}}],["function(next",{"_index":354,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":373,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["further",{"_index":2483,"title":{},"body":{"license.html":{}}}],["gcloud",{"_index":1821,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2342,"title":{},"body":{"license.html":{}}}],["generateapplicationkeydto",{"_index":421,"title":{"classes/GenerateApplicationKeyDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["generated",{"_index":343,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":332,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":369,"title":{},"body":{"classes/Application.html":{}}}],["generateid(32",{"_index":981,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":356,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generatekey",{"_index":286,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["generatekey(id",{"_index":465,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generatekey(user",{"_index":412,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["get(\"@me",{"_index":2066,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":1704,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"confirm",{"_index":1735,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"download/:id",{"_index":1095,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"hello",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"search/@:username",{"_index":2069,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"sessions",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('@me",{"_index":2057,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":1663,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('confirm",{"_index":1681,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('download/:id')@optionalauth",{"_index":1070,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('hello",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["get('search/@:username",{"_index":2060,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('sessions')@useguards(authguard",{"_index":535,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":1255,"title":{},"body":{"controllers/HealthController.html":{}}}],["getclientip",{"_index":538,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getsessions",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessions(uid",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsize",{"_index":1922,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2196,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":854,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2674,"title":{},"body":{"license.html":{}}}],["global",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2341,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2618,"title":{},"body":{"license.html":{}}}],["google",{"_index":1244,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1233,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1859,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1237,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2464,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2313,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2400,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2376,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2699,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":864,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RenameFileDto.html":{}}}],["grow",{"_index":2231,"title":{},"body":{"index.html":{}}}],["guard",{"_index":628,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":427,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":561,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleerror",{"_index":1155,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handleerror(error",{"_index":1164,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure",{"_index":1156,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure(job",{"_index":1167,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefiledeletion",{"_index":1157,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1171,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handler",{"_index":1107,"title":{},"body":{"controllers/FilesController.html":{}}}],["handlestall",{"_index":1158,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlestall(job",{"_index":1174,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["hapi/joi",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hashed",{"_index":1965,"title":{},"body":{"classes/User.html":{}}}],["having",{"_index":2311,"title":{},"body":{"license.html":{}}}],["headers",{"_index":537,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1253,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1284,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1259,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1260,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1261,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1251,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1262,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":140,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2205,"title":{},"body":{"index.html":{}}}],["held",{"_index":2660,"title":{},"body":{"license.html":{}}}],["hello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2240,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2378,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2658,"title":{},"body":{"license.html":{}}}],["hey",{"_index":956,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["hh",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":1005,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"classes/User.html":{}}}],["hideschemaproperty",{"_index":1967,"title":{},"body":{"classes/User.html":{}}}],["hmac_sha256",{"_index":334,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hmac_sha256(key",{"_index":371,"title":{},"body":{"classes/Application.html":{}}}],["hook",{"_index":346,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1316,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":1575,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["hours.\\n",{"_index":1000,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["html",{"_index":932,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":1578,"title":{},"body":{"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1279,"title":{},"body":{"controllers/HealthController.html":{},"injectables/MailerService.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2689,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":683,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":2247,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1591,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1579,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["id",{"_index":287,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":393,"title":{},"body":{"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/ISession.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["ignore",{"_index":1103,"title":{},"body":{"controllers/FilesController.html":{}}}],["ii",{"_index":2421,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":958,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["implements",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["implied",{"_index":2410,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2517,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2513,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2495,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":2035,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["incidental",{"_index":2611,"title":{},"body":{"license.html":{}}}],["include",{"_index":2510,"title":{},"body":{"license.html":{}}}],["included",{"_index":2523,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2354,"title":{},"body":{"license.html":{}}}],["including",{"_index":2287,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1932,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1291,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":1831,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2291,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1301,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1297,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["increment",{"_index":834,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2509,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2508,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2499,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2363,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2569,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2258,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2462,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2627,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2334,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2560,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2417,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2570,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2590,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["initial",{"_index":2279,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2556,"title":{},"body":{"license.html":{}}}],["inject",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["inject(logger",{"_index":1182,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["inject(nodemailer_module_options",{"_index":1459,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel",{"_index":467,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":469,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":1506,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(file.name",{"_index":1213,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":1507,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(useractivation.name",{"_index":1508,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectqueue",{"_index":753,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":757,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":758,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2632,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2206,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2211,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2213,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1112,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["intellectual",{"_index":2384,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2450,"title":{},"body":{"license.html":{}}}],["interface",{"_index":477,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":479,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/email.interface",{"_index":948,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["interfaces/incoming",{"_index":1846,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1365,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1446,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["interfaces/session.interface",{"_index":559,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/SessionDto.html":{}}}],["interfaces/storage",{"_index":897,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1849,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":1850,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1105,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(result.error",{"_index":1618,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1307,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalidapikey",{"_index":396,"title":{"classes/InvalidAPIKey.html":{}},"body":{"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InvalidAPIKey.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":713,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationlink",{"_index":1326,"title":{"classes/InvalidEmailConfirmationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":714,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":1329,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["ioredis",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":539,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISession.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":844,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":316,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":766,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["iscurrent",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{}}}],["isemail",{"_index":783,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isession",{"_index":512,"title":{"interfaces/ISession.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["isnotempty",{"_index":775,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isnotempty()@isstring",{"_index":1336,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":792,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/LoginDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isoptional",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isstring",{"_index":776,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["iuaparser.ibrowser",{"_index":1288,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.idevice",{"_index":1289,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.ios",{"_index":1290,"title":{},"body":{"interfaces/ISession.html":{}}}],["job",{"_index":1168,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.data.displayname",{"_index":1464,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.data.fileid",{"_index":1191,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["job.data.to",{"_index":1472,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.failedreason",{"_index":1187,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.id",{"_index":1184,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.interface",{"_index":1447,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["job.interface.ts",{"_index":1646,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["job.name",{"_index":1186,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1193,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1179,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["jobs/send",{"_index":1449,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["joi",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2238,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":962,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["jpeg|jpg|png/gi",{"_index":1713,"title":{},"body":{"controllers/SettingsController.html":{}}}],["js",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":1997,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2564,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2518,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2512,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2636,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2244,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":288,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{}}}],["key.dto",{"_index":423,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto.ts",{"_index":1231,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["key.dto.ts:2",{"_index":1232,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{}}}],["key.split",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{}}}],["kind",{"_index":2582,"title":{},"body":{"license.html":{}}}],["known",{"_index":2493,"title":{},"body":{"license.html":{}}}],["language",{"_index":2665,"title":{},"body":{"license.html":{}}}],["large",{"_index":1049,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2304,"title":{},"body":{"license.html":{}}}],["lastused",{"_index":289,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/ISession.html":{}}}],["later",{"_index":1323,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2634,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2647,"title":{},"body":{"license.html":{}}}],["legal",{"_index":2259,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lesser",{"_index":2343,"title":{},"body":{"license.html":{}}}],["level",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2489,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2609,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2310,"title":{},"body":{"license.html":{}}}],["license",{"_index":2250,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2481,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2301,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2229,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2293,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2412,"title":{},"body":{"license.html":{}}}],["limit",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["limitation",{"_index":2332,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2406,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1125,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1397,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["link",{"_index":960,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["literal",{"_index":1204,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ISession.html":{},"interfaces/StorageOptions.html":{}}}],["litigation",{"_index":2557,"title":{},"body":{"license.html":{}}}],["location",{"_index":2692,"title":{},"body":{"license.html":{}}}],["log",{"_index":1110,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":675,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1160,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["login",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["login(undefined",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":508,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2428,"title":{},"body":{"license.html":{}}}],["logout",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@session",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(identifier",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(session",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutalldevices",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutalldevices(uid",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":794,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1629,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":771,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["look",{"_index":2694,"title":{},"body":{"license.html":{}}}],["loss",{"_index":2617,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2624,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2615,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":347,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["made",{"_index":2296,"title":{},"body":{"license.html":{}}}],["mailer",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/SettingsService.html":{}}}],["mailer.constants",{"_index":1362,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1363,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1364,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":141,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1347,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1354,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1366,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1342,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerprocessor.name",{"_index":1470,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["mailerservice",{"_index":691,"title":{"injectables/MailerService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2643,"title":{},"body":{"license.html":{}}}],["make",{"_index":2388,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2435,"title":{},"body":{"license.html":{}}}],["making",{"_index":2335,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2622,"title":{},"body":{"license.html":{}}}],["management",{"_index":2366,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2472,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1111,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":1055,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["marks",{"_index":2427,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2306,"title":{},"body":{"license.html":{}}}],["math.min(math.max(x",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":2657,"title":{},"body":{"license.html":{}}}],["max",{"_index":2007,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["max(max_port",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":2008,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxactiveuploadsessionserror",{"_index":813,"title":{"classes/MaxActiveUploadSessionsError.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["maxfiles",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":816,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["maxlength",{"_index":302,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":1638,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["maxlength(32",{"_index":779,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{}}}],["me(@currentuser",{"_index":2067,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2056,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2068,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2256,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1269,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1263,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2587,"title":{},"body":{"license.html":{}}}],["message",{"_index":767,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["metadata",{"_index":1883,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["meter",{"_index":1854,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":1901,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":1912,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":1921,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":1916,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":1923,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares/admin.middleware",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1296,"title":{},"body":{"interfaces/IncomingFile.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{}}}],["min",{"_index":1023,"title":{},"body":{"classes/File.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["min(0",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minify",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifycss",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifyoptions",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":304,"title":{},"body":{"classes/Application.html":{},"classes/ChangePasswordDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":798,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["minutes",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2654,"title":{"miscellaneous/variables.html":{}},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1641,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1640,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2228,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":2170,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html(mjml",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2219,"title":{},"body":{"index.html":{}}}],["model",{"_index":454,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["modification",{"_index":2324,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2285,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2679,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2389,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":484,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.errors",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["modules/applications/applications.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.service",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SettingsService.html":{}}}],["modules/auth/auth.errors",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SettingsService.html":{}}}],["modules/auth/auth.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{}}}],["modules/auth/auth.service",{"_index":1770,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/bull",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/SettingsModule.html":{}}}],["modules/files/files.service",{"_index":1700,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/health/health.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["modules/settings/settings.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/storage/storage.module",{"_index":1147,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["modules/storage/storage.service",{"_index":1089,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{}}}],["modules/users/schemas/user.schema",{"_index":428,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/users/users.errors",{"_index":1771,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/users/users.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["mongo",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":326,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1264,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":448,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2239,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":2550,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["mozilla",{"_index":2251,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2687,"title":{},"body":{"license.html":{}}}],["ms",{"_index":975,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1562,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":977,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":1964,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["myśliwiec",{"_index":2245,"title":{},"body":{"index.html":{}}}],["n",{"_index":846,"title":{},"body":{"classes/Counter.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["name')@useguards(authguard",{"_index":1671,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto",{"_index":1696,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto.ts",{"_index":764,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:8",{"_index":774,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{}}}],["names",{"_index":768,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/User.html":{}}}],["ne",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["necessary",{"_index":2429,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2607,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2176,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2249,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":754,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":485,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1265,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":674,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":1757,"title":{},"body":{"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newdisplayname",{"_index":765,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newemail",{"_index":782,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newfilename",{"_index":1024,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/RenameFileDto.html":{}}}],["newname",{"_index":349,"title":{},"body":{"classes/Application.html":{}}}],["newpassword",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"interfaces/MailerOptions.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2199,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["nodejs.errnoexception",{"_index":1101,"title":{},"body":{"controllers/FilesController.html":{}}}],["nodemailer",{"_index":756,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1432,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer_module_id",{"_index":1360,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1361,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1050,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["non",{"_index":2382,"title":{},"body":{"license.html":{}}}],["note",{"_index":2682,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":390,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/InvalidAPIKey.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{}}}],["notfoundexception(\"user",{"_index":2071,"title":{},"body":{"controllers/UsersController.html":{}}}],["nothing",{"_index":2651,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2281,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2484,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2551,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2545,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2413,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2212,"title":{},"body":{"index.html":{}}}],["null",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["number",{"_index":803,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1966,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["obligation",{"_index":2504,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2500,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2465,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1321,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["offer",{"_index":2397,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2505,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2337,"title":{},"body":{"license.html":{}}}],["old",{"_index":796,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{}}}],["oldpassword",{"_index":791,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["olduser",{"_index":1791,"title":{},"body":{"injectables/SettingsService.html":{}}}],["on(\"error",{"_index":1903,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":1904,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":1905,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":1907,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":1906,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1407,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":835,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":847,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":826,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"license.html":{}}}],["ongoing",{"_index":2543,"title":{},"body":{"license.html":{}}}],["onqueueerror",{"_index":1165,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuefailed",{"_index":1169,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuestalled",{"_index":1175,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["open",{"_index":2230,"title":{},"body":{"index.html":{}}}],["option",{"_index":2482,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optional.decorator",{"_index":1087,"title":{},"body":{"controllers/FilesController.html":{}}}],["optional.decorator.ts",{"_index":2107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1085,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":489,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{}}}],["options.field",{"_index":1881,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter",{"_index":1865,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1866,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.imports",{"_index":1382,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1388,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":487,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":481,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limits",{"_index":1863,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.transformers",{"_index":1891,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1387,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1384,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1385,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1389,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1390,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1817,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2519,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2528,"title":{},"body":{"license.html":{}}}],["original",{"_index":2445,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2677,"title":{},"body":{"license.html":{}}}],["os",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1841,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2270,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2368,"title":{},"body":{"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2373,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2700,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1990,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2369,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2264,"title":{},"body":{"license.html":{}}}],["package",{"_index":2143,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":416,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":437,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["param(\"identifier",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":2395,"title":{},"body":{"license.html":{}}}],["partialfilterexpression",{"_index":1963,"title":{},"body":{"classes/User.html":{}}}],["partialuserdto",{"_index":1532,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2272,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1059,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["party",{"_index":2626,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2420,"title":{},"body":{"license.html":{}}}],["pass",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":1913,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailChangedEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["password')@useguards(authguard",{"_index":1678,"title":{},"body":{"controllers/SettingsController.html":{}}}],["password.dto",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["password.dto.ts",{"_index":790,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":797,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":795,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1228,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":1525,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordchangedemail",{"_index":1439,"title":{"classes/PasswordChangedEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["passwordchangedemail(job.data.forgotpasswordlink",{"_index":1467,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordreset",{"_index":733,"title":{"classes/PasswordReset.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"coverage.html":{}}}],["passwordreset.deleteone",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.id",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":1379,"title":{},"body":{"modules/MailerModule.html":{}}}],["passwordresetemail",{"_index":1441,"title":{"classes/PasswordResetEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["passwordresetemail(job.data.resetpasswordlink",{"_index":1468,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordresets",{"_index":1484,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordresetschema",{"_index":1370,"title":{},"body":{"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1564,"title":{},"body":{"classes/PasswordReset.html":{}}}],["patch",{"_index":1079,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["patch(\"change",{"_index":1707,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch(\"rename/:id",{"_index":1117,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('change",{"_index":1667,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch('rename/:id",{"_index":1074,"title":{},"body":{"controllers/FilesController.html":{}}}],["patent",{"_index":2328,"title":{},"body":{"license.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":902,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":916,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":913,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1275,"title":{},"body":{"controllers/HealthController.html":{}}}],["payloadtoolargeexception",{"_index":1044,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2371,"title":{},"body":{"license.html":{}}}],["perform",{"_index":2390,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2594,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2479,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2439,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2631,"title":{},"body":{"license.html":{}}}],["pick",{"_index":482,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1889,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1893,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1894,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2645,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2522,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":323,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":374,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":1998,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(filedto",{"_index":1028,"title":{},"body":{"classes/File.html":{}}}],["plaintoclass(userdto",{"_index":1999,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":820,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":1724,"title":{},"body":{"controllers/SettingsController.html":{}}}],["poolsize",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2288,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2628,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2315,"title":{},"body":{"license.html":{}}}],["post",{"_index":406,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["post(\"/:id/token",{"_index":439,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"change",{"_index":1731,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"delete",{"_index":1738,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"forgot",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"resend",{"_index":1741,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"reset",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1121,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/:id/token",{"_index":413,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post('change",{"_index":1674,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('delete",{"_index":1685,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('forgot",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":520,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('resend",{"_index":1689,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('reset",{"_index":524,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":1077,"title":{},"body":{"controllers/FilesController.html":{}}}],["power",{"_index":2361,"title":{},"body":{"license.html":{}}}],["pre",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2350,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":1102,"title":{},"body":{"controllers/FilesController.html":{}}}],["prevent",{"_index":1988,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2644,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2547,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1177,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["process(\"delete",{"_index":1189,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1461,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1172,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1422,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1178,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1458,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1181,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["profits",{"_index":2616,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2198,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2525,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2635,"title":{},"body":{"license.html":{}}}],["project",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1129,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":327,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":309,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["prop({default",{"_index":968,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({lowercase",{"_index":301,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":312,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1017,"title":{},"body":{"classes/File.html":{}}}],["prop({required",{"_index":1953,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":282,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":2385,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2595,"title":{},"body":{"license.html":{}}}],["provide",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":2478,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1349,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2664,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2659,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2537,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2650,"title":{},"body":{"license.html":{}}}],["public",{"_index":1006,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"license.html":{}}}],["publish",{"_index":2673,"title":{},"body":{"license.html":{}}}],["published",{"_index":2678,"title":{},"body":{"license.html":{}}}],["pump",{"_index":1843,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":1898,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1890,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2589,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2359,"title":{},"body":{"license.html":{}}}],["put",{"_index":2691,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1586,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2593,"title":{},"body":{"license.html":{}}}],["query",{"_index":1491,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["queue",{"_index":749,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["read",{"_index":1827,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1836,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":890,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1100,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1895,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1116,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1882,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1254,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2470,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1334,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1593,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1592,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1587,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1588,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1595,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1594,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_url",{"_index":1590,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":554,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":560,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":557,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.8",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2554,"title":{},"body":{"license.html":{}}}],["received",{"_index":2552,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2475,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2463,"title":{},"body":{"license.html":{}}}],["record",{"_index":1647,"title":{},"body":{"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["recursive",{"_index":911,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":1989,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":2648,"title":{},"body":{"license.html":{}}}],["references",{"_index":2681,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2662,"title":{},"body":{"license.html":{}}}],["register",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1353,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":518,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1357,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1358,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdto",{"_index":519,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":2031,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["regulation",{"_index":2516,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2536,"title":{},"body":{"license.html":{}}}],["reject",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1878,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2639,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":2693,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2492,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1603,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":2485,"title":{},"body":{"license.html":{}}}],["removed",{"_index":2416,"title":{},"body":{"license.html":{}}}],["removeemptyattributes",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rename",{"_index":1007,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["rename(id",{"_index":1211,"title":{},"body":{"injectables/FilesService.html":{}}}],["rename(undefined",{"_index":1072,"title":{},"body":{"controllers/FilesController.html":{}}}],["renamefiledto",{"_index":1073,"title":{"classes/RenameFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/RenameFileDto.html":{},"coverage.html":{}}}],["rendermjml",{"_index":949,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendermjml(\"./templates/email",{"_index":951,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["rendermjml(\"./templates/password",{"_index":1553,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["rendermjml(\"./templates/user",{"_index":2026,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["repair",{"_index":2599,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2210,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2442,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2443,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2387,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1600,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":1910,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.headers.authorization",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.pipe(busboy",{"_index":1908,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["requested",{"_index":1573,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1393,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":314,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2431,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1607,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1114,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1115,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1320,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2578,"title":{},"body":{"license.html":{}}}],["resenduseractivation",{"_index":1661,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(@currentuser",{"_index":1742,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(user",{"_index":1688,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivationemail",{"_index":1751,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resenduseractivationemail(user",{"_index":1767,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resent",{"_index":2002,"title":{},"body":{"classes/UserActivation.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"classes/EmailChangedEmail.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/ResetPasswordDto.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset.email",{"_index":1442,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.email.ts",{"_index":1565,"title":{},"body":{"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["reset.email.ts:15",{"_index":1569,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:19",{"_index":1570,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:5",{"_index":1567,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:8",{"_index":1568,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.job",{"_index":1455,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.job.ts",{"_index":1648,"title":{},"body":{"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["reset.mjml",{"_index":1571,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.schema",{"_index":1372,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["reset.schema.ts",{"_index":1556,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1557,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1561,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1558,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1559,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1560,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":498,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":522,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":523,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordlink",{"_index":1523,"title":{},"body":{"injectables/MailerService.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendPasswordResetJob.html":{}}}],["resize(512",{"_index":1722,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resolve",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1879,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2402,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2460,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2469,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1624,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1617,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1625,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1619,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2633,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revokeallsessions",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(@currentuser",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(user",{"_index":526,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(@currentuser",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(user",{"_index":530,"title":{},"body":{"controllers/AuthController.html":{}}}],["right",{"_index":2312,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2318,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2592,"title":{},"body":{"license.html":{}}}],["rotate",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["royalty",{"_index":2380,"title":{},"body":{"license.html":{}}}],["run",{"_index":2216,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["safety",{"_index":1991,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2338,"title":{},"body":{"license.html":{}}}],["same",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":345,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2203,"title":{},"body":{"index.html":{}}}],["schema",{"_index":328,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":329,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":352,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":979,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(file",{"_index":1026,"title":{},"body":{"classes/File.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1563,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1970,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":2016,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":447,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":1368,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/file.schema",{"_index":1146,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/password",{"_index":1371,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user",{"_index":1375,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user.schema",{"_index":2064,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":2407,"title":{},"body":{"license.html":{}}}],["score",{"_index":1598,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":558,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2055,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2070,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2059,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2292,"title":{},"body":{"license.html":{}}}],["secret",{"_index":337,"title":{},"body":{"classes/Application.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2401,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2457,"title":{},"body":{"license.html":{}}}],["secure",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2437,"title":{},"body":{"license.html":{}}}],["sell",{"_index":2396,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2336,"title":{},"body":{"license.html":{}}}],["sendemailchanged",{"_index":1408,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailchanged(job",{"_index":1421,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailchanged(user",{"_index":1496,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailchangedjob",{"_index":1448,"title":{"interfaces/SendEmailChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"coverage.html":{}}}],["sendemailconfirmation",{"_index":1409,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailconfirmation(job",{"_index":1424,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailconfirmation(newemail",{"_index":1498,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailconfirmationjob",{"_index":1451,"title":{"interfaces/SendEmailConfirmationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["sendemailjob",{"_index":1445,"title":{"interfaces/SendEmailJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["sendpasswordchanged",{"_index":1410,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordchanged(job",{"_index":1426,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordchanged(user",{"_index":1500,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordchangedjob",{"_index":1453,"title":{"interfaces/SendPasswordChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["sendpasswordreset",{"_index":1411,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordreset(job",{"_index":1428,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordreset(user",{"_index":1502,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordresetjob",{"_index":1454,"title":{"interfaces/SendPasswordResetJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["senduseractivation",{"_index":1412,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["senduseractivation(job",{"_index":1430,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["senduseractivation(user",{"_index":1504,"title":{},"body":{"injectables/MailerService.html":{}}}],["senduseractivationjob",{"_index":1456,"title":{"interfaces/SendUserActivationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["separate",{"_index":2307,"title":{},"body":{"license.html":{}}}],["server",{"_index":809,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2426,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2598,"title":{},"body":{"license.html":{}}}],["session",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/IRequest.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"dependencies.html":{}}}],["session.cookie",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.destroy(error",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.ip",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session/:identifier",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["session/:identifier')@useguards(authguard",{"_index":531,"title":{},"body":{"controllers/AuthController.html":{}}}],["session_secret",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":552,"title":{"interfaces/SessionDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["sessions",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["sessions')@useguards(authguard",{"_index":528,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(@currentuser",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(user",{"_index":533,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions.map",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.map(session",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":836,"title":{},"body":{"classes/Counter.html":{},"classes/User.html":{}}}],["set(value",{"_index":850,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(auth_guard_optional",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":755,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":759,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settimeout(resolve",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":1653,"title":{},"body":{"controllers/SettingsController.html":{}}}],["settings.controller",{"_index":1749,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.errors",{"_index":1769,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.service",{"_index":1694,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingscontroller",{"_index":1651,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":142,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":1693,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["settle",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle([confirmation.deleteone",{"_index":1794,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settle([this.logoutalldevices(user.id",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle([this.mailer.sendpasswordchanged(user",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle(files.map(file",{"_index":1872,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2572,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2374,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":1692,"title":{},"body":{"controllers/SettingsController.html":{},"dependencies.html":{}}}],["side",{"_index":2204,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1008,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2529,"title":{},"body":{"license.html":{}}}],["smtp_from",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1392,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1400,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2266,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2327,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2610,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2511,"title":{},"body":{"license.html":{}}}],["sponsors",{"_index":2233,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.schema.ts",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clamp.ts",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delay.ts",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.schema.ts",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rendermjml.ts",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:6",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/auth",{"_index":2106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/internal",{"_index":1308,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/auth.guard.ts:24",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:32",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:50",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:73",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1576,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:26",{"_index":1580,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:33",{"_index":1584,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:81",{"_index":1582,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1285,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/interfaces/session.interface.ts",{"_index":1286,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":670,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":671,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":672,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:16",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":400,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:21",{"_index":407,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:26",{"_index":411,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:31",{"_index":414,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":389,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/InvalidAPIKey.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:3",{"_index":392,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.errors.ts:9",{"_index":1324,"title":{},"body":{"classes/InvalidAPIKey.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":445,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":450,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:12",{"_index":455,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:20",{"_index":457,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:24",{"_index":459,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:31",{"_index":461,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:35",{"_index":463,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:39",{"_index":466,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":380,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:10",{"_index":384,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:12",{"_index":385,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:15",{"_index":387,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:4",{"_index":381,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":382,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":383,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":862,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/generate",{"_index":1230,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":279,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:26",{"_index":298,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:27",{"_index":320,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:37",{"_index":307,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:47",{"_index":310,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:55",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:64",{"_index":317,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:73",{"_index":319,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:75",{"_index":295,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:76",{"_index":296,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:77",{"_index":299,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:78",{"_index":318,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:79",{"_index":321,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:100",{"_index":525,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:106",{"_index":532,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:112",{"_index":529,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:118",{"_index":536,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:50",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:62",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:85",{"_index":517,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:95",{"_index":521,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1298,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1331,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":2049,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2051,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1299,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1325,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:36",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:44",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:53",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:60",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:67",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:72",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1227,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1333,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1337,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1338,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1335,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1627,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1628,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1630,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1631,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1633,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1639,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/session.dto.ts",{"_index":1650,"title":{},"body":{"interfaces/SessionDto.html":{},"coverage.html":{}}}],["src/modules/bull",{"_index":744,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts",{"_index":1031,"title":{},"body":{"classes/FileDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts:11",{"_index":1035,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:13",{"_index":1036,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:15",{"_index":1037,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:17",{"_index":1038,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:19",{"_index":1039,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:21",{"_index":1040,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:4",{"_index":1032,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:6",{"_index":1033,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:8",{"_index":1034,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/rename",{"_index":1634,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1065,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:46",{"_index":1068,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:52",{"_index":1071,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:82",{"_index":1075,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:91",{"_index":1078,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":800,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:15",{"_index":1530,"title":{},"body":{"classes/MaxActiveUploadSessionsError.html":{}}}],["src/modules/files/files.errors.ts:23",{"_index":1930,"title":{},"body":{"classes/UploadSessionNotFound.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":804,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":1041,"title":{},"body":{"classes/FileNotFound.html":{}}}],["src/modules/files/files.module.ts",{"_index":1142,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1153,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1161,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:20",{"_index":1166,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:25",{"_index":1170,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:30",{"_index":1176,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:35",{"_index":1173,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:44",{"_index":1163,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1199,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:13",{"_index":1202,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:22",{"_index":1205,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:33",{"_index":1206,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:43",{"_index":1207,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:53",{"_index":1208,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:57",{"_index":1210,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:61",{"_index":1212,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":871,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/file.schema.ts",{"_index":1001,"title":{},"body":{"classes/File.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/file.schema.ts:14",{"_index":1009,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:15",{"_index":1021,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:22",{"_index":1011,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:31",{"_index":1012,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:36",{"_index":1013,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:46",{"_index":1014,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:51",{"_index":1015,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:57",{"_index":1018,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:66",{"_index":1020,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:68",{"_index":1016,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:69",{"_index":1019,"title":{},"body":{"classes/File.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1252,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1256,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1282,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/emails/confirm",{"_index":985,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/email",{"_index":940,"title":{},"body":{"classes/EmailChangedEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/password",{"_index":1552,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts",{"_index":2020,"title":{},"body":{"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:15",{"_index":2024,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:19",{"_index":2025,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:5",{"_index":2022,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:8",{"_index":2023,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":931,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":935,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":936,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":937,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1391,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1645,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["src/modules/mailer/jobs/send",{"_index":1642,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1343,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:44",{"_index":1355,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:60",{"_index":1359,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:74",{"_index":1352,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:88",{"_index":1348,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1404,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:29",{"_index":1434,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:31",{"_index":1413,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:41",{"_index":1420,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:46",{"_index":1417,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:51",{"_index":1418,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:56",{"_index":1419,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:61",{"_index":1423,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:66",{"_index":1425,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:74",{"_index":1427,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:82",{"_index":1429,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:87",{"_index":1431,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:91",{"_index":1414,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:95",{"_index":1416,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1478,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:19",{"_index":1486,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:37",{"_index":1487,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:45",{"_index":1490,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:51",{"_index":1493,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:55",{"_index":1495,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:59",{"_index":1497,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:67",{"_index":1499,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:77",{"_index":1501,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:85",{"_index":1503,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:95",{"_index":1505,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/schemas/email",{"_index":964,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/password",{"_index":1555,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/user",{"_index":2000,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/settings/dto/change",{"_index":762,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/modules/settings/dto/delete",{"_index":867,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts",{"_index":1652,"title":{},"body":{"controllers/SettingsController.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts:104",{"_index":1679,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:112",{"_index":1683,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:118",{"_index":1687,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:124",{"_index":1691,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:46",{"_index":1665,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:52",{"_index":1669,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:89",{"_index":1672,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:98",{"_index":1676,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.errors.ts",{"_index":1327,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"coverage.html":{}}}],["src/modules/settings/settings.errors.ts:3",{"_index":1332,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/settings/settings.errors.ts:9",{"_index":1328,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{}}}],["src/modules/settings/settings.module.ts",{"_index":1748,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/modules/settings/settings.service.ts",{"_index":1750,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/modules/settings/settings.service.ts:105",{"_index":1768,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:19",{"_index":1752,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:28",{"_index":1754,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:39",{"_index":1756,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:49",{"_index":1759,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:57",{"_index":1761,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:65",{"_index":1763,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:74",{"_index":1764,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:92",{"_index":1766,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":875,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":883,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":893,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":889,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":892,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":885,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":887,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1234,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1292,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":480,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":1931,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2099,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1043,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":1926,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":1927,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":1928,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":1046,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":1929,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1531,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1808,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1811,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1812,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1810,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1809,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1825,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":1832,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":1829,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":1842,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":1835,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":1834,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":1837,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":1840,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/partial",{"_index":1533,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":2036,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":2040,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":2041,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":2042,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":2043,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":2044,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":2045,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":2046,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":2047,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":2048,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":2037,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":2038,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":2039,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1933,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":1954,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":1957,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":1936,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":1940,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":1941,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:118",{"_index":1942,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:119",{"_index":1943,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:120",{"_index":1944,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:121",{"_index":1946,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:122",{"_index":1947,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:123",{"_index":1955,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":1945,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":1956,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":1937,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":1938,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":1939,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":1948,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":1949,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":1950,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":1951,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":1952,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2054,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:20",{"_index":2058,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:25",{"_index":2061,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":918,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:15",{"_index":2052,"title":{},"body":{"classes/UsernameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:21",{"_index":2050,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:3",{"_index":920,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:9",{"_index":938,"title":{},"body":{"classes/EmailAlreadyExists.html":{}}}],["src/modules/users/users.module.ts",{"_index":2076,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2079,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":2080,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:14",{"_index":2082,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:21",{"_index":2088,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:25",{"_index":2086,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/clamp.ts",{"_index":2134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":831,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":842,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":843,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":845,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":840,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":849,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":851,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":853,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":855,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/delay.ts",{"_index":2136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/generateid.ts",{"_index":2138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/rendermjml.ts",{"_index":2139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":1911,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["stalled",{"_index":1188,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["start",{"_index":2217,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2220,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2221,"title":{},"body":{"index.html":{}}}],["started",{"_index":2197,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2209,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1471,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["statements",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1344,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1317,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2515,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2584,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2241,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2671,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2619,"title":{},"body":{"license.html":{}}}],["storage",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/SettingsController.html":{},"interfaces/StorageOptionsFactory.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1815,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1845,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1816,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1813,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1814,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":876,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1140,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1150,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["storageoptions",{"_index":486,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":488,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1088,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":896,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":1852,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["string",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/InvalidAPIKey.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1585,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":933,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["sublicense",{"_index":2476,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2434,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2317,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2486,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1621,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["successfully",{"_index":1194,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["such",{"_index":2284,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":2447,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":2526,"title":{},"body":{"license.html":{}}}],["super",{"_index":814,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"invalid",{"_index":397,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"missing",{"_index":1061,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":1051,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"please",{"_index":1305,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"too",{"_index":1054,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"you",{"_index":1306,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1300,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`application",{"_index":394,"title":{},"body":{"classes/ApplicationNotFound.html":{},"classes/InvalidAPIKey.html":{}}}],["super(`chunk",{"_index":806,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`display",{"_index":922,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`email",{"_index":925,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`file",{"_index":811,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`upload",{"_index":829,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`user",{"_index":930,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`username",{"_index":928,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2234,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2580,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2697,"title":{},"body":{"modules.html":{}}}],["t",{"_index":1583,"title":{},"body":{"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{}}}],["tasks",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2533,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2542,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2531,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1283,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2299,"title":{},"body":{"license.html":{}}}],["test",{"_index":2224,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2227,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2226,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2223,"title":{},"body":{"index.html":{}}}],["text",{"_index":934,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"license.html":{}}}],["thanks",{"_index":2232,"title":{},"body":{"index.html":{}}}],["then(count",{"_index":2097,"title":{},"body":{"injectables/UsersService.html":{}}}],["then(file",{"_index":1135,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(id",{"_index":357,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["then(res",{"_index":1606,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(sessions",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(token",{"_index":982,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2605,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2289,"title":{},"body":{"license.html":{}}}],["third",{"_index":2419,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":1862,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._debug(`[job",{"_index":1183,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1597,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1599,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._handleapikey(req",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._handlesession(req",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._send",{"_index":1465,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._send(new",{"_index":1462,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._size",{"_index":1924,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._value",{"_index":857,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":1977,"title":{},"body":{"classes/User.html":{}}}],["this.activationlink",{"_index":2028,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["this.applications",{"_index":470,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create(dto.name",{"_index":432,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete(id",{"_index":438,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.deleteallfor(user.id",{"_index":1796,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.applications.deletemany",{"_index":474,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.findone(id",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.applications.findone(uid",{"_index":475,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.generatekey(id",{"_index":440,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.forgotpassword(email",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.getsessions(user.id).then(sessions",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logout(identifier",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logoutalldevices(user.id",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["this.auth.register(email",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1980,"title":{},"body":{"classes/User.html":{}}}],["this.baseurl}/activate",{"_index":1528,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/confirm",{"_index":1520,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/forgot",{"_index":1517,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/reset",{"_index":1524,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1249,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1250,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1248,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_secret",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.config.get(\"max_file_size",{"_index":1128,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1126,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1604,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.confirmemaillink",{"_index":993,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1386,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1383,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1271,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(file.id",{"_index":1873,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":1993,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1274,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.displayname",{"_index":953,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname},\\n",{"_index":1574,"title":{},"body":{"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname}\\n",{"_index":957,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":1983,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":1519,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.deletemany",{"_index":1509,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.findone(query",{"_index":1512,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1515,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":858,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1857,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1861,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1888,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1860,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.expiresat",{"_index":1978,"title":{},"body":{"classes/User.html":{}}}],["this.filename",{"_index":1030,"title":{},"body":{"classes/File.html":{}}}],["this.files",{"_index":1131,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["this.files(options).save",{"_index":1220,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.create",{"_index":1725,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.files.delete(id",{"_index":1092,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.delete(user.avatar",{"_index":1777,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.deleteallfor(user.id",{"_index":1797,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.findone",{"_index":1225,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.findone(id",{"_index":1096,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findpublicfile(id",{"_index":1097,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.rename(id",{"_index":1118,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":760,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1221,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone(id",{"_index":471,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["this.forgotpasswordlink",{"_index":954,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.health.check",{"_index":1270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http",{"_index":1602,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":358,"title":{},"body":{"classes/Application.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.id}.${token",{"_index":370,"title":{},"body":{"classes/Application.html":{}}}],["this.ismodified(\"password",{"_index":1973,"title":{},"body":{"classes/User.html":{}}}],["this.isnew",{"_index":355,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.key",{"_index":364,"title":{},"body":{"classes/Application.html":{}}}],["this.lastused",{"_index":379,"title":{},"body":{"classes/Application.html":{}}}],["this.logger.debug",{"_index":1196,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.debug(message",{"_index":1197,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(error",{"_index":1113,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(exception.message",{"_index":1319,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.deleteallfor(user.id",{"_index":1798,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findemailconfirmation",{"_index":1787,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findpasswordreset",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.finduseractivation",{"_index":1772,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailchanged(olduser",{"_index":1795,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailconfirmation(newemail",{"_index":1784,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordchanged(user",{"_index":1786,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordreset(user",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.senduseractivation(user",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1280,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.name",{"_index":361,"title":{},"body":{"classes/Application.html":{}}}],["this.on(string(n",{"_index":861,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":860,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1856,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":1972,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":1522,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.deletemany",{"_index":1510,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.findone(query",{"_index":1513,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.reflector.get",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.get(key",{"_index":1626,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.resetpasswordlink",{"_index":1572,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["this.save",{"_index":362,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.sessions",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deletemany",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deleteone",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settings.activate(token",{"_index":1706,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeavatar(avatar.id",{"_index":1729,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changedisplayname(newdisplayname",{"_index":1730,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeemail(newemail",{"_index":1733,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changepassword(oldpassword",{"_index":1734,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.confirmemail(token",{"_index":1737,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.deleteaccount(password",{"_index":1740,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.resenduseractivationemail(user",{"_index":1743,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1192,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1099,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.storage.write(req",{"_index":1123,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["this.times_resent",{"_index":2019,"title":{},"body":{"classes/UserActivation.html":{}}}],["this.tojson",{"_index":375,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["this.token",{"_index":983,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail",{"_index":1473,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1460,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.useractivations",{"_index":1526,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.deletemany",{"_index":1511,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.findone(query",{"_index":1514,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.users",{"_index":2093,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.create(email",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.exists",{"_index":1780,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2094,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.value",{"_index":859,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2348,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1276,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":540,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["throttle(25",{"_index":563,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(30",{"_index":1702,"title":{},"body":{"controllers/SettingsController.html":{}}}],["throttle_limit",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":2471,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1272,"title":{},"body":{"controllers/HealthController.html":{}}}],["times_resent",{"_index":2003,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamps",{"_index":341,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["tls",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["toarray",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["todto",{"_index":290,"title":{},"body":{"classes/Application.html":{},"classes/File.html":{},"classes/User.html":{}}}],["tojson",{"_index":2013,"title":{},"body":{"classes/UserActivation.html":{}}}],["token",{"_index":368,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["toobject",{"_index":2015,"title":{},"body":{"classes/UserActivation.html":{}}}],["toomanyfields",{"_index":1053,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":1057,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":1058,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1605,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2606,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2242,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2386,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2425,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2339,"title":{},"body":{"license.html":{}}}],["transformcallback",{"_index":1920,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":324,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1892,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":1961,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":1721,"title":{},"body":{"controllers/SettingsController.html":{},"interfaces/WriteOptions.html":{}}}],["transport",{"_index":1394,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1405,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":305,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2248,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1398,"title":{},"body":{"interfaces/MailerOptions.html":{},"index.html":{}}}],["ua",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["uid",{"_index":291,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISession.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"controllers/FilesController.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["under",{"_index":2298,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2530,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2661,"title":{},"body":{"license.html":{}}}],["unique",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unit",{"_index":2222,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2538,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2393,"title":{},"body":{"license.html":{}}}],["unsupported",{"_index":1062,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1060,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":1048,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedmediatypeexception(\"invalid",{"_index":1719,"title":{},"body":{"controllers/SettingsController.html":{}}}],["until",{"_index":2539,"title":{},"body":{"license.html":{}}}],["up",{"_index":2030,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["update(data",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":292,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["updatelastused",{"_index":293,"title":{},"body":{"classes/Application.html":{}}}],["upload",{"_index":819,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["upload(@currentuser",{"_index":1122,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(user",{"_index":1076,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":808,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["uploadedfile",{"_index":1848,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsessionnotfound",{"_index":827,"title":{"classes/UploadSessionNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["uri",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2271,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":483,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{}}}],["usefindandmodify",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":430,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":242,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{}}}],["user.activate",{"_index":1774,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.activated",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":1776,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeavatar(newavatarid",{"_index":1779,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changedisplayname(newdisplayname",{"_index":1782,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeemail(confirmation.newemail",{"_index":1793,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changepassword(newpassword",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.comparepassword(oldpassword",{"_index":1785,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.comparepassword(password",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.decorator",{"_index":426,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":1799,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.displayname",{"_index":1516,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.dto",{"_index":1551,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1534,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:7",{"_index":1538,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":1518,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.id",{"_index":441,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["user.id).catch",{"_index":1778,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.id).then(application",{"_index":433,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["user.id).then(deleted",{"_index":1093,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.id).then(file",{"_index":1119,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.name",{"_index":2078,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.todto(partialuserdto",{"_index":2072,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":1792,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user[\"email",{"_index":1229,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["useractivation",{"_index":1373,"title":{"classes/UserActivation.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/UserActivation.html":{},"coverage.html":{}}}],["useractivation.name",{"_index":1380,"title":{},"body":{"modules/MailerModule.html":{}}}],["useractivationemail",{"_index":1443,"title":{"classes/UserActivationEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["useractivationemail(job.data.activationlink",{"_index":1469,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["useractivations",{"_index":1485,"title":{},"body":{"injectables/MailerService.html":{}}}],["useractivationschema",{"_index":1374,"title":{},"body":{"modules/MailerModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.methods.resent",{"_index":2018,"title":{},"body":{"classes/UserActivation.html":{}}}],["useractivationschema.pre(\"save",{"_index":2017,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":1535,"title":{"classes/UserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1542,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1543,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1544,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1545,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1546,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1547,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1548,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1549,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1550,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1539,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1540,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1541,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernamealreadyexists",{"_index":926,"title":{"classes/UsernameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernamealreadyexists(username",{"_index":2092,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernames",{"_index":1632,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernotactivated",{"_index":643,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":929,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["usernotloggedin",{"_index":644,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2077,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2089,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":2062,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":1969,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.activate",{"_index":1976,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeavatar",{"_index":1979,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changedisplayname",{"_index":1981,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeemail",{"_index":1982,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changepassword",{"_index":1984,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.comparepassword",{"_index":1985,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":1992,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.deleteavatar",{"_index":1995,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":1996,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":1971,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2053,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":143,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1381,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":959,"title":{},"body":{"classes/EmailChangedEmail.html":{},"controllers/FilesController.html":{},"classes/PasswordChangedEmail.html":{},"license.html":{}}}],["utils/chunk",{"_index":900,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/counter",{"_index":1851,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":333,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/rendermjml",{"_index":950,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["utils/settle",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{}}}],["utils/stream",{"_index":1853,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2686,"title":{},"body":{"license.html":{}}}],["valid",{"_index":785,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{}}}],["valid(\"development",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":315,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/User.html":{}}}],["validatebeforesave",{"_index":1994,"title":{},"body":{"classes/User.html":{}}}],["validationschema",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":325,"title":{},"body":{"classes/Application.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateApplicationDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["validly",{"_index":2579,"title":{},"body":{"license.html":{}}}],["value",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2705,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1623,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{}}}],["versions",{"_index":2347,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2014,"title":{},"body":{"classes/UserActivation.html":{}}}],["visit",{"_index":996,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["visiting",{"_index":2032,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["void",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["want",{"_index":2680,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2585,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2488,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2218,"title":{},"body":{"index.html":{}}}],["website",{"_index":2246,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":837,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":852,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":2316,"title":{},"body":{"license.html":{}}}],["wide",{"_index":2379,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2491,"title":{},"body":{"license.html":{}}}],["without",{"_index":2331,"title":{},"body":{"license.html":{}}}],["work",{"_index":2302,"title":{},"body":{"license.html":{}}}],["world",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["writable",{"_index":895,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1828,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1838,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1869,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":1902,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1887,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1876,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1871,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":1839,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["wrong",{"_index":1622,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["x",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":464,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":2237,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\n@Module({\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\n\n@Controller()\nexport class AppController {\n  @Get(\"hello\")\n  async hello(): Promise {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsModule\n                        \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AppController } from \"./app.controller\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SettingsModule } from \"./modules/settings/settings.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    ThrottlerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    }),\n\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SettingsModule,\n    UsersModule\n  ],\n  exports: [ApplicationsModule, ConfigModule, Logger, MailerModule, UsersModule],\n  controllers: [AppController],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeName\n                            \n                            \n                                compareKey\n                            \n                            \n                                createdAt\n                            \n                            \n                                generateKey\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updateLastUsed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst HMAC_SHA256 = (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\");\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  key!: string | null;\n\n  @Prop(\n    raw({\n      default: null,\n      type: Date\n    })\n  )\n  lastUsed!: Date | null;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  changeName!: (newName: string) => Promise;\n  compareKey!: (key: string, secret: string) => boolean;\n  generateKey!: (secret: string) => Promise;\n  toDto!: () => ApplicationDto;\n  updateLastUsed!: () => Promise;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.changeName = async function(\n  this: Application,\n  newName: string\n): Promise {\n  if (this.name !== newName) {\n    this.name = newName;\n    await this.save();\n  }\n\n  return this;\n};\n\nApplicationSchema.methods.compareKey = function(\n  this: Application,\n  key: string,\n  secret: string\n): boolean {\n  if (!this.key) return false;\n\n  return crypto.timingSafeEqual(Buffer.from(HMAC_SHA256(key, secret)), Buffer.from(this.key));\n};\n\nApplicationSchema.methods.generateKey = async function(\n  this: Application,\n  secret: string\n): Promise {\n  const token = await generateId(16);\n  const key = `${this.id}.${token}`;\n\n  this.key = HMAC_SHA256(key, secret);\n\n  await this.save();\n\n  return key;\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\nApplicationSchema.methods.updateLastUsed = async function(this: Application): Promise {\n  this.lastUsed = new Date();\n\n  await this.save();\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  key!: string | null;\n\n  lastUsed!: Date | null;\n\n  name!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class ApplicationNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`Application \"${identifier}\" does not exist!`);\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/token')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Body, Delete, Param } from \"@nestjs/common\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { GenerateApplicationKeyDto } from \"./dto/generate-application-key.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @Post()\n  create(@Body() dto: CreateApplicationDto, @CurrentUser() user: User): Promise {\n    return this.applications.create(dto.name, user.id).then(application => application.toDto());\n  }\n\n  @Delete(\"/:id\")\n  delete(@CurrentUser() user: User, @Param(\"id\") id: string): Promise {\n    return this.applications.delete(id, user.id).then(application => application.toDto());\n  }\n\n  @Post(\"/:id/token\")\n  async generateKey(\n    @CurrentUser() user: User,\n    @Param(\"id\") id: string\n  ): Promise {\n    return { key: await this.applications.generateKey(id, user.id) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }])],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, uid?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport { ApplicationNotFound } from \"./applications.errors\";\n\nimport { Application } from \"./schemas/application.schema\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(name: string, uid: string): Promise {\n    return new this.applications({ name, uid }).save();\n  }\n\n  async delete(id: string, uid: string): Promise {\n    const application = await this.findOne(id, uid);\n    if (!application) throw new ApplicationNotFound(id);\n\n    return application.deleteOne();\n  }\n\n  async deleteAllFor(uid: string): Promise {\n    await this.applications.deleteMany({ uid });\n  }\n\n  async findOne(id: string, uid?: string): Promise {\n    return this.applications.findOne(uid ? { id, uid } : { id });\n  }\n\n  async generateKey(id: string, uid: string): Promise {\n    const application = await this.findOne(id, uid);\n    if (!application) throw new ApplicationNotFound(id);\n\n    return application.generateKey(this.config.get(\"API_SECRET\") as string);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                            \n                                revokeAllSessions\n                            \n                            \n                                revokeSession\n                            \n                            \n                                sessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAllSessions\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAllSessions(user: User, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-all-sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeSession\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeSession(user: User, identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-session/:identifier')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sessions\n                        \n                        \n                    \n                \n            \n            \n                \nsessions(user: User, currentSession: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly users: UsersService) {}\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISession\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    return user;\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: ISession): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n\n  @Delete(\"revoke-session/:identifier\")\n  @UseGuards(AuthGuard)\n  revokeSession(@CurrentUser() user: User, @Param(\"identifier\") identifier: string): Promise {\n    return this.auth.logout(identifier, user.id);\n  }\n\n  @Delete(\"revoke-all-sessions\")\n  @UseGuards(AuthGuard)\n  revokeAllSessions(@CurrentUser() user: User, @Session() session: ISession): Promise {\n    return this.auth.logoutAllDevices(user.id, session.identifier);\n  }\n\n  @Get(\"sessions\")\n  @UseGuards(AuthGuard)\n  sessions(@CurrentUser() user: User, @Session() currentSession: ISession): Promise {\n    return this.auth.getSessions(user.id).then(sessions =>\n      sessions.map(session => ({\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      }))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _handleAPIKey\n                            \n                            \n                                    Private\n                                    Async\n                                _handleSession\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, config: ConfigService, reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleAPIKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleAPIKey(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleSession(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { InvalidAPIKey } from \"@/modules/applications/applications.errors\";\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nexport const AUTH_GUARD_OPTIONAL = \"AUTH_GUARD_OPTIONAL\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly config: ConfigService,\n    private readonly reflector: Reflector,\n    private readonly users: UsersService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isOptional = this.reflector.get(\n      AUTH_GUARD_OPTIONAL,\n      context.getHandler()\n    );\n\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      return req.headers.authorization\n        ? await this._handleAPIKey(req)\n        : await this._handleSession(req);\n    } catch (error) {\n      if (!isOptional) throw error;\n      return true;\n    }\n  }\n\n  private async _handleAPIKey(req: IRequest) {\n    const key = req.headers.authorization;\n    if (!key) throw new InvalidAPIKey();\n\n    const [id, token] = key.split(\".\");\n    if (!id || !token) throw new InvalidAPIKey();\n\n    const application = await this.applications.findOne(id);\n\n    if (!application || !application.compareKey(key, this.config.get(\"API_SECRET\") as string)) {\n      throw new InvalidAPIKey();\n    }\n\n    const user = await this.users.findOne({ id: application.uid });\n    if (!user) throw new InvalidAPIKey();\n\n    await application.updateLastUsed();\n\n    req.user = user;\n\n    return true;\n  }\n\n  private async _handleSession(req: IRequest) {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UserNotLoggedIn();\n    if (!user.activated) throw new UserNotActivated();\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\n@Module({\n  imports: [HttpModule],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                logoutAllDevices\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(identifier: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logoutAllDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutAllDevices(uid: string, currentSession?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\nimport { InvalidCredentials, UserNotActivated, InvalidPasswordResetLink } from \"./auth.errors\";\n\n@Injectable()\nexport class AuthService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    await this.mailer.sendPasswordReset(user);\n\n    return true;\n  }\n\n  async getSessions(uid: string): Promise {\n    return this.sessions\n      .find({ \"session.uid\": uid })\n      .project({ _id: 0, expires: 0, \"session.cookie\": 0 })\n      .toArray()\n      .then(sessions => sessions.map(({ session }) => session));\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async logout(identifier: string, uid: string): Promise {\n    await this.sessions.deleteOne({\n      \"session.identifier\": identifier,\n      \"session.uid\": uid\n    });\n  }\n\n  async logoutAllDevices(uid: string, currentSession?: string): Promise {\n    await this.sessions.deleteMany({\n      \"session.identifier\": { $ne: currentSession },\n      \"session.uid\": uid\n    });\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    await this.mailer.sendUserActivation(user);\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.mailer.findPasswordReset({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.id });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await settle([this.logoutAllDevices(user.id), user.changePassword(newPassword)]);\n    await settle([this.mailer.sendPasswordChanged(user), passwordReset.deleteOne()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeDisplayNameDto.html":{"url":"classes/ChangeDisplayNameDto.html","title":"class - ChangeDisplayNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeDisplayNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-display-name.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-display-name.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class ChangeDisplayNameDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeEmailDto.html":{"url":"classes/ChangeEmailDto.html","title":"class - ChangeEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-email.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-email.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class ChangeEmailDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  newEmail!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ChangePasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  oldPassword!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChunkAlreadyUploaded.html":{"url":"classes/ChunkAlreadyUploaded.html","title":"class - ChunkAlreadyUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChunkAlreadyUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chunkIndex: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chunkIndex\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString()@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAccountDto.html":{"url":"classes/DeleteAccountDto.html","title":"class - DeleteAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/delete-account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/delete-account.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteAccountDto {\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameAlreadyExists.html":{"url":"classes/DisplayNameAlreadyExists.html","title":"class - DisplayNameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailAlreadyExists.html":{"url":"classes/EmailAlreadyExists.html","title":"class - EmailAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailChangedEmail.html":{"url":"classes/EmailChangedEmail.html","title":"class - EmailChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/email-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/email-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your email has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your email has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmationEmail.html":{"url":"classes/EmailConfirmationEmail.html","title":"class - EmailConfirmationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/confirm-email.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(confirmEmailLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/confirm-email.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        confirmEmailLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailConfirmationEmail implements Email {\n  constructor(private readonly confirmEmailLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      confirmEmailLink: this.confirmEmailLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Please confirm your email address.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"To confirm your email address, please visit the link below.\",\n      \"This email confirmation link is only valid for the next 72 hours.\\n\",\n      this.confirmEmailLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/file.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            FileDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                rename\n                            \n                            \n                                size\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 1, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { FileDto } from \"../dto/file.dto\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class File extends Document implements FileDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true\n  })\n  filename!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      trim: true,\n      type: String\n    })\n  )\n  folder!: string | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 1,\n    required: true\n  })\n  size!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  rename!: (newFilename: string) => Promise;\n  toDto!: () => FileDto;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(File);\n\nFileSchema.methods.toDto = function(this: File): FileDto {\n  return plainToClass(FileDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\nFileSchema.methods.rename = async function(this: File, newFilename: string): Promise {\n  if (this.filename !== newFilename) {\n    this.filename = newFilename;\n    await this.save();\n  }\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDto.html":{"url":"classes/FileDto.html","title":"class - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class FileDto {\n  createdAt!: Date;\n\n  filename!: string;\n  \n  folder!: string | null;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  public!: boolean;\n\n  size!: number;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotFound.html":{"url":"classes/FileNotFound.html","title":"class - FileNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                rename\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(user: User | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@OptionalAuth()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \nrename(undefined: RenameFileDto, user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('rename/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RenameFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { FileNotFound } from \"./files.errors\";\nimport { FilesService } from \"./files.service\";\n\nimport { FileDto } from \"./dto/file.dto\";\nimport { RenameFileDto } from \"./dto/rename-file.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/auth-optional.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"delete/:id\")\n  delete(@CurrentUser() user: User, @Param(\"id\") id: string): Promise {\n    return this.files.delete(id, user.id).then(deleted => deleted.toDto());\n  }\n\n  @Get(\"download/:id\")\n  @OptionalAuth()\n  async download(\n    @CurrentUser() user: User | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const file = user ? await this.files.findOne(id, user.id) : await this.files.findPublicFile(id);\n    if (!file) throw new FileNotFound(id);\n\n    const readable = await this.storage.read(file.id);\n\n    readable.on(\"error\", (error: NodeJS.ErrnoException & Error) => {\n      // prettier-ignore\n      const err = error.code === \"ENOENT\"\n        ? new FileNotFound(id) \n        : new InternalServerErrorException(error);\n\n      // Exception handler disabled when using the @Res() decorator, so we have to log the error manually\n      if (err instanceof InternalServerErrorException) {\n        this.logger.error(error);\n      }\n\n      if (!res.headersSent) {\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Patch(\"rename/:id\")\n  rename(\n    @Body() { newFilename }: RenameFileDto,\n    @CurrentUser() user: User,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.files.rename(id, newFilename, user.id).then(file => file.toDto());\n  }\n\n  @Post(\"upload\")\n  async upload(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map(file =>\n        this.files\n          .create({\n            filename: file.filename,\n            id: file.id,\n            size: file.size,\n            uid: user.id\n          })\n          .then(file => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { File, FileSchema } from \"./schemas/file.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: File.name, schema: FileSchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                            \n                                handleStall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, LoggerService } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n    private readonly storage: StorageService\n  ) {}\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    this._debug(`[Job ${job.id}] Deleting ${job.data.fileId}`);\n\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully deleted ${job.data.fileId}`);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, FilesProcessor.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPublicFile\n                            \n                            \n                                    Async\n                                rename\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(files: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPublicFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPublicFile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rename(id: string, newFilename: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newFilename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { FileNotFound } from \"./files.errors\";\n\nimport { File } from \"./schemas/file.schema\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    @InjectModel(File.name)\n    private readonly files: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async create(options: {\n    filename: File[\"filename\"];\n    hidden?: File[\"hidden\"];\n    id: File[\"id\"];\n    public?: File[\"public\"];\n    size: File[\"size\"];\n    uid: File[\"uid\"];\n  }): Promise {\n    return new this.files(options).save();\n  }\n\n  async delete(id: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n    if (!file) throw new FileNotFound(id);\n\n    await this.filesQueue.add(\"delete\", { fileId: file.id });\n    await file.deleteOne();\n\n    return file;\n  }\n\n  async deleteAllFor(uid: string): Promise {\n    await this.files\n      .find({ uid })\n      .cursor()\n      .eachAsync(async (file: File) => {\n        await this.filesQueue.add(\"delete\", { fileId: file.id });\n        await file.deleteOne();\n      });\n  }\n\n  async findOne(id: string, uid: string): Promise {\n    return this.files.findOne({ id, uid });\n  }\n\n  async findPublicFile(id: string): Promise {\n    return this.files.findOne({ id, public: true });\n  }\n\n  async rename(id: string, newFilename: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n    if (!file) throw new FileNotFound(id);\n\n    return file.rename(newFilename);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateApplicationKeyDto.html":{"url":"classes/GenerateApplicationKeyDto.html","title":"class - GenerateApplicationKeyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateApplicationKeyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/generate-application-key.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/generate-application-key.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateApplicationKeyDto {\n  key!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISession\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISession\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: ISession;\n  user: User | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISession extends Express.Session {\n  identifier: string;\n  ip: string | null;\n  lastUsed: Date;\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAPIKey.html":{"url":"classes/InvalidAPIKey.html","title":"class - InvalidAPIKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAPIKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class ApplicationNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`Application \"${identifier}\" does not exist!`);\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationLink.html":{"url":"classes/InvalidEmailConfirmationLink.html","title":"class - InvalidEmailConfirmationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ])\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                    Private\n                                    Async\n                                _send\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                handleStall\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _send(email: Email, job: Job)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-confirmation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-reset')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-user-activation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, Logger, LoggerService, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { EmailConfirmationEmail } from \"./emails/confirm-email.email\";\nimport { EmailChangedEmail } from \"./emails/email-changed.email\";\nimport { PasswordChangedEmail } from \"./emails/password-changed.email\";\nimport { PasswordResetEmail } from \"./emails/password-reset.email\";\nimport { UserActivationEmail } from \"./emails/user.activation.email\";\n\nimport { Email } from \"./interfaces/email.interface\";\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendEmailJob } from \"./interfaces/send-email-job.interface\";\n\nimport { SendEmailChangedJob } from \"./jobs/send-email-changed.job\";\nimport { SendEmailConfirmationJob } from \"./jobs/send-email-confirmation.job\";\nimport { SendPasswordChangedJob } from \"./jobs/send-password-changed.job\";\nimport { SendPasswordResetJob } from \"./jobs/send-password-reset.job\";\nimport { SendUserActivationJob } from \"./jobs/send-user-activation.job\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n\n    @Inject(NODEMAILER_MODULE_OPTIONS)\n    private readonly options: MailerOptions\n  ) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"send-email-changed\")\n  async sendEmailChanged(job: Job): Promise {\n    await this._send(new EmailChangedEmail(job.data.forgotPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-email-confirmation\")\n  async sendEmailConfirmation(job: Job): Promise {\n    await this._send(\n      new EmailConfirmationEmail(job.data.confirmEmailLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-changed\")\n  async sendPasswordChanged(job: Job): Promise {\n    await this._send(\n      new PasswordChangedEmail(job.data.forgotPasswordLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-reset\")\n  async sendPasswordReset(job: Job): Promise {\n    await this._send(new PasswordResetEmail(job.data.resetPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-user-activation\")\n  async sendUserActivation(job: Job): Promise {\n    await this._send(new UserActivationEmail(job.data.activationLink, job.data.displayName), job);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, MailerProcessor.name);\n  }\n\n  private async _send(email: Email, job: Job) {\n    this._debug(`[Job ${job.id}] Starting job \"${job.name}\" for ${job.data.to}`);\n\n    await this.transporter.sendMail({\n      html: await email.html(),\n      subject: email.subject(),\n      text: email.text(),\n      to: job.data.to\n    });\n\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully completed \"${job.name}\" for ${job.data.to}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findEmailConfirmation\n                            \n                            \n                                    Async\n                                findPasswordReset\n                            \n                            \n                                    Async\n                                findUserActivation\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailConfirmations: Model, passwordResets: Model, userActivations: Model, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEmailConfirmation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPasswordReset(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserActivation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://${this.config.get(\"FRONTEND_DOMAIN\")}`\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class MailerService {\n  private readonly baseURL = `http://${this.config.get(\"FRONTEND_DOMAIN\")}`;\n\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  async deleteAllFor(uid: string): Promise {\n    await settle([\n      this.emailConfirmations.deleteMany({ uid }),\n      this.passwordResets.deleteMany({ uid }),\n      this.userActivations.deleteMany({ uid })\n    ]);\n  }\n\n  async findEmailConfirmation(\n    query: FilterQuery\n  ): Promise {\n    return this.emailConfirmations.findOne(query);\n  }\n\n  async findPasswordReset(query: FilterQuery): Promise {\n    return this.passwordResets.findOne(query);\n  }\n\n  async findUserActivation(query: FilterQuery): Promise {\n    return this.userActivations.findOne(query);\n  }\n\n  async sendEmailChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-email-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendEmailConfirmation(newEmail: string, user: User): Promise {\n    const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-email-confirmation\", {\n      confirmEmailLink: `${this.baseURL}/confirm-email/${confirmation.token}`,\n      displayName: user.displayName,\n      to: newEmail\n    });\n  }\n\n  async sendPasswordChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-password-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendPasswordReset(user: User): Promise {\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-password-reset\", {\n      displayName: user.displayName,\n      resetPasswordLink: `${this.baseURL}/reset-password/${reset.token}`,\n      to: user.email\n    });\n  }\n\n  async sendUserActivation(user: User): Promise {\n    const activation = await new this.userActivations({ uid: user.id }).save();\n    \n    await this.emailsQueue.add(\"send-user-activation\", {\n      activationLink: `${this.baseURL}/activate-account/${activation.token}`,\n      displayName: user.displayName,\n      to: user.email\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaxActiveUploadSessionsError.html":{"url":"classes/MaxActiveUploadSessionsError.html","title":"class - MaxActiveUploadSessionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaxActiveUploadSessionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordChangedEmail.html":{"url":"classes/PasswordChangedEmail.html","title":"class - PasswordChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-changed.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your password has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your password has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordResetEmail.html":{"url":"classes/PasswordResetEmail.html","title":"class - PasswordResetEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordResetEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-reset.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resetPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-reset.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordResetEmail implements Email {\n  constructor(private readonly resetPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-reset.mjml\", {\n      displayName: this.displayName,\n      resetPasswordLink: this.resetPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Password Reset Requested.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To reset your password, please visit the link below.\",\n      \"This password reset link is only valid for the next 1 hour.\\n\",\n      this.resetPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    // If its successful but wrong recaptcha version response\n    if ((action && result.action !== action) || (score && result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFileDto.html":{"url":"classes/RenameFileDto.html","title":"class - RenameFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/rename-file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newFilename\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New filename cannot be empty!'})@IsString()@MaxLength(255, {message: 'Filename cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/rename-file.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nexport class RenameFileDto {\n  @IsNotEmpty({ message: \"New filename cannot be empty!\" })\n  @IsString()\n  @MaxLength(255, { message: \"Filename cannot be greater than $constraint1 characters!\" })\n  newFilename!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailChangedJob.html":{"url":"interfaces/SendEmailChangedJob.html","title":"interface - SendEmailChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailConfirmationJob.html":{"url":"interfaces/SendEmailConfirmationJob.html","title":"interface - SendEmailConfirmationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailConfirmationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-confirmation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmEmailLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmEmailLink\n                                    \n                                \n                                \n                                    \n                                        confirmEmailLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailConfirmationJob extends SendEmailJob {\n  confirmEmailLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailJob.html":{"url":"interfaces/SendEmailJob.html","title":"interface - SendEmailJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-email-job.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        displayName\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SendEmailJob {\n  data: Record;\n  displayName: string;\n  to: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordChangedJob.html":{"url":"interfaces/SendPasswordChangedJob.html","title":"interface - SendPasswordChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordResetJob.html":{"url":"interfaces/SendPasswordResetJob.html","title":"interface - SendPasswordResetJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordResetJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-reset.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        resetPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordLink\n                                    \n                                \n                                \n                                    \n                                        resetPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordResetJob extends SendEmailJob {\n  resetPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendUserActivationJob.html":{"url":"interfaces/SendUserActivationJob.html","title":"interface - SendUserActivationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendUserActivationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-user-activation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activationLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendUserActivationJob extends SendEmailJob {\n  activationLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionDto.html":{"url":"interfaces/SessionDto.html","title":"interface - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/session.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ISession\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isCurrent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCurrent\n                                    \n                                \n                                \n                                    \n                                        isCurrent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISession } from \"@/interfaces/session.interface\";\n\nexport interface SessionDto extends ISession {\n  isCurrent: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                confirmEmail\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                resendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-avatar')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \nchangeDisplayName(undefined: ChangeDisplayNameDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-display-name')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeDisplayNameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \nchangeEmail(undefined: ChangeEmailDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-email')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(undefined: ChangePasswordDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount(undefined: DeleteAccountDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-account')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \nresendUserActivation(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resend-user-activation')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { SettingsService } from \"./settings.service\";\n\nimport { ChangeDisplayNameDto } from \"./dto/change-display-name.dto\";\nimport { ChangeEmailDto } from \"./dto/change-email.dto\";\nimport { ChangePasswordDto } from \"./dto/change-password.dto\";\nimport { DeleteAccountDto } from \"./dto/delete-account.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"settings\")\n@Throttle(30, 60)\nexport class SettingsController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly settings: SettingsService,\n    private readonly storage: StorageService\n  ) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.settings.activate(token);\n  }\n\n  @Patch(\"change-avatar\")\n  @UseGuards(AuthGuard)\n  async changeAvatar(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new UnsupportedMediaTypeException(\"Invalid file type!\"), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.create({\n      filename: avatar.filename,\n      hidden: true,\n      id: avatar.id,\n      public: true,\n      size: avatar.size,\n      uid: user.id\n    });\n\n    return this.settings.changeAvatar(avatar.id, user);\n  }\n\n  @Patch(\"change-display-name\")\n  @UseGuards(AuthGuard)\n  changeDisplayName(\n    @Body() { newDisplayName }: ChangeDisplayNameDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changeDisplayName(newDisplayName, user);\n  }\n\n  @Post(\"change-email\")\n  @UseGuards(AuthGuard)\n  changeEmail(@Body() { newEmail }: ChangeEmailDto, @CurrentUser() user: User): Promise {\n    return this.settings.changeEmail(newEmail, user);\n  }\n\n  @Post(\"change-password\")\n  @UseGuards(AuthGuard)\n  changePassword(\n    @Body() { newPassword, oldPassword }: ChangePasswordDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changePassword(oldPassword, newPassword, user);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.settings.confirmEmail(token);\n  }\n\n  @Post(\"delete-account\")\n  @UseGuards(AuthGuard)\n  deleteAccount(@Body() { password }: DeleteAccountDto, @CurrentUser() user: User): Promise {\n    return this.settings.deleteAccount(password, user);\n  }\n\n  @Post(\"resend-user-activation\")\n  @UseGuards(AuthGuard)\n  resendUserActivation(@CurrentUser() user: User): Promise {\n    return this.settings.resendUserActivationEmail(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\n\nimport { SettingsController } from \"./settings.controller\";\nimport { SettingsService } from \"./settings.service\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n    FilesModule,\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [SettingsService],\n  controllers: [SettingsController],\n  providers: [SettingsService]\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                    Async\n                                changeDisplayName\n                            \n                            \n                                    Async\n                                changeEmail\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                resendUserActivationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, auth: AuthService, files: FilesService, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(newAvatarId: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeDisplayName(newDisplayName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newDisplayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEmail(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(oldPassword: string, newPassword: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(password: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resendUserActivationEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resendUserActivationEmail(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { InvalidEmailConfirmationLink, InvalidUserActivationLink } from \"./settings.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { AuthService } from \"@/modules/auth/auth.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { DisplayNameAlreadyExists, EmailAlreadyExists } from \"@/modules/users/users.errors\";\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class SettingsService {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly auth: AuthService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async activate(token: string): Promise {\n    const activation = await this.mailer.findUserActivation({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    await user.activate();\n    await activation.deleteOne();\n  }\n\n  async changeAvatar(newAvatarId: string, user: User): Promise {\n    if (user.avatar) {\n      await this.files.delete(user.avatar, user.id).catch(() => undefined);\n    }\n\n    await user.changeAvatar(newAvatarId);\n\n    return user;\n  }\n\n  async changeDisplayName(newDisplayName: string, user: User): Promise {\n    if (await this.users.exists({ displayName: newDisplayName })) {\n      throw new DisplayNameAlreadyExists(newDisplayName);\n    }\n\n    return user.changeDisplayName(newDisplayName);\n  }\n\n  async changeEmail(newEmail: string, user: User): Promise {\n    if (await this.users.exists({ email: newEmail })) {\n      throw new EmailAlreadyExists(newEmail);\n    }\n\n    await this.mailer.sendEmailConfirmation(newEmail, user);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string, user: User): Promise {\n    if (!(await user.comparePassword(oldPassword))) {\n      throw new IncorrectPassword();\n    }\n\n    await user.changePassword(newPassword);\n    await this.mailer.sendPasswordChanged(user);\n  }\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.mailer.findEmailConfirmation({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationLink();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationLink();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationLink();\n    }\n\n    const oldUser = user.toObject();\n\n    await user.changeEmail(confirmation.newEmail);\n    await settle([confirmation.deleteOne(), this.mailer.sendEmailChanged(oldUser)]);\n  }\n\n  async deleteAccount(password: string, user: User): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.applications.deleteAllFor(user.id),\n      this.auth.logoutAllDevices(user.id),\n      this.files.deleteAllFor(user.id),\n      this.mailer.deleteAllFor(user.id)\n    ]);\n\n    await user.delete();\n  }\n\n  async resendUserActivationEmail(user: User): Promise {\n    const activation = await this.mailer.findUserActivation({ uid: user.id });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    await this.mailer.sendUserActivation(user);\n    await activation.resent();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadSessionNotFound.html":{"url":"classes/UploadSessionNotFound.html","title":"class - UploadSessionNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadSessionNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAvatar\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  activate!: () => Promise;\n  changeAvatar!: (newAvatarId: string) => Promise;\n  changeDisplayName!: (newDisplayName: string) => Promise;\n  changeEmail!: (newEmail: string) => Promise;\n  changePassword!: (newPassword: string) => Promise;\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  deleteAvatar!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.activate = async function(this: User): Promise {\n  if (!this.activated || this.expiresAt) {\n    this.activated = true;\n    this.expiresAt = null;\n\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeAvatar = async function(this: User, newAvatarId: string): Promise {\n  if (this.avatar !== newAvatarId) {\n    this.avatar = newAvatarId;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeDisplayName = async function(\n  this: User,\n  newDisplayName: string\n): Promise {\n  if (this.displayName !== newDisplayName) {\n    this.displayName = newDisplayName;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeEmail = async function(this: User, newEmail: string): Promise {\n  if (this.email !== newEmail) {\n    this.email = newEmail;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changePassword = async function(this: User, newPassword: string): Promise {\n  this.password = newPassword;\n  return this.save();\n};\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  if (!this.deleted) {\n    this.activated = false;\n    this.avatar = null;\n    this.deleted = true;\n    this.email = null;\n    this.password = null;\n\n    await this.save({ validateBeforeSave: false });\n  }\n\n  return this;\n};\n\nUserSchema.methods.deleteAvatar = async function(this: User): Promise {\n  if (this.avatar) {\n    this.avatar = null;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                resent\n                            \n                            \n                                times_resent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times_resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  times_resent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n\n  resent!: () => Promise;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserActivationSchema.methods.resent = async function(\n  this: UserActivation\n): Promise {\n  this.times_resent += 1;\n\n  await this.save();\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivationEmail.html":{"url":"classes/UserActivationEmail.html","title":"class - UserActivationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/user.activation.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activationLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/user.activation.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activationLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class UserActivationEmail implements Email {\n  constructor(private readonly activationLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/user-activation.mjml\", {\n      activationLink: this.activationLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Activate your account.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To finish up the registration process, please activate your account by visiting the link below\",\n      \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n      this.activationLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameAlreadyExists.html":{"url":"classes/UsernameAlreadyExists.html","title":"class - UsernameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NotFoundException, Param, UseGuards } from \"@nestjs/common\";\n\nimport { UsersService } from \"./users.service\";\n\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(private readonly users: UsersService) {}\n\n  @Get(\"@me\")\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new NotFoundException(\"User not found!\");\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \nexists(query: FilterQuery, collation?: CollationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collation\n                                    \n                                            CollationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CollationOptions, FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { EmailAlreadyExists, UsernameAlreadyExists } from \"./users.errors\";\n\nimport { User } from \"./schemas/user.schema\";\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private readonly users: Model) {}\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailAlreadyExists(email);\n    if (await this.users.exists({ username })) throw new UsernameAlreadyExists(username);\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  exists(query: FilterQuery, collation?: CollationOptions): Promise {\n    if (!collation) return this.users.exists(query);\n\n    return this.users\n      .countDocuments(query)\n      .collation(collation)\n      .then(count => !!count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/auth-optional.decorator.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_OPTIONAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InvalidAPIKey\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/generate-application-key.dto.ts\n            \n            class\n            GenerateApplicationKeyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            HMAC_SHA256\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/session.dto.ts\n            \n            interface\n            SessionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/file.dto.ts\n            \n            class\n            FileDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/files/dto/rename-file.dto.ts\n            \n            class\n            RenameFileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ChunkAlreadyUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            FileNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            MaxActiveUploadSessionsError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            UploadSessionNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            variable\n            FileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/confirm-email.email.ts\n            \n            class\n            EmailConfirmationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/email-changed.email.ts\n            \n            class\n            EmailChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-changed.email.ts\n            \n            class\n            PasswordChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-reset.email.ts\n            \n            class\n            PasswordResetEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/user.activation.email.ts\n            \n            class\n            UserActivationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-email-job.interface.ts\n            \n            interface\n            SendEmailJob\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-changed.job.ts\n            \n            interface\n            SendEmailChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-confirmation.job.ts\n            \n            interface\n            SendEmailConfirmationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-changed.job.ts\n            \n            interface\n            SendPasswordChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-reset.job.ts\n            \n            interface\n            SendPasswordResetJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-user-activation.job.ts\n            \n            interface\n            SendUserActivationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-display-name.dto.ts\n            \n            class\n            ChangeDisplayNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-email.dto.ts\n            \n            class\n            ChangeEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/delete-account.dto.ts\n            \n            class\n            DeleteAccountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.controller.ts\n            \n            controller\n            SettingsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidEmailConfirmationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/clamp.ts\n            \n            variable\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/delay.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/renderMJML.ts\n            \n            variable\n            renderMJML\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.1.2\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.16.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.9.20\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.2\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.10\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sharp : ^0.25.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    54 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            AUTH_GUARD_OPTIONAL   (src/.../auth.guard.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            clamp   (src/.../clamp.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            delay   (src/.../delay.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            FileSchema   (src/.../file.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            HMAC_SHA256   (src/.../application.schema.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../auth-optional.decorator.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            renderMJML   (src/.../renderMJML.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HMAC_SHA256\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/guards/auth.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_OPTIONAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_OPTIONAL\"\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/utils/clamp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (x: number, min: number, max: number): number =>\n  Math.min(Math.max(x, min), max)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (_data: unknown, ctx: ExecutionContext) => ctx.switchToHttp().getRequest().user\n)\n                        \n                    \n\n\n            \n        \n\n    src/utils/delay.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (time: number): Promise =>\n  new Promise((resolve) => setTimeout(resolve, time))\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/file.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FileSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(File)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/auth-optional.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_OPTIONAL, optional)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/renderMJML.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            renderMJML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  path: fs.PathLike,\n  data: Record\n): Promise => {\n  const mjml = await fs.promises.readFile(path).then(buffer => buffer.toString());\n\n  const { errors, html } = mjml2html(mjml, {\n    keepComments: false,\n    minify: true,\n    minifyOptions: {\n      collapseWhitespace: true,\n      minifyCSS: true,\n      removeEmptyAttributes: true\n    }\n  });\n\n  if (errors && errors.length) {\n    throw new Error(errors.map(error => error.message).join(\"\\n\"));\n  }\n\n  return ejs.render(html, data, { async: true });\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
