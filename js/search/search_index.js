var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,1.992,1,3.238]],["body/controllers/AdminController.html",[0,2.748,1,5.475,2,2.748,3,0.083,4,0.083,5,0.057,6,5.284,7,3.956,8,4.849,9,0.227,10,0.009,11,4.188,12,0.976,13,4.849,14,5.284,15,4.467,16,5.994,17,3.604,18,3.757,19,5.994,20,5.994,21,0.096,22,0.2,23,2.58,24,2.272,25,1.902,26,3.429,27,0.006,28,0.008,29,0.006]],["title/injectables/AdminGuard.html",[15,3.238,30,1.344]],["body/injectables/AdminGuard.html",[3,0.076,4,0.076,5,0.052,8,3.602,9,0.209,10,0.009,12,0.888,15,5.165,21,0.088,22,0.182,27,0.006,28,0.007,29,0.006,30,2.144,31,2.587,32,4.811,33,1.447,34,4.552,35,0.482,36,1.801,37,2.239,38,5.568,39,5.568,40,5.97,41,0.482,42,5.458,43,1.256,44,1.168,45,0.45,46,1.112,47,4.386,48,1.419,49,1.634,50,3.263,51,3.421,52,4.068,53,5.458,54,1.873,55,5.458,56,1.923,57,2.995,58,4.386,59,4.811,60,2.503,61,1.454,62,4.386,63,1.419,64,2.503]],["title/injectables/AdminMiddleware.html",[30,1.344,65,3.238]],["body/injectables/AdminMiddleware.html",[3,0.066,4,0.066,5,0.045,8,3.132,9,0.208,10,0.009,12,0.773,21,0.076,22,0.158,27,0.005,28,0.007,29,0.005,30,1.957,31,2.249,33,1.321,35,0.419,36,1.645,37,2.326,41,0.559,43,1.456,44,1.354,45,0.521,46,1.29,48,1.645,49,1.679,50,2.837,51,5.099,52,3.537,54,1.628,57,3.472,59,4.184,60,2.176,61,1.264,62,3.813,65,4.715,66,4.184,67,5.658,68,6.693,69,6.275,70,6.1,71,5.369,72,4.524,73,7.17,74,4.746,75,5.578,76,4.184,77,4.746,78,2.504,79,4.746,80,4.746,81,2.328,82,3.316]],["title/modules/AdminModule.html",[83,1.278,84,3.036]],["body/modules/AdminModule.html",[1,5.225,2,2.843,3,0.064,4,0.064,5,0.044,9,0.221,10,0.009,12,0.75,13,5.754,14,4.06,21,0.074,22,0.154,27,0.005,28,0.006,29,0.005,36,1.197,41,0.407,43,1.06,44,0.986,45,0.379,46,0.939,48,1.197,65,3.432,83,2.062,84,5.931,85,2.259,86,2.341,87,2.527,88,2.527,89,2.527,90,3.848,91,3.848,92,4.06,93,4.06,94,4.06,95,4.06,96,4.613,97,3.403,98,1.762,99,2.527,100,4.605,101,3.403,102,4.605,103,6.201,104,7.5,105,4.605,106,6.201,107,3.403,108,4.605,109,6.201,110,2.753,111,3.7,112,6.201,113,4.605,114,4.605,115,4.605,116,3.218,117,1.923,118,4.605,119,4.605,120,4.605,121,4.605,122,2.887,123,4.605]],["title/injectables/AdminService.html",[13,2.867,30,1.344]],["body/injectables/AdminService.html",[3,0.085,4,0.085,5,0.058,9,0.204,10,0.009,12,0.997,13,4.912,17,4.092,18,3.838,21,0.098,22,0.204,23,2.635,24,1.894,26,4.257,27,0.006,28,0.008,29,0.006,30,2.302,31,2.902,41,0.541,43,1.409,44,1.31,45,0.505,46,1.248,124,5.397,125,1.248,126,4.92,127,6.123]],["title/controllers/AppController.html",[0,1.992,128,3.238]],["body/controllers/AppController.html",[0,3.391,2,2.778,3,0.084,4,0.084,5,0.058,9,0.166,10,0.009,12,0.986,21,0.097,22,0.202,27,0.006,28,0.008,29,0.006,35,0.535,36,1.922,37,2.347,41,0.535,48,1.575,49,1.744,63,1.575,128,5.511,129,5.34,130,8.523,131,2.078,132,6.057,133,6.057,134,6.057,135,6.057]],["title/modules/AppModule.html",[83,1.278,136,3.238]],["body/modules/AppModule.html",[2,1.809,3,0.035,4,0.035,5,0.024,9,0.223,10,0.01,12,0.406,21,0.04,22,0.083,27,0.003,28,0.004,29,0.003,56,2.386,60,1.142,61,1.051,63,1.026,64,2.247,83,1.441,84,4.516,85,1.222,86,1.266,87,1.367,88,1.367,89,1.367,90,2.166,91,2.689,96,3.697,97,2.166,98,0.953,99,1.367,101,2.166,116,1.741,122,3.072,128,3.652,136,6.271,137,2.196,138,2.196,139,2.196,140,4.266,141,4.516,142,4.051,143,4.516,144,5.282,145,4.516,146,4.198,147,2.002,148,2.491,149,2.196,150,3.946,151,1.857,152,3.946,153,4.048,154,1.425,155,3.479,156,1.857,157,1.181,158,3.946,159,2.491,160,2.941,161,2.941,162,3.946,163,2.006,164,1.857,165,2.491,166,2.491,167,2.196,168,2.491,169,1.857,170,2.491,171,2.002,172,2.491,173,2.491,174,2.491,175,2.002,176,1.425,177,2.002,178,2.196,179,2.002,180,3.479,181,2.006,182,3.652,183,2.002,184,3.479,185,2.491,186,2.491,187,2.491,188,2.491,189,2.491,190,2.491,191,7.023,192,2.491,193,2.491,194,7.408,195,4.9,196,2.491,197,2.491,198,3.946,199,2.491,200,2.491,201,2.491,202,2.491,203,2.491,204,2.491,205,3.946,206,2.491,207,3.946,208,2.491,209,2.491,210,5.574,211,5.574,212,2.491,213,2.491,214,2.491,215,3.946,216,2.491,217,2.196,218,2.491,219,3.938,220,2.491,221,2.491,222,2.491,223,2.491,224,2.491,225,2.491,226,2.491,227,2.491,228,2.491,229,2.491,230,2.491,231,2.491,232,3.946,233,2.491,234,2.491,235,2.491,236,3.946,237,2.491,238,2.491,239,2.491,240,2.491,241,1.644,242,2.491,243,2.491,244,1.425,245,2.491,246,1.644,247,2.002,248,2.491,249,2.689,250,3.072,251,2.93,252,4.9,253,2.491,254,5.574,255,2.491,256,1.769,257,2.491,258,2.491,259,1.425,260,2.491,261,2.491,262,2.491,263,2.491,264,2.491,265,2.491,266,1.489,267,2.491,268,2.491,269,2.491,270,2.002,271,2.491,272,2.491,273,2.491,274,2.941,275,2.491,276,2.491,277,2.491,278,2.491,279,2.491,280,2.491,281,2.491,282,2.491,283,2.491,284,2.491,285,2.491,286,2.002,287,2.002,288,2.002,289,1.741]],["title/interfaces/AsyncStorageOptions.html",[290,0.783,291,3.238]],["body/interfaces/AsyncStorageOptions.html",[3,0.072,4,0.072,5,0.05,9,0.205,10,0.009,21,0.084,27,0.005,28,0.007,29,0.005,33,1.407,35,0.462,37,1.537,45,0.728,46,1.755,49,1.232,83,2.194,163,3.426,249,4.325,250,4.94,289,5.507,290,0.941,291,5.022,292,1.793,293,3.651,294,3.448,295,5.94,296,1.478,297,6.947,298,4.028,299,4.606,300,4.606,301,3.855,302,3.123,303,3.651,304,2.396,305,4.606,306,4.606]],["title/controllers/AuthController.html",[0,1.992,307,3.238]],["body/controllers/AuthController.html",[0,1.018,2,1.018,3,0.031,4,0.031,5,0.021,7,1.465,9,0.224,10,0.01,11,1.551,12,0.361,17,1.765,18,1.391,21,0.036,22,0.074,23,0.955,24,1.113,25,0.704,26,1.27,27,0.002,28,0.004,29,0.002,34,1.327,35,0.196,36,0.935,37,1.334,41,0.595,43,1.55,44,1.441,45,0.555,46,1.372,48,1.75,49,1.814,54,1.556,56,1.268,57,3.147,61,1.208,63,1.68,71,1.465,78,1.171,81,1.089,107,1.974,131,2.31,160,1.654,161,1.654,256,2.547,259,2.595,270,2.891,307,2.681,308,1.957,309,3.171,310,2.843,311,3.171,312,2.681,313,3.171,314,3.597,315,3.597,316,2.994,317,2.219,318,3.888,319,2.219,320,2.25,321,2.219,322,2.219,323,3.888,324,4.536,325,0.785,326,3.369,327,4.16,328,4.751,329,2.219,330,2.219,331,2.219,332,2.219,333,2.219,334,2.219,335,3.888,336,2.219,337,2.219,338,2.219,339,3.888,340,2.219,341,2.219,342,2.219,343,3.597,344,2.219,345,2.219,346,2.219,347,2.712,348,2.219,349,2.219,350,2.219,351,3.999,352,2.219,353,2.219,354,2.681,355,1.27,356,1.957,357,1.654,358,1.654,359,1.654,360,1.465,361,1.957,362,2.219,363,2.891,364,1.957,365,1.957,366,2.255,367,1.957,368,2.219,369,3.171,370,2.219,371,2.219,372,2.219,373,1.654,374,2.219,375,1.465,376,1.654,377,1.654,378,1.783,379,3.597,380,2.219,381,1.783,382,2.219,383,1.654,384,1.654,385,1.654,386,2.219,387,1.018,388,1.327,389,1.465,390,2.219,391,2.219,392,2.219,393,2.219,394,1.783,395,2.219,396,2.219,397,2.219,398,1.269,399,1.957,400,2.058,401,1.218,402,2.219,403,2.219,404,1.957,405,2.219,406,1.551,407,2.219,408,2.219,409,2.219,410,3.597,411,3.597,412,2.225,413,2.219,414,2.219,415,2.219,416,2.219,417,3.999,418,1.783,419,2.219,420,1.128,421,2.219,422,1.654,423,2.219,424,1.783,425,2.219,426,1.957,427,2.219,428,1.783,429,2.219,430,1.957,431,2.514,432,2.219,433,2.219,434,1.783,435,1.783,436,2.219,437,1.783,438,2.219,439,2.219,440,2.219,441,2.219,442,2.219,443,2.219,444,2.219,445,1.391,446,2.151,447,2.219,448,3.597,449,2.219,450,3.381,451,2.219,452,2.219,453,2.219,454,2.219,455,1.957,456,2.219,457,2.219,458,2.219,459,2.219,460,1.957,461,2.219]],["title/guards/AuthGuard.html",[34,2.597,462,3.491]],["body/guards/AuthGuard.html",[3,0.058,4,0.058,5,0.04,9,0.215,10,0.01,12,0.687,17,3.547,18,2.644,21,0.068,22,0.141,23,1.816,24,1.807,25,1.339,26,3.832,27,0.004,28,0.006,29,0.004,30,1.807,34,3.492,35,0.373,36,1.518,37,1.97,38,5.81,39,4.693,40,5.389,41,0.516,43,1.344,44,1.25,45,0.481,46,1.19,47,3.39,48,1.097,49,1.377,51,2.644,52,3.144,54,1.447,56,2.548,57,2.315,58,3.39,60,1.934,61,1.124,63,1.974,64,2.678,81,3.286,117,1.761,125,0.86,151,3.144,256,2.126,326,2.315,327,2.315,359,3.144,360,2.784,420,2.145,422,3.144,463,3.39,464,3.719,465,4.219,466,6.923,467,4.219,468,4.219,469,2.948,470,3.341,471,3.492,472,3.719,473,5.841,474,4.219,475,4.219,476,3.719,477,4.219,478,3.719,479,6.699,480,3.719,481,3.144,482,5.149,483,2.784,484,1.487,485,2.315,486,3.39,487,3.719,488,3.719,489,3.719]],["title/injectables/AuthMiddleware.html",[30,1.344,67,3.238]],["body/injectables/AuthMiddleware.html",[3,0.062,4,0.062,5,0.043,9,0.213,10,0.009,12,0.728,17,3.635,18,2.804,21,0.072,22,0.149,23,1.925,24,1.383,26,3.478,27,0.005,28,0.006,29,0.005,30,1.881,31,2.12,35,0.395,36,1.58,37,2.031,41,0.537,43,1.399,44,1.301,45,0.501,46,1.239,48,1.163,49,1.434,50,2.674,51,4.645,52,3.333,54,1.535,56,1.576,57,2.455,60,3.167,61,1.974,62,3.594,67,4.531,68,5.359,69,5.359,71,4.891,72,4.239,73,6.533,75,6.089,78,2.36,117,1.867,125,0.912,126,3.594,256,2.192,326,2.455,327,2.455,359,3.333,360,2.952,400,2.558,420,2.274,422,3.333,469,3.125,478,3.943,480,3.943,481,3.333,482,5.359,483,2.952,484,1.576,485,2.455,486,3.594,487,3.943,488,3.943,489,3.943,490,3.943,491,4.473,492,4.473,493,2.455,494,6.079,495,2.952,496,4.473,497,2.558,498,2.455]],["title/modules/AuthModule.html",[83,1.278,140,2.867]],["body/modules/AuthModule.html",[2,3.102,3,0.073,4,0.073,5,0.05,9,0.217,10,0.009,12,0.856,21,0.084,22,0.175,27,0.005,28,0.007,29,0.005,83,2.2,85,2.579,86,2.672,87,2.885,88,2.885,89,2.885,90,4.106,91,4.106,96,4.786,97,3.713,98,2.011,99,2.885,101,3.713,116,3.673,140,5.748,307,5.575,366,5.574,367,4.634,499,4.634,500,5.256,501,4.634,502,4.634,503,5.256,504,6.765,505,5.256]],["title/injectables/AuthService.html",[30,1.344,366,2.723]],["body/injectables/AuthService.html",[3,0.035,4,0.035,5,0.024,9,0.199,10,0.01,12,0.412,17,2.757,18,1.585,21,0.041,22,0.084,24,1.53,25,2.064,26,2.83,27,0.003,28,0.004,29,0.003,30,1.235,31,1.198,35,0.223,36,1.038,37,2.467,41,0.642,43,1.625,44,1.511,45,0.582,46,1.439,48,1.77,49,1.87,54,2.648,56,2.156,60,2.577,61,1.497,63,1.461,64,1.159,125,0.814,157,1.198,244,1.446,256,2.306,266,1.511,296,0.875,309,3.519,310,2.503,311,3.519,312,2.975,313,3.519,316,3.266,320,2.276,325,1.134,327,2.191,328,1.585,347,2.387,351,4.954,366,2.503,383,1.884,387,1.159,398,1.573,412,3.341,417,3.519,430,4.362,445,1.585,446,3.36,470,2.284,483,3.266,484,0.891,486,2.031,506,2.229,507,3.992,508,3.992,509,2.528,510,6.504,511,3.687,512,3.523,513,3.992,514,3.992,515,2.528,516,3.992,517,2.528,518,3.589,519,3.992,520,2.528,521,3.992,522,2.528,523,3.992,524,2.528,525,2.229,526,3.992,527,2.528,528,3.992,529,2.528,530,1.285,531,3.992,532,1.387,533,3.992,534,2.229,535,1.669,536,1.884,537,2.387,538,2.958,539,2.528,540,2.528,541,2.528,542,2.229,543,2.229,544,2.528,545,2.611,546,1.766,547,2.528,548,2.528,549,2.528,550,2.528,551,2.229,552,2.528,553,2.528,554,2.528,555,2.528,556,2.229,557,2.503,558,2.528,559,2.528,560,2.528,561,2.229,562,2.528,563,2.528]],["title/modules/BullBoardModule.html",[83,1.278,141,3.036]],["body/modules/BullBoardModule.html",[3,0.077,4,0.077,5,0.053,9,0.211,10,0.009,12,0.909,21,0.09,22,0.186,27,0.006,28,0.007,29,0.006,83,2.263,85,2.739,86,2.838,87,3.064,88,3.064,89,3.064,90,4.223,91,3.064,97,3.858,98,2.136,99,3.064,101,3.858,110,3.337,141,6.097,142,5.327,169,4.161,171,4.486,564,4.921,565,5.583,566,4.921,567,5.938,568,4.486,569,5.583,570,5.583]],["title/injectables/BullBoardProvider.html",[30,1.344,567,3.036]],["body/injectables/BullBoardProvider.html",[3,0.076,4,0.076,5,0.052,9,0.22,10,0.009,12,0.888,21,0.088,22,0.182,24,2.144,25,2.199,27,0.006,28,0.007,29,0.006,30,2.144,31,2.587,41,0.482,43,1.256,44,1.168,45,0.45,46,1.112,83,1.605,110,4.143,111,4.386,125,1.412,155,4.811,169,5.165,567,4.842,568,5.568,571,4.811,572,5.458,573,6.897,574,6.712,575,5.458,576,6.109,577,4.386,578,3.263,579,5.458,580,4.386,581,4.811,582,4.811,583,5.458,584,5.458]],["title/classes/ChangeDisplayNameDto.html",[22,0.145,585,3.238]],["body/classes/ChangeDisplayNameDto.html",[3,0.074,4,0.074,5,0.051,9,0.188,10,0.009,21,0.086,22,0.228,27,0.006,28,0.007,29,0.006,35,0.473,41,0.473,44,1.465,61,1.824,131,1.837,256,1.699,296,1.501,387,2.456,585,5.103,586,1.014,587,5.103,588,6.449,589,4.721,590,5.625,591,6.036,592,4.179,593,7.012,594,4.721,595,4.721,596,6.036,597,5.502,598,5.103,599,5.355,600,4.303,601,3.916,602,3.916,603,3.357,604,2.723,605,4.721,606,2.939,607,4.721,608,5.355]],["title/classes/ChangeEmailDto.html",[22,0.145,609,3.238]],["body/classes/ChangeEmailDto.html",[3,0.08,4,0.08,5,0.055,9,0.197,10,0.009,21,0.092,22,0.239,27,0.006,28,0.007,29,0.006,35,0.508,41,0.508,131,1.973,256,1.825,296,1.57,387,2.637,398,2.183,586,1.089,587,5.338,592,3.965,601,4.097,602,4.097,604,2.924,606,3.157,609,5.338,610,5.071,611,5.148,612,5.45,613,5.755,614,5.005,615,4.622,616,3.605,617,5.752,618,4.622]],["title/classes/ChangePasswordDto.html",[22,0.145,619,3.238]],["body/classes/ChangePasswordDto.html",[3,0.074,4,0.074,5,0.051,9,0.187,10,0.009,21,0.086,22,0.227,27,0.006,28,0.007,29,0.006,35,0.47,41,0.603,61,1.817,131,2.34,256,1.689,296,1.495,320,2.805,387,2.44,445,4.717,586,1.008,587,5.608,592,4.034,598,5.082,601,4.304,602,4.304,604,2.706,606,3.743,616,3.336,619,5.082,620,3.966,621,6.047,622,4.765,623,4.692,624,5.082,625,5.48,626,5.322,627,6.012,628,5.322,629,3.182,630,4.276,631,4.765]],["title/classes/ChunkAlreadyUploaded.html",[22,0.145,632,2.867]],["body/classes/ChunkAlreadyUploaded.html",[3,0.069,4,0.069,5,0.047,9,0.137,10,0.009,12,0.811,21,0.124,22,0.258,27,0.005,28,0.007,29,0.005,33,1.678,35,0.44,41,0.44,43,1.147,44,1.066,45,0.41,46,1.015,61,1.327,125,1.331,181,3.706,316,4.312,325,0.836,327,2.734,347,2.978,401,2.734,484,1.755,493,3.585,498,2.734,586,0.943,632,4.312,633,3.48,634,4.358,635,4.869,636,4.981,637,4.869,638,4.17,639,3.712,640,2.978,641,2.734,642,4.095,643,2.978,644,3.712,645,2.734,646,3.48,647,3.287,648,3.48,649,3.712,650,3.712,651,3.712,652,3.712,653,4.565,654,1.961,655,3.712,656,3.712,657,3.712,658,3.48,659,3.712,660,3.712,661,3.287,662,3.712,663,3.712]],["title/classes/Counter.html",[22,0.145,664,3.238]],["body/classes/Counter.html",[3,0.055,4,0.055,5,0.037,9,0.108,10,0.01,21,0.063,22,0.131,23,1.694,27,0.004,28,0.006,29,0.004,33,1.162,35,0.348,36,1.447,41,0.713,43,1.704,44,1.584,45,0.61,46,1.508,48,1.023,63,2.053,107,3.85,125,0.802,176,3.183,181,4.41,244,4.234,298,3.327,545,2.078,586,0.745,648,2.751,664,4.147,665,3.471,666,6.455,667,7.015,668,7.015,669,5.565,670,4.906,671,5.565,672,4.906,673,3.937,674,3.937,675,5.565,676,3.937,677,3.937,678,5.565,679,3.937,680,7.683,681,3.488,682,5.565,683,8.316,684,3.937,685,5.565,686,3.937,687,5.565,688,3.937,689,3.937,690,3.937,691,3.937,692,7.015,693,6.455,694,6.455,695,3.937,696,3.937]],["title/interfaces/CreateFileOptions.html",[290,0.783,697,3.238]],["body/interfaces/CreateFileOptions.html",[3,0.072,4,0.072,5,0.075,9,0.216,10,0.009,21,0.083,27,0.005,28,0.007,29,0.005,35,0.459,45,0.613,46,1.602,57,3.684,78,2.74,107,3.684,290,0.935,292,1.782,294,3.427,296,1.472,298,4.7,325,0.952,326,4.082,697,5.002,698,4.578,699,6.318,700,6.068,701,5.86,702,6.931,703,3.84,704,4.173,705,5.393,706,4.578,707,4.909,708,4.173,709,5.393,710,3.427,711,4.578]],["title/classes/DeleteAccountDto.html",[22,0.145,712,3.238]],["body/classes/DeleteAccountDto.html",[3,0.083,4,0.083,5,0.057,9,0.201,10,0.009,21,0.096,22,0.244,27,0.006,28,0.008,29,0.006,35,0.526,41,0.526,131,2.042,256,1.889,296,1.604,320,2.834,387,2.729,586,1.127,592,3.026,601,4.185,602,4.185,604,3.026,606,3.267,616,3.731,622,4.159,627,6.449,631,4.159,712,5.452,713,6.449,714,5.247,715,5.952]],["title/interfaces/DeleteFileJob.html",[290,0.783,716,3.238]],["body/interfaces/DeleteFileJob.html",[3,0.09,4,0.09,5,0.062,10,0.009,21,0.104,27,0.007,28,0.008,29,0.007,35,0.572,45,0.533,290,1.165,292,2.22,296,1.687,325,1.051,716,5.734,717,5.704,718,5.704,719,7.491]],["title/classes/DiskStorage.html",[22,0.145,720,3.036]],["body/classes/DiskStorage.html",[3,0.051,4,0.051,5,0.035,9,0.198,10,0.01,21,0.085,22,0.123,23,1.588,24,1.142,25,2.386,27,0.004,28,0.006,29,0.004,35,0.326,36,1.381,37,2.212,41,0.665,43,1.731,44,1.609,45,0.62,46,1.533,48,1.877,49,1.607,54,1.823,60,2.437,61,0.983,63,1.771,64,1.692,81,2.607,117,2.219,122,3.331,125,0.752,163,1.876,176,2.111,246,2.436,247,2.965,290,0.665,304,2.437,325,1.105,355,3.04,484,2.65,586,0.699,703,2.111,720,3.713,721,2.965,722,3.723,723,5.314,724,5.314,725,4.27,726,4.27,727,2.965,728,4.76,729,3.69,730,4.685,731,3.69,732,4.685,733,3.69,734,3.713,735,3.69,736,3.904,737,3.713,738,3.69,739,3.331,740,3.69,741,4.685,742,2.436,743,2.436,744,2.579,745,2.436,746,3.253,747,3.253,748,3.253,749,2.313,750,2.436,751,3.253,752,2.579,753,2.965,754,2.965,755,3.253,756,3.253,757,3.253,758,3.253,759,3.253,760,3.253,761,3.253,762,2.965,763,3.253]],["title/interfaces/DiskStorageEngineOptions.html",[290,0.783,728,3.036]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.064,4,0.064,5,0.044,9,0.215,10,0.01,21,0.1,22,0.154,23,1.987,24,1.428,25,1.971,27,0.005,28,0.006,29,0.005,35,0.408,37,1.827,45,0.38,49,1.465,54,2.131,60,2.848,61,1.23,63,1.952,64,2.117,81,3.047,117,1.928,122,3.894,163,2.348,176,2.641,246,4.956,247,3.71,290,0.832,292,1.584,296,1.362,304,2.117,325,1.073,484,1.627,703,2.641,720,3.227,721,3.71,722,3.714,728,4.905,730,4.071,732,4.071,734,3.227,736,3.894,737,3.227,739,2.894,741,5.476,742,3.048,743,3.048,744,3.227,745,3.048,746,4.071,747,4.071,748,4.071,749,2.894,750,3.048,751,4.071,752,3.227,753,3.71,754,3.71,755,4.071,756,4.071,757,4.071,758,4.071,759,4.071,760,4.071,761,4.071,762,3.71,763,4.071]],["title/classes/DisplayNameAlreadyExists.html",[22,0.145,764,2.723]],["body/classes/DisplayNameAlreadyExists.html",[3,0.073,4,0.073,5,0.05,9,0.144,10,0.009,12,0.853,21,0.127,22,0.263,27,0.005,28,0.007,29,0.005,33,1.705,41,0.463,43,1.206,44,1.445,45,0.432,46,1.068,125,1.068,325,1.07,398,1.466,401,3.706,406,4.718,412,3.312,586,0.992,634,4.881,638,3.862,640,4.466,764,4.232,765,3.662,766,5.032,767,5.24,768,2.998,769,3.906,770,3.133,771,3.906,772,3.906,773,3.285,774,5.032,775,3.906,776,3.285,777,3.906]],["title/interfaces/Email.html",[290,0.783,398,1.216]],["body/interfaces/Email.html",[3,0.082,4,0.082,5,0.056,10,0.009,21,0.095,27,0.006,28,0.008,29,0.006,35,0.524,36,1.898,41,0.699,48,2.056,49,1.722,290,1.068,292,2.035,325,1.104,398,2.043,778,5.229,779,4.933,780,5.172,781,5.172,782,5.931,783,5.931,784,5.931]],["title/classes/EmailAlreadyExists.html",[22,0.145,770,2.597]],["body/classes/EmailAlreadyExists.html",[3,0.073,4,0.073,5,0.05,9,0.144,10,0.009,12,0.853,21,0.127,22,0.263,27,0.005,28,0.007,29,0.005,33,1.705,41,0.463,43,1.206,44,1.445,45,0.432,46,1.068,125,1.068,325,1.07,398,1.889,401,3.706,406,4.718,412,3.312,586,0.992,634,4.881,638,3.862,640,4.466,764,3.285,765,3.662,766,3.906,768,2.327,769,3.906,770,4.036,771,5.032,772,3.906,773,3.285,774,5.032,775,3.906,776,3.285,777,3.906,785,5.24]],["title/classes/EmailChangedEmail.html",[22,0.145,786,3.238]],["body/classes/EmailChangedEmail.html",[3,0.066,4,0.066,5,0.045,9,0.173,10,0.009,21,0.076,22,0.158,23,2.037,24,1.953,25,1.502,27,0.005,28,0.007,29,0.005,35,0.418,36,1.642,41,0.67,43,1.089,44,1.013,45,0.39,46,0.965,48,1.848,49,1.489,63,1.848,98,1.811,117,2.637,125,0.965,320,1.582,325,1.103,398,2.211,586,0.896,654,1.863,768,3.367,779,4.534,780,4.754,781,4.754,786,4.707,787,6.965,788,3.803,789,4.172,790,4.172,791,4.967,792,4.172,793,4.172,794,4.172,795,3.124,796,2.967,797,3.307,798,4.172,799,4.172,800,3.124,801,5.567,802,4.707,803,3.307,804,3.803,805,4.172,806,3.803,807,2.406,808,4.172,809,3.307]],["title/classes/EmailConfirmation.html",[22,0.145,810,3.036]],["body/classes/EmailConfirmation.html",[3,0.049,4,0.049,5,0.034,9,0.204,10,0.009,21,0.083,22,0.172,27,0.004,28,0.005,29,0.004,33,1.08,35,0.314,41,0.656,45,0.612,56,1.252,61,0.946,63,0.923,64,3.999,72,2.957,82,2.482,131,2.296,157,1.684,241,4.417,259,2.032,296,1.134,325,0.95,388,2.124,389,2.345,420,3.773,446,4.001,518,3.098,530,1.806,532,1.95,545,2.728,546,3.612,586,0.673,603,4.195,604,1.806,611,4.022,612,4.258,629,4.001,810,3.612,811,6.155,812,2.855,813,4.258,814,3.643,815,4.022,816,3.643,817,3.552,818,2.482,819,3.552,820,4.258,821,5.186,822,4.557,823,3.552,824,5.378,825,3.612,826,3.552,827,4.677,828,3.552,829,3.552,830,3.612,831,4.969,832,3.09,833,2.482,834,2.345,835,2.855,836,2.482,837,2.855,838,4.154,839,4.154,840,4.154,841,2.855,842,2.648,843,3.552,844,4.258,845,2.648,846,2.648,847,2.648,848,2.345,849,2.648,850,2.648,851,3.132,852,3.552,853,2.648,854,2.648,855,2.855,856,2.855,857,2.855,858,2.482]],["title/classes/EmailConfirmationEmail.html",[22,0.145,859,3.238]],["body/classes/EmailConfirmationEmail.html",[3,0.064,4,0.064,5,0.044,9,0.171,10,0.009,21,0.075,22,0.155,23,1.998,24,1.929,25,1.473,27,0.005,28,0.006,29,0.005,35,0.41,36,1.621,41,0.665,43,1.069,44,0.994,45,0.383,46,0.946,48,1.83,49,1.47,63,1.83,72,2.656,117,2.603,125,0.946,325,1.099,398,2.262,586,0.879,614,3.244,654,2.455,768,3.341,779,4.499,780,4.717,781,4.717,795,3.064,796,2.91,797,3.244,798,4.093,799,4.093,800,3.064,803,3.244,804,3.731,807,3.17,809,3.244,859,4.647,860,6.92,861,4.093,862,4.643,863,4.643,864,5.656,865,4.643,866,4.643,867,4.643,868,6.235,869,6.235,870,6.235,871,4.093,872,3.731,873,3.064,874,4.643,875,4.643]],["title/classes/File.html",[5,0.041,22,0.145]],["body/classes/File.html",[3,0.043,4,0.043,5,0.064,9,0.172,10,0.01,21,0.075,22,0.156,27,0.003,28,0.005,29,0.003,33,0.979,35,0.275,37,0.915,41,0.707,45,0.668,49,1.106,54,1.068,56,1.097,63,1.219,64,3.98,117,1.957,131,2.519,157,1.475,176,2.681,181,2.383,241,4.986,266,4.024,296,1.028,298,2.802,325,1.023,420,3.19,484,2.211,485,3.095,518,2.867,530,2.867,532,1.708,586,0.589,603,4.219,629,3.751,681,3.933,813,3.94,814,3.371,816,3.371,818,3.275,820,3.275,821,5.129,825,3.275,827,5.279,831,5.279,832,2.802,833,2.175,836,2.175,844,3.275,876,2.501,877,4.703,878,2.585,879,4.971,880,3.94,881,4.202,882,4.531,883,3.225,884,4.971,885,3.113,886,2.744,887,4.687,888,3.113,889,2.744,890,3.113,891,3.113,892,3.113,893,3.113,894,3.113,895,3.113,896,3.113,897,3.113,898,3.113,899,3.113,900,4.132,901,2.744,902,1.951,903,2.744,904,2.501,905,4.677,906,2.32,907,2.744,908,3.113,909,4.132,910,3.113,911,2.744,912,2.744,913,2.501,914,3.113,915,4.687,916,2.501]],["title/classes/FileDto.html",[22,0.145,877,3.036]],["body/classes/FileDto.html",[3,0.068,4,0.068,5,0.047,9,0.134,10,0.009,21,0.079,22,0.215,27,0.005,28,0.007,29,0.005,35,0.433,41,0.759,45,0.708,131,1.68,181,3.284,296,1.416,325,1.087,420,3.907,484,2.547,485,3.545,518,3.675,586,0.927,681,4.818,814,4.321,816,4.321,877,4.513,878,3.314,879,6.372,880,5.051,881,5.387,883,4.135,902,3.069,917,4.315,918,4.895,919,4.895,920,4.895,921,5.808,922,4.895,923,4.895,924,4.895,925,4.895,926,4.895,927,4.895]],["title/interfaces/FileMetadata.html",[290,0.783,707,2.867]],["body/interfaces/FileMetadata.html",[3,0.081,4,0.081,5,0.056,10,0.009,21,0.094,27,0.006,28,0.008,29,0.006,35,0.519,45,0.677,290,1.057,292,2.014,296,1.59,325,1.155,707,4.787,878,3.77,928,4.717,929,5.175,930,7.248,931,7.248,932,6.607]],["title/classes/FileNotFound.html",[22,0.145,643,2.597]],["body/classes/FileNotFound.html",[3,0.069,4,0.069,5,0.047,9,0.137,10,0.009,12,0.811,21,0.124,22,0.258,27,0.005,28,0.007,29,0.005,33,1.678,35,0.44,41,0.44,43,1.147,44,1.066,45,0.41,46,1.015,61,1.327,125,1.331,181,2.532,316,4.312,325,0.99,327,2.734,347,3.905,401,2.734,484,1.755,493,3.585,498,2.734,586,0.943,632,3.287,633,3.48,634,3.905,635,3.712,637,3.712,638,4.426,639,3.712,640,2.978,641,2.734,642,4.095,643,3.905,644,4.869,645,2.734,646,3.48,647,3.287,648,3.48,649,3.712,650,3.712,651,3.712,652,3.712,653,4.565,654,1.961,655,3.712,656,3.712,657,3.712,658,3.48,659,3.712,660,3.712,661,3.287,662,3.712,663,3.712,933,4.981]],["title/classes/FileTooLarge.html",[22,0.145,934,2.485]],["body/classes/FileTooLarge.html",[3,0.068,4,0.068,5,0.047,9,0.135,10,0.01,12,0.801,21,0.132,22,0.274,27,0.005,28,0.007,29,0.005,33,1.75,41,0.435,43,1.133,44,1.054,45,0.534,46,1.003,125,1.675,325,0.927,586,0.932,641,2.702,645,2.702,878,2.973,934,3.708,935,3.086,936,4.784,937,4.279,938,4.923,939,3.794,940,4.064,941,3.25,942,2.816,943,3.25,944,3.296,945,2.816,946,4.784,947,4.784,948,3.25,949,2.816,950,2.816,951,3.25,952,2.816,953,3.25,954,3.25,955,3.25]],["title/controllers/FilesController.html",[0,1.992,956,3.238]],["body/controllers/FilesController.html",[0,1.26,2,1.26,3,0.038,4,0.038,5,0.05,7,1.813,9,0.216,10,0.01,11,1.92,12,0.447,21,0.044,22,0.092,24,1.819,25,1.866,27,0.003,28,0.004,29,0.003,34,1.642,35,0.243,36,1.108,37,1.981,41,0.52,43,1.354,44,1.259,45,0.485,46,1.199,48,1.529,49,1.713,54,2.018,56,2.072,57,3.493,61,1.135,63,1.357,70,5.412,71,3.882,78,1.45,81,2.56,125,0.56,131,2.018,146,3.12,153,2.547,154,1.572,163,1.397,251,1.642,256,2.721,259,2.986,325,0.954,326,3.228,354,3.176,355,2.986,357,2.048,358,2.048,375,3.445,376,2.048,377,2.048,384,2.048,387,1.26,431,2.977,450,2.048,469,2.977,484,2.685,518,1.397,643,1.642,653,2.977,699,2.208,701,2.048,736,1.722,753,2.208,754,2.208,806,2.208,877,1.92,878,1.26,882,4.194,883,1.572,903,2.422,905,3.176,944,2.99,956,3.176,957,2.422,958,5.22,959,2.747,960,2.747,961,2.747,962,2.747,963,2.747,964,2.747,965,2.747,966,4.383,967,2.747,968,2.747,969,2.747,970,2.747,971,2.747,972,2.422,973,2.547,974,2.422,975,2.747,976,2.747,977,3.424,978,2.747,979,2.747,980,2.547,981,2.208,982,2.422,983,2.747,984,2.747,985,2.747,986,5.22,987,2.747,988,2.747,989,2.747,990,2.747,991,2.747,992,2.747,993,2.747,994,2.747,995,2.747,996,2.747,997,2.747,998,3.756,999,2.422,1000,2.747,1001,2.422,1002,2.747,1003,2.747,1004,2.747,1005,2.747,1006,2.747,1007,2.747,1008,2.208,1009,2.747,1010,2.747,1011,2.747,1012,2.747,1013,2.747,1014,2.747,1015,4.261,1016,2.747,1017,2.747,1018,2.422,1019,2.747,1020,2.422,1021,2.747,1022,2.747,1023,2.747,1024,2.422,1025,2.208,1026,2.747,1027,2.422,1028,2.747,1029,2.747]],["title/modules/FilesModule.html",[83,1.278,142,2.723]],["body/modules/FilesModule.html",[2,2.629,3,0.057,4,0.057,5,0.055,9,0.23,10,0.01,12,0.669,21,0.066,22,0.137,27,0.004,28,0.006,29,0.004,44,1.227,83,1.942,85,2.015,86,2.088,87,2.254,88,2.254,89,2.254,90,3.625,91,3.625,96,4.455,97,3.146,98,1.572,99,2.254,101,3.146,116,2.87,142,5.403,153,4.495,154,2.349,156,3.061,157,1.947,164,3.061,219,3.3,246,2.711,249,3.146,250,3.594,251,3.427,274,3.061,286,3.3,287,3.3,325,0.525,578,2.455,749,2.575,832,2.455,906,4.273,944,2.088,956,4.922,973,5.114,974,3.621,1030,3.621,1031,3.621,1032,3.621,1033,3.621,1034,4.962,1035,5.442,1036,4.107,1037,5.054,1038,4.107,1039,4.107,1040,3.3,1041,3.621,1042,3.621,1043,3.3,1044,4.107,1045,3.621,1046,3.061,1047,3.621]],["title/injectables/FilesProcessor.html",[30,1.344,1035,3.036]],["body/injectables/FilesProcessor.html",[3,0.05,4,0.05,5,0.034,9,0.197,10,0.009,12,0.589,21,0.058,22,0.121,24,1.621,25,2.274,27,0.004,28,0.005,29,0.004,30,1.621,31,1.716,35,0.32,36,1.362,37,1.812,41,0.66,43,1.72,44,1.599,45,0.616,46,1.523,48,1.863,49,1.236,54,1.798,81,3.312,107,4.228,110,2.164,125,1.068,131,2.317,146,3.683,163,3.132,249,1.987,325,0.788,578,2.164,592,1.84,716,2.698,980,4.037,981,2.909,1008,2.909,1035,3.662,1048,3.191,1049,4.62,1050,4.62,1051,4.62,1052,5.241,1053,4.62,1054,2.909,1055,5.426,1056,3.62,1057,4.62,1058,3.62,1059,4.62,1060,5.43,1061,3.62,1062,4.62,1063,7.549,1064,5.43,1065,3.62,1066,5.241,1067,3.62,1068,3.62,1069,4.62,1070,5.43,1071,3.62,1072,2.909,1073,3.191,1074,3.62,1075,3.62,1076,3.62,1077,3.191,1078,5.952,1079,5.952,1080,2.698,1081,4.62,1082,3.191,1083,3.191,1084,3.62,1085,3.62,1086,5.241,1087,3.62,1088,3.191,1089,3.191,1090,2.389,1091,3.191,1092,3.191,1093,3.62]],["title/injectables/FilesService.html",[30,1.344,973,2.597]],["body/injectables/FilesService.html",[3,0.041,4,0.041,5,0.077,9,0.198,10,0.009,12,0.481,21,0.048,22,0.099,24,1.394,25,1.431,27,0.003,28,0.005,29,0.003,30,1.394,31,1.401,35,0.261,36,1.172,37,2.486,41,0.637,43,1.66,44,1.543,45,0.628,46,1.47,48,1.803,49,1.89,54,2.614,56,2.154,60,2.067,61,1.456,63,1.711,64,1.356,110,1.767,125,0.919,157,1.401,304,1.356,325,1.122,355,2.579,484,2.541,518,4.205,532,1.623,542,2.606,573,4.912,574,4.817,577,2.376,578,1.767,582,2.606,643,1.767,719,3.974,739,2.826,878,1.356,880,2.066,881,3.36,882,3.623,883,1.691,905,4.072,944,2.292,973,2.695,982,2.606,999,3.974,1024,2.606,1025,3.623,1027,3.974,1040,2.376,1094,2.606,1095,3.974,1096,3.974,1097,4.508,1098,2.956,1099,4.912,1100,2.956,1101,4.508,1102,3.623,1103,2.956,1104,2.956,1105,3.974,1106,2.956,1107,4.508,1108,2.956,1109,4.508,1110,2.956,1111,4.508,1112,2.956,1113,2.376,1114,2.956,1115,2.606,1116,2.956,1117,2.956,1118,2.956,1119,2.956,1120,2.956,1121,2.956,1122,4.508,1123,4.508,1124,4.508,1125,2.956,1126,2.956,1127,4.508,1128,2.956]],["title/classes/ForgotPasswordDto.html",[22,0.145,318,3.238]],["body/classes/ForgotPasswordDto.html",[3,0.08,4,0.08,5,0.055,9,0.197,10,0.009,21,0.092,22,0.239,27,0.006,28,0.007,29,0.006,35,0.508,41,0.508,131,1.973,256,1.825,296,1.57,318,5.338,387,2.637,398,2.396,586,1.089,592,3.965,601,4.097,602,4.097,604,2.924,606,3.157,612,5.45,613,5.755,614,5.005,615,4.622,616,3.605,618,4.622,620,4.287,1129,6.314,1130,5.752]],["title/classes/GoogleCloudEngine.html",[22,0.145,1131,3.036]],["body/classes/GoogleCloudEngine.html",[3,0.058,4,0.058,5,0.04,9,0.184,10,0.009,21,0.094,22,0.141,23,1.816,24,2.237,25,2.126,27,0.004,28,0.006,29,0.004,33,0.881,35,0.373,36,1.518,37,1.97,41,0.671,43,1.664,44,1.547,45,0.596,46,1.474,48,1.741,49,1.377,54,1.447,56,1.487,61,1.124,63,1.518,117,2.439,125,0.86,163,2.969,244,2.413,290,0.76,296,1.281,301,3.341,304,2.678,325,1.079,355,3.341,484,2.361,530,2.145,586,0.799,703,2.413,722,4.005,725,4.693,726,4.693,727,3.39,734,4.081,736,4.199,737,4.081,739,3.661,742,4.422,743,2.784,744,2.948,1131,4.081,1132,5.853,1133,3.144,1134,5.906,1135,5.052,1136,5.841,1137,5.149,1138,4.219,1139,4.219,1140,4.219,1141,3.39,1142,3.39,1143,3.144,1144,3.719,1145,3.719,1146,3.719,1147,3.719]],["title/interfaces/GoogleCloudEngineOptions.html",[290,0.783,1135,3.036]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.072,4,0.072,5,0.049,9,0.203,10,0.009,21,0.107,22,0.172,23,2.221,24,2.068,25,1.638,27,0.005,28,0.007,29,0.005,33,1.396,35,0.456,37,1.518,45,0.425,49,1.217,54,1.771,56,1.819,61,1.375,63,1.738,117,2.155,163,3.399,290,0.93,292,1.771,296,1.466,301,4.242,304,2.367,325,1.065,703,2.952,722,3.997,734,3.606,736,4.191,737,3.606,739,3.235,742,4.413,743,3.407,744,3.606,1131,3.606,1132,3.847,1133,3.847,1134,4.55,1135,5.182,1137,4.55,1141,4.147,1142,4.147,1143,3.847,1144,6.915,1145,4.55,1146,4.55,1147,4.55]],["title/controllers/HealthController.html",[0,1.992,1148,3.238]],["body/controllers/HealthController.html",[0,2.164,2,2.164,3,0.065,4,0.065,5,0.045,7,3.115,9,0.208,10,0.01,12,0.768,21,0.076,22,0.157,24,2.512,25,2.577,27,0.005,28,0.007,29,0.005,35,0.417,36,1.639,41,0.417,48,1.227,49,1.915,63,1.227,122,4.449,125,0.962,131,1.619,153,3.768,154,2.7,182,4.698,251,2.821,749,2.958,1148,4.698,1149,4.161,1150,6.304,1151,7.575,1152,4.72,1153,4.72,1154,6.304,1155,6.304,1156,6.304,1157,4.72,1158,6.304,1159,4.72,1160,6.304,1161,6.304,1162,3.792,1163,4.72,1164,4.72,1165,4.72,1166,4.72,1167,4.72,1168,4.72,1169,4.72,1170,4.72,1171,4.72,1172,4.72,1173,4.72,1174,4.72,1175,4.72,1176,4.161,1177,4.72,1178,4.72]],["title/modules/HealthModule.html",[83,1.278,143,3.036]],["body/modules/HealthModule.html",[2,3.458,3,0.087,4,0.087,5,0.059,9,0.222,10,0.009,12,1.019,21,0.101,22,0.209,27,0.006,28,0.008,29,0.006,83,2.218,85,3.069,101,3.434,143,5.269,1148,6.033,1162,5.028,1179,6.257,1180,7.541,1181,6.257]],["title/interfaces/IRequest.html",[51,2.723,290,0.783]],["body/interfaces/IRequest.html",[3,0.079,4,0.079,5,0.054,9,0.213,10,0.009,21,0.092,27,0.006,28,0.007,29,0.006,33,1.49,35,0.505,45,0.588,46,1.454,51,4.471,78,3.015,256,2.781,290,1.029,292,1.96,296,1.564,326,4.268,327,4.469,328,5.105,383,4.258,387,2.62,485,4.268,1182,5.037]],["title/interfaces/ISession.html",[290,0.783,328,2.723]],["body/interfaces/ISession.html",[3,0.075,4,0.075,5,0.051,10,0.009,21,0.087,27,0.006,28,0.007,29,0.006,33,1.129,35,0.478,45,0.706,290,0.974,292,1.855,296,1.51,325,1.12,328,4.318,347,4.772,360,5.268,363,6.414,420,3.854,424,4.344,426,4.766,428,4.344,485,4.16,518,4.058,1102,5.535,1183,4.766,1184,7.982,1185,5.406,1186,5.406,1187,5.406,1188,5.406]],["title/classes/IncorrectPassword.html",[22,0.145,1189,2.597]],["body/classes/IncorrectPassword.html",[3,0.072,4,0.072,5,0.049,9,0.142,10,0.01,12,0.845,21,0.131,22,0.272,27,0.005,28,0.007,29,0.005,33,1.742,41,0.459,50,4.867,98,1.987,125,1.729,310,3.255,320,2.243,400,2.97,470,2.97,471,3.104,493,3.684,495,3.427,497,2.97,498,2.85,537,3.104,538,3.104,586,0.983,654,2.044,807,3.412,939,3.181,1189,4.013,1190,3.427,1191,5.193,1192,3.628,1193,3.628,1194,4.207,1195,3.628,1196,3.255,1197,3.255,1198,3.628,1199,3.628]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.145,1200,3.491]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.069,4,0.069,5,0.047,9,0.18,10,0.009,12,0.813,21,0.08,22,0.167,23,2.15,24,1.545,27,0.005,28,0.007,29,0.005,35,0.442,36,1.701,41,0.578,43,1.507,44,1.401,45,0.539,46,1.334,48,1.299,56,2.306,70,4.014,71,3.297,78,2.636,81,2.451,107,3.592,117,2.733,125,1.018,146,3.913,274,5.44,469,5.413,586,0.946,592,2.54,642,4.576,654,1.967,750,3.297,752,5.101,1001,4.404,1054,4.014,1055,6.225,1200,5.259,1201,6.435,1202,4.404,1203,7.3,1204,4.995,1205,6.545,1206,7.747,1207,4.995,1208,4.995,1209,4.995,1210,6.545,1211,4.995,1212,4.995,1213,4.995,1214,4.995,1215,4.014,1216,4.995]],["title/classes/InvalidCredentials.html",[22,0.145,537,2.597]],["body/classes/InvalidCredentials.html",[3,0.072,4,0.072,5,0.049,9,0.142,10,0.01,12,0.845,21,0.131,22,0.272,27,0.005,28,0.007,29,0.005,33,1.742,41,0.459,50,4.867,98,1.987,125,1.729,310,3.255,320,2.243,400,2.97,470,2.97,471,3.104,493,3.684,495,3.427,497,2.97,498,2.85,537,4.013,538,3.104,586,0.983,654,2.044,807,3.412,939,3.181,1189,3.104,1190,3.427,1192,3.628,1193,3.628,1194,4.207,1195,3.628,1196,3.255,1197,3.255,1198,3.628,1199,3.628,1217,5.193]],["title/classes/InvalidEmailConfirmationLink.html",[22,0.145,1218,3.036]],["body/classes/InvalidEmailConfirmationLink.html",[3,0.081,4,0.081,5,0.055,9,0.16,10,0.009,12,0.949,21,0.116,22,0.241,27,0.006,28,0.007,29,0.006,33,1.639,41,0.515,125,1.672,256,1.85,398,1.632,586,1.104,654,2.844,807,4.17,873,3.848,939,3.888,1194,4.527,1196,4.527,1197,4.527,1218,5.047,1219,4.685,1220,5.83,1221,4.074,1222,3.848]],["title/classes/InvalidPasswordResetLink.html",[22,0.145,538,2.597]],["body/classes/InvalidPasswordResetLink.html",[3,0.072,4,0.072,5,0.049,9,0.142,10,0.01,12,0.845,21,0.131,22,0.272,27,0.005,28,0.007,29,0.005,33,1.742,41,0.459,50,4.7,98,1.987,125,1.729,310,3.255,320,2.243,400,2.97,470,2.97,471,3.104,493,3.684,495,3.427,497,2.97,498,2.85,537,3.104,538,4.013,586,0.983,654,2.044,807,3.412,939,3.525,1189,3.104,1190,3.427,1192,3.628,1193,3.628,1194,4.207,1195,3.628,1196,3.255,1197,3.255,1198,3.628,1199,3.628,1223,5.193]],["title/classes/InvalidUserActivationLink.html",[22,0.145,1221,3.036]],["body/classes/InvalidUserActivationLink.html",[3,0.081,4,0.081,5,0.055,9,0.16,10,0.009,12,0.949,21,0.116,22,0.241,27,0.006,28,0.007,29,0.006,33,1.639,41,0.515,125,1.672,256,1.85,398,1.632,586,1.104,654,2.844,807,4.17,873,3.848,939,3.888,1194,4.527,1196,4.527,1197,4.527,1218,4.074,1219,4.685,1221,5.047,1222,3.848,1224,5.83]],["title/classes/LoginDto.html",[22,0.145,323,3.238]],["body/classes/LoginDto.html",[3,0.075,4,0.075,5,0.052,9,0.19,10,0.009,21,0.087,22,0.231,27,0.006,28,0.007,29,0.006,35,0.481,41,0.672,45,0.448,131,2.609,256,1.726,296,1.516,320,2.76,323,5.154,325,0.885,387,2.495,412,4.052,586,1.03,592,3.516,601,4.577,602,4.577,604,2.766,606,3.796,616,4.335,622,4.832,631,3.802,1225,4.796,1226,5.666,1227,5.441,1228,4.796,1229,5.441,1230,5.441,1231,4.796]],["title/interfaces/MD5Passthrough.html",[290,0.783,1232,3.238]],["body/interfaces/MD5Passthrough.html",[3,0.072,4,0.072,5,0.05,9,0.185,10,0.009,21,0.108,27,0.005,28,0.007,29,0.005,35,0.46,45,0.554,56,2.625,61,1.387,63,1.748,290,0.938,292,1.787,296,1.475,325,0.86,703,2.979,710,3.438,745,3.438,1232,5.551,1233,4.185,1234,7.184,1235,7.095,1236,7.448,1237,6.566,1238,5.404,1239,4.185,1240,4.592,1241,5.929,1242,4.592,1243,4.592,1244,5.404,1245,4.185,1246,4.592,1247,3.639,1248,4.592,1249,4.592,1250,4.592,1251,4.592]],["title/modules/MailerModule.html",[83,1.278,144,3.036]],["body/modules/MailerModule.html",[3,0.039,4,0.039,5,0.027,9,0.22,10,0.01,12,0.459,21,0.045,22,0.094,25,2.044,27,0.003,28,0.005,29,0.003,36,0.733,37,1.279,41,0.527,43,1.373,44,1.567,45,0.491,46,1.215,48,1.55,49,0.665,63,1.769,83,2.154,85,1.383,86,1.434,87,1.548,88,1.548,89,1.548,90,3.535,91,2.912,97,2.386,98,1.079,99,1.548,101,2.386,144,5.457,153,3.172,154,1.613,156,2.102,157,1.337,164,2.102,219,2.266,249,2.912,250,3.326,251,1.686,274,2.102,286,2.266,287,2.266,288,5.469,289,1.97,302,2.599,304,3.121,312,2.102,484,0.994,512,4.969,545,1.488,557,1.768,578,1.686,810,1.97,832,3.172,850,3.24,1037,3.833,1042,2.486,1043,2.266,1252,2.486,1253,2.486,1254,2.486,1255,4.756,1256,2.82,1257,6.624,1258,2.486,1259,3.833,1260,5.719,1261,2.82,1262,5.679,1263,2.486,1264,3.833,1265,2.82,1266,3.833,1267,3.738,1268,2.82,1269,5.679,1270,2.486,1271,3.833,1272,2.82,1273,4.264,1274,4.444,1275,2.486,1276,2.82,1277,2.82,1278,4.678,1279,3.038,1280,2.486,1281,2.486,1282,2.486,1283,3.24,1284,2.486,1285,2.266,1286,1.97,1287,3.24,1288,2.486,1289,2.486,1290,2.82,1291,2.82,1292,2.82,1293,2.82,1294,4.678,1295,3.494,1296,2.486,1297,2.486,1298,3.833,1299,4.678,1300,3.833,1301,4.678,1302,2.486,1303,2.486,1304,2.82]],["title/interfaces/MailerModuleAsyncOptions.html",[290,0.783,1260,3.238]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.072,4,0.072,5,0.05,9,0.205,10,0.009,21,0.084,27,0.005,28,0.007,29,0.005,33,1.407,35,0.462,37,1.537,45,0.728,46,1.755,49,1.232,83,2.194,249,4.325,250,4.94,289,5.507,290,0.941,292,1.793,294,3.448,295,5.94,296,1.478,297,6.947,298,4.028,299,4.606,300,4.606,302,3.123,304,2.396,306,4.606,511,5.022,1260,5.022,1267,4.224,1279,3.651,1280,4.606,1305,3.894]],["title/interfaces/MailerOptions.html",[290,0.783,1267,2.723]],["body/interfaces/MailerOptions.html",[3,0.088,4,0.088,5,0.061,9,0.175,10,0.009,21,0.102,27,0.007,28,0.008,29,0.007,33,1.331,72,3.646,83,1.875,290,1.374,292,2.187,294,4.207,606,3.498,1267,4.78,1305,4.75,1306,6.374,1307,6.374,1308,6.374,1309,6.374,1310,6.374,1311,6.374,1312,5.619,1313,6.374,1314,6.374]],["title/interfaces/MailerOptionsFactory.html",[290,0.783,1279,3.036]],["body/interfaces/MailerOptionsFactory.html",[3,0.084,4,0.084,5,0.058,9,0.167,10,0.009,21,0.098,27,0.006,28,0.008,29,0.006,35,0.537,36,1.926,41,0.537,48,1.58,49,1.748,83,2.351,290,1.095,292,2.086,302,3.634,304,3.398,511,4.531,1267,5.011,1279,5.178,1305,5.523,1315,5.359,1316,8.322,1317,6.079]],["title/injectables/MailerProcessor.html",[30,1.344,1255,3.036]],["body/injectables/MailerProcessor.html",[3,0.029,4,0.029,5,0.02,9,0.218,10,0.01,12,0.346,21,0.034,22,0.071,24,1.734,25,2.29,27,0.002,28,0.004,29,0.002,30,1.074,31,1.008,35,0.188,36,0.903,37,2.396,41,0.662,43,1.661,44,1.544,45,0.595,46,1.471,48,1.876,49,1.737,54,2.351,61,0.925,81,2.495,83,0.625,98,1.329,107,3.484,110,1.271,117,0.887,125,0.708,131,2.272,146,2.633,244,1.216,249,1.167,256,1.397,296,0.762,302,1.271,304,2.019,320,2.01,325,0.563,398,2.06,530,1.081,578,1.271,580,2.791,592,1.081,779,1.271,780,1.332,781,1.332,786,1.584,795,1.403,802,3.79,859,1.584,873,2.292,1008,1.708,1049,3.062,1050,3.062,1051,3.062,1053,3.062,1054,1.708,1055,4.086,1057,3.062,1059,3.062,1060,3.882,1062,3.062,1063,7.741,1064,3.882,1069,3.062,1070,3.882,1072,1.708,1073,1.874,1077,1.874,1078,4.483,1079,4.483,1080,1.584,1081,4.483,1082,1.874,1083,1.874,1088,1.874,1089,1.874,1091,1.874,1092,1.874,1222,2.292,1255,2.427,1267,3.188,1274,1.584,1275,1.874,1278,1.874,1318,1.874,1319,4.404,1320,3.473,1321,5.303,1322,3.062,1323,3.062,1324,3.062,1325,3.062,1326,3.062,1327,2.126,1328,2.126,1329,3.473,1330,2.126,1331,2.126,1332,2.126,1333,2.126,1334,2.126,1335,3.473,1336,5.605,1337,2.126,1338,3.473,1339,2.126,1340,3.473,1341,2.126,1342,3.473,1343,2.126,1344,3.473,1345,2.126,1346,3.473,1347,3.062,1348,2.126,1349,2.126,1350,2.126,1351,2.126,1352,3.473,1353,1.584,1354,3.473,1355,1.584,1356,2.126,1357,1.584,1358,2.126,1359,1.216,1360,1.403,1361,1.403,1362,1.584,1363,5.605,1364,3.473,1365,1.584,1366,2.126,1367,1.584,1368,1.584,1369,2.126,1370,1.584,1371,2.126,1372,2.126,1373,2.126,1374,2.126,1375,5.605,1376,4.404,1377,2.126,1378,5.605,1379,3.473,1380,2.126,1381,2.126,1382,2.126,1383,2.126,1384,2.126,1385,2.126,1386,4.404,1387,2.126,1388,2.126,1389,2.126,1390,2.126,1391,2.126]],["title/injectables/MailerService.html",[30,1.344,512,2.723]],["body/injectables/MailerService.html",[3,0.033,4,0.033,5,0.023,9,0.205,10,0.01,12,0.387,21,0.038,22,0.079,24,2.137,25,2.192,27,0.002,28,0.004,29,0.002,30,1.177,31,1.128,35,0.21,36,0.989,37,2.513,41,0.66,43,1.682,44,1.564,45,0.602,46,1.489,48,1.852,49,1.919,54,2.444,56,1.676,61,1.267,63,1.236,98,1.456,110,1.423,125,0.776,153,3.248,154,1.362,157,1.128,244,1.362,251,2.275,256,2.678,296,0.834,320,1.815,325,0.811,387,1.091,398,1.065,431,3.323,512,2.386,518,3.381,530,1.21,532,1.306,535,2.512,536,1.774,557,1.492,573,4.365,576,4.192,577,1.913,578,1.423,581,2.098,611,3.138,768,2.638,791,2.659,802,2.836,810,1.663,848,3.138,864,1.913,873,2.512,1095,3.355,1099,5.871,1105,3.355,1113,1.913,1176,3.355,1222,2.512,1281,2.098,1282,2.098,1284,2.098,1285,1.913,1286,1.663,1288,2.098,1289,2.098,1322,3.355,1323,3.355,1324,3.355,1325,3.355,1326,3.355,1392,2.098,1393,4.755,1394,4.755,1395,3.806,1396,3.806,1397,2.098,1398,4.755,1399,4.755,1400,4.755,1401,3.806,1402,2.38,1403,2.38,1404,6.441,1405,2.38,1406,4.789,1407,3.806,1408,2.38,1409,3.806,1410,2.38,1411,3.806,1412,2.38,1413,3.806,1414,2.38,1415,3.806,1416,2.38,1417,3.806,1418,2.38,1419,3.806,1420,2.38,1421,2.38,1422,2.38,1423,2.38,1424,2.38,1425,2.38,1426,2.38,1427,2.38,1428,2.38,1429,2.38,1430,5.94,1431,5.94,1432,3.806,1433,5.432,1434,2.38,1435,2.38,1436,2.38,1437,2.38,1438,1.913,1439,2.38,1440,2.38,1441,2.38,1442,1.913,1443,2.38,1444,2.38]],["title/classes/MaxActiveUploadSessionsError.html",[22,0.145,647,2.867]],["body/classes/MaxActiveUploadSessionsError.html",[3,0.071,4,0.071,5,0.048,9,0.14,10,0.009,12,0.83,21,0.125,22,0.26,27,0.005,28,0.007,29,0.005,33,1.691,35,0.451,41,0.451,61,1.359,125,1.503,181,2.593,316,4.379,325,0.849,327,2.799,347,3.049,401,2.799,484,1.797,493,4.047,498,2.799,586,0.965,632,3.366,633,3.563,634,3.966,635,3.801,637,3.801,638,4.218,639,3.801,640,3.049,641,2.799,642,4.158,643,3.049,644,3.801,645,2.799,646,3.563,647,4.379,648,3.563,649,3.801,650,3.801,651,3.801,652,3.801,653,4.635,654,2.008,655,3.801,656,3.801,657,3.801,658,3.563,659,3.801,660,3.801,661,3.366,662,3.801,663,3.801,1445,5.1]],["title/classes/NoFilesUploaded.html",[22,0.145,942,2.485]],["body/classes/NoFilesUploaded.html",[3,0.07,4,0.07,5,0.048,9,0.138,10,0.01,12,0.82,21,0.133,22,0.276,27,0.005,28,0.007,29,0.005,33,1.76,41,0.445,45,0.415,125,1.717,325,0.645,586,0.954,641,2.766,645,2.766,878,2.311,934,2.883,935,3.159,936,4.345,937,3.326,939,3.921,940,4.126,941,3.326,942,3.766,943,3.326,944,3.347,945,2.883,946,4.839,947,4.839,948,3.326,949,2.883,950,2.883,951,3.326,952,2.883,953,3.326,954,3.326,955,3.326,1446,5.04]],["title/classes/PartialUserDto.html",[22,0.145,1447,3.238]],["body/classes/PartialUserDto.html",[3,0.058,4,0.058,5,0.04,8,3.816,9,0.159,10,0.009,21,0.067,22,0.193,27,0.004,28,0.006,29,0.004,33,1.207,35,0.367,41,0.763,45,0.712,76,7.557,131,2.682,296,1.268,320,1.932,325,1.046,398,2.113,412,2.836,420,3.379,484,2.037,485,3.173,586,0.787,681,4.167,768,2.567,814,3.456,815,3.816,816,3.456,902,2.606,921,6.571,1090,3.816,1447,4.309,1448,5.097,1449,3.665,1450,5.769,1451,4.646,1452,4.309,1453,4.157,1454,4.157,1455,4.157,1456,4.157,1457,4.157,1458,4.157,1459,4.157,1460,4.157,1461,4.157,1462,4.157,1463,4.157,1464,4.157,1465,4.157,1466,3.665]],["title/classes/PasswordChangedEmail.html",[22,0.145,1353,3.238]],["body/classes/PasswordChangedEmail.html",[3,0.066,4,0.066,5,0.045,9,0.173,10,0.009,21,0.076,22,0.158,23,2.037,24,1.953,25,1.502,27,0.005,28,0.007,29,0.005,35,0.418,36,1.642,41,0.67,43,1.089,44,1.013,45,0.39,46,0.965,48,1.848,49,1.489,63,1.848,98,1.811,117,2.637,125,0.965,320,2.375,325,1.103,398,1.989,586,0.896,654,1.863,768,3.367,779,4.534,780,4.754,781,4.754,788,3.803,789,4.172,790,4.172,791,4.967,792,4.172,793,4.172,794,4.172,795,3.124,796,2.967,797,3.307,800,3.124,801,5.567,802,4.707,803,3.307,804,3.803,805,4.172,806,3.803,807,2.406,808,4.172,809,3.307,1353,4.707,1467,6.349,1468,4.172,1469,4.733]],["title/classes/PasswordReset.html",[22,0.145,557,2.723]],["body/classes/PasswordReset.html",[3,0.053,4,0.053,5,0.037,9,0.201,10,0.009,21,0.088,22,0.128,27,0.004,28,0.006,29,0.004,33,1.142,35,0.339,41,0.648,45,0.604,56,1.353,61,1.023,63,0.998,64,3.909,72,3.127,82,2.683,131,2.184,157,1.82,241,3.608,259,2.196,296,1.199,325,0.888,388,2.295,389,2.534,420,3.874,446,4.147,518,3.237,530,1.952,532,2.107,545,2.885,546,3.82,557,3.427,586,0.727,603,4.348,629,4.147,813,4.449,814,3.806,815,4.202,816,3.806,818,2.683,820,3.82,821,4.847,824,5.574,825,3.82,827,4.847,830,3.82,831,4.847,832,3.268,833,2.683,834,2.534,835,3.085,836,2.683,837,3.085,838,4.393,839,4.393,840,4.393,841,3.085,842,2.862,844,3.82,845,2.862,846,2.862,847,2.862,848,2.534,849,2.862,853,2.862,854,2.862,855,3.085,856,3.085,857,3.085,858,2.683,1283,2.862,1470,5.679,1471,3.085,1472,3.84,1473,3.84,1474,3.84,1475,3.84,1476,3.84,1477,3.84,1478,3.385,1479,3.84]],["title/classes/PasswordResetEmail.html",[22,0.145,1355,3.238]],["body/classes/PasswordResetEmail.html",[3,0.065,4,0.065,5,0.044,9,0.172,10,0.009,21,0.075,22,0.156,23,2.009,24,1.936,25,1.481,27,0.005,28,0.006,29,0.005,35,0.413,36,1.627,41,0.667,43,1.075,44,0.999,45,0.385,46,0.951,48,1.835,49,1.476,63,1.835,72,2.67,98,2.701,117,2.613,125,0.951,176,2.67,320,2.359,325,1.1,398,1.975,586,0.884,614,3.262,654,1.838,768,3.349,779,4.509,780,4.727,781,4.727,795,3.081,796,2.926,797,3.262,800,3.081,803,3.262,807,3.181,809,3.262,871,4.115,872,3.751,1355,4.664,1438,5.672,1467,6.319,1468,4.115,1480,4.115,1481,4.668,1482,4.668,1483,4.668,1484,4.668,1485,4.668,1486,4.668,1487,6.258,1488,4.668,1489,4.115,1490,4.668]],["title/guards/RecaptchaGuard.html",[385,3.238,462,3.491]],["body/guards/RecaptchaGuard.html",[3,0.045,4,0.045,5,0.031,9,0.197,10,0.01,12,0.528,21,0.093,22,0.108,24,1.787,25,2.173,27,0.005,28,0.005,29,0.003,30,1.495,35,0.287,36,1.256,37,1.699,38,5.146,39,3.884,40,5.546,41,0.511,43,1.474,44,1.237,45,0.528,46,1.178,47,5.772,48,1.256,49,1.14,54,1.112,56,2.912,57,1.78,58,2.605,60,2.649,61,1.539,63,1.502,71,3.19,78,1.711,81,2.371,117,1.354,125,0.985,151,2.417,153,3.829,154,1.855,251,2.889,259,2.765,325,0.819,326,2.653,354,3.602,358,2.417,359,2.417,360,2.14,385,3.602,422,2.417,463,2.605,466,6.56,469,2.266,476,2.858,654,1.903,750,2.14,858,2.266,939,1.537,1080,2.417,1215,2.605,1226,5.353,1397,2.858,1491,2.605,1492,4.833,1493,5.778,1494,6.404,1495,3.242,1496,3.242,1497,3.242,1498,4.643,1499,4.833,1500,3.242,1501,4.833,1502,3.242,1503,2.605,1504,2.605,1505,2.858,1506,3.884,1507,2.858,1508,2.605,1509,2.858,1510,2.605,1511,2.858,1512,5.094,1513,3.242,1514,4.261,1515,3.242,1516,3.242,1517,3.242,1518,3.242,1519,3.242,1520,3.242,1521,3.242,1522,3.242,1523,3.242,1524,3.242,1525,4.833,1526,3.242,1527,3.242,1528,3.242,1529,3.242,1530,3.242,1531,3.242,1532,3.242,1533,3.242,1534,3.242,1535,3.242,1536,3.242,1537,3.242,1538,3.242,1539,3.242,1540,3.242,1541,3.242,1542,3.242,1543,3.242]],["title/classes/RegisterDto.html",[22,0.145,335,3.238]],["body/classes/RegisterDto.html",[3,0.062,4,0.062,5,0.043,9,0.167,10,0.009,21,0.072,22,0.203,27,0.005,28,0.006,29,0.005,35,0.396,41,0.656,45,0.37,131,2.545,256,1.423,296,1.335,320,2.735,325,0.779,335,4.539,387,2.056,398,2.239,412,3.805,586,0.849,591,5.369,592,4.38,594,3.953,595,3.953,596,5.369,597,4.894,598,5.529,600,3.603,601,4.437,602,4.437,603,2.811,604,2.28,605,3.953,606,3.796,607,3.953,612,4.833,613,4.894,614,4.256,615,3.603,616,3.818,618,3.603,624,4.539,625,3.603,629,2.681,630,4.894,631,3.133,1226,5.154,1228,3.953,1231,3.953,1544,3.953,1545,4.484,1546,4.484,1547,4.484,1548,4.484,1549,6.54,1550,4.484]],["title/classes/RenameFileDto.html",[22,0.145,966,3.238]],["body/classes/RenameFileDto.html",[3,0.083,4,0.083,5,0.07,9,0.201,10,0.009,21,0.096,22,0.244,27,0.006,28,0.008,29,0.006,35,0.526,41,0.526,61,1.949,131,2.042,296,1.604,586,1.127,592,3.026,601,4.185,602,4.185,604,3.026,606,3.267,616,3.731,622,4.159,878,3.354,905,5.903,966,5.452,1040,4.783,1115,5.247,1551,6.449,1552,5.247,1553,5.952]],["title/classes/ResetPasswordDto.html",[22,0.145,339,3.238]],["body/classes/ResetPasswordDto.html",[3,0.072,4,0.072,5,0.049,9,0.204,10,0.009,21,0.083,22,0.224,27,0.005,28,0.007,29,0.005,35,0.459,41,0.593,61,1.788,98,2.568,131,2.303,256,1.648,296,1.472,320,2.787,339,5.002,387,2.381,445,4.662,446,4.867,557,3.255,586,0.983,592,3.997,598,5.002,601,4.255,602,4.255,604,2.64,606,2.85,620,3.87,622,4.69,623,4.578,624,5.002,625,5.393,629,3.104,630,4.173,631,3.628,1285,4.173,1470,3.87,1554,6.557,1555,5.193,1556,5.193,1557,5.193,1558,5.193,1559,5.193]],["title/interfaces/SendEmailChangedJob.html",[290,0.783,1362,3.238]],["body/interfaces/SendEmailChangedJob.html",[3,0.086,4,0.086,5,0.059,9,0.17,10,0.009,21,0.099,27,0.006,28,0.008,29,0.006,33,1.565,35,0.547,45,0.51,290,1.115,292,2.123,296,1.643,325,1.031,398,2.096,791,5.85,1359,4.609,1360,4.085,1361,4.085,1362,5.583,1560,4.085,1561,4.973]],["title/interfaces/SendEmailConfirmationJob.html",[290,0.783,1365,3.238]],["body/interfaces/SendEmailConfirmationJob.html",[3,0.086,4,0.086,5,0.059,9,0.17,10,0.009,21,0.099,27,0.006,28,0.008,29,0.006,33,1.565,35,0.547,45,0.51,290,1.115,292,2.123,296,1.643,325,1.031,398,2.096,864,6.728,1359,4.609,1360,4.085,1361,4.085,1365,5.583,1560,4.085,1562,5.456]],["title/interfaces/SendEmailJob.html",[290,0.783,1359,2.485]],["body/interfaces/SendEmailJob.html",[3,0.085,4,0.085,5,0.058,10,0.009,21,0.098,27,0.006,28,0.008,29,0.006,35,0.541,45,0.661,290,1.103,292,2.101,296,1.632,325,1.112,398,1.713,481,6.217,768,3.704,1359,4.257,1563,5.397,1564,5.397,1565,7.069]],["title/interfaces/SendPasswordChangedJob.html",[290,0.783,1367,3.238]],["body/interfaces/SendPasswordChangedJob.html",[3,0.086,4,0.086,5,0.059,9,0.17,10,0.009,21,0.099,27,0.006,28,0.008,29,0.006,33,1.565,35,0.547,45,0.51,290,1.115,292,2.123,296,1.643,320,2.068,325,1.031,398,1.732,791,5.85,1359,4.609,1360,4.085,1361,4.085,1367,5.583,1560,4.085,1561,4.973]],["title/interfaces/SendPasswordResetJob.html",[290,0.783,1368,3.238]],["body/interfaces/SendPasswordResetJob.html",[3,0.086,4,0.086,5,0.059,9,0.17,10,0.009,21,0.099,27,0.006,28,0.008,29,0.006,33,1.565,35,0.547,45,0.51,290,1.115,292,2.123,296,1.643,320,2.068,325,1.031,398,1.732,1359,4.609,1360,4.085,1361,4.085,1368,5.583,1438,6.728,1560,4.085,1566,5.456]],["title/interfaces/SendUserActivationJob.html",[290,0.783,1370,3.238]],["body/interfaces/SendUserActivationJob.html",[3,0.086,4,0.086,5,0.059,9,0.17,10,0.009,21,0.099,27,0.006,28,0.008,29,0.006,33,1.565,35,0.547,45,0.51,256,1.964,290,1.115,292,2.123,296,1.643,325,1.031,398,1.732,1359,4.609,1360,4.085,1361,4.085,1370,5.583,1442,6.728,1560,4.085,1567,5.456]],["title/interfaces/SessionDto.html",[290,0.783,373,3.238]],["body/interfaces/SessionDto.html",[3,0.087,4,0.087,5,0.06,9,0.172,10,0.009,21,0.101,27,0.007,28,0.008,29,0.007,33,1.578,35,0.555,45,0.517,290,1.131,292,2.155,296,1.657,328,5.082,373,5.633,383,4.68,460,7.417,681,5.082,1568,5.536]],["title/controllers/SettingsController.html",[0,1.992,1569,3.238]],["body/controllers/SettingsController.html",[0,1.066,2,1.066,3,0.032,4,0.032,5,0.045,7,1.535,9,0.216,10,0.01,11,1.625,12,0.378,21,0.037,22,0.078,24,1.448,25,1.485,27,0.002,28,0.004,29,0.002,34,1.39,35,0.206,36,0.971,37,1.377,41,0.605,43,1.577,44,1.513,45,0.582,46,1.396,48,1.781,49,1.876,54,1.281,56,1.889,57,3.222,63,1.781,64,2.146,78,1.227,122,2.341,125,0.474,131,2.35,160,1.733,161,1.733,163,1.182,176,1.33,182,2.784,256,2.805,266,1.39,320,1.248,325,0.802,326,2.942,354,3.489,357,1.733,358,1.733,361,2.05,369,2.05,375,3.875,376,1.733,377,1.733,384,1.733,387,1.066,398,0.651,400,1.33,431,1.625,445,2.341,446,3.204,450,4.672,484,0.819,518,1.182,585,3.995,588,3.489,590,1.733,609,3.995,611,1.535,619,3.995,621,1.868,624,1.733,699,1.868,700,1.733,701,1.733,702,2.05,710,1.535,712,3.995,878,1.066,880,1.625,881,1.733,883,1.33,932,3.001,940,1.457,944,1.899,972,2.05,973,2.233,980,2.233,981,1.868,1018,2.05,1020,2.05,1222,1.535,1247,1.625,1452,3.489,1569,2.784,1570,2.05,1571,3.735,1572,3.735,1573,3.001,1574,3.762,1575,3.001,1576,3.762,1577,3.293,1578,3.293,1579,3.735,1580,2.325,1581,2.325,1582,3.735,1583,2.325,1584,2.325,1585,3.735,1586,2.325,1587,2.325,1588,2.325,1589,2.325,1590,2.325,1591,2.325,1592,3.735,1593,2.325,1594,2.325,1595,2.325,1596,2.325,1597,2.325,1598,2.05,1599,2.325,1600,3.735,1601,2.325,1602,2.325,1603,2.325,1604,2.325,1605,2.325,1606,2.325,1607,2.325,1608,2.325,1609,2.325,1610,4.127,1611,2.465,1612,2.05,1613,4.681,1614,2.325,1615,2.325,1616,2.325,1617,2.325,1618,2.05,1619,2.325,1620,2.325,1621,2.325,1622,2.325,1623,2.325,1624,2.325,1625,3.735,1626,2.325,1627,2.325,1628,2.325,1629,2.325,1630,3.735,1631,2.325,1632,2.325,1633,2.325,1634,2.325,1635,2.325,1636,2.325,1637,2.325,1638,2.325,1639,2.325,1640,2.325,1641,2.325,1642,2.325,1643,2.325,1644,3.735,1645,2.325,1646,2.325,1647,2.325,1648,2.325,1649,2.325,1650,2.325,1651,2.325,1652,2.325,1653,2.325,1654,2.325,1655,2.325,1656,2.325]],["title/modules/SettingsModule.html",[83,1.278,145,3.036]],["body/modules/SettingsModule.html",[2,2.763,3,0.061,4,0.061,5,0.042,9,0.228,10,0.01,12,0.719,21,0.071,22,0.147,27,0.005,28,0.006,29,0.005,83,2.018,85,2.166,86,2.245,87,2.423,88,2.423,89,2.423,90,3.765,91,3.765,96,4.555,97,3.307,98,1.689,99,2.423,101,3.307,116,3.085,140,5.256,142,4.992,145,6.158,153,4.101,154,2.525,167,3.892,171,3.548,246,2.914,249,2.423,250,2.767,251,2.639,325,0.565,749,2.767,1034,5.092,1041,3.892,1045,3.892,1046,3.29,1047,3.892,1569,5.113,1611,5.715,1612,3.892,1657,3.892,1658,4.415,1659,3.892,1660,3.892,1661,4.415,1662,4.415]],["title/injectables/SettingsService.html",[30,1.344,1611,2.867]],["body/injectables/SettingsService.html",[3,0.033,4,0.033,5,0.022,9,0.2,10,0.01,12,0.383,17,2.646,18,1.473,21,0.038,22,0.078,24,1.668,25,1.712,26,2.697,27,0.002,28,0.004,29,0.002,30,1.165,31,1.114,35,0.208,36,0.979,37,2.477,41,0.627,43,1.633,44,1.518,45,0.585,46,1.446,48,1.788,49,1.881,54,2.89,56,2.22,60,3.337,61,1.939,63,0.979,125,0.768,256,2.803,259,1.345,270,3.028,320,0.786,325,1.078,366,3.381,387,1.078,398,1.054,431,1.643,445,2.956,446,3.225,455,2.072,472,2.072,483,2.487,484,1.328,497,2.155,511,3.514,512,3.381,518,1.195,534,2.072,535,2.487,536,1.752,551,2.072,556,2.072,561,2.072,590,2.808,611,2.487,621,1.889,764,1.473,768,1.044,770,1.405,776,1.473,873,2.487,944,2.397,973,3.225,1189,2.819,1218,3.769,1221,3.295,1222,3.56,1573,3.028,1574,3.028,1575,3.028,1576,3.028,1577,3.322,1578,3.322,1598,3.322,1611,2.487,1618,2.072,1663,2.072,1664,3.768,1665,2.351,1666,2.351,1667,3.768,1668,2.351,1669,3.768,1670,2.351,1671,2.072,1672,3.768,1673,2.351,1674,3.768,1675,2.351,1676,3.768,1677,2.351,1678,2.351,1679,3.768,1680,2.351,1681,3.768,1682,2.351,1683,2.351,1684,2.351,1685,2.351,1686,3.768,1687,2.351,1688,2.351,1689,2.351,1690,2.351,1691,2.351,1692,2.351,1693,2.351,1694,4.157,1695,2.351,1696,2.351,1697,2.351,1698,2.351,1699,2.351,1700,2.351,1701,2.351,1702,2.351,1703,2.351,1704,2.351,1705,2.351,1706,2.351,1707,2.351,1708,2.351,1709,2.351,1710,2.351,1711,2.351,1712,2.351,1713,2.351,1714,2.351]],["title/interfaces/StorageEngine.html",[290,0.783,722,2.597]],["body/interfaces/StorageEngine.html",[3,0.071,4,0.071,5,0.049,9,0.141,10,0.009,21,0.082,27,0.005,28,0.007,29,0.005,35,0.453,36,1.731,41,0.654,43,1.702,44,1.582,45,0.609,46,1.507,48,1.922,49,1.96,107,3.655,290,0.924,292,1.76,293,5.469,325,1.109,355,3.81,484,2.606,703,2.935,722,3.981,725,5.351,726,5.351,734,4.654,736,4.635,737,4.654,739,4.175,742,4.881,1715,4.523,1716,5.13,1717,5.13,1718,5.13]],["title/modules/StorageModule.html",[83,1.278,1034,2.867]],["body/modules/StorageModule.html",[3,0.046,4,0.046,5,0.032,9,0.199,10,0.01,12,0.541,21,0.053,22,0.111,25,2.196,27,0.003,28,0.005,29,0.003,36,0.864,37,1.448,41,0.573,43,1.492,44,1.387,45,0.534,46,1.321,48,1.685,49,0.784,63,1.884,83,2.266,85,1.631,86,1.69,87,1.825,88,1.825,89,1.825,90,3.799,91,3.218,97,2.702,98,1.272,99,1.825,101,1.825,249,2.702,250,3.086,288,5.825,289,2.323,291,5.966,301,3.709,302,2.944,303,3.44,304,3.324,305,2.931,312,2.478,484,1.171,545,1.754,743,3.87,980,4.913,1034,5.193,1257,6.936,1258,2.931,1259,4.341,1262,6.102,1263,2.931,1264,4.341,1266,4.341,1269,6.102,1270,2.931,1271,4.341,1294,5.17,1295,3.956,1296,2.931,1297,2.931,1298,4.341,1299,5.17,1300,4.341,1301,5.17,1302,2.931,1303,2.931,1719,2.931,1720,2.931,1721,2.931,1722,3.324,1723,3.324,1724,3.324,1725,3.324,1726,3.324,1727,4.712,1728,4.832,1729,2.931,1730,3.324,1731,3.324]],["title/interfaces/StorageOptions.html",[290,0.783,301,2.485]],["body/interfaces/StorageOptions.html",[3,0.084,4,0.084,5,0.057,9,0.202,10,0.009,21,0.097,27,0.006,28,0.008,29,0.006,35,0.533,45,0.657,83,1.775,290,1.087,292,2.071,293,4.218,294,3.984,296,1.618,301,4.221,728,5.156,749,3.784,1046,6.187,1102,5.929,1135,5.156,1732,5.321,1733,5.321,1734,5.321,1735,5.321]],["title/interfaces/StorageOptionsFactory.html",[290,0.783,303,3.036]],["body/interfaces/StorageOptionsFactory.html",[3,0.084,4,0.084,5,0.058,9,0.167,10,0.009,21,0.098,27,0.006,28,0.008,29,0.006,35,0.537,36,1.926,41,0.537,48,1.58,49,1.748,83,2.351,163,3.091,290,1.095,292,2.086,293,5.178,301,4.573,302,3.634,303,5.178,304,3.398,1736,5.359,1737,8.322,1738,6.079]],["title/injectables/StorageService.html",[30,1.344,980,2.597]],["body/injectables/StorageService.html",[3,0.03,4,0.03,5,0.034,9,0.223,10,0.01,12,0.356,21,0.035,22,0.073,24,0.676,25,2.038,27,0.002,28,0.004,29,0.002,30,1.099,31,1.036,35,0.193,36,0.923,37,2.092,41,0.568,43,1.309,44,1.217,45,0.502,46,1.159,48,1.478,49,1.437,54,1.219,56,2.699,57,1.95,60,1.002,61,1.843,63,1.74,64,2.058,78,1.153,81,2.99,83,0.643,107,1.95,117,0.912,125,0.445,244,1.25,246,2.345,249,1.199,266,2.124,296,0.779,301,2.957,302,2.124,304,2.608,325,0.78,326,3.525,355,2.032,356,1.927,388,1.306,389,1.442,418,1.756,428,2.855,434,1.756,435,1.756,437,1.756,484,1.822,530,1.111,535,1.442,536,1.629,664,2.648,697,3.853,700,2.648,701,3.853,703,2.568,704,2.855,705,2.855,706,1.927,707,2.345,708,1.756,709,4.57,710,2.345,711,1.927,720,3.136,722,2.683,727,1.756,736,2.814,739,2.227,742,1.442,743,2.345,744,1.527,749,2.227,750,1.442,752,1.527,878,2.058,883,1.25,902,1.37,930,3.132,931,3.957,932,2.855,934,1.25,942,2.032,944,1.111,945,2.032,949,2.032,950,2.032,952,2.032,980,2.124,998,3.132,1046,3.345,1131,1.527,1247,1.527,1321,5.372,1728,1.629,1729,1.927,1732,1.927,1733,1.927,1734,1.927,1735,3.132,1739,1.927,1740,3.553,1741,3.132,1742,3.553,1743,2.185,1744,3.553,1745,2.185,1746,3.553,1747,2.185,1748,2.185,1749,3.553,1750,2.185,1751,3.553,1752,2.185,1753,3.553,1754,2.185,1755,5.014,1756,2.185,1757,2.185,1758,3.553,1759,2.648,1760,2.185,1761,2.185,1762,2.185,1763,2.648,1764,2.185,1765,4.489,1766,2.185,1767,2.185,1768,3.553,1769,2.185,1770,2.185,1771,2.185,1772,2.185,1773,2.185,1774,2.185,1775,2.185,1776,2.185,1777,5.17,1778,4.489,1779,2.185,1780,3.553,1781,2.185,1782,2.185,1783,2.185,1784,2.185,1785,4.489,1786,2.185,1787,2.185,1788,2.185,1789,2.185,1790,2.185,1791,2.185,1792,3.553,1793,2.185,1794,3.553,1795,2.185,1796,2.185,1797,2.185,1798,2.185,1799,2.185,1800,3.553,1801,2.185,1802,2.185,1803,2.185,1804,2.185,1805,5.17,1806,2.185,1807,2.185,1808,2.185,1809,2.185,1810,2.185,1811,2.185,1812,2.185,1813,2.185,1814,2.185,1815,2.185,1816,2.185,1817,2.185,1818,2.185]],["title/classes/StreamMeter.html",[22,0.145,1763,3.238]],["body/classes/StreamMeter.html",[3,0.07,4,0.07,5,0.048,9,0.139,10,0.009,21,0.081,22,0.169,25,2.33,27,0.005,28,0.007,29,0.005,33,1.377,35,0.447,36,1.715,41,0.649,43,1.163,44,1.082,45,0.543,46,1.03,48,1.314,63,1.314,107,3.62,181,3.353,244,2.891,296,1.446,325,0.939,530,2.57,545,3.481,586,0.957,672,5.814,703,2.891,710,4.846,745,4.353,883,4.2,1235,5.899,1238,6.253,1244,5.899,1245,5.899,1247,3.532,1763,4.916,1819,6.86,1820,4.456,1821,7.342,1822,6.596,1823,5.054,1824,6.596,1825,5.054,1826,5.054,1827,5.054,1828,6.596,1829,5.054]],["title/classes/TooManyFields.html",[22,0.145,945,2.485]],["body/classes/TooManyFields.html",[3,0.07,4,0.07,5,0.048,9,0.138,10,0.01,12,0.82,21,0.133,22,0.276,27,0.005,28,0.007,29,0.005,33,1.76,41,0.445,45,0.415,125,1.717,325,0.645,586,0.954,641,2.766,645,2.766,878,2.311,934,2.883,935,3.159,936,4.345,937,3.326,939,3.921,940,4.126,941,3.326,942,2.883,943,3.326,944,3.347,945,3.766,946,4.839,947,4.839,948,3.326,949,2.883,950,2.883,951,3.326,952,2.883,953,3.326,954,3.326,955,3.326,1830,5.04]],["title/classes/TooManyFiles.html",[22,0.145,949,2.485]],["body/classes/TooManyFiles.html",[3,0.07,4,0.07,5,0.048,9,0.138,10,0.01,12,0.82,21,0.133,22,0.276,27,0.005,28,0.007,29,0.005,33,1.76,41,0.445,45,0.415,125,1.717,325,0.645,586,0.954,641,2.766,645,2.766,878,2.311,934,2.883,935,3.159,936,4.345,937,3.326,939,3.921,940,4.126,941,3.326,942,2.883,943,3.326,944,3.347,945,2.883,946,4.839,947,4.839,948,3.326,949,3.766,950,2.883,951,3.326,952,2.883,953,3.326,954,3.326,955,3.326,1831,5.04]],["title/classes/TooManyParts.html",[22,0.145,950,2.485]],["body/classes/TooManyParts.html",[3,0.07,4,0.07,5,0.048,9,0.138,10,0.01,12,0.82,21,0.133,22,0.276,27,0.005,28,0.007,29,0.005,33,1.76,41,0.445,45,0.415,125,1.717,325,0.645,586,0.954,641,2.766,645,2.766,878,2.311,934,2.883,935,3.159,936,4.345,937,3.326,939,3.921,940,4.126,941,3.326,942,2.883,943,3.326,944,3.347,945,2.883,946,4.839,947,4.839,948,3.326,949,2.883,950,3.766,951,3.326,952,2.883,953,3.326,954,3.326,955,3.326,1832,5.04]],["title/classes/UnsupportedContentType.html",[22,0.145,952,2.485]],["body/classes/UnsupportedContentType.html",[3,0.07,4,0.07,5,0.048,9,0.138,10,0.01,12,0.82,21,0.133,22,0.276,27,0.005,28,0.007,29,0.005,33,1.76,41,0.445,45,0.415,125,1.717,325,0.645,586,0.954,641,2.766,645,2.766,878,2.311,934,2.883,935,3.159,936,4.345,937,3.326,939,3.823,940,4.596,941,3.326,942,2.883,943,3.326,944,3.347,945,2.883,946,4.839,947,4.839,948,3.326,949,2.883,950,2.883,951,3.326,952,3.766,953,3.326,954,3.326,955,3.326,1833,5.04]],["title/classes/UploadSessionNotFound.html",[22,0.145,661,2.867]],["body/classes/UploadSessionNotFound.html",[3,0.069,4,0.069,5,0.047,9,0.137,10,0.009,12,0.811,21,0.124,22,0.258,27,0.005,28,0.007,29,0.005,33,1.678,35,0.44,41,0.44,43,1.147,44,1.066,45,0.41,46,1.015,61,1.327,125,1.331,181,2.532,316,4.312,325,0.99,327,2.734,347,2.978,401,2.734,484,2.302,493,3.585,498,2.734,586,0.943,632,3.287,633,3.48,634,3.905,635,3.712,637,3.712,638,4.426,639,3.712,640,2.978,641,2.734,642,4.095,643,2.978,644,3.712,645,2.734,646,3.48,647,3.287,648,3.48,649,3.712,650,3.712,651,3.712,652,3.712,653,4.565,654,1.961,655,3.712,656,3.712,657,3.712,658,3.48,659,3.712,660,3.712,661,4.312,662,4.869,663,3.712,1834,4.981]],["title/interfaces/UploadedFile.html",[290,0.783,1759,3.238]],["body/interfaces/UploadedFile.html",[3,0.084,4,0.084,5,0.07,9,0.166,10,0.009,21,0.097,27,0.006,28,0.008,29,0.006,33,1.541,35,0.533,45,0.608,181,4.052,290,1.087,292,2.071,296,1.618,325,1.02,484,2.925,707,5.26,708,4.85,883,4.749,1759,5.499,1835,5.321,1836,5.321]],["title/classes/User.html",[22,0.145,256,1.379]],["body/classes/User.html",[3,0.024,4,0.024,5,0.016,8,2.482,9,0.173,10,0.01,21,0.046,22,0.148,27,0.002,28,0.003,29,0.002,33,0.603,35,0.255,37,1.689,41,0.689,45,0.661,49,1.741,54,1.848,56,1.325,61,0.454,63,1.825,64,3.835,72,2.534,81,1.417,82,2.019,117,1.206,131,2.235,157,0.808,241,3.789,256,2.181,266,3.763,296,0.633,298,3.894,304,1.725,320,1.919,325,1.02,355,2.534,388,1.019,389,1.125,398,1.24,399,1.502,412,1.845,418,1.369,420,2.919,445,2.358,484,1.747,485,3.772,497,2.151,530,2.521,532,0.935,545,0.899,546,1.191,586,0.323,588,1.27,590,3.301,593,1.502,597,3.559,600,3.984,603,3.377,604,0.866,611,2.924,612,2.628,629,2.248,670,1.502,681,3.377,768,1.67,800,1.907,813,3.095,814,2.248,815,2.482,816,2.248,818,2.628,820,2.628,821,4.398,822,4.749,825,4.012,827,3.764,830,2.019,831,4.685,832,1.727,833,1.191,834,1.125,836,1.191,842,1.27,844,3.095,845,2.153,846,1.27,847,2.153,848,1.907,849,2.153,853,2.153,854,1.27,858,1.191,880,1.191,884,3.316,886,1.502,889,2.547,900,3.316,901,1.502,902,1.068,909,5.324,911,1.502,912,1.502,913,1.369,916,4.614,1090,2.924,1295,1.369,1450,2.924,1451,3.022,1452,3.301,1498,2.322,1549,1.502,1573,3.022,1574,3.022,1575,3.022,1576,3.022,1671,3.905,1837,1.369,1838,3.761,1839,3.761,1840,1.704,1841,1.704,1842,1.704,1843,1.704,1844,1.704,1845,1.704,1846,1.704,1847,1.704,1848,1.704,1849,1.704,1850,1.704,1851,1.704,1852,1.704,1853,1.704,1854,1.704,1855,1.704,1856,1.704,1857,1.704,1858,1.704,1859,1.704,1860,1.704,1861,1.704,1862,2.547,1863,2.889,1864,3.761,1865,1.704,1866,1.502,1867,1.704,1868,1.502,1869,3.761,1870,1.502,1871,3.761,1872,1.27,1873,1.502,1874,2.889,1875,1.704,1876,4.958,1877,1.704,1878,1.704,1879,1.502,1880,1.704,1881,3.761,1882,2.889,1883,1.704,1884,4.958,1885,1.704,1886,1.704,1887,3.761,1888,1.704,1889,1.704,1890,1.704,1891,1.704,1892,1.704,1893,1.704,1894,1.704,1895,1.704,1896,1.704,1897,2.889,1898,1.704,1899,1.704,1900,1.704,1901,3.761,1902,1.704,1903,1.704]],["title/classes/UserActivation.html",[22,0.145,1286,3.036]],["body/classes/UserActivation.html",[3,0.046,4,0.046,5,0.032,9,0.191,10,0.01,21,0.08,22,0.112,27,0.003,28,0.005,29,0.003,33,1.034,35,0.296,37,0.985,41,0.665,45,0.62,49,1.168,54,1.15,56,1.745,61,0.893,63,1.287,64,3.928,72,2.833,82,2.341,131,2.233,157,1.588,176,1.917,181,2.518,241,3.269,259,1.917,296,1.086,298,2.961,325,0.833,388,2.003,389,2.211,394,2.692,420,3.696,446,3.891,518,2.995,530,2.518,532,1.839,545,3.836,546,3.46,586,0.634,603,4.079,629,3.891,813,4.116,814,3.522,815,3.888,816,3.522,818,3.46,820,3.46,821,4.547,824,5.229,825,4.547,827,4.547,830,3.46,831,4.852,832,2.961,833,2.341,834,2.211,835,2.692,836,2.341,837,2.692,838,3.979,839,3.979,840,3.979,841,2.692,842,2.497,844,3.46,845,2.497,846,2.497,847,2.497,848,2.211,849,2.497,853,2.497,854,2.497,855,2.692,856,2.692,857,2.692,858,2.341,904,3.979,916,2.692,1286,4.116,1287,2.497,1868,2.954,1904,6.204,1905,2.692,1906,5.891,1907,5.891,1908,3.35,1909,3.35,1910,3.35,1911,4.366,1912,4.734,1913,3.35,1914,3.35,1915,3.35,1916,3.35,1917,4.952,1918,2.954,1919,3.35,1920,3.35,1921,3.35]],["title/classes/UserActivationEmail.html",[22,0.145,1357,3.238]],["body/classes/UserActivationEmail.html",[3,0.065,4,0.065,5,0.045,9,0.172,10,0.009,21,0.075,22,0.157,23,2.02,24,1.943,25,1.489,27,0.005,28,0.007,29,0.005,35,0.415,36,1.633,41,0.668,43,1.08,44,1.004,45,0.387,46,0.957,48,1.84,49,1.481,63,1.84,117,2.622,125,0.957,325,1.102,398,1.981,400,4.049,497,4.049,586,0.889,654,1.848,658,3.28,768,3.356,779,4.519,780,4.738,781,4.738,795,3.098,796,2.942,797,3.28,800,3.098,803,3.28,807,2.386,809,3.28,872,3.772,1072,3.772,1090,3.098,1357,4.681,1442,5.688,1489,4.138,1922,4.138,1923,4.694,1924,4.694,1925,4.694,1926,4.694,1927,4.694,1928,4.694,1929,4.694,1930,6.281,1931,4.694,1932,4.694,1933,4.694,1934,4.694,1935,4.138,1936,4.694,1937,4.694]],["title/classes/UserDto.html",[22,0.145,1450,2.867]],["body/classes/UserDto.html",[3,0.06,4,0.06,5,0.041,8,4.474,9,0.118,10,0.009,21,0.069,22,0.198,27,0.004,28,0.006,29,0.004,35,0.381,41,0.762,45,0.711,131,2.626,296,1.301,320,2.265,325,1.104,398,1.897,412,3.325,420,4.02,484,2.389,485,4.006,586,0.817,681,4.957,768,3.01,814,4.053,815,4.474,816,4.053,902,2.705,921,6.875,1090,4.474,1450,3.915,1451,5.447,1452,5.052,1938,3.804,1939,4.315,1940,4.315,1941,4.315,1942,4.315,1943,4.315,1944,4.315,1945,4.315,1946,4.315,1947,4.315,1948,4.315,1949,4.315,1950,4.315]],["title/classes/UserNotActivated.html",[22,0.145,470,2.485]],["body/classes/UserNotActivated.html",[3,0.072,4,0.072,5,0.049,9,0.142,10,0.01,12,0.845,21,0.131,22,0.272,27,0.005,28,0.007,29,0.005,33,1.742,41,0.459,50,4.7,98,1.987,125,1.729,310,3.255,320,2.243,400,2.97,470,3.84,471,3.104,493,4.082,495,3.427,497,2.97,498,2.85,537,3.104,538,3.104,586,0.983,654,2.044,807,3.412,939,3.181,1189,3.104,1190,3.427,1192,3.628,1193,3.628,1194,4.207,1195,3.628,1196,3.255,1197,3.255,1198,3.628,1199,3.628,1951,5.193]],["title/classes/UserNotFound.html",[22,0.145,776,2.723]],["body/classes/UserNotFound.html",[3,0.073,4,0.073,5,0.05,9,0.144,10,0.009,12,0.853,21,0.127,22,0.263,27,0.005,28,0.007,29,0.005,33,1.705,41,0.463,43,1.206,44,1.445,45,0.432,46,1.068,125,1.068,325,1.07,398,1.466,401,3.706,406,4.718,412,3.665,586,0.992,634,4.717,638,4.273,640,4.466,764,3.285,765,3.662,766,3.906,768,2.327,769,3.906,770,3.133,771,3.906,772,3.906,773,3.285,774,5.567,775,3.906,776,4.232,777,3.906,1952,5.24]],["title/classes/UserNotLoggedIn.html",[22,0.145,471,2.597]],["body/classes/UserNotLoggedIn.html",[3,0.072,4,0.072,5,0.049,9,0.142,10,0.01,12,0.845,21,0.131,22,0.272,27,0.005,28,0.007,29,0.005,33,1.742,41,0.459,50,4.867,98,1.987,125,1.729,310,3.255,320,2.243,400,2.97,470,2.97,471,4.013,493,3.684,495,3.427,497,2.97,498,2.85,537,3.104,538,3.104,586,0.983,654,2.044,807,3.412,939,3.181,1189,3.104,1190,3.427,1192,3.628,1193,3.628,1194,4.207,1195,3.628,1196,3.255,1197,3.255,1198,3.628,1199,3.628,1953,5.193]],["title/classes/UsernameAlreadyExists.html",[22,0.145,773,2.723]],["body/classes/UsernameAlreadyExists.html",[3,0.073,4,0.073,5,0.05,9,0.144,10,0.009,12,0.853,21,0.127,22,0.263,27,0.005,28,0.007,29,0.005,33,1.705,41,0.463,43,1.206,44,1.445,45,0.432,46,1.068,125,1.068,325,1.07,398,1.466,401,3.706,406,4.718,412,3.665,586,0.992,634,4.881,638,3.862,640,4.466,764,3.285,765,3.662,766,3.906,768,2.327,769,3.906,770,3.133,771,3.906,772,3.906,773,4.232,774,5.567,775,3.906,776,3.285,777,3.906,1954,5.24]],["title/controllers/UsersController.html",[0,1.992,1955,3.238]],["body/controllers/UsersController.html",[0,2.117,2,2.117,3,0.064,4,0.064,5,0.044,7,3.048,9,0.226,10,0.01,11,3.227,12,0.752,17,3.047,21,0.074,22,0.154,23,1.987,24,1.428,26,3.554,27,0.005,28,0.006,29,0.005,34,2.76,35,0.408,36,1.615,37,2.065,41,0.549,43,1.43,44,1.329,45,0.512,46,1.266,48,1.615,49,1.465,54,1.584,56,1.627,60,2.117,61,1.23,63,1.615,131,2.131,256,2.561,325,0.898,357,3.441,375,3.048,376,3.441,377,3.441,384,3.441,412,3.444,450,3.441,483,3.048,638,2.641,646,3.227,1447,3.441,1450,4.633,1466,4.071,1866,4.071,1955,4.63,1956,4.071,1957,6.212,1958,4.618,1959,4.618,1960,4.618,1961,4.618,1962,4.618,1963,4.618,1964,4.071,1965,4.618,1966,3.71,1967,4.618,1968,4.618,1969,4.618,1970,4.618,1971,4.618,1972,4.618,1973,4.618,1974,4.618]],["title/modules/UsersModule.html",[83,1.278,96,2.485]],["body/modules/UsersModule.html",[2,3.102,3,0.073,4,0.073,5,0.05,9,0.224,10,0.009,12,0.856,17,4.362,21,0.084,22,0.175,27,0.005,28,0.007,29,0.005,44,1.125,83,2.2,85,2.579,86,2.672,87,2.885,88,2.885,89,2.885,90,4.106,91,4.106,96,4.868,97,3.713,98,2.011,99,2.885,101,2.885,156,3.918,157,2.492,256,1.668,832,3.142,1043,4.224,1872,5.042,1955,5.575,1964,4.634,1966,4.224,1975,4.634,1976,4.634,1977,4.634,1978,5.256,1979,5.256,1980,5.256]],["title/injectables/UsersService.html",[17,2.131,30,1.344]],["body/injectables/UsersService.html",[3,0.055,4,0.055,5,0.038,9,0.204,10,0.009,12,0.65,17,2.757,21,0.064,22,0.133,24,1.235,25,1.267,26,3.215,27,0.004,28,0.006,29,0.004,30,1.738,31,1.892,35,0.353,36,1.461,37,2.27,41,0.624,43,1.625,44,1.511,45,0.582,46,1.439,48,1.691,49,1.82,54,1.928,60,2.577,61,1.733,63,1.835,125,0.814,126,3.208,157,1.892,256,1.267,266,2.387,320,2.359,325,1.053,398,1.82,401,3.084,412,3.786,483,2.635,525,3.519,532,2.191,768,1.773,770,2.387,773,2.502,848,2.635,1025,4.516,1090,2.635,1096,4.954,1099,5.672,1113,3.208,1404,6.99,1406,5.733,1694,4.954,1966,3.208,1981,3.519,1982,3.992,1983,5.62,1984,3.992,1985,5.62,1986,7.059,1987,7.059,1988,3.992,1989,5.62,1990,3.992,1991,3.992,1992,3.992,1993,3.992,1994,3.992,1995,5.62,1996,3.992,1997,3.992,1998,3.992,1999,3.992,2000,3.992]],["title/coverage.html",[2001,4.789]],["body/coverage.html",[0,2.514,1,1.157,5,0.033,6,1.368,10,0.009,13,1.025,15,1.157,17,0.761,22,0.286,27,0.002,28,0.003,29,0.002,30,2.107,32,1.368,34,0.928,37,0.785,45,0.128,51,0.973,61,0.414,65,1.157,66,1.368,67,1.157,83,1.507,124,1.368,128,1.157,129,1.368,146,0.928,147,3.347,169,1.157,175,1.247,177,1.247,179,1.247,183,1.247,256,0.847,290,1.409,291,1.157,293,2.91,294,3.096,301,0.888,303,1.085,304,1.223,307,1.157,308,1.368,318,1.157,320,0.892,323,1.157,328,0.973,335,1.157,339,1.157,347,0.928,366,0.973,373,1.157,375,1.025,378,1.247,381,1.247,385,1.157,388,0.928,398,1.166,462,2.144,464,1.368,470,0.888,471,0.928,490,1.368,506,1.368,512,0.973,535,1.025,537,0.928,538,0.928,545,4.819,557,0.973,567,1.085,568,1.247,571,1.368,585,1.157,587,2.615,588,1.157,589,1.368,609,1.157,610,1.368,619,1.157,620,2.615,632,1.025,633,2.91,642,0.973,643,0.928,647,1.025,661,1.025,664,1.157,665,1.368,697,1.157,698,1.368,707,1.025,712,1.157,713,1.368,714,1.368,716,1.157,717,1.368,718,1.368,720,1.085,721,2.144,722,0.928,728,1.085,745,1.025,764,0.973,765,2.91,770,0.928,773,0.973,776,0.973,778,1.368,786,1.157,787,1.368,788,2.144,796,0.973,810,1.085,811,2.144,812,2.144,834,1.025,850,1.157,859,1.157,860,1.368,861,1.368,876,2.144,877,1.085,906,1.157,917,1.368,928,1.247,929,1.368,934,0.888,935,3.211,942,0.888,945,0.888,949,0.888,950,0.888,952,0.888,956,1.157,957,1.368,966,1.157,973,0.928,977,1.247,980,0.928,1035,1.085,1048,1.368,1094,1.368,1129,1.368,1131,1.085,1132,2.615,1133,2.615,1135,1.085,1143,1.157,1148,1.157,1149,1.368,1182,1.368,1183,1.368,1189,0.928,1190,3.096,1200,1.247,1201,1.368,1202,1.368,1218,1.085,1219,2.144,1221,1.085,1225,1.368,1232,1.157,1233,2.144,1239,1.247,1255,1.085,1260,1.157,1267,0.973,1273,1.247,1274,1.157,1279,1.085,1283,1.157,1286,1.085,1287,1.157,1305,2.615,1315,1.368,1318,1.368,1353,1.157,1355,1.157,1357,1.157,1359,0.888,1362,1.157,1365,1.157,1367,1.157,1368,1.157,1370,1.157,1392,1.368,1447,1.157,1448,1.368,1449,1.368,1450,1.025,1467,2.144,1470,1.988,1471,2.144,1480,1.368,1491,4.117,1503,1.247,1504,1.247,1506,1.247,1508,1.247,1510,1.247,1544,1.368,1551,1.368,1552,1.368,1554,1.368,1560,3.096,1561,2.144,1562,1.368,1563,1.368,1564,1.368,1566,1.368,1567,1.368,1568,1.368,1569,1.157,1570,1.368,1611,1.025,1663,1.368,1715,1.368,1727,1.247,1728,1.157,1736,1.368,1739,1.368,1759,1.157,1763,1.157,1819,1.368,1820,1.368,1835,1.368,1836,1.368,1837,2.144,1872,1.157,1904,2.82,1905,2.82,1912,1.247,1922,1.368,1938,1.368,1955,1.157,1956,1.368,1981,1.368,2001,1.247,2002,1.552,2003,1.552,2004,8.48,2005,8.337,2006,8.389,2007,1.368,2008,1.368,2009,1.368,2010,1.368,2011,2.352,2012,1.368,2013,1.368,2014,6.478,2015,4.691,2016,3.509,2017,2.352,2018,1.368,2019,2.668,2020,3.509,2021,6.654,2022,3.509,2023,4.165,2024,2.668,2025,2.352,2026,2.668,2027,2.352,2028,1.552,2029,1.552,2030,1.368,2031,1.368,2032,1.368,2033,1.368,2034,1.368,2035,1.368,2036,1.368,2037,1.368,2038,1.368,2039,1.368,2040,1.368,2041,1.368,2042,1.368,2043,1.368,2044,1.368,2045,1.552,2046,1.552]],["title/dependencies.html",[86,2.661,2047,3.613]],["body/dependencies.html",[5,0.043,10,0.01,12,0.744,22,0.206,27,0.005,28,0.006,29,0.005,78,3.255,86,2.322,110,3.687,111,3.671,149,4.027,151,3.405,154,2.613,157,2.165,160,4.596,161,4.596,163,2.322,164,3.405,326,2.507,327,2.507,360,3.015,363,3.671,364,4.027,365,4.027,532,2.507,578,2.731,580,3.671,604,2.322,704,3.671,709,3.671,830,3.192,902,2.864,1141,3.671,1142,3.671,1162,3.671,1610,4.027,1755,4.027,1862,4.027,2048,4.568,2049,4.568,2050,4.568,2051,6.982,2052,4.568,2053,4.568,2054,4.568,2055,4.568,2056,4.568,2057,4.568,2058,4.568,2059,4.568,2060,4.568,2061,4.568,2062,4.568,2063,4.568,2064,4.568,2065,4.568,2066,4.568,2067,4.568,2068,4.568,2069,4.568,2070,4.568,2071,4.568,2072,4.568,2073,4.568,2074,4.027,2075,4.568,2076,4.568,2077,4.568,2078,4.568,2079,4.568,2080,4.027,2081,6.982,2082,4.568,2083,4.568,2084,4.568,2085,4.568,2086,4.568,2087,4.568,2088,4.568,2089,4.568,2090,4.568,2091,4.568,2092,4.568,2093,4.568,2094,4.568,2095,4.568,2096,4.568,2097,4.568,2098,4.568,2099,4.568]],["title/index.html",[35,0.319,2100,3.613,2101,3.613]],["body/index.html",[4,0.071,10,0.009,27,0.005,28,0.007,29,0.005,217,4.496,543,4.496,642,3.197,654,2.008,1312,4.496,1741,4.496,2001,4.098,2080,6.5,2102,5.1,2103,5.1,2104,6.634,2105,5.1,2106,5.1,2107,5.1,2108,5.1,2109,5.1,2110,5.1,2111,5.1,2112,5.1,2113,5.1,2114,5.1,2115,5.1,2116,5.1,2117,8.45,2118,5.1,2119,5.1,2120,5.1,2121,8.298,2122,5.1,2123,5.1,2124,6.634,2125,5.1,2126,5.1,2127,5.1,2128,6.634,2129,6.634,2130,5.1,2131,5.1,2132,5.1,2133,6.634,2134,6.634,2135,5.1,2136,5.1,2137,5.1,2138,5.1,2139,4.496,2140,5.1,2141,5.1,2142,5.1,2143,5.1,2144,5.1,2145,5.1,2146,5.1,2147,5.1,2148,5.1,2149,5.1,2150,5.1,2151,5.1,2152,5.1,2153,5.1,2154,5.1,2155,5.1]],["title/modules.html",[85,2.924]],["body/modules.html",[10,0.008,27,0.006,28,0.008,29,0.006,84,4.116,85,2.89,96,3.37,136,4.39,140,3.888,141,4.116,142,3.692,143,4.116,144,4.116,145,4.116,424,7.14,1034,3.888,2139,7.833,2156,8.886,2157,8.942,2158,5.89,2159,5.89]],["title/overview.html",[2160,5.254]],["body/overview.html",[2,1.586,10,0.009,13,5.014,17,3.727,27,0.004,28,0.005,29,0.004,31,1.64,83,1.017,84,5.444,85,1.697,86,1.759,87,1.898,88,1.898,89,1.898,90,1.898,91,1.898,92,3.049,93,3.049,94,3.049,95,3.049,96,4.622,97,2.782,98,1.324,99,1.898,136,6.505,137,3.049,138,3.049,139,3.049,140,5.247,141,5.308,142,5.289,143,4.193,144,5.789,145,5.896,146,3.951,292,1.187,366,4.762,463,2.779,499,3.049,501,3.049,502,3.049,512,4.762,564,3.049,566,3.049,567,4.193,586,0.655,973,4.542,980,4.542,1030,3.049,1031,3.049,1032,3.049,1033,3.049,1034,5.014,1035,4.193,1252,3.049,1253,3.049,1254,3.049,1255,4.193,1611,5.014,1657,3.049,1659,3.049,1660,3.049,1719,3.049,1720,3.049,1721,3.049,1879,3.049,1935,3.049,1975,3.049,1976,3.049,1977,3.049,2160,3.049,2161,3.459,2162,3.459,2163,3.459,2164,3.459]],["title/miscellaneous/typealiases.html",[2165,2.693,2166,5.234]],["body/miscellaneous/typealiases.html",[10,0.008,27,0.007,28,0.008,29,0.007,35,0.587,45,0.548,298,3.973,700,5.826,705,6.281,928,5.341,2165,4.953,2167,6.646,2168,6.646,2169,7.817,2170,7.817,2171,6.646,2172,6.646]],["title/miscellaneous/variables.html",[2165,2.693,2173,4.614]],["body/miscellaneous/variables.html",[3,0.027,10,0.01,27,0.002,28,0.003,29,0.002,35,0.173,37,1.224,40,1.461,45,0.614,46,0.662,49,1.142,54,0.672,56,2.038,60,0.899,61,1.632,63,1.395,64,2.809,81,1.594,122,2.036,146,1.942,147,1.575,163,0.996,175,2.611,176,1.858,177,2.611,178,1.728,179,2.611,180,2.864,181,3.654,182,3.101,183,2.611,184,2.864,244,4.917,259,1.858,266,1.942,296,0.712,325,0.99,355,1.121,375,2.144,378,2.611,381,2.611,388,1.942,394,1.575,404,2.864,434,2.611,435,1.575,437,1.575,481,2.421,485,2.284,530,4.37,535,2.144,545,1.034,654,1.279,710,1.294,745,2.746,750,1.294,752,1.369,762,1.575,779,1.172,796,2.036,811,1.575,812,2.611,834,2.144,850,2.421,851,1.728,876,1.575,878,1.49,883,2.38,904,2.611,906,2.421,907,1.728,913,1.575,977,2.611,1080,1.461,1132,1.461,1133,2.421,1143,2.421,1215,1.575,1226,2.421,1232,1.461,1233,1.575,1234,1.728,1235,3.343,1237,1.728,1238,1.575,1239,2.611,1240,1.728,1241,2.864,1242,1.728,1243,1.728,1244,3.343,1245,1.575,1246,1.728,1247,1.369,1248,1.728,1249,1.728,1250,1.728,1251,1.728,1273,3.343,1274,3.101,1283,2.421,1287,2.421,1347,1.728,1470,1.461,1471,2.611,1478,1.728,1491,1.575,1498,4.312,1503,2.611,1504,2.611,1505,1.728,1506,2.611,1507,1.728,1508,2.611,1509,1.728,1510,2.611,1511,1.728,1512,2.864,1514,2.864,1565,4.267,1727,3.343,1728,3.101,1837,1.575,1870,2.864,1872,2.421,1873,1.728,1904,1.575,1905,3.343,1911,2.864,1912,2.611,1918,1.728,2007,1.728,2008,2.864,2009,1.728,2010,2.864,2011,2.864,2012,2.864,2013,2.864,2017,1.728,2018,2.864,2025,1.728,2027,1.728,2030,1.728,2031,1.728,2032,2.864,2033,1.728,2034,2.864,2035,1.728,2036,2.864,2037,1.728,2038,2.864,2039,1.728,2040,1.728,2041,1.728,2042,2.864,2043,1.728,2044,1.728,2074,1.728,2165,1.461,2173,1.728,2174,1.96,2175,1.96,2176,1.96,2177,1.96,2178,1.96,2179,1.96,2180,1.96,2181,1.96,2182,1.96,2183,1.96,2184,1.96,2185,1.96,2186,4.84,2187,3.249,2188,3.249,2189,3.249,2190,1.96,2191,1.96,2192,1.96,2193,5.366,2194,3.249,2195,1.96,2196,1.96,2197,3.249,2198,1.96,2199,1.96,2200,1.96,2201,1.96,2202,1.96,2203,1.96,2204,1.96,2205,1.96,2206,1.96,2207,1.96,2208,1.96,2209,1.96,2210,1.96,2211,3.249,2212,1.96,2213,1.96,2214,1.96,2215,1.96,2216,3.249,2217,1.96,2218,1.96,2219,1.96,2220,3.249,2221,1.96,2222,1.96,2223,1.96,2224,1.96,2225,1.96,2226,1.96,2227,1.96,2228,1.96,2229,1.96,2230,3.249,2231,1.96,2232,1.96,2233,1.96,2234,1.96,2235,1.96,2236,1.96,2237,1.96,2238,1.96,2239,1.96,2240,1.96,2241,1.96,2242,1.96,2243,1.96,2244,4.161,2245,1.96,2246,3.249,2247,1.96,2248,1.96,2249,1.96,2250,1.96,2251,1.96,2252,3.249,2253,1.96,2254,1.96,2255,1.96,2256,1.96,2257,1.96,2258,1.96,2259,1.96,2260,1.96,2261,1.96,2262,1.96,2263,1.96,2264,1.96]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["0.25.4",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1174,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/PasswordResetEmail.html":{},"controllers/SettingsController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1879,"title":{},"body":{"classes/User.html":{},"overview.html":{}}}],["1024",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":2161,"title":{},"body":{"overview.html":{}}}],["16",{"_index":827,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2163,"title":{},"body":{"overview.html":{}}}],["2).join(path.sep",{"_index":762,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"miscellaneous/variables.html":{}}}],["2.1.2",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1178,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1170,"title":{},"body":{"controllers/HealthController.html":{}}}],["24",{"_index":2164,"title":{},"body":{"overview.html":{}}}],["25",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":887,"title":{},"body":{"classes/File.html":{}}}],["3.0.0",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":597,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["4",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":2162,"title":{},"body":{"overview.html":{}}}],["5",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["5.9.20",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["512",{"_index":1636,"title":{},"body":{"controllers/SettingsController.html":{}}}],["6.4.10",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1621,"title":{},"body":{"controllers/SettingsController.html":{}}}],["64",{"_index":824,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1935,"title":{},"body":{"classes/UserActivationEmail.html":{},"overview.html":{}}}],["7.0.0",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":874,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["8",{"_index":624,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{}}}],["_",{"_index":913,"title":{},"body":{"classes/File.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["__v",{"_index":840,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["_createbusboy",{"_index":1740,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1744,"title":{},"body":{"injectables/StorageService.html":{}}}],["_data",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_debug",{"_index":1049,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_debug(message",{"_index":1057,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["_encoding",{"_index":1245,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["_getdestinationondisk",{"_index":723,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":730,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":724,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":732,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":1492,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":1496,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["_id",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["_req",{"_index":1627,"title":{},"body":{"controllers/SettingsController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_send",{"_index":1320,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_send(email",{"_index":1329,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["_size",{"_index":1821,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":1822,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":1824,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_value",{"_index":675,"title":{},"body":{"classes/Counter.html":{}}}],["abort",{"_index":1780,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":1808,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1795,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1805,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1777,"title":{},"body":{"injectables/StorageService.html":{}}}],["absolute",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["accept",{"_index":1794,"title":{},"body":{"injectables/StorageService.html":{}}}],["access(path",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":672,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"controllers/SettingsController.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["account')@useguards(authguard",{"_index":1604,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto",{"_index":1617,"title":{},"body":{"controllers/SettingsController.html":{}}}],["account.dto.ts",{"_index":714,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:8",{"_index":715,"title":{},"body":{"classes/DeleteAccountDto.html":{}}}],["account/${activation.token",{"_index":1444,"title":{},"body":{"injectables/MailerService.html":{}}}],["account/:token",{"_index":1582,"title":{},"body":{"controllers/SettingsController.html":{}}}],["action",{"_index":1512,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":497,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activate(token",{"_index":1667,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activateaccount",{"_index":1572,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(@param(\"token",{"_index":1623,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activateaccount(token",{"_index":1580,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activated",{"_index":1451,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":1222,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["activation')@useguards(authguard",{"_index":1608,"title":{},"body":{"controllers/SettingsController.html":{}}}],["activation.deleteone",{"_index":1689,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.job",{"_index":1371,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["activation.job.ts",{"_index":1567,"title":{},"body":{"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["activation.mjml",{"_index":1929,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["activation.resent",{"_index":1714,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activation.schema",{"_index":1289,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["activation.schema.ts",{"_index":1905,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:24",{"_index":1908,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:25",{"_index":1916,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:31",{"_index":1909,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:38",{"_index":1913,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:47",{"_index":1914,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:57",{"_index":1915,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:59",{"_index":1910,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":1687,"title":{},"body":{"injectables/SettingsService.html":{}}}],["activationlink",{"_index":1442,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendUserActivationJob.html":{},"classes/UserActivationEmail.html":{}}}],["active",{"_index":652,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["actually",{"_index":1891,"title":{},"body":{"classes/User.html":{}}}],["address",{"_index":870,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":123,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["again",{"_index":1215,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["agent",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["aliases",{"_index":2167,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":605,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":594,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["already",{"_index":640,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["amazing",{"_index":2140,"title":{},"body":{"index.html":{}}}],["amount",{"_index":651,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["angular",{"_index":2112,"title":{},"body":{"index.html":{}}}],["app",{"_index":2119,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":128,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":2109,"title":{},"body":{"index.html":{}}}],["apply(adminmiddleware",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":136,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":306,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1206,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["array",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.filter((element",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":291,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["auth",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["auth.controller",{"_index":505,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_optional",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authcontroller",{"_index":307,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":140,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2148,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":366,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":845,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["available",{"_index":2159,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1452,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["avatar')@useguards(authguard",{"_index":1586,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.filename",{"_index":1639,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.id",{"_index":1640,"title":{},"body":{"controllers/SettingsController.html":{}}}],["avatar.size",{"_index":1641,"title":{},"body":{"controllers/SettingsController.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backend_domain",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2141,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":939,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1537,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1517,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["baseurl",{"_index":1393,"title":{},"body":{"injectables/MailerService.html":{}}}],["bcrypt",{"_index":1862,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1890,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1878,"title":{},"body":{"classes/User.html":{}}}],["before",{"_index":658,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{}}}],["below",{"_index":872,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["below.\\n",{"_index":808,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["board",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":569,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":570,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":571,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":575,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["body[\"error",{"_index":1526,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":681,"title":{},"body":{"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"interfaces/SessionDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["browse",{"_index":2157,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"modules.html":{}}}],["bucket",{"_index":1134,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1144,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":1244,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.tostring",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":2105,"title":{},"body":{"index.html":{}}}],["bull",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":141,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":567,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1037,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1042,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1755,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1746,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":711,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{}}}],["busboy.on(\"file",{"_index":1790,"title":{},"body":{"injectables/StorageService.html":{}}}],["bytebin",{"_index":1347,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["calculatemd5",{"_index":1239,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":710,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"interfaces/MD5Passthrough.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["callback(new",{"_index":1633,"title":{},"body":{"controllers/SettingsController.html":{}}}],["callback(null",{"_index":1247,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["callback.interface",{"_index":706,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{}}}],["callback.interface.ts",{"_index":2169,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["catch",{"_index":752,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":858,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1205,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1208,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1784,"title":{},"body":{"injectables/StorageService.html":{}}}],["cb",{"_index":683,"title":{},"body":{"classes/Counter.html":{}}}],["changeavatar",{"_index":1573,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeavatar(@currentuser",{"_index":1626,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeavatar(newavatarid",{"_index":1669,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeavatar(user",{"_index":1584,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changed",{"_index":802,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email",{"_index":1352,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.email.ts",{"_index":788,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["changed.email.ts:15",{"_index":793,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:19",{"_index":794,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:5",{"_index":790,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.email.ts:8",{"_index":792,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["changed.job",{"_index":1364,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["changed.job.ts",{"_index":1561,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["changed.mjml",{"_index":1469,"title":{},"body":{"classes/PasswordChangedEmail.html":{}}}],["changedisplayname",{"_index":1574,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changedisplayname(newdisplayname",{"_index":1672,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changedisplayname(undefined",{"_index":1588,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changedisplaynamedto",{"_index":585,"title":{"classes/ChangeDisplayNameDto.html":{}},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changeemail",{"_index":1575,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changeemail(@body",{"_index":1645,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemail(newemail",{"_index":1674,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changeemail(undefined",{"_index":1591,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changeemaildto",{"_index":609,"title":{"classes/ChangeEmailDto.html":{}},"body":{"classes/ChangeEmailDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["changepassword",{"_index":1576,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["changepassword(oldpassword",{"_index":1676,"title":{},"body":{"injectables/SettingsService.html":{}}}],["changepassword(undefined",{"_index":1595,"title":{},"body":{"controllers/SettingsController.html":{}}}],["changepassworddto",{"_index":619,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["characters",{"_index":598,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["chunk",{"_index":745,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/MD5Passthrough.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":1829,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":761,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunk.string(path.parse(filename).name.slice(0",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chunkalreadyuploaded",{"_index":632,"title":{"classes/ChunkAlreadyUploaded.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["chunkindex",{"_index":637,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["chunks",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clamp",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":22,"title":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":586,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":1863,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":1864,"title":{},"body":{"classes/User.html":{}}}],["client",{"_index":1143,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1137,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1734,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1133,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:19",{"_index":1136,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1140,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1138,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1139,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1142,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":1871,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":499,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":564,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":565,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":566,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1030,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1032,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1031,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1033,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1252,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1253,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1254,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1657,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":1659,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1658,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_providers",{"_index":1660,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1719,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1720,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1721,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1975,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1976,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1977,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["codes",{"_index":1527,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["collapsewhitespace",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collation",{"_index":1986,"title":{},"body":{"injectables/UsersService.html":{}}}],["collation(collation",{"_index":1998,"title":{},"body":{"injectables/UsersService.html":{}}}],["collationoptions",{"_index":1987,"title":{},"body":{"injectables/UsersService.html":{}}}],["commit",{"_index":655,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["comparepassword",{"_index":1838,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1505,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["completed",{"_index":1391,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["config",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1047,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["configmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{}}}],["configure",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":869,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["confirmation",{"_index":873,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{}}}],["confirmation.deleteone",{"_index":1704,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.job",{"_index":1366,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["confirmation.job.ts",{"_index":1562,"title":{},"body":{"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["confirmation.mjml",{"_index":799,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["confirmation.newemail",{"_index":1703,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmation.schema",{"_index":1282,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["confirmation.schema.ts",{"_index":812,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:22",{"_index":817,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:23",{"_index":829,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:29",{"_index":819,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:37",{"_index":823,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:46",{"_index":826,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:55",{"_index":828,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":1702,"title":{},"body":{"injectables/SettingsService.html":{}}}],["confirmemail",{"_index":1577,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemail(@param(\"token",{"_index":1649,"title":{},"body":{"controllers/SettingsController.html":{}}}],["confirmemail(token",{"_index":1598,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["confirmemaillink",{"_index":864,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"interfaces/SendEmailConfirmationJob.html":{}}}],["conflictexception",{"_index":634,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["connect",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["connectmongo(session",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(id",{"_index":755,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"interfaces/MD5Passthrough.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1766,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":1992,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(_value",{"_index":673,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(activationlink",{"_index":1923,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["constructor(auth",{"_index":1665,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(chunkindex",{"_index":635,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(config",{"_index":1397,"title":{},"body":{"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(confirmemaillink",{"_index":862,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["constructor(connection",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(displayname",{"_index":766,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(email",{"_index":771,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(emailsqueue",{"_index":572,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":937,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(files",{"_index":1098,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(forgotpasswordlink",{"_index":789,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["constructor(id",{"_index":662,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(identifier",{"_index":644,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["constructor(logger",{"_index":1054,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["constructor(options",{"_index":727,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(resetpasswordlink",{"_index":1481,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["constructor(username",{"_index":774,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["constructor(users",{"_index":126,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["content",{"_index":955,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"auth",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":983,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1163,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"settings",{"_index":1619,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller(\"users",{"_index":1967,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["correct",{"_index":1197,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["count",{"_index":2000,"title":{},"body":{"injectables/UsersService.html":{}}}],["countdocuments(query",{"_index":1997,"title":{},"body":{"injectables/UsersService.html":{}}}],["counter",{"_index":664,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["coverage",{"_index":2001,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1025,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["create(email",{"_index":1983,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(options",{"_index":1101,"title":{},"body":{"injectables/FilesService.html":{}}}],["createasyncoptionsprovider",{"_index":1258,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1259,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1263,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1264,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":814,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createfileoptions",{"_index":697,"title":{"interfaces/CreateFileOptions.html":{}},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["createhash(\"md5",{"_index":1249,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["createmaileroptions",{"_index":1316,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpassthrough",{"_index":1240,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["createreadable",{"_index":725,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":734,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["createstorageoptions",{"_index":1737,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":726,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":737,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creating",{"_index":659,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["credentials",{"_index":1195,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["crypto",{"_index":1237,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["crypto.createhash(\"md5",{"_index":1242,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["crypto.hash",{"_index":1236,"title":{},"body":{"interfaces/MD5Passthrough.html":{}}}],["crypto.randombytes(size",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["currentsession.identifier",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["currentuser",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":1125,"title":{},"body":{"injectables/FilesService.html":{}}}],["custom(value",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["customdecorator",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["date%.log",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":842,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":1936,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["db",{"_index":1164,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1004,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/auth",{"_index":978,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/current",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["decorators/recaptcha",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["decrement",{"_index":667,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(mbtobytes(1",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["default(mbtobytes(25",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delay",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["delete(\"delete/:id",{"_index":984,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(\"logout",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(\"revoke",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('delete/:id",{"_index":960,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('logout",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('revoke",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@currentuser",{"_index":985,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(id",{"_index":739,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(user",{"_index":959,"title":{},"body":{"controllers/FilesController.html":{}}}],["deleteaccount",{"_index":1578,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["deleteaccount(@body",{"_index":1652,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccount(password",{"_index":1679,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deleteaccount(undefined",{"_index":1602,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteaccountdto",{"_index":712,"title":{"classes/DeleteAccountDto.html":{}},"body":{"classes/DeleteAccountDto.html":{},"controllers/SettingsController.html":{},"coverage.html":{}}}],["deleteallfor",{"_index":1095,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteallfor(uid",{"_index":1105,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["deleteavatar",{"_index":1839,"title":{},"body":{"classes/User.html":{}}}],["deleted",{"_index":1090,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["deleted.todto",{"_index":989,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":716,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deleting",{"_index":1085,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":2113,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":656,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["development",{"_index":2120,"title":{},"body":{"index.html":{}}}],["device",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{}}}],["didn't",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["digest(\"hex",{"_index":1251,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["directory",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"injectables/StorageService.html":{}}}],["dirname",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1310,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["disabled",{"_index":1003,"title":{},"body":{"controllers/FilesController.html":{}}}],["disk",{"_index":749,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["diskhealthindicator",{"_index":1154,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":720,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1769,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":728,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":588,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"classes/User.html":{},"coverage.html":{}}}],["displayname",{"_index":768,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendEmailJob.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["displaynamealreadyexists",{"_index":764,"title":{"classes/DisplayNameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["displaynamealreadyexists(newdisplayname",{"_index":1695,"title":{},"body":{"injectables/SettingsService.html":{}}}],["dns",{"_index":1165,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1155,"title":{},"body":{"controllers/HealthController.html":{}}}],["document",{"_index":813,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["documentation",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1785,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":958,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(user",{"_index":962,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/change",{"_index":1613,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/delete",{"_index":1616,"title":{},"body":{"controllers/SettingsController.html":{}}}],["dto/file.dto",{"_index":903,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login.dto",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/partial",{"_index":1965,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/rename",{"_index":975,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/reset",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/user.dto",{"_index":1866,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["dynamicmodule",{"_index":1269,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2130,"title":{},"body":{"index.html":{}}}],["eachasync(async",{"_index":1126,"title":{},"body":{"injectables/FilesService.html":{}}}],["efficient",{"_index":2106,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["ejs.render(html",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":398,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangeEmailDto.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["email!'})@isnotempty({message",{"_index":615,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["email')@useguards(authguard",{"_index":1593,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto",{"_index":1615,"title":{},"body":{"controllers/SettingsController.html":{}}}],["email.dto.ts",{"_index":610,"title":{},"body":{"classes/ChangeEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:9",{"_index":617,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["email.email",{"_index":1350,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.email.ts",{"_index":861,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["email.email.ts:15",{"_index":866,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:19",{"_index":867,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:5",{"_index":863,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.email.ts:8",{"_index":865,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["email.html",{"_index":1388,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.subject",{"_index":1389,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email.text",{"_index":1390,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["email/${confirmation.token",{"_index":1436,"title":{},"body":{"injectables/MailerService.html":{}}}],["email/:token",{"_index":1600,"title":{},"body":{"controllers/SettingsController.html":{}}}],["emailalreadyexists",{"_index":770,"title":{"classes/EmailAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["emailalreadyexists(email",{"_index":1993,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailalreadyexists(newemail",{"_index":1697,"title":{},"body":{"injectables/SettingsService.html":{}}}],["emailchangedemail",{"_index":786,"title":{"classes/EmailChangedEmail.html":{}},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailchangedemail(job.data.forgotpasswordlink",{"_index":1377,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmation",{"_index":810,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["emailconfirmation.name",{"_index":1291,"title":{},"body":{"modules/MailerModule.html":{}}}],["emailconfirmationemail",{"_index":859,"title":{"classes/EmailConfirmationEmail.html":{}},"body":{"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["emailconfirmationemail(job.data.confirmemaillink",{"_index":1380,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailconfirmations",{"_index":1398,"title":{},"body":{"injectables/MailerService.html":{}}}],["emailconfirmationschema",{"_index":850,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":852,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1290,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/confirm",{"_index":1349,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/email",{"_index":1351,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/password",{"_index":1354,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emails/user.activation.email",{"_index":1358,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["emailsqueue",{"_index":576,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["empty",{"_index":606,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring",{"_index":616,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":595,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":623,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["encoding",{"_index":930,"title":{},"body":{"interfaces/FileMetadata.html":{},"injectables/StorageService.html":{}}}],["engine",{"_index":1046,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface",{"_index":744,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1715,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1716,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1717,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1718,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1732,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1733,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":754,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["ensure",{"_index":1196,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["enter",{"_index":613,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["env.development",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":998,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":748,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(\"upload",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["error(errors.map(error",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.code",{"_index":753,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{}}}],["error.exception.ts",{"_index":1202,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1204,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1207,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.message).join(\"\\n",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorcodes",{"_index":1525,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1533,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1531,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1532,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1529,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1530,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors.length",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":1309,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["eslint/no",{"_index":1313,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["eventemitter",{"_index":666,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":691,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":649,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["exception",{"_index":1001,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1211,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1203,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":921,"title":{},"body":{"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":912,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["existing",{"_index":657,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["exists",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":1985,"title":{},"body":{"injectables/UsersService.html":{}}}],["expires",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":815,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/CreateFileOptions.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["express.session",{"_index":1185,"title":{},"body":{"interfaces/ISession.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{}}}],["extname",{"_index":1630,"title":{},"body":{"controllers/SettingsController.html":{}}}],["factory",{"_index":1280,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":305,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1736,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1738,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1315,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1317,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["failed",{"_index":1080,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":699,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["fieldname",{"_index":931,"title":{},"body":{"interfaces/FileMetadata.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":948,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["file.deleteone",{"_index":1124,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.dto",{"_index":976,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto.ts",{"_index":1552,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["file.dto.ts:8",{"_index":1553,"title":{},"body":{"classes/RenameFileDto.html":{}}}],["file.filename",{"_index":1026,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1027,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["file.interface",{"_index":1761,"title":{},"body":{"injectables/StorageService.html":{}}}],["file.interface.ts",{"_index":1836,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1075,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":718,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.name",{"_index":1044,"title":{},"body":{"modules/FilesModule.html":{}}}],["file.rename(newfilename",{"_index":1128,"title":{},"body":{"injectables/FilesService.html":{}}}],["file.size",{"_index":1028,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1015,"title":{},"body":{"controllers/FilesController.html":{}}}],["file[\"filename",{"_index":1115,"title":{},"body":{"injectables/FilesService.html":{},"classes/RenameFileDto.html":{}}}],["file[\"hidden",{"_index":1116,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"id",{"_index":1117,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"public",{"_index":1118,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"size",{"_index":1119,"title":{},"body":{"injectables/FilesService.html":{}}}],["file[\"uid",{"_index":1120,"title":{},"body":{"injectables/FilesService.html":{}}}],["fileaccessibile",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filedto",{"_index":877,"title":{"classes/FileDto.html":{}},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["filefiltercallback",{"_index":705,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{},"miscellaneous/typealiases.html":{}}}],["fileid",{"_index":719,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filemetadata",{"_index":707,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/CreateFileOptions.html":{},"interfaces/FileMetadata.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["filename",{"_index":878,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"classes/RenameFileDto.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filenotfound",{"_index":643,"title":{"classes/FileNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["filenotfound(id",{"_index":999,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files",{"_index":944,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["files.controller",{"_index":1038,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":982,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1787,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map(file",{"_index":1023,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1039,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":1809,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":974,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["fileschema",{"_index":906,"title":{},"body":{"classes/File.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileschema.methods.rename",{"_index":914,"title":{},"body":{"classes/File.html":{}}}],["fileschema.methods.todto",{"_index":908,"title":{},"body":{"classes/File.html":{}}}],["filescontroller",{"_index":956,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1020,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["filesmodule",{"_index":142,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1035,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesprocessor.name",{"_index":1093,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["filesqueue",{"_index":574,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":973,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":934,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1806,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":1628,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(file.mimetype",{"_index":1632,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":1631,"title":{},"body":{"controllers/SettingsController.html":{}}}],["filter",{"_index":700,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"miscellaneous/typealiases.html":{}}}],["filter(metadata",{"_index":1793,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1528,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filternullandundefined",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterquery",{"_index":1404,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["find",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{}}}],["findemailconfirmation",{"_index":1394,"title":{},"body":{"injectables/MailerService.html":{}}}],["findemailconfirmation(query",{"_index":1403,"title":{},"body":{"injectables/MailerService.html":{}}}],["findone",{"_index":1096,"title":{},"body":{"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":1107,"title":{},"body":{"injectables/FilesService.html":{}}}],["findone(query",{"_index":1989,"title":{},"body":{"injectables/UsersService.html":{}}}],["findpasswordreset",{"_index":1395,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpasswordreset(query",{"_index":1407,"title":{},"body":{"injectables/MailerService.html":{}}}],["findpublicfile",{"_index":1097,"title":{},"body":{"injectables/FilesService.html":{}}}],["findpublicfile(id",{"_index":1109,"title":{},"body":{"injectables/FilesService.html":{}}}],["finduseractivation",{"_index":1396,"title":{},"body":{"injectables/MailerService.html":{}}}],["finduseractivation(query",{"_index":1409,"title":{},"body":{"injectables/MailerService.html":{}}}],["finish",{"_index":1931,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["finished",{"_index":1778,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":498,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["folder",{"_index":879,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{}}}],["forbiddenexception",{"_index":493,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":496,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":318,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotpasswordlink",{"_index":791,"title":{},"body":{"classes/EmailChangedEmail.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendPasswordChangedJob.html":{}}}],["format",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["found",{"_index":646,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":2104,"title":{},"body":{"index.html":{}}}],["frombuffer(buffer",{"_index":1248,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["frontend_domain",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":741,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":756,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":759,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":757,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(path).then(buffer",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":751,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":298,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/File.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/typealiases.html":{}}}],["function(next",{"_index":853,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":909,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["gcloud",{"_index":1735,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["generated",{"_index":846,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(32",{"_index":855,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["get(\"@me",{"_index":1968,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":1622,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"confirm",{"_index":1648,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get(\"download/:id",{"_index":990,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"hello",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"search/@:username",{"_index":1971,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"sessions",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('@me",{"_index":1959,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":1581,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('confirm",{"_index":1599,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('download/:id')@optionalauth",{"_index":963,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('hello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["get('search/@:username",{"_index":1962,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('sessions')@useguards(authguard",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":1152,"title":{},"body":{"controllers/HealthController.html":{}}}],["getclientip",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getsessions",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessions(uid",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsize",{"_index":1826,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2100,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":689,"title":{},"body":{"classes/Counter.html":{}}}],["global",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["google",{"_index":1141,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1131,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1770,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1135,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["graph",{"_index":2158,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":2136,"title":{},"body":{"index.html":{}}}],["guard",{"_index":462,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleerror",{"_index":1050,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handleerror(error",{"_index":1059,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure",{"_index":1051,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefailure(job",{"_index":1062,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlefiledeletion",{"_index":1052,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1066,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handler",{"_index":1002,"title":{},"body":{"controllers/FilesController.html":{}}}],["handlestall",{"_index":1053,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["handlestall(job",{"_index":1069,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["hapi/joi",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hash",{"_index":1234,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["hashed",{"_index":1869,"title":{},"body":{"classes/User.html":{}}}],["headers",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1150,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1181,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1156,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1157,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1158,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1148,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1159,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":143,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2110,"title":{},"body":{"index.html":{}}}],["hello",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2145,"title":{},"body":{"index.html":{}}}],["hey",{"_index":803,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["hh",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":880,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"classes/User.html":{}}}],["hideschemaproperty",{"_index":834,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hideschemaproperty([\"_id",{"_index":839,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["hook",{"_index":849,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1209,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":1490,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["hours.\\n",{"_index":875,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["html",{"_index":779,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":1493,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1176,"title":{},"body":{"controllers/HealthController.html":{},"injectables/MailerService.html":{}}}],["httpmodule",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://nestjs.com",{"_index":2152,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1507,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1494,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["id",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/ISession.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["ignore",{"_index":997,"title":{},"body":{"controllers/FilesController.html":{}}}],["immediately",{"_index":805,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["implements",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["inactivity.\\n",{"_index":1937,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["incorrect",{"_index":1193,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1189,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"injectables/SettingsService.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["increment",{"_index":668,"title":{},"body":{"classes/Counter.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["inject",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["inject(logger",{"_index":1077,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["inject(nodemailer_module_options",{"_index":1373,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel",{"_index":1113,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":1421,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(file.name",{"_index":1114,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":1422,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(useractivation.name",{"_index":1423,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectqueue",{"_index":577,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":581,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":582,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["inspired",{"_index":2111,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2116,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2118,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1007,"title":{},"body":{"controllers/FilesController.html":{}}}],["interface",{"_index":290,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/FileMetadata.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":292,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/FileMetadata.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"overview.html":{}}}],["interfaces/create",{"_index":1757,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/email.interface",{"_index":795,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["interfaces/file",{"_index":1758,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1278,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1360,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["interfaces/session.interface",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/SessionDto.html":{}}}],["interfaces/storage",{"_index":743,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1760,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1000,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(result.error",{"_index":1535,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1200,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":537,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationlink",{"_index":1218,"title":{"classes/InvalidEmailConfirmationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":538,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":1221,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["ioredis",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISession.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":678,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":600,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":591,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["iscurrent",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{}}}],["isemail",{"_index":612,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["isession",{"_index":328,"title":{"interfaces/ISession.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["isnotempty",{"_index":601,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isnotempty()@isstring",{"_index":1228,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":622,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/LoginDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isoptional",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isstring",{"_index":602,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["iuaparser.ibrowser",{"_index":1186,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.idevice",{"_index":1187,"title":{},"body":{"interfaces/ISession.html":{}}}],["iuaparser.ios",{"_index":1188,"title":{},"body":{"interfaces/ISession.html":{}}}],["job",{"_index":1063,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.data.displayname",{"_index":1378,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.data.fileid",{"_index":1086,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["job.data.to",{"_index":1386,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["job.failedreason",{"_index":1082,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.id",{"_index":1079,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.interface",{"_index":1361,"title":{},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{}}}],["job.interface.ts",{"_index":1564,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["job.name",{"_index":1081,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1088,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1074,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["jobs/send",{"_index":1363,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["joi",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2143,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":809,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["jpeg|jpg|png/gi",{"_index":1629,"title":{},"body":{"controllers/SettingsController.html":{}}}],["js",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":1901,"title":{},"body":{"classes/User.html":{}}}],["kamil",{"_index":2149,"title":{},"body":{"index.html":{}}}],["kb",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["kbtobytes",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keepcomments",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1499,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["large",{"_index":941,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["lastused",{"_index":1184,"title":{},"body":{"interfaces/ISession.html":{}}}],["later",{"_index":1216,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":2155,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":2134,"title":{},"body":{"index.html":{}}}],["limit",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["limits",{"_index":701,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{}}}],["line",{"_index":1311,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["link",{"_index":807,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["literal",{"_index":1102,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ISession.html":{},"interfaces/StorageOptions.html":{}}}],["log",{"_index":1005,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":495,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1055,"title":{},"body":{"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{}}}],["login",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["login(undefined",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":323,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logout",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@session",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(identifier",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(session",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutalldevices",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutalldevices(uid",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":625,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1546,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":596,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["lowercase",{"_index":844,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["mailer",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/SettingsService.html":{}}}],["mailer.constants",{"_index":1275,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1276,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1277,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":144,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1260,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1267,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1279,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1255,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerprocessor.name",{"_index":1384,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["mailerservice",{"_index":512,"title":{"injectables/MailerService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["manually",{"_index":1006,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":947,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.min(math.max(x",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":1911,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["max(max_port",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["max_chunk_size",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":1912,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxactiveuploadsessionserror",{"_index":647,"title":{"classes/MaxActiveUploadSessionsError.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["maxfiles",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":650,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["maxlength",{"_index":603,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(32",{"_index":607,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/RegisterDto.html":{}}}],["mb",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mbtobytes",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["md5",{"_index":1241,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["md5.update(chunk",{"_index":1246,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["md5passthrough",{"_index":1232,"title":{"interfaces/MD5Passthrough.html":{}},"body":{"interfaces/MD5Passthrough.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["me(@currentuser",{"_index":1969,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":1958,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":1970,"title":{},"body":{"controllers/UsersController.html":{}}}],["memory",{"_index":1166,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1160,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":592,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{}}}],["metadata",{"_index":709,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["metadata.interface",{"_index":708,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{}}}],["metadata.interface.ts",{"_index":929,"title":{},"body":{"interfaces/FileMetadata.html":{},"coverage.html":{}}}],["meter",{"_index":1765,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":1810,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":1820,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":1825,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":1823,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":1827,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":120,"title":{},"body":{"modules/AdminModule.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares/admin.middleware",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":932,"title":{},"body":{"interfaces/FileMetadata.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{}}}],["min",{"_index":904,"title":{},"body":{"classes/File.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["min(0",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["min(kbtobytes(8",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minify",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifycss",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minifyoptions",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":629,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":630,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["minutes",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2165,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1558,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1556,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2133,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":2074,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html(mjml",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2124,"title":{},"body":{"index.html":{}}}],["model",{"_index":1099,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["modify",{"_index":2170,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":299,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.errors",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/SettingsService.html":{}}}],["modules/auth/auth.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{}}}],["modules/auth/auth.service",{"_index":1683,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/bull",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/SettingsModule.html":{}}}],["modules/files/files.service",{"_index":1618,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/health/health.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["modules/settings/settings.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/storage/storage.module",{"_index":1041,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["modules/storage/storage.service",{"_index":981,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{}}}],["modules/users/schemas/user.schema",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["modules/users/users.errors",{"_index":1685,"title":{},"body":{"injectables/SettingsService.html":{}}}],["modules/users/users.module",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["mongo",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1161,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1043,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2144,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":830,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1477,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":843,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":1868,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["myśliwiec",{"_index":2150,"title":{},"body":{"index.html":{}}}],["n",{"_index":680,"title":{},"body":{"classes/Counter.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["name')@useguards(authguard",{"_index":1589,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto",{"_index":1614,"title":{},"body":{"controllers/SettingsController.html":{}}}],["name.dto.ts",{"_index":589,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:10",{"_index":599,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{}}}],["names",{"_index":593,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/User.html":{}}}],["ne",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["nest",{"_index":2080,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2154,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":578,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":300,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1162,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":494,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/MD5Passthrough.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UploadSessionNotFound.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":1671,"title":{},"body":{"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newdisplayname",{"_index":590,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newemail",{"_index":611,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["newfilename",{"_index":905,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/RenameFileDto.html":{}}}],["newpassword",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"interfaces/MailerOptions.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2103,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["nodejs.errnoexception",{"_index":995,"title":{},"body":{"controllers/FilesController.html":{}}}],["nodemailer",{"_index":580,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1346,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer_module_id",{"_index":1273,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1274,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":942,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":638,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{}}}],["notfoundexception(\"user",{"_index":1973,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":2117,"title":{},"body":{"index.html":{}}}],["null",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1870,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":1214,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["old",{"_index":627,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{}}}],["oldpassword",{"_index":621,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["olduser",{"_index":1705,"title":{},"body":{"injectables/SettingsService.html":{}}}],["on(\"error",{"_index":1812,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":1813,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":1814,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":1816,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":1815,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1321,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":669,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":682,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":660,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["onqueueerror",{"_index":1060,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuefailed",{"_index":1064,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["onqueuestalled",{"_index":1070,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["open",{"_index":2135,"title":{},"body":{"index.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["optional.decorator",{"_index":979,"title":{},"body":{"controllers/FilesController.html":{}}}],["optional.decorator.ts",{"_index":2008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":977,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":304,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{}}}],["options.field",{"_index":1791,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter",{"_index":1775,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1776,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.imports",{"_index":1296,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1302,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":302,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":294,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["options.limits",{"_index":1774,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.transformers",{"_index":1800,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1301,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1298,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1299,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1303,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1304,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1731,"title":{},"body":{"modules/StorageModule.html":{}}}],["os",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1753,"title":{},"body":{"injectables/StorageService.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":2160,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1894,"title":{},"body":{"classes/User.html":{}}}],["package",{"_index":2047,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":986,"title":{},"body":{"controllers/FilesController.html":{}}}],["param(\"identifier",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["partialfilterexpression",{"_index":1867,"title":{},"body":{"classes/User.html":{}}}],["partialuserdto",{"_index":1447,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["parts",{"_index":951,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["pass",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":1235,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailChangedEmail.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["password')@useguards(authguard",{"_index":1596,"title":{},"body":{"controllers/SettingsController.html":{}}}],["password.dto",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["password.dto.ts",{"_index":620,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":626,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:12",{"_index":1555,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":628,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:16",{"_index":1557,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1130,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":1440,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordchangedemail",{"_index":1353,"title":{"classes/PasswordChangedEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"coverage.html":{}}}],["passwordchangedemail(job.data.forgotpasswordlink",{"_index":1381,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordreset",{"_index":557,"title":{"classes/PasswordReset.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["passwordreset.deleteone",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.id",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":1292,"title":{},"body":{"modules/MailerModule.html":{}}}],["passwordreset[\"token",{"_index":1559,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["passwordresetemail",{"_index":1355,"title":{"classes/PasswordResetEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["passwordresetemail(job.data.resetpasswordlink",{"_index":1382,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["passwordresets",{"_index":1399,"title":{},"body":{"injectables/MailerService.html":{}}}],["passwordresetschema",{"_index":1283,"title":{},"body":{"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1479,"title":{},"body":{"classes/PasswordReset.html":{}}}],["patch",{"_index":972,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["patch(\"change",{"_index":1625,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch(\"rename/:id",{"_index":1012,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('change",{"_index":1585,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch('rename/:id",{"_index":967,"title":{},"body":{"controllers/FilesController.html":{}}}],["path",{"_index":122,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":747,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.isabsolute(value",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":763,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":760,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1172,"title":{},"body":{"controllers/HealthController.html":{}}}],["pathfromstring",{"_index":2042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["payloadtoolargeexception",{"_index":936,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["pick",{"_index":295,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1798,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1802,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1803,"title":{},"body":{"injectables/StorageService.html":{}}}],["plaintoclass",{"_index":901,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["plaintoclass(cls",{"_index":1902,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(filedto",{"_index":910,"title":{},"body":{"classes/File.html":{}}}],["plaintoclass(userdto",{"_index":1903,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":654,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/FileNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/UploadSessionNotFound.html":{},"classes/UserActivationEmail.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":1637,"title":{},"body":{"controllers/SettingsController.html":{}}}],["poolsize",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["post",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{}}}],["post(\"change",{"_index":1644,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"delete",{"_index":1651,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"forgot",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"resend",{"_index":1654,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post(\"reset",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1016,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('change",{"_index":1592,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('delete",{"_index":1603,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('forgot",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.8)@useguards(recaptchaguard",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('resend",{"_index":1607,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('reset",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":970,"title":{},"body":{"controllers/FilesController.html":{}}}],["pre",{"_index":847,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":996,"title":{},"body":{"controllers/FilesController.html":{}}}],["prevent",{"_index":1892,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1072,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{}}}],["process(\"delete",{"_index":1084,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1375,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1067,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1336,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1073,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1372,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1076,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":2102,"title":{},"body":{"index.html":{}}}],["project",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AppController.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1022,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":831,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":889,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["prop({default",{"_index":818,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({lowercase",{"_index":820,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":886,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["prop({min",{"_index":895,"title":{},"body":{"classes/File.html":{}}}],["prop({required",{"_index":1857,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":296,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provider",{"_index":1262,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":881,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{}}}],["pump",{"_index":704,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":1807,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1799,"title":{},"body":{"injectables/StorageService.html":{}}}],["qs",{"_index":1502,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["query",{"_index":1406,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["queue",{"_index":573,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":900,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["read",{"_index":1741,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1749,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":736,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":994,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1804,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1011,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1792,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1151,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["recaptcha",{"_index":1226,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1509,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1508,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1503,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1504,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1511,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1510,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_url",{"_index":1506,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":385,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.8",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["record",{"_index":1565,"title":{},"body":{"interfaces/SendEmailJob.html":{},"miscellaneous/variables.html":{}}}],["recursive",{"_index":758,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":1893,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["register",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1266,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1270,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1271,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdto",{"_index":335,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":1933,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["reject",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1788,"title":{},"body":{"injectables/StorageService.html":{}}}],["remoteip",{"_index":1519,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["removeemptyattributes",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rename",{"_index":882,"title":{},"body":{"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["rename(id",{"_index":1111,"title":{},"body":{"injectables/FilesService.html":{}}}],["rename(undefined",{"_index":965,"title":{},"body":{"controllers/FilesController.html":{}}}],["renamefiledto",{"_index":966,"title":{"classes/RenameFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/RenameFileDto.html":{},"coverage.html":{}}}],["rendermjml",{"_index":796,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendermjml(\"./templates/email",{"_index":798,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{}}}],["rendermjml(\"./templates/password",{"_index":1468,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["rendermjml(\"./templates/user",{"_index":1928,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["repository",{"_index":2115,"title":{},"body":{"index.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/CreateFileOptions.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{}}}],["req.body",{"_index":1516,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":1818,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.pipe(busboy",{"_index":1817,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":488,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/CreateFileOptions.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["requested",{"_index":1488,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["requestmethod",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":121,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1307,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1524,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1009,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1010,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1213,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resenduseractivation",{"_index":1579,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(@currentuser",{"_index":1655,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivation(user",{"_index":1606,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resenduseractivationemail",{"_index":1664,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resenduseractivationemail(user",{"_index":1681,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resent",{"_index":1906,"title":{},"body":{"classes/UserActivation.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"classes/EmailChangedEmail.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/ResetPasswordDto.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset.email",{"_index":1356,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.email.ts",{"_index":1480,"title":{},"body":{"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["reset.email.ts:15",{"_index":1484,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:19",{"_index":1485,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:5",{"_index":1482,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.email.ts:8",{"_index":1483,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.job",{"_index":1369,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["reset.job.ts",{"_index":1566,"title":{},"body":{"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["reset.mjml",{"_index":1486,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["reset.schema",{"_index":1285,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResetPasswordDto.html":{}}}],["reset.schema.ts",{"_index":1471,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:20",{"_index":1472,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:21",{"_index":1476,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:27",{"_index":1473,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:36",{"_index":1474,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:45",{"_index":1475,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":339,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordlink",{"_index":1438,"title":{},"body":{"injectables/MailerService.html":{},"classes/PasswordResetEmail.html":{},"interfaces/SendPasswordResetJob.html":{}}}],["resize(512",{"_index":1635,"title":{},"body":{"controllers/SettingsController.html":{}}}],["resolve",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1789,"title":{},"body":{"injectables/StorageService.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1541,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1534,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1542,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1536,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ret[property",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserActivationEmail.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revokeallsessions",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(@currentuser",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokeallsessions(user",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(@currentuser",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["revokesession(user",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["rimraf",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["rotate",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":2121,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["safety",{"_index":1895,"title":{},"body":{"classes/User.html":{}}}],["same",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":848,"title":{},"body":{"classes/EmailConfirmation.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2107,"title":{},"body":{"index.html":{}}}],["schema",{"_index":832,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":833,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":851,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(file",{"_index":907,"title":{},"body":{"classes/File.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1478,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1873,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":1918,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/email",{"_index":1281,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/file.schema",{"_index":1040,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/RenameFileDto.html":{}}}],["schemas/password",{"_index":1284,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user",{"_index":1288,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["schemas/user.schema",{"_index":1966,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["score",{"_index":1514,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1957,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":1972,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":1961,"title":{},"body":{"controllers/UsersController.html":{}}}],["secret",{"_index":1520,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["secure",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["sendemailchanged",{"_index":1322,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailchanged(job",{"_index":1335,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailchanged(user",{"_index":1411,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailchangedjob",{"_index":1362,"title":{"interfaces/SendEmailChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"coverage.html":{}}}],["sendemailconfirmation",{"_index":1323,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendemailconfirmation(job",{"_index":1338,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendemailconfirmation(newemail",{"_index":1413,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendemailconfirmationjob",{"_index":1365,"title":{"interfaces/SendEmailConfirmationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailConfirmationJob.html":{},"coverage.html":{}}}],["sendemailjob",{"_index":1359,"title":{"interfaces/SendEmailJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["sendpasswordchanged",{"_index":1324,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordchanged(job",{"_index":1340,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordchanged(user",{"_index":1415,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordchangedjob",{"_index":1367,"title":{"interfaces/SendPasswordChangedJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordChangedJob.html":{},"coverage.html":{}}}],["sendpasswordreset",{"_index":1325,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["sendpasswordreset(job",{"_index":1342,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["sendpasswordreset(user",{"_index":1417,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendpasswordresetjob",{"_index":1368,"title":{"interfaces/SendPasswordResetJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendPasswordResetJob.html":{},"coverage.html":{}}}],["senduseractivation",{"_index":1326,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["senduseractivation(job",{"_index":1344,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["senduseractivation(user",{"_index":1419,"title":{},"body":{"injectables/MailerService.html":{}}}],["senduseractivationjob",{"_index":1370,"title":{"interfaces/SendUserActivationJob.html":{}},"body":{"injectables/MailerProcessor.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["server",{"_index":642,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{},"index.html":{}}}],["session",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"interfaces/IRequest.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"dependencies.html":{}}}],["session.cookie",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.destroy(error",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.ip",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session/:identifier",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["session/:identifier')@useguards(authguard",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["session_secret",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":373,"title":{"interfaces/SessionDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/SessionDto.html":{},"coverage.html":{}}}],["sessions",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["sessions')@useguards(authguard",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(@currentuser",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions(user",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions.map",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessions.map(session",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":670,"title":{},"body":{"classes/Counter.html":{},"classes/User.html":{}}}],["set(value",{"_index":685,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(\"auth_optional",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":579,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":583,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settimeout(resolve",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":1571,"title":{},"body":{"controllers/SettingsController.html":{}}}],["settings.controller",{"_index":1662,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.errors",{"_index":1684,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.service",{"_index":1612,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingscontroller",{"_index":1569,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":145,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":1611,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["settle",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle([confirmation.deleteone",{"_index":1708,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settle([this.logoutalldevices(user.id",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle([this.mailer.sendpasswordchanged(user",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["settle(files.map(file",{"_index":1782,"title":{},"body":{"injectables/StorageService.html":{}}}],["sharp",{"_index":1610,"title":{},"body":{"controllers/SettingsController.html":{},"dependencies.html":{}}}],["shouldthrow",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{}}}],["shouldthrow(new",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{}}}],["side",{"_index":2108,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":883,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/variables.html":{}}}],["smtp_from",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1306,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1314,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"classes/DeleteAccountDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":2138,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calculatemd5.ts",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clamp.ts",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delay.ts",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2168,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../file.schema.ts",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fileaccessibile.ts",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filternullandundefined.ts",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hideschemaproperty.ts",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modifyinterface.ts",{"_index":2171,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../password",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pathfromstring.ts",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rendermjml.ts",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:6",{"_index":133,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/auth",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/internal",{"_index":1201,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:19",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:22",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1491,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:26",{"_index":1495,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:33",{"_index":1500,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:81",{"_index":1497,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1182,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/interfaces/session.interface.ts",{"_index":1183,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":490,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":491,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":492,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:19",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":124,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":127,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:100",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:106",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:112",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:118",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:50",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:62",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:85",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:95",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1190,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1223,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":1951,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":1953,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1191,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1217,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":503,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:36",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:44",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:53",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:60",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:67",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:72",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1129,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1225,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:12",{"_index":1229,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:16",{"_index":1230,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:8",{"_index":1227,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1544,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:16",{"_index":1545,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:21",{"_index":1547,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:25",{"_index":1548,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:31",{"_index":1550,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1554,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/session.dto.ts",{"_index":1568,"title":{},"body":{"interfaces/SessionDto.html":{},"coverage.html":{}}}],["src/modules/bull",{"_index":568,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts",{"_index":917,"title":{},"body":{"classes/FileDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/file.dto.ts:11",{"_index":922,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:13",{"_index":923,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:15",{"_index":924,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:17",{"_index":925,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:19",{"_index":926,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:21",{"_index":927,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:4",{"_index":918,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:6",{"_index":919,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/file.dto.ts:8",{"_index":920,"title":{},"body":{"classes/FileDto.html":{}}}],["src/modules/files/dto/rename",{"_index":1551,"title":{},"body":{"classes/RenameFileDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":957,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:46",{"_index":961,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:52",{"_index":964,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:80",{"_index":968,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:89",{"_index":971,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":633,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:15",{"_index":1445,"title":{},"body":{"classes/MaxActiveUploadSessionsError.html":{}}}],["src/modules/files/files.errors.ts:23",{"_index":1834,"title":{},"body":{"classes/UploadSessionNotFound.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":636,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":933,"title":{},"body":{"classes/FileNotFound.html":{}}}],["src/modules/files/files.module.ts",{"_index":1036,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1048,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1056,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:20",{"_index":1061,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:25",{"_index":1065,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:30",{"_index":1071,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:35",{"_index":1068,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:44",{"_index":1058,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1094,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:13",{"_index":1100,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:22",{"_index":1103,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:33",{"_index":1104,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:42",{"_index":1106,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:52",{"_index":1108,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:59",{"_index":1110,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:66",{"_index":1112,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":717,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/file.schema.ts",{"_index":876,"title":{},"body":{"classes/File.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/file.schema.ts:14",{"_index":885,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:15",{"_index":899,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:22",{"_index":888,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:31",{"_index":890,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:36",{"_index":891,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:46",{"_index":892,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:51",{"_index":893,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:57",{"_index":896,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:66",{"_index":898,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:68",{"_index":894,"title":{},"body":{"classes/File.html":{}}}],["src/modules/files/schemas/file.schema.ts:69",{"_index":897,"title":{},"body":{"classes/File.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1149,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1153,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1179,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/emails/confirm",{"_index":860,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/email",{"_index":787,"title":{},"body":{"classes/EmailChangedEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/password",{"_index":1467,"title":{},"body":{"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts",{"_index":1922,"title":{},"body":{"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:15",{"_index":1926,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:19",{"_index":1927,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:5",{"_index":1924,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/emails/user.activation.email.ts:8",{"_index":1925,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":778,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":782,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":783,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":784,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1305,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1563,"title":{},"body":{"interfaces/SendEmailJob.html":{},"coverage.html":{}}}],["src/modules/mailer/jobs/send",{"_index":1560,"title":{},"body":{"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1256,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:44",{"_index":1268,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:60",{"_index":1272,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:74",{"_index":1265,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:88",{"_index":1261,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1318,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:29",{"_index":1348,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:31",{"_index":1327,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:41",{"_index":1334,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:46",{"_index":1331,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:51",{"_index":1332,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:56",{"_index":1333,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:61",{"_index":1337,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:66",{"_index":1339,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:74",{"_index":1341,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:82",{"_index":1343,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:87",{"_index":1345,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:91",{"_index":1328,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:95",{"_index":1330,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1392,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:19",{"_index":1401,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:37",{"_index":1402,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:45",{"_index":1405,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:51",{"_index":1408,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:55",{"_index":1410,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:59",{"_index":1412,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:67",{"_index":1414,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:77",{"_index":1416,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:85",{"_index":1418,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:95",{"_index":1420,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/schemas/email",{"_index":811,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/password",{"_index":1470,"title":{},"body":{"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/schemas/user",{"_index":1904,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/settings/dto/change",{"_index":587,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/modules/settings/dto/delete",{"_index":713,"title":{},"body":{"classes/DeleteAccountDto.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts",{"_index":1570,"title":{},"body":{"controllers/SettingsController.html":{},"coverage.html":{}}}],["src/modules/settings/settings.controller.ts:104",{"_index":1597,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:112",{"_index":1601,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:118",{"_index":1605,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:124",{"_index":1609,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:46",{"_index":1583,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:52",{"_index":1587,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:89",{"_index":1590,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.controller.ts:98",{"_index":1594,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/modules/settings/settings.errors.ts",{"_index":1219,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"coverage.html":{}}}],["src/modules/settings/settings.errors.ts:3",{"_index":1224,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/settings/settings.errors.ts:9",{"_index":1220,"title":{},"body":{"classes/InvalidEmailConfirmationLink.html":{}}}],["src/modules/settings/settings.module.ts",{"_index":1661,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/modules/settings/settings.service.ts",{"_index":1663,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/modules/settings/settings.service.ts:107",{"_index":1682,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:23",{"_index":1666,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:31",{"_index":1668,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:42",{"_index":1670,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:52",{"_index":1673,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:60",{"_index":1675,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:68",{"_index":1677,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:77",{"_index":1678,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/settings/settings.service.ts:95",{"_index":1680,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":721,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":729,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":740,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:33",{"_index":735,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:37",{"_index":738,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:42",{"_index":731,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:46",{"_index":733,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1132,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/create",{"_index":698,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/file",{"_index":928,"title":{},"body":{"interfaces/FileMetadata.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":293,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":1835,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":935,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":1830,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":1831,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":1832,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":938,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":1833,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1446,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1722,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1725,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1726,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1724,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1723,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1739,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:148",{"_index":1745,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:39",{"_index":1743,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:42",{"_index":1754,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:44",{"_index":1748,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:51",{"_index":1747,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:55",{"_index":1750,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:59",{"_index":1752,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/partial",{"_index":1448,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":1938,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":1942,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":1943,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":1944,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":1945,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":1946,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":1947,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":1948,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":1949,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":1950,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":1939,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":1940,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":1941,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1837,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":1858,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":1861,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":1840,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":1844,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":1845,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:118",{"_index":1846,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:119",{"_index":1847,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:120",{"_index":1848,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:121",{"_index":1850,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:122",{"_index":1851,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:123",{"_index":1859,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":1849,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":1860,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":1841,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":1842,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":1843,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":1852,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":1853,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":1854,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":1855,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":1856,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":1956,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:20",{"_index":1960,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:25",{"_index":1963,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":765,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:15",{"_index":1954,"title":{},"body":{"classes/UsernameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:21",{"_index":1952,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:3",{"_index":767,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{}}}],["src/modules/users/users.errors.ts:9",{"_index":785,"title":{},"body":{"classes/EmailAlreadyExists.html":{}}}],["src/modules/users/users.module.ts",{"_index":1978,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":1981,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":1982,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:14",{"_index":1984,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:21",{"_index":1990,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:25",{"_index":1988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/calculatemd5.ts",{"_index":1233,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/clamp.ts",{"_index":2031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":665,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":676,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":677,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":679,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":674,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":686,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":684,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":688,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":690,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/delay.ts",{"_index":2033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/fileaccessibile.ts",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/filternullandundefined.ts",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/generateid.ts",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/hideschemaproperty.ts",{"_index":2040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/modifyinterface.ts",{"_index":2172,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/pathfromstring.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/rendermjml.ts",{"_index":2043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":1819,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["stalled",{"_index":1083,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["start",{"_index":2122,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2125,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2126,"title":{},"body":{"index.html":{}}}],["started",{"_index":2101,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2114,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1385,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["statements",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1257,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1210,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["stay",{"_index":2146,"title":{},"body":{"index.html":{}}}],["storage",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/SettingsController.html":{},"interfaces/StorageOptionsFactory.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1729,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1756,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1730,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1727,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1728,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":722,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1034,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1045,"title":{},"body":{"modules/FilesModule.html":{},"modules/SettingsModule.html":{}}}],["storageoptions",{"_index":301,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":303,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":980,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"controllers/SettingsController.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":703,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/MD5Passthrough.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{}}}],["streammeter",{"_index":1763,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["string",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChunkAlreadyUploaded.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"interfaces/Email.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/ISession.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1501,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":780,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["successful",{"_index":1538,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["successfully",{"_index":1089,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["super",{"_index":648,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(\"invalid",{"_index":1194,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"missing",{"_index":953,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":943,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"please",{"_index":1198,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"too",{"_index":946,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"you",{"_index":1199,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1192,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`chunk",{"_index":639,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`display",{"_index":769,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`email",{"_index":772,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`file",{"_index":645,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`upload",{"_index":663,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["super(`user",{"_index":777,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super(`username",{"_index":775,"title":{},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2139,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2156,"title":{},"body":{"modules.html":{}}}],["t",{"_index":1498,"title":{},"body":{"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["tasks",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":1180,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":2129,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2132,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2131,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2128,"title":{},"body":{"index.html":{}}}],["text",{"_index":781,"title":{},"body":{"interfaces/Email.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["thanks",{"_index":2137,"title":{},"body":{"index.html":{}}}],["then(count",{"_index":1999,"title":{},"body":{"injectables/UsersService.html":{}}}],["then(file",{"_index":1029,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(id",{"_index":1875,"title":{},"body":{"classes/User.html":{}}}],["then(res",{"_index":1523,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(sessions",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(token",{"_index":856,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this._createbusboy(req",{"_index":1773,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._debug(`[job",{"_index":1078,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1513,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1515,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._send",{"_index":1379,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._send(new",{"_index":1376,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this._size",{"_index":1828,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._value",{"_index":692,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":1881,"title":{},"body":{"classes/User.html":{}}}],["this.activationlink",{"_index":1930,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["this.auth.forgotpassword(email",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.getsessions(user.id).then(sessions",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logout(identifier",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.logoutalldevices(user.id",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SettingsService.html":{}}}],["this.auth.register(email",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1884,"title":{},"body":{"classes/User.html":{}}}],["this.baseurl}/activate",{"_index":1443,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/confirm",{"_index":1435,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/forgot",{"_index":1432,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.baseurl}/reset",{"_index":1439,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1146,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1147,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1145,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"max_file_size",{"_index":1021,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1019,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1521,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.confirmemaillink",{"_index":868,"title":{},"body":{"classes/EmailConfirmationEmail.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1300,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1297,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1168,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(file.id",{"_index":1783,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":1897,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1171,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.displayname",{"_index":800,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/User.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname},\\n",{"_index":1489,"title":{},"body":{"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["this.displayname}\\n",{"_index":804,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1175,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":1887,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":1434,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.deletemany",{"_index":1424,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailconfirmations.findone(query",{"_index":1427,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1430,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":693,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1768,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1772,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1797,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1771,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.expiresat",{"_index":1882,"title":{},"body":{"classes/User.html":{}}}],["this.filename",{"_index":915,"title":{},"body":{"classes/File.html":{}}}],["this.files",{"_index":1024,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["this.files(options).save",{"_index":1121,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.create",{"_index":1638,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.files.delete(id",{"_index":987,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.delete(user.avatar",{"_index":1691,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.deleteallfor(user.id",{"_index":1710,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.files.findone",{"_index":1127,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files.findone(id",{"_index":991,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findpublicfile(id",{"_index":992,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.rename(id",{"_index":1013,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":584,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1123,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone(id",{"_index":1122,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.forgotpasswordlink",{"_index":801,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/PasswordChangedEmail.html":{}}}],["this.health.check",{"_index":1167,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http",{"_index":1518,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":1295,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.ismodified(\"password",{"_index":1877,"title":{},"body":{"classes/User.html":{}}}],["this.isnew",{"_index":854,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.logger.debug",{"_index":1091,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.debug(message",{"_index":1092,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(error",{"_index":1008,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["this.logger.error(exception.message",{"_index":1212,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.deleteallfor(user.id",{"_index":1711,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findemailconfirmation",{"_index":1701,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.findpasswordreset",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.finduseractivation",{"_index":1686,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailchanged(olduser",{"_index":1709,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendemailconfirmation(newemail",{"_index":1698,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordchanged(user",{"_index":1700,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.mailer.sendpasswordreset(user",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.senduseractivation(user",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1177,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.on(string(n",{"_index":696,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":695,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1767,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":1876,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":1437,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.deletemany",{"_index":1425,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.passwordresets.findone(query",{"_index":1428,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.reflector.get",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.get(key",{"_index":1543,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.resetpasswordlink",{"_index":1487,"title":{},"body":{"classes/PasswordResetEmail.html":{}}}],["this.save",{"_index":916,"title":{},"body":{"classes/File.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.sessions",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deletemany",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessions.deleteone",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settings.activate(token",{"_index":1624,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeavatar(avatar.id",{"_index":1642,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changedisplayname(newdisplayname",{"_index":1643,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changeemail(newemail",{"_index":1646,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.changepassword(oldpassword",{"_index":1647,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.confirmemail(token",{"_index":1650,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.deleteaccount(password",{"_index":1653,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settings.resenduseractivationemail(user",{"_index":1656,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1087,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":993,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.storage.write(req",{"_index":1018,"title":{},"body":{"controllers/FilesController.html":{},"controllers/SettingsController.html":{}}}],["this.times_resent",{"_index":1921,"title":{},"body":{"classes/UserActivation.html":{}}}],["this.tojson",{"_index":911,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["this.token",{"_index":857,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail",{"_index":1387,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1374,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.useractivations",{"_index":1441,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.deletemany",{"_index":1426,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.useractivations.findone(query",{"_index":1429,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.users",{"_index":1995,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.create(email",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.exists",{"_index":1694,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":1996,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.value",{"_index":694,"title":{},"body":{"classes/Counter.html":{}}}],["thresholdpercent",{"_index":1173,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SettingsController.html":{}}}],["throttle(25",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(30",{"_index":1620,"title":{},"body":{"controllers/SettingsController.html":{}}}],["throttle_limit",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SettingsController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":1169,"title":{},"body":{"controllers/HealthController.html":{}}}],["times_resent",{"_index":1907,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamps",{"_index":836,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["tls",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["toarray",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["todto",{"_index":884,"title":{},"body":{"classes/File.html":{},"classes/User.html":{}}}],["tojson",{"_index":837,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["token",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["toobject",{"_index":841,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["toomanyfields",{"_index":945,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":949,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":950,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1522,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["touch",{"_index":2147,"title":{},"body":{"index.html":{}}}],["transform",{"_index":838,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["transform(chunk",{"_index":1243,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["transformcallback",{"_index":1238,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":902,"title":{},"body":{"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1801,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":1865,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":702,"title":{},"body":{"interfaces/CreateFileOptions.html":{},"controllers/SettingsController.html":{}}}],["transport",{"_index":1308,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1319,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":821,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":750,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2153,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/ChunkAlreadyUploaded.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/EmailChangedEmail.html":{},"classes/EmailConfirmation.html":{},"classes/EmailConfirmationEmail.html":{},"classes/File.html":{},"classes/FileDto.html":{},"interfaces/FileMetadata.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"interfaces/MD5Passthrough.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordReset.html":{},"classes/PasswordResetEmail.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"interfaces/SendEmailChangedJob.html":{},"interfaces/SendEmailConfirmationJob.html":{},"interfaces/SendEmailJob.html":{},"interfaces/SendPasswordChangedJob.html":{},"interfaces/SendPasswordResetJob.html":{},"interfaces/SendUserActivationJob.html":{},"interfaces/SessionDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserActivationEmail.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2166,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1312,"title":{},"body":{"interfaces/MailerOptions.html":{},"index.html":{}}}],["ua",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{}}}],["uid",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISession.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"controllers/FilesController.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"injectables/SettingsService.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":825,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unit",{"_index":2127,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsupported",{"_index":954,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":952,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":940,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"controllers/SettingsController.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedmediatypeexception(\"invalid",{"_index":1634,"title":{},"body":{"controllers/SettingsController.html":{}}}],["up",{"_index":1932,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["update(buffer",{"_index":1250,"title":{},"body":{"interfaces/MD5Passthrough.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":816,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/File.html":{},"classes/FileDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["upload",{"_index":653,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"controllers/FilesController.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{}}}],["upload(@currentuser",{"_index":1017,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(user",{"_index":969,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":641,"title":{},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/FileTooLarge.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UploadSessionNotFound.html":{}}}],["uploadedfile",{"_index":1759,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsessionnotfound",{"_index":661,"title":{"classes/UploadSessionNotFound.html":{}},"body":{"classes/ChunkAlreadyUploaded.html":{},"classes/FileNotFound.html":{},"classes/MaxActiveUploadSessionsError.html":{},"classes/UploadSessionNotFound.html":{},"coverage.html":{}}}],["uri",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["useexisting",{"_index":297,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{}}}],["usefindandmodify",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":256,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"controllers/FilesController.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/InvalidEmailConfirmationLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendUserActivationJob.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.activate",{"_index":1688,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.activated",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":1690,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeavatar(newavatarid",{"_index":1693,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changedisplayname(newdisplayname",{"_index":1696,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changeemail(confirmation.newemail",{"_index":1707,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.changepassword(newpassword",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.comparepassword(oldpassword",{"_index":1699,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.comparepassword(password",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SettingsService.html":{}}}],["user.decorator",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":1712,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.displayname",{"_index":1431,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.dto",{"_index":1466,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1449,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:7",{"_index":1453,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":1433,"title":{},"body":{"injectables/MailerService.html":{}}}],["user.id",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"injectables/MailerService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["user.id).catch",{"_index":1692,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user.id).then(deleted",{"_index":988,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.id).then(file",{"_index":1014,"title":{},"body":{"controllers/FilesController.html":{}}}],["user.name",{"_index":1980,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.todto(partialuserdto",{"_index":1974,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":1706,"title":{},"body":{"injectables/SettingsService.html":{}}}],["user[\"displayname",{"_index":608,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{}}}],["user[\"email",{"_index":618,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{}}}],["user[\"password",{"_index":631,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{}}}],["user[\"username",{"_index":1231,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["useractivation",{"_index":1286,"title":{"classes/UserActivation.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/UserActivation.html":{},"coverage.html":{}}}],["useractivation.name",{"_index":1293,"title":{},"body":{"modules/MailerModule.html":{}}}],["useractivationemail",{"_index":1357,"title":{"classes/UserActivationEmail.html":{}},"body":{"injectables/MailerProcessor.html":{},"classes/UserActivationEmail.html":{},"coverage.html":{}}}],["useractivationemail(job.data.activationlink",{"_index":1383,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["useractivations",{"_index":1400,"title":{},"body":{"injectables/MailerService.html":{}}}],["useractivationschema",{"_index":1287,"title":{},"body":{"modules/MailerModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.methods.resent",{"_index":1920,"title":{},"body":{"classes/UserActivation.html":{}}}],["useractivationschema.pre(\"save",{"_index":1919,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":1450,"title":{"classes/UserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1457,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1458,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1459,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1460,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1461,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1462,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1463,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1464,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1465,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1454,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1455,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1456,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernamealreadyexists",{"_index":773,"title":{"classes/UsernameAlreadyExists.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernamealreadyexists(username",{"_index":1994,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernames",{"_index":1549,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernotactivated",{"_index":470,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":776,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameAlreadyExists.html":{},"classes/EmailAlreadyExists.html":{},"injectables/SettingsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameAlreadyExists.html":{},"coverage.html":{}}}],["usernotfound(user.username",{"_index":1713,"title":{},"body":{"injectables/SettingsService.html":{}}}],["usernotloggedin",{"_index":471,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1979,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":1991,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":1964,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":1872,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.activate",{"_index":1880,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeavatar",{"_index":1883,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changedisplayname",{"_index":1885,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changeemail",{"_index":1886,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.changepassword",{"_index":1888,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.comparepassword",{"_index":1889,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":1896,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.deleteavatar",{"_index":1899,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":1900,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":1874,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":1955,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":96,"title":{"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/SettingsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1294,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":806,"title":{},"body":{"classes/EmailChangedEmail.html":{},"controllers/FilesController.html":{},"classes/PasswordChangedEmail.html":{}}}],["utils/chunk",{"_index":746,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/counter",{"_index":1762,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/hideschemaproperty",{"_index":835,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["utils/rendermjml",{"_index":797,"title":{},"body":{"classes/EmailChangedEmail.html":{},"classes/EmailConfirmationEmail.html":{},"classes/PasswordChangedEmail.html":{},"classes/PasswordResetEmail.html":{},"classes/UserActivationEmail.html":{}}}],["utils/settle",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/SettingsService.html":{},"injectables/StorageService.html":{}}}],["utils/stream",{"_index":1764,"title":{},"body":{"injectables/StorageService.html":{}}}],["valid",{"_index":614,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailConfirmationEmail.html":{},"classes/ForgotPasswordDto.html":{},"classes/PasswordResetEmail.html":{},"classes/RegisterDto.html":{}}}],["valid(\"development",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":822,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/User.html":{}}}],["validatebeforesave",{"_index":1898,"title":{},"body":{"classes/User.html":{}}}],["validationschema",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":604,"title":{},"body":{"classes/ChangeDisplayNameDto.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/DeleteAccountDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/RenameFileDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2173,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1540,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["virtuals",{"_index":1917,"title":{},"body":{"classes/UserActivation.html":{}}}],["visit",{"_index":871,"title":{},"body":{"classes/EmailConfirmationEmail.html":{},"classes/PasswordResetEmail.html":{}}}],["visiting",{"_index":1934,"title":{},"body":{"classes/UserActivationEmail.html":{}}}],["void",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"interfaces/CreateFileOptions.html":{},"injectables/FilesProcessor.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{}}}],["watch",{"_index":2123,"title":{},"body":{"index.html":{}}}],["website",{"_index":2151,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":671,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":687,"title":{},"body":{"classes/Counter.html":{}}}],["winston",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["writable",{"_index":742,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1742,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1751,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1779,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":1811,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1796,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1786,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1781,"title":{},"body":{"injectables/StorageService.html":{}}}],["wrong",{"_index":1539,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["x",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":2142,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SettingsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [UsersModule],\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\n\n@Controller()\nexport class AppController {\n  @Get(\"hello\")\n  async hello(): Promise {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import path from \"path\";\n\nimport Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AppController } from \"./app.controller\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SettingsModule } from \"./modules/settings/settings.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\nconst kbToBytes = (kB: number) => kB / 1024;\nconst mbToBytes = (mb: number) => mb * 1024 * 1024;\n\n@Global()\n@Module({\n  imports: [\n    AdminModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SettingsModule,\n    UsersModule,\n\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_CHUNK_SIZE: Joi.number()\n          .min(1)\n          .default(mbToBytes(1)),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n        MAX_FILE_SIZE: Joi.number()\n          .min(kbToBytes(8))\n          .default(mbToBytes(25)),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string()\n          .required()\n          .custom(value => {\n            if (path.isAbsolute(value)) return value;\n            throw new Error(\"upload directory path is not absolute!\");\n          })\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    ThrottlerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    })\n  ],\n  exports: [ConfigModule, Logger, MailerModule],\n  controllers: [AppController],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                            \n                                revokeAllSessions\n                            \n                            \n                                revokeSession\n                            \n                            \n                                sessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.8)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAllSessions\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAllSessions(user: User, session: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-all-sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeSession\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeSession(user: User, identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('revoke-session/:identifier')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sessions\n                        \n                        \n                    \n                \n            \n            \n                \nsessions(user: User, currentSession: ISession)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sessions')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISession\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly users: UsersService) {}\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISession\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    return user;\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: ISession): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.8)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n\n  @Delete(\"revoke-session/:identifier\")\n  @UseGuards(AuthGuard)\n  revokeSession(@CurrentUser() user: User, @Param(\"identifier\") identifier: string): Promise {\n    return this.auth.logout(identifier, user.id);\n  }\n\n  @Delete(\"revoke-all-sessions\")\n  @UseGuards(AuthGuard)\n  revokeAllSessions(@CurrentUser() user: User, @Session() session: ISession): Promise {\n    return this.auth.logoutAllDevices(user.id, session.identifier);\n  }\n\n  @Get(\"sessions\")\n  @UseGuards(AuthGuard)\n  sessions(@CurrentUser() user: User, @Session() currentSession: ISession): Promise {\n    return this.auth.getSessions(user.id).then(sessions =>\n      sessions.map(session => ({\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      }))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector, private readonly users: UsersService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isOptional = this.reflector.get(\n      \"AUTH_OPTIONAL\",\n      context.getHandler()\n    );\n\n    const shouldThrow = (error: Error) => {\n      if (!isOptional) throw error;\n      return true;\n    };\n\n    const req = context.switchToHttp().getRequest();\n\n    if (!req.session) {\n      return shouldThrow(new InternalServerErrorException(\"Failed to get session data!\"));\n    }\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) return shouldThrow(new UserNotLoggedIn());\n    if (!user.activated) return shouldThrow(new UserNotActivated());\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [HttpModule, UsersModule],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                logoutAllDevices\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(identifier: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logoutAllDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutAllDevices(uid: string, currentSession?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\nimport { InvalidCredentials, UserNotActivated, InvalidPasswordResetLink } from \"./auth.errors\";\n\n@Injectable()\nexport class AuthService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    await this.mailer.sendPasswordReset(user);\n\n    return true;\n  }\n\n  async getSessions(uid: string): Promise {\n    return this.sessions\n      .find({ \"session.uid\": uid })\n      .project({ _id: 0, expires: 0, \"session.cookie\": 0 })\n      .toArray()\n      .then(sessions => sessions.map(({ session }) => session));\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async logout(identifier: string, uid: string): Promise {\n    await this.sessions.deleteOne({\n      \"session.identifier\": identifier,\n      \"session.uid\": uid\n    });\n  }\n\n  async logoutAllDevices(uid: string, currentSession?: string): Promise {\n    await this.sessions.deleteMany({\n      \"session.identifier\": { $ne: currentSession },\n      \"session.uid\": uid\n    });\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    await this.mailer.sendUserActivation(user);\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.mailer.findPasswordReset({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.id });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await settle([this.logoutAllDevices(user.id), user.changePassword(newPassword)]);\n    await settle([this.mailer.sendPasswordChanged(user), passwordReset.deleteOne()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeDisplayNameDto.html":{"url":"classes/ChangeDisplayNameDto.html","title":"class - ChangeDisplayNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeDisplayNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-display-name.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsString()@MaxLength(32, {message: 'Display names cannot be longer than 32 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-display-name.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty, IsString, MaxLength } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ChangeDisplayNameDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than 32 characters!\" })\n  newDisplayName!: User[\"displayName\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeEmailDto.html":{"url":"classes/ChangeEmailDto.html","title":"class - ChangeEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-email.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-email.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ChangeEmailDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  newEmail!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/change-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least 8 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/change-password.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ChangePasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, {\n    message: \"Your password must be at least 8 characters long!\"\n  })\n  newPassword!: User[\"password\"];\n\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  oldPassword!: User[\"password\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChunkAlreadyUploaded.html":{"url":"classes/ChunkAlreadyUploaded.html","title":"class - ChunkAlreadyUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChunkAlreadyUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chunkIndex: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chunkIndex\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateFileOptions.html":{"url":"interfaces/CreateFileOptions.html","title":"interface - CreateFileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateFileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/create-file-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\nimport { Stream } from \"pump\";\n\nimport { FileFilterCallback } from \"./file-filter-callback.interface\";\nimport { FileMetadata } from \"./file-metadata.interface\";\n\nexport interface CreateFileOptions {\n  field: string;\n  filter?: (req: Request, metadata: FileMetadata, callback: FileFilterCallback) => void;\n  limits: busboy.BusboyConfig[\"limits\"];\n  transformers?: ((req: Request, metadata: FileMetadata) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAccountDto.html":{"url":"classes/DeleteAccountDto.html","title":"class - DeleteAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/dto/delete-account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Old password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/settings/dto/delete-account.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class DeleteAccountDto {\n  @IsNotEmpty({ message: \"Old password cannot be empty!\" })\n  @IsString()\n  password!: User[\"password\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n\n      console.log(id);\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n\n      console.log(id);\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameAlreadyExists.html":{"url":"classes/DisplayNameAlreadyExists.html","title":"class - DisplayNameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailAlreadyExists.html":{"url":"classes/EmailAlreadyExists.html","title":"class - EmailAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailChangedEmail.html":{"url":"classes/EmailChangedEmail.html","title":"class - EmailChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/email-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/email-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/email-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your email has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your email has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/email-confirmation.schema.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { hideSchemaProperty } from \"@/utils/hideSchemaProperty\";\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"])\n  },\n  toObject: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"])\n  }\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmationEmail.html":{"url":"classes/EmailConfirmationEmail.html","title":"class - EmailConfirmationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/confirm-email.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(confirmEmailLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/confirm-email.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        confirmEmailLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/confirm-email.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class EmailConfirmationEmail implements Email {\n  constructor(private readonly confirmEmailLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/email-confirmation.mjml\", {\n      confirmEmailLink: this.confirmEmailLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Please confirm your email address.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"To confirm your email address, please visit the link below.\",\n      \"This email confirmation link is only valid for the next 72 hours.\\n\",\n      this.confirmEmailLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/file.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            FileDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                rename\n                            \n                            \n                                size\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 1, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/file.schema.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { FileDto } from \"../dto/file.dto\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class File extends Document implements FileDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true\n  })\n  filename!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      trim: true,\n      type: String\n    })\n  )\n  folder!: string | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 1,\n    required: true\n  })\n  size!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  rename!: (newFilename: string) => Promise;\n  toDto!: () => FileDto;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(File);\n\nFileSchema.methods.toDto = function(this: File): FileDto {\n  return plainToClass(FileDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\nFileSchema.methods.rename = async function(this: File, newFilename: string): Promise {\n  if (this.filename !== newFilename) {\n    this.filename = newFilename;\n    await this.save();\n  }\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDto.html":{"url":"classes/FileDto.html","title":"class - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                filename\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class FileDto {\n  createdAt!: Date;\n\n  filename!: string;\n  \n  folder!: string | null;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  public!: boolean;\n\n  size!: number;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/file-metadata.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileMetadata {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotFound.html":{"url":"classes/FileNotFound.html","title":"class - FileNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                rename\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(user: User | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@OptionalAuth()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \nrename(undefined: RenameFileDto, user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('rename/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RenameFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { FilesService } from \"./files.service\";\n\nimport { FileDto } from \"./dto/file.dto\";\nimport { RenameFileDto } from \"./dto/rename-file.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/auth-optional.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\nimport { FileNotFound } from \"./files.errors\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"delete/:id\")\n  delete(@CurrentUser() user: User, @Param(\"id\") id: string): Promise {\n    return this.files.delete(id, user.id).then(deleted => deleted.toDto());\n  }\n\n  @Get(\"download/:id\")\n  @OptionalAuth()\n  async download(\n    @CurrentUser() user: User | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const file = user ? await this.files.findOne(id, user.id) : await this.files.findPublicFile(id);\n    const readable = await this.storage.read(file.id);\n\n    readable.on(\"error\", (error: NodeJS.ErrnoException & Error) => {\n      // prettier-ignore\n      const err = error.code === \"ENOENT\"\n        ? new FileNotFound(id) \n        : new InternalServerErrorException(error);\n\n      // Exception handler disabled when using the @Res() decorator, so we have to log the error manually\n      if (err instanceof InternalServerErrorException) {\n        this.logger.error(error);\n      }\n\n      if (!res.headersSent) {\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Patch(\"rename/:id\")\n  rename(\n    @Body() { newFilename }: RenameFileDto,\n    @CurrentUser() user: User,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.files.rename(id, newFilename, user.id).then(file => file.toDto());\n  }\n\n  @Post(\"upload\")\n  async upload(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map(file =>\n        this.files\n          .create({\n            filename: file.filename,\n            id: file.id,\n            size: file.size,\n            uid: user.id\n          })\n          .then(file => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nFilesModule -->\n\nUsersModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { File, FileSchema } from \"./schemas/file.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: File.name, schema: FileSchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    }),\n\n    UsersModule\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                            \n                                handleStall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, LoggerService } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n    private readonly storage: StorageService\n  ) {}\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    this._debug(`[Job ${job.id}] Deleting ${job.data.fileId}`);\n\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully deleted ${job.data.fileId}`);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, FilesProcessor.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPublicFile\n                            \n                            \n                                    Async\n                                rename\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(files: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPublicFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPublicFile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            rename\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rename(id: string, newFilename: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newFilename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { FileNotFound } from \"./files.errors\";\n\nimport { File } from \"./schemas/file.schema\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    @InjectModel(File.name)\n    private readonly files: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async create(options: {\n    filename: File[\"filename\"];\n    hidden?: File[\"hidden\"];\n    id: File[\"id\"];\n    public?: File[\"public\"];\n    size: File[\"size\"];\n    uid: File[\"uid\"];\n  }): Promise {\n    return new this.files(options).save();\n  }\n\n  async delete(id: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n\n    await this.filesQueue.add(\"delete\", { fileId: file.id });\n    await file.deleteOne();\n    \n    return file;\n  }\n\n  async deleteAllFor(uid: string): Promise {\n    await this.files\n      .find({ uid })\n      .cursor()\n      .eachAsync(async (file: File) => {\n        await this.filesQueue.add(\"delete\", { fileId: file.id });\n        await file.deleteOne();\n      });\n  }\n\n  async findOne(id: string, uid: string): Promise {\n    const file = await this.files.findOne({ id, uid });\n    if (!file) throw new FileNotFound(id);\n\n    return file;\n  }\n\n  async findPublicFile(id: string): Promise {\n    const file = await this.files.findOne({ id, public: true });\n    if (!file) throw new FileNotFound(id);\n\n    return file;\n  }\n\n  async rename(id: string, newFilename: string, uid: string): Promise {\n    const file = await this.findOne(id, uid);\n\n    return file.rename(newFilename);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISession\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISession\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { ISession } from \"@/interfaces/session.interface\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: ISession;\n  user: User | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISession extends Express.Session {\n  identifier: string;\n  ip: string | null;\n  lastUsed: Date;\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationLink.html":{"url":"classes/InvalidEmailConfirmationLink.html","title":"class - InvalidEmailConfirmationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidEmailConfirmationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation link, please ensure that the link is correct!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: User[\"password\"];\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: User[\"username\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MD5Passthrough.html":{"url":"interfaces/MD5Passthrough.html","title":"interface - MD5Passthrough","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MD5Passthrough\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/calculateMD5.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hash\n                                \n                                \n                                        passthrough\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:     crypto.Hash\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     crypto.Hash\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passthrough\n                                    \n                                \n                                \n                                    \n                                        passthrough:     PassThrough\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PassThrough\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { PassThrough, TransformCallback } from \"stream\";\n\nexport interface MD5Passthrough {\n  hash: crypto.Hash;\n  passthrough: PassThrough;\n}\n\nexport const calculateMD5 = {\n  createPassthrough(): MD5Passthrough {\n    const md5 = crypto.createHash(\"md5\");\n    const passthrough = new PassThrough({\n      transform(chunk: Buffer, _encoding: string, callback: TransformCallback) {\n        md5.update(chunk);\n        callback(null, chunk);\n      }\n    });\n\n    return {\n      hash: md5,\n      passthrough\n    };\n  },\n\n  fromBuffer(buffer: Buffer): string {\n    return crypto\n      .createHash(\"md5\")\n      .update(buffer)\n      .digest(\"hex\");\n  }\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ])\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debug\n                            \n                            \n                                    Private\n                                    Async\n                                _send\n                            \n                            \n                                handleError\n                            \n                            \n                                handleFailure\n                            \n                            \n                                handleStall\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService, options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _debug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _send(email: Email, job: Job)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueError()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleFailure\n                        \n                        \n                    \n                \n            \n            \n                \nhandleFailure(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueFailed()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleStall\n                        \n                        \n                    \n                \n            \n            \n                \nhandleStall(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnQueueStalled()\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-email-confirmation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-changed')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-password-reset')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send-user-activation')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, Logger, LoggerService, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { OnQueueError, OnQueueFailed, OnQueueStalled, Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { EmailConfirmationEmail } from \"./emails/confirm-email.email\";\nimport { EmailChangedEmail } from \"./emails/email-changed.email\";\nimport { PasswordChangedEmail } from \"./emails/password-changed.email\";\nimport { PasswordResetEmail } from \"./emails/password-reset.email\";\nimport { UserActivationEmail } from \"./emails/user.activation.email\";\n\nimport { Email } from \"./interfaces/email.interface\";\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendEmailJob } from \"./interfaces/send-email-job.interface\";\n\nimport { SendEmailChangedJob } from \"./jobs/send-email-changed.job\";\nimport { SendEmailConfirmationJob } from \"./jobs/send-email-confirmation.job\";\nimport { SendPasswordChangedJob } from \"./jobs/send-password-changed.job\";\nimport { SendPasswordResetJob } from \"./jobs/send-password-reset.job\";\nimport { SendUserActivationJob } from \"./jobs/send-user-activation.job\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(\n    @Inject(Logger)\n    private readonly logger: LoggerService,\n\n    @Inject(NODEMAILER_MODULE_OPTIONS)\n    private readonly options: MailerOptions\n  ) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @OnQueueError()\n  handleError(error: Error): void {\n    this.logger.error(error);\n  }\n\n  @OnQueueFailed()\n  handleFailure(job: Job): void {\n    this._debug(`[Job ${job.id}] Job has failed to ${job.name} because ${job.failedReason}`);\n  }\n\n  @OnQueueStalled()\n  handleStall(job: Job): void {\n    this._debug(`[Job ${job.id}] Job stalled on ${job.name}`);\n  }\n\n  @Process(\"send-email-changed\")\n  async sendEmailChanged(job: Job): Promise {\n    await this._send(new EmailChangedEmail(job.data.forgotPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-email-confirmation\")\n  async sendEmailConfirmation(job: Job): Promise {\n    await this._send(\n      new EmailConfirmationEmail(job.data.confirmEmailLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-changed\")\n  async sendPasswordChanged(job: Job): Promise {\n    await this._send(\n      new PasswordChangedEmail(job.data.forgotPasswordLink, job.data.displayName),\n      job\n    );\n  }\n\n  @Process(\"send-password-reset\")\n  async sendPasswordReset(job: Job): Promise {\n    await this._send(new PasswordResetEmail(job.data.resetPasswordLink, job.data.displayName), job);\n  }\n\n  @Process(\"send-user-activation\")\n  async sendUserActivation(job: Job): Promise {\n    await this._send(new UserActivationEmail(job.data.activationLink, job.data.displayName), job);\n  }\n\n  private _debug(message: string) {\n    this.logger.debug && this.logger.debug(message, MailerProcessor.name);\n  }\n\n  private async _send(email: Email, job: Job) {\n    this._debug(`[Job ${job.id}] Starting job \"${job.name}\" for ${job.data.to}`);\n\n    await this.transporter.sendMail({\n      html: await email.html(),\n      subject: email.subject(),\n      text: email.text(),\n      to: job.data.to\n    });\n\n    await job.progress(100);\n\n    this._debug(`[Job ${job.id}] Successfully completed \"${job.name}\" for ${job.data.to}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllFor\n                            \n                            \n                                    Async\n                                findEmailConfirmation\n                            \n                            \n                                    Async\n                                findPasswordReset\n                            \n                            \n                                    Async\n                                findUserActivation\n                            \n                            \n                                    Async\n                                sendEmailChanged\n                            \n                            \n                                    Async\n                                sendEmailConfirmation\n                            \n                            \n                                    Async\n                                sendPasswordChanged\n                            \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailConfirmations: Model, passwordResets: Model, userActivations: Model, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllFor(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEmailConfirmation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPasswordReset(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserActivation(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailConfirmation(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordChanged(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendPasswordReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserActivation(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://${this.config.get(\"FRONTEND_DOMAIN\")}`\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model } from \"mongoose\";\nimport { Queue } from \"bull\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class MailerService {\n  private readonly baseURL = `http://${this.config.get(\"FRONTEND_DOMAIN\")}`;\n\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  async deleteAllFor(uid: string): Promise {\n    await settle([\n      this.emailConfirmations.deleteMany({ uid }),\n      this.passwordResets.deleteMany({ uid }),\n      this.userActivations.deleteMany({ uid })\n    ]);\n  }\n\n  async findEmailConfirmation(\n    query: FilterQuery\n  ): Promise {\n    return this.emailConfirmations.findOne(query);\n  }\n\n  async findPasswordReset(query: FilterQuery): Promise {\n    return this.passwordResets.findOne(query);\n  }\n\n  async findUserActivation(query: FilterQuery): Promise {\n    return this.userActivations.findOne(query);\n  }\n\n  async sendEmailChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-email-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendEmailConfirmation(newEmail: string, user: User): Promise {\n    const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-email-confirmation\", {\n      confirmEmailLink: `${this.baseURL}/confirm-email/${confirmation.token}`,\n      displayName: user.displayName,\n      to: newEmail\n    });\n  }\n\n  async sendPasswordChanged(user: User): Promise {\n    await this.emailsQueue.add(\"send-password-changed\", {\n      displayName: user.displayName,\n      forgotPasswordLink: `${this.baseURL}/forgot-password`,\n      to: user.email\n    });\n  }\n\n  async sendPasswordReset(user: User): Promise {\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.emailsQueue.add(\"send-password-reset\", {\n      displayName: user.displayName,\n      resetPasswordLink: `${this.baseURL}/reset-password/${reset.token}`,\n      to: user.email\n    });\n  }\n\n  async sendUserActivation(user: User): Promise {\n    const activation = await new this.userActivations({ uid: user.id }).save();\n    \n    await this.emailsQueue.add(\"send-user-activation\", {\n      activationLink: `${this.baseURL}/activate-account/${activation.token}`,\n      displayName: user.displayName,\n      to: user.email\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaxActiveUploadSessionsError.html":{"url":"classes/MaxActiveUploadSessionsError.html","title":"class - MaxActiveUploadSessionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaxActiveUploadSessionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordChangedEmail.html":{"url":"classes/PasswordChangedEmail.html","title":"class - PasswordChangedEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordChangedEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-changed.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(forgotPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-changed.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forgotPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-changed.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordChangedEmail implements Email {\n  constructor(private readonly forgotPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-changed.mjml\", {\n      displayName: this.displayName,\n      forgotPasswordLink: this.forgotPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Your password has been changed.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName}\\n`,\n      \"Your password has been changed.\",\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      this.forgotPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/password-reset.schema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { hideSchemaProperty } from \"@/utils/hideSchemaProperty\";\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"])\n  },\n  toObject: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"])\n  }\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordResetEmail.html":{"url":"classes/PasswordResetEmail.html","title":"class - PasswordResetEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordResetEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/password-reset.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resetPasswordLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/password-reset.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetPasswordLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/password-reset.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class PasswordResetEmail implements Email {\n  constructor(private readonly resetPasswordLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/password-reset.mjml\", {\n      displayName: this.displayName,\n      resetPasswordLink: this.resetPasswordLink\n    });\n  }\n\n  subject(): string {\n    return \"Password Reset Requested.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To reset your password, please visit the link below.\",\n      \"This password reset link is only valid for the next 1 hour.\\n\",\n      this.resetPasswordLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    // If its successful but wrong recaptcha version response\n    if ((action && result.action !== action) || (score && result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least 8 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than 32 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n\n  @MinLength(8, { message: \"Your password must be at least 8 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: User[\"password\"];\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than 32 characters!\" })\n  username!: User[\"username\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFileDto.html":{"url":"classes/RenameFileDto.html","title":"class - RenameFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/rename-file.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newFilename\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New filename cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/rename-file.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nimport { File } from \"../schemas/file.schema\";\n\nexport class RenameFileDto {\n  @IsNotEmpty({ message: \"New filename cannot be empty!\" })\n  @IsString()\n  newFilename!: File[\"filename\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least 8 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nimport { PasswordReset } from \"~/src/modules/mailer/schemas/password-reset.schema\";\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, {\n    message: \"Your password must be at least 8 characters long!\"\n  })\n  newPassword!: User[\"password\"];\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: PasswordReset[\"token\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailChangedJob.html":{"url":"interfaces/SendEmailChangedJob.html","title":"interface - SendEmailChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailConfirmationJob.html":{"url":"interfaces/SendEmailConfirmationJob.html","title":"interface - SendEmailConfirmationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailConfirmationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-email-confirmation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmEmailLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmEmailLink\n                                    \n                                \n                                \n                                    \n                                        confirmEmailLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendEmailConfirmationJob extends SendEmailJob {\n  confirmEmailLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailJob.html":{"url":"interfaces/SendEmailJob.html","title":"interface - SendEmailJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendEmailJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-email-job.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        displayName\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SendEmailJob {\n  data: Record;\n  displayName: string;\n  to: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordChangedJob.html":{"url":"interfaces/SendPasswordChangedJob.html","title":"interface - SendPasswordChangedJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordChangedJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-changed.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        forgotPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordLink\n                                    \n                                \n                                \n                                    \n                                        forgotPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordChangedJob extends SendEmailJob {\n  forgotPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendPasswordResetJob.html":{"url":"interfaces/SendPasswordResetJob.html","title":"interface - SendPasswordResetJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendPasswordResetJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-password-reset.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        resetPasswordLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordLink\n                                    \n                                \n                                \n                                    \n                                        resetPasswordLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendPasswordResetJob extends SendEmailJob {\n  resetPasswordLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendUserActivationJob.html":{"url":"interfaces/SendUserActivationJob.html","title":"interface - SendUserActivationJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendUserActivationJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/jobs/send-user-activation.job.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SendEmailJob\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activationLink\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SendEmailJob } from \"../interfaces/send-email-job.interface\";\n\nexport interface SendUserActivationJob extends SendEmailJob {\n  activationLink: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionDto.html":{"url":"interfaces/SessionDto.html","title":"interface - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/session.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ISession\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isCurrent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCurrent\n                                    \n                                \n                                \n                                    \n                                        isCurrent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISession } from \"@/interfaces/session.interface\";\n\nexport interface SessionDto extends ISession {\n  isCurrent: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                confirmEmail\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                resendUserActivation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-avatar')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \nchangeDisplayName(undefined: ChangeDisplayNameDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change-display-name')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeDisplayNameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \nchangeEmail(undefined: ChangeEmailDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-email')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangeEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(undefined: ChangePasswordDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount(undefined: DeleteAccountDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-account')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendUserActivation\n                        \n                        \n                    \n                \n            \n            \n                \nresendUserActivation(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resend-user-activation')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/settings/settings.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { SettingsService } from \"./settings.service\";\n\nimport { ChangeDisplayNameDto } from \"./dto/change-display-name.dto\";\nimport { ChangeEmailDto } from \"./dto/change-email.dto\";\nimport { ChangePasswordDto } from \"./dto/change-password.dto\";\nimport { DeleteAccountDto } from \"./dto/delete-account.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Controller(\"settings\")\n@Throttle(30, 60)\nexport class SettingsController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly settings: SettingsService,\n    private readonly storage: StorageService\n  ) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.settings.activate(token);\n  }\n\n  @Patch(\"change-avatar\")\n  @UseGuards(AuthGuard)\n  async changeAvatar(@CurrentUser() user: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new UnsupportedMediaTypeException(\"Invalid file type!\"), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.create({\n      filename: avatar.filename,\n      hidden: true,\n      id: avatar.id,\n      public: true,\n      size: avatar.size,\n      uid: user.id\n    });\n\n    return this.settings.changeAvatar(avatar.id, user);\n  }\n\n  @Patch(\"change-display-name\")\n  @UseGuards(AuthGuard)\n  changeDisplayName(\n    @Body() { newDisplayName }: ChangeDisplayNameDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changeDisplayName(newDisplayName, user);\n  }\n\n  @Post(\"change-email\")\n  @UseGuards(AuthGuard)\n  changeEmail(@Body() { newEmail }: ChangeEmailDto, @CurrentUser() user: User): Promise {\n    return this.settings.changeEmail(newEmail, user);\n  }\n\n  @Post(\"change-password\")\n  @UseGuards(AuthGuard)\n  changePassword(\n    @Body() { newPassword, oldPassword }: ChangePasswordDto,\n    @CurrentUser() user: User\n  ): Promise {\n    return this.settings.changePassword(oldPassword, newPassword, user);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.settings.confirmEmail(token);\n  }\n\n  @Post(\"delete-account\")\n  @UseGuards(AuthGuard)\n  deleteAccount(@Body() { password }: DeleteAccountDto, @CurrentUser() user: User): Promise {\n    return this.settings.deleteAccount(password, user);\n  }\n\n  @Post(\"resend-user-activation\")\n  @UseGuards(AuthGuard)\n  resendUserActivation(@CurrentUser() user: User): Promise {\n    return this.settings.resendUserActivationEmail(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nSettingsModule -->\n\nUsersModule->SettingsModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\n\nimport { SettingsController } from \"./settings.controller\";\nimport { SettingsService } from \"./settings.service\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\nimport { UsersModule } from \"@/modules/users/users.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n    FilesModule,\n    UsersModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [SettingsService],\n  controllers: [SettingsController],\n  providers: [SettingsService]\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                changeAvatar\n                            \n                            \n                                    Async\n                                changeDisplayName\n                            \n                            \n                                    Async\n                                changeEmail\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                resendUserActivationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, files: FilesService, mailer: MailerService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/settings/settings.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAvatar(newAvatarId: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeDisplayName(newDisplayName: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newDisplayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEmail(newEmail: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(oldPassword: string, newPassword: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(password: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resendUserActivationEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resendUserActivationEmail(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/settings/settings.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { AuthService } from \"@/modules/auth/auth.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { InvalidEmailConfirmationLink, InvalidUserActivationLink } from \"./settings.errors\";\n\nimport {\n  DisplayNameAlreadyExists,\n  EmailAlreadyExists,\n  UserNotFound\n} from \"@/modules/users/users.errors\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class SettingsService {\n  constructor(\n    private readonly auth: AuthService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly users: UsersService\n  ) {}\n\n  async activate(token: string): Promise {\n    const activation = await this.mailer.findUserActivation({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    await user.activate();\n    await activation.deleteOne();\n  }\n\n  async changeAvatar(newAvatarId: string, user: User): Promise {\n    if (user.avatar) {\n      await this.files.delete(user.avatar, user.id).catch(() => undefined);\n    }\n\n    await user.changeAvatar(newAvatarId);\n\n    return user;\n  }\n\n  async changeDisplayName(newDisplayName: string, user: User): Promise {\n    if (await this.users.exists({ displayName: newDisplayName })) {\n      throw new DisplayNameAlreadyExists(newDisplayName);\n    }\n\n    return user.changeDisplayName(newDisplayName);\n  }\n\n  async changeEmail(newEmail: string, user: User): Promise {\n    if (await this.users.exists({ email: newEmail })) {\n      throw new EmailAlreadyExists(newEmail);\n    }\n\n    await this.mailer.sendEmailConfirmation(newEmail, user);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string, user: User): Promise {\n    if (!(await user.comparePassword(oldPassword))) {\n      throw new IncorrectPassword();\n    }\n\n    await user.changePassword(newPassword);\n    await this.mailer.sendPasswordChanged(user);\n  }\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.mailer.findEmailConfirmation({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationLink();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationLink();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationLink();\n    }\n\n    const oldUser = user.toObject();\n\n    await user.changeEmail(confirmation.newEmail);\n    await settle([confirmation.deleteOne(), this.mailer.sendEmailChanged(oldUser)]);\n  }\n\n  async deleteAccount(password: string, user: User): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.auth.logoutAllDevices(user.id),\n      this.files.deleteAllFor(user.id),\n      this.mailer.deleteAllFor(user.id)\n    ]);\n\n    await user.delete();\n  }\n\n  async resendUserActivationEmail(user: User): Promise {\n    const activation = await this.mailer.findUserActivation({ uid: user.id });\n    if (!activation) throw new UserNotFound(user.username);\n\n    await this.mailer.sendUserActivation(user);\n    await activation.resent();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: Request, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: Request, options: CreateFileOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CreateFileOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { Readable } from \"stream\";\nimport { Request } from \"express\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { CreateFileOptions } from \"./interfaces/create-file-options.interface\";\nimport { FileFilterCallback } from \"./interfaces/file-filter-callback.interface\";\nimport { FileMetadata } from \"./interfaces/file-metadata.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: Request, options: CreateFileOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (metadata: FileMetadata, callback: FileFilterCallback) => {\n      if (options.filter) options.filter(req, metadata, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(req: Request, limits: busboy.BusboyConfig[\"limits\"]): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadSessionNotFound.html":{"url":"classes/UploadSessionNotFound.html","title":"class - UploadSessionNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadSessionNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class ChunkAlreadyUploaded extends ConflictException {\n  constructor(chunkIndex: number) {\n    super(`Chunk index ${chunkIndex} has already been uploaded to the server!`);\n  }\n}\n\nexport class FileNotFound extends NotFoundException {\n  constructor(identifier: string) {\n    super(`File \"${identifier}\" was not found on the server!`);\n  }\n}\n\nexport class MaxActiveUploadSessionsError extends ForbiddenException {\n  constructor() {\n    super(\n      \"You have exceeded the maximum amount of active upload sessions. Please commit or destroy your existing upload sessions first before creating a new one!\"\n    );\n  }\n}\n\nexport class UploadSessionNotFound extends NotFoundException {\n  constructor(id: string) {\n    super(`Upload session \"${id}\" does not exists!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FileMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FileMetadata } from \"./file-metadata.interface\";\n\nexport interface UploadedFile extends FileMetadata {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                changeAvatar\n                            \n                            \n                                changeDisplayName\n                            \n                            \n                                changeEmail\n                            \n                            \n                                changePassword\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAvatar\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAvatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  activate!: () => Promise;\n  changeAvatar!: (newAvatarId: string) => Promise;\n  changeDisplayName!: (newDisplayName: string) => Promise;\n  changeEmail!: (newEmail: string) => Promise;\n  changePassword!: (newPassword: string) => Promise;\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  deleteAvatar!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.activate = async function(this: User): Promise {\n  if (!this.activated || this.expiresAt) {\n    this.activated = true;\n    this.expiresAt = null;\n\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeAvatar = async function(this: User, newAvatarId: string): Promise {\n  if (this.avatar !== newAvatarId) {\n    this.avatar = newAvatarId;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeDisplayName = async function(\n  this: User,\n  newDisplayName: string\n): Promise {\n  if (this.displayName !== newDisplayName) {\n    this.displayName = newDisplayName;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changeEmail = async function(this: User, newEmail: string): Promise {\n  if (this.email !== newEmail) {\n    this.email = newEmail;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.changePassword = async function(this: User, newPassword: string): Promise {\n  this.password = newPassword;\n  return this.save();\n};\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  if (!this.deleted) {\n    this.activated = false;\n    this.avatar = null;\n    this.deleted = true;\n    this.email = null;\n    this.password = null;\n\n    await this.save({ validateBeforeSave: false });\n  }\n\n  return this;\n};\n\nUserSchema.methods.deleteAvatar = async function(this: User): Promise {\n  if (this.avatar) {\n    this.avatar = null;\n    await this.save();\n  }\n\n  return this;\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                resent\n                            \n                            \n                                times_resent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times_resent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/schemas/user-activation.schema.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { hideSchemaProperty } from \"@/utils/hideSchemaProperty\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"]),\n    virtuals: true\n  },\n  toObject: {\n    transform: hideSchemaProperty([\"_id\", \"__v\"]),\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  times_resent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n\n  resent!: () => Promise;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserActivationSchema.methods.resent = async function(\n  this: UserActivation\n): Promise {\n  this.times_resent += 1;\n\n  await this.save();\n\n  return this;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivationEmail.html":{"url":"classes/UserActivationEmail.html","title":"class - UserActivationEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivationEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/emails/user.activation.email.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Email\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activationLink: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/emails/user.activation.email.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activationLink\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/emails/user.activation.email.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Email } from \"../interfaces/email.interface\";\n\nimport { renderMJML } from \"@/utils/renderMJML\";\n\nexport class UserActivationEmail implements Email {\n  constructor(private readonly activationLink: string, private readonly displayName: string) {}\n\n  html(): Promise {\n    return renderMJML(\"./templates/user-activation.mjml\", {\n      activationLink: this.activationLink,\n      displayName: this.displayName\n    });\n  }\n\n  subject(): string {\n    return \"Activate your account.\";\n  }\n\n  text(): string {\n    return [\n      `Hey ${this.displayName},\\n`,\n      \"To finish up the registration process, please activate your account by visiting the link below\",\n      \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n      this.activationLink\n    ].join(\"\\n\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameAlreadyExists.html":{"url":"classes/UsernameAlreadyExists.html","title":"class - UsernameAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, ConflictException } from \"@nestjs/common\";\n\nexport class DisplayNameAlreadyExists extends ConflictException {\n  constructor(displayName: string) {\n    super(`Display name \"${displayName}\" already exists!`);\n  }\n}\n\nexport class EmailAlreadyExists extends ConflictException {\n  constructor(email: string) {\n    super(`Email \"${email}\" already exists!`);\n  }\n}\n\nexport class UsernameAlreadyExists extends ConflictException {\n  constructor(username: string) {\n    super(`Username \"${username}\" already exist!`);\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(username: string) {\n    super(`User \"${username}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NotFoundException, Param, UseGuards } from \"@nestjs/common\";\n\nimport { UsersService } from \"./users.service\";\n\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(private readonly users: UsersService) {}\n\n  @Get(\"@me\")\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new NotFoundException(\"User not found!\");\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \nexists(query: FilterQuery, collation?: CollationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collation\n                                    \n                                            CollationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CollationOptions, FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { EmailAlreadyExists, UsernameAlreadyExists } from \"./users.errors\";\n\nimport { User } from \"./schemas/user.schema\";\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private readonly users: Model) {}\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailAlreadyExists(email);\n    if (await this.users.exists({ username })) throw new UsernameAlreadyExists(username);\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  exists(query: FilterQuery, collation?: CollationOptions): Promise {\n    if (!collation) return this.users.exists(query);\n\n    return this.users\n      .countDocuments(query)\n      .collation(collation)\n      .then(count => !!count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            kbToBytes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            mbToBytes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/auth-optional.decorator.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/session.dto.ts\n            \n            interface\n            SessionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/file.dto.ts\n            \n            class\n            FileDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/files/dto/rename-file.dto.ts\n            \n            class\n            RenameFileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ChunkAlreadyUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            FileNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            MaxActiveUploadSessionsError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            UploadSessionNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/file.schema.ts\n            \n            variable\n            FileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/confirm-email.email.ts\n            \n            class\n            EmailConfirmationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/email-changed.email.ts\n            \n            class\n            EmailChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-changed.email.ts\n            \n            class\n            PasswordChangedEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/password-reset.email.ts\n            \n            class\n            PasswordResetEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/emails/user.activation.email.ts\n            \n            class\n            UserActivationEmail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-email-job.interface.ts\n            \n            interface\n            SendEmailJob\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-changed.job.ts\n            \n            interface\n            SendEmailChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-email-confirmation.job.ts\n            \n            interface\n            SendEmailConfirmationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-changed.job.ts\n            \n            interface\n            SendPasswordChangedJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-password-reset.job.ts\n            \n            interface\n            SendPasswordResetJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/jobs/send-user-activation.job.ts\n            \n            interface\n            SendUserActivationJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-display-name.dto.ts\n            \n            class\n            ChangeDisplayNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-email.dto.ts\n            \n            class\n            ChangeEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/settings/dto/delete-account.dto.ts\n            \n            class\n            DeleteAccountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.controller.ts\n            \n            controller\n            SettingsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidEmailConfirmationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/create-file-options.interface.ts\n            \n            interface\n            CreateFileOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/file-metadata.interface.ts\n            \n            interface\n            FileMetadata\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/calculateMD5.ts\n            \n            interface\n            MD5Passthrough\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/calculateMD5.ts\n            \n            variable\n            calculateMD5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/clamp.ts\n            \n            variable\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/delay.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/fileAccessibile.ts\n            \n            variable\n            fileAccessibile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/filterNullAndUndefined.ts\n            \n            variable\n            filterNullAndUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/hideSchemaProperty.ts\n            \n            variable\n            hideSchemaProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/pathFromString.ts\n            \n            variable\n            pathFromString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/renderMJML.ts\n            \n            variable\n            renderMJML\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.1.2\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.16.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.9.20\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.2\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.10\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sharp : ^0.25.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUsersModule->FilesModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nUsersModule->SettingsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\nSettingsModule -->\n\nAuthModule->SettingsModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nSettingsModule -->\n\nFilesModule->SettingsModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nSettingsModule -->\n\nStorageModule->SettingsModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    48 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileFilterCallback   (src/.../file-filter-callback.interface.ts)\n                        \n                        \n                            Modify   (src/.../modifyInterface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/storage/interfaces/file-filter-callback.interface.ts\n    \n    \n        \n            \n                \n                    \n                    FileFilterCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/utils/modifyInterface.ts\n    \n    \n        \n            \n                \n                    \n                    Modify\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            calculateMD5   (src/.../calculateMD5.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            clamp   (src/.../clamp.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            delay   (src/.../delay.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            fileAccessibile   (src/.../fileAccessibile.ts)\n                        \n                        \n                            FileSchema   (src/.../file.schema.ts)\n                        \n                        \n                            filterNullAndUndefined   (src/.../filterNullAndUndefined.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            hideSchemaProperty   (src/.../hideSchemaProperty.ts)\n                        \n                        \n                            kbToBytes   (src/.../app.module.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            mbToBytes   (src/.../app.module.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../auth-optional.decorator.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            pathFromString   (src/.../pathFromString.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            renderMJML   (src/.../renderMJML.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/calculateMD5.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateMD5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  createPassthrough(): MD5Passthrough {\n    const md5 = crypto.createHash(\"md5\");\n    const passthrough = new PassThrough({\n      transform(chunk: Buffer, _encoding: string, callback: TransformCallback) {\n        md5.update(chunk);\n        callback(null, chunk);\n      }\n    });\n\n    return {\n      hash: md5,\n      passthrough\n    };\n  },\n\n  fromBuffer(buffer: Buffer): string {\n    return crypto\n      .createHash(\"md5\")\n      .update(buffer)\n      .digest(\"hex\");\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/utils/clamp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (x: number, min: number, max: number): number =>\n  Math.min(Math.max(x, min), max)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (_data: unknown, ctx: ExecutionContext) => ctx.switchToHttp().getRequest().user\n)\n                        \n                    \n\n\n            \n        \n\n    src/utils/delay.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (time: number): Promise =>\n  new Promise((resolve) => setTimeout(resolve, time))\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/utils/fileAccessibile.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fileAccessibile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (path: fs.PathLike): Promise =>\n  fs.promises\n    .access(path)\n    .then(() => true)\n    .catch(() => false)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/file.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FileSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(File)\n                        \n                    \n\n\n            \n        \n\n    src/utils/filterNullAndUndefined.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            filterNullAndUndefined\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (array: (T | undefined | null)[]): T[] =>\n  array.filter((element: T | undefined | null): element is T => element != null)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/utils/hideSchemaProperty.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hideSchemaProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (properties: string[]) => (\n  _: Record,\n  ret: Record\n): Record => {\n  for (const property of properties) delete ret[property];\n  return ret;\n}\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            kbToBytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (kB: number) => kB / 1024\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mbToBytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (mb: number) => mb * 1024 * 1024\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/auth-optional.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(\"AUTH_OPTIONAL\", optional)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/utils/pathFromString.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pathFromString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (filename: string, depth = -1): string =>\n  chunk.string(path.parse(filename).name.slice(0, depth), 2).join(path.sep)\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/renderMJML.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            renderMJML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  path: fs.PathLike,\n  data: Record\n): Promise => {\n  const mjml = await fs.promises.readFile(path).then(buffer => buffer.toString());\n\n  const { errors, html } = mjml2html(mjml, {\n    keepComments: false,\n    minify: true,\n    minifyOptions: {\n      collapseWhitespace: true,\n      minifyCSS: true,\n      removeEmptyAttributes: true\n    }\n  });\n\n  if (errors && errors.length) {\n    throw new Error(errors.map(error => error.message).join(\"\\n\"));\n  }\n\n  return ejs.render(html, data, { async: true });\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
