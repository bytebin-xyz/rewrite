var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,2.056,1,3.303]],["body/controllers/AdminController.html",[0,2.902,1,5.662,2,2.902,3,0.093,4,0.08,5,0.067,6,5.499,7,3.935,8,5.026,9,0.215,10,0.009,11,4.139,12,0.85,13,5.026,14,5.499,15,4.663,16,6.227,17,4.04,18,4.377,19,6.227,20,6.227,21,0.106,22,0.294,23,3.099,24,2.596,25,2.309,26,3.935,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.303,30,1.341]],["body/injectables/AdminGuard.html",[3,0.085,4,0.074,5,0.062,8,3.807,9,0.199,10,0.009,12,0.782,15,5.377,21,0.097,22,0.271,27,0.006,28,0.007,29,0.006,30,2.182,31,2.669,32,5.059,33,1.44,34,4.733,35,0.704,36,2.033,37,2.221,38,5.79,39,5.79,40,6.158,41,0.388,42,5.728,43,1.548,44,0.823,45,0.48,46,1.318,47,4.618,48,1.621,49,1.94,50,2.757,51,3.62,52,4.289,53,5.728,54,2.017,55,5.728,56,1.918,57,3.179,58,4.618,59,5.059,60,2.669,61,1.872,62,4.618,63,1.621,64,2.369]],["title/injectables/AdminMiddleware.html",[30,1.341,65,3.303]],["body/injectables/AdminMiddleware.html",[3,0.075,4,0.065,5,0.055,8,3.356,9,0.199,10,0.009,12,0.689,21,0.086,22,0.239,27,0.005,28,0.006,29,0.005,30,2.012,31,2.353,33,1.328,35,0.621,36,1.875,37,2.306,41,0.448,43,1.789,44,0.951,45,0.555,46,1.524,48,1.875,49,1.997,50,2.43,51,5.283,52,3.78,54,1.778,57,3.676,59,4.459,60,2.353,61,1.65,62,4.07,65,4.959,66,4.459,67,5.875,68,4.355,69,6.527,70,6.325,71,5.557,72,4.197,73,7.383,74,5.048,75,5.849,76,4.459,77,5.048,78,2.918,79,5.048,80,5.048,81,2.512,82,3.191]],["title/modules/AdminModule.html",[83,1.278,84,3.101]],["body/modules/AdminModule.html",[1,5.568,2,3.112,3,0.076,4,0.066,5,0.055,9,0.208,10,0.009,12,0.698,13,5.958,14,4.516,21,0.087,22,0.242,27,0.005,28,0.006,29,0.005,36,1.447,41,0.346,43,1.382,44,0.734,45,0.428,46,1.176,48,1.447,65,3.829,83,2.155,84,6.007,85,2.461,86,2.544,87,2.732,88,2.732,89,2.732,90,3.973,91,3.973,92,4.516,93,4.516,94,4.516,95,3.568,96,2.056,97,2.732,98,5.113,99,5.113,100,6.678,101,7.884,102,5.113,103,6.678,104,3.568,105,5.113,106,6.678,107,3.085,108,4.122,109,6.678,110,5.113,111,5.113,112,5.113,113,2.31,114,5.113,115,5.113,116,4.516,117,5.113,118,2.461,119,5.113]],["title/injectables/AdminService.html",[13,2.932,30,1.341]],["body/injectables/AdminService.html",[3,0.094,4,0.081,5,0.069,9,0.194,10,0.009,12,0.866,13,5.083,17,4.553,18,4.46,21,0.108,22,0.3,23,3.158,24,2.179,26,4.833,27,0.006,28,0.007,29,0.006,30,2.324,31,2.957,41,0.43,43,1.715,44,0.911,45,0.531,46,1.46,120,5.604,121,1.244,122,5.604,123,6.345]],["title/modules/AppModule.html",[83,1.278,124,3.303]],["body/modules/AppModule.html",[3,0.042,4,0.036,5,0.031,9,0.212,10,0.009,12,0.386,21,0.048,22,0.134,27,0.003,28,0.004,29,0.003,56,2.177,61,0.924,63,0.801,64,2.21,83,1.549,84,4.83,85,1.361,86,1.408,87,1.511,88,1.511,89,1.511,90,2.336,91,2.855,95,2.336,96,1.137,97,1.511,124,6.596,125,2.498,126,2.498,127,2.498,128,5.636,129,4.568,130,4.83,131,4.343,132,4.83,133,5.552,134,4.343,135,5.636,136,4.919,137,2.281,138,2.527,139,2.829,140,2.498,141,4.372,142,2.118,143,4.372,144,3.977,145,1.511,146,3.861,147,1.988,148,1.24,149,4.372,150,2.829,151,3.274,152,3.274,153,4.372,154,2.176,155,2.118,156,2.829,157,2.829,158,2.498,159,2.829,160,2.118,161,2.829,162,2.281,163,2.829,164,2.829,165,2.281,166,2.829,167,2.281,168,1.707,169,2.281,170,2.498,171,2.829,172,2.829,173,2.829,174,2.829,175,2.829,176,2.829,177,7.759,178,2.829,179,2.829,180,2.829,181,7.595,182,5.344,183,2.829,184,3.525,185,2.829,186,4.372,187,2.829,188,2.829,189,2.829,190,4.372,191,2.829,192,4.372,193,2.829,194,2.829,195,6.012,196,6.012,197,2.829,198,2.829,199,2.829,200,2.829,201,2.829,202,2.281,203,2.829,204,4.309,205,2.829,206,2.829,207,2.829,208,2.829,209,2.829,210,2.829,211,2.829,212,2.829,213,2.829,214,2.829,215,2.829,216,2.829,217,4.372,218,2.829,219,2.829,220,2.829,221,4.372,222,2.829,223,2.829,224,2.829,225,2.829,226,2.829,227,3.089,228,3.377,229,2.966,230,2.118,231,6.012,232,2.829,233,2.352,234,2.829,235,2.829,236,3.274,237,2.829,238,2.829,239,2.829,240,2.829,241,2.829,242,2.829,243,2.829,244,5.344,245,2.829,246,2.829,247,2.829,248,2.829,249,1.511,250,2.829,251,2.829,252,2.829,253,2.829,254,2.829,255,2.829,256,1.361,257,2.829,258,2.829,259,2.829,260,2.498,261,2.829,262,2.829,263,2.829,264,2.281,265,2.281,266,2.281,267,1.988]],["title/classes/Application.html",[22,0.209,268,2.449]],["body/classes/Application.html",[3,0.039,4,0.034,5,0.028,9,0.188,10,0.009,21,0.07,22,0.241,27,0.003,28,0.004,29,0.003,33,0.826,35,0.507,37,0.742,41,0.533,44,0.731,45,0.696,49,1.113,54,1.451,56,1.932,63,1.885,64,3.53,72,2.123,82,1.657,113,1.861,148,1.149,168,1.582,230,1.963,249,2.201,256,1.983,268,4.119,269,0.415,270,2.113,271,3.071,272,4.409,273,1.015,274,5.09,275,2.825,276,4.104,277,5.09,278,2.517,279,3.717,280,3.384,281,3.351,282,4.104,283,2.299,284,2.825,285,4.402,286,2.621,287,3.052,288,2.621,289,2.621,290,2.621,291,0.822,292,2.123,293,2.739,294,3.351,295,5.539,296,3.335,297,4.63,298,3.964,299,2.621,300,2.753,301,3.639,302,2.621,303,2.621,304,2.113,305,4.496,306,3.646,307,2.739,308,3.812,309,2.621,310,3.639,311,2.621,312,2.621,313,2.621,314,3.835,315,2.621,316,2.621,317,4.496,318,1.149,319,1.963,320,1.35,321,1.842,322,1.35,323,4.63,324,2.287,325,1.742,326,4.496,327,2.315,328,2.942,329,1.842,330,1.657,331,2.113,332,2.621,333,1.455,334,1.582,335,2.113,336,1.515,337,2.315,338,6.123,339,2.315,340,2.315,341,2.315,342,1.742,343,1.742,344,1.842,345,1.842,346,1.657,347,1.842,348,2.739,349,2.05,350,2.315,351,2.621,352,2.621,353,2.45,354,1.963,355,2.315,356,2.621,357,1.742,358,1.742,359,2.621,360,2.315,361,1.842,362,1.657,363,2.621,364,4.12,365,2.621,366,2.621,367,2.621,368,2.621,369,1.657,370,2.621,371,2.621,372,2.621,373,2.621,374,2.621,375,2.621,376,4.12,377,4.12,378,2.299,379,2.621,380,2.315,381,2.621,382,2.621,383,1.963,384,2.621,385,2.315,386,2.621,387,2.621,388,2.621,389,2.315,390,2.621,391,2.621,392,2.621,393,2.621,394,2.621,395,2.113,396,2.621,397,2.113,398,2.113,399,2.113]],["title/classes/ApplicationAlreadyExists.html",[22,0.209,400,2.662]],["body/classes/ApplicationAlreadyExists.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.726,21,0.14,22,0.392,27,0.005,28,0.007,29,0.005,33,1.7,41,0.36,43,1.437,44,1.088,45,0.445,46,1.223,50,3.296,121,1.623,269,0.843,279,2.739,281,2.841,291,0.743,369,3.36,400,4.133,401,3.534,402,3.321,403,3.659,404,5.317,405,3.225,406,3.002,407,3.737,408,2.33,409,2.559,410,2.559,411,3.208,412,4.814,413,2.263,414,3.208,415,3.534,416,3.534,417,2.646,418,3.208,419,2.33,420,3.208,421,2.841,422,3.737,423,3.534,424,3.737,425,2.951,426,3.737]],["title/classes/ApplicationDto.html",[22,0.209,272,3.101]],["body/classes/ApplicationDto.html",[3,0.078,4,0.067,5,0.057,9,0.172,10,0.009,21,0.089,22,0.321,27,0.005,28,0.007,29,0.005,35,0.645,41,0.582,44,1.081,45,0.72,269,0.832,272,4.773,273,1.673,275,4.179,278,2.721,279,3.879,280,5.005,281,4.023,284,4.179,287,3.703,291,0.828,292,2.166,300,3.293,320,2.703,328,4.352,329,3.688,330,3.316,427,4.634,428,5.247,429,5.247,430,5.797,431,5.247,432,5.247,433,5.247,434,5.247,435,5.247]],["title/classes/ApplicationNotFound.html",[22,0.209,411,2.662]],["body/classes/ApplicationNotFound.html",[3,0.081,4,0.07,5,0.059,9,0.138,10,0.009,12,0.742,21,0.141,22,0.394,27,0.005,28,0.007,29,0.005,33,1.71,41,0.368,44,0.78,50,3.342,121,1.671,269,0.861,279,2.799,281,2.902,291,0.533,369,3.433,400,3.278,401,3.611,402,3.043,403,2.902,405,3.257,406,3.355,407,3.818,408,2.381,409,2.614,410,2.614,411,4.19,412,4.881,413,2.312,414,3.278,415,3.611,416,3.611,417,2.703,418,3.278,419,2.381,420,3.278,421,2.902,422,3.818,423,3.611,424,3.818,425,3.015,426,3.818,436,5.432]],["title/controllers/ApplicationsController.html",[0,2.056,437,3.303]],["body/controllers/ApplicationsController.html",[0,1.644,2,1.644,3,0.052,4,0.045,5,0.038,7,2.229,9,0.201,10,0.009,11,2.344,12,0.481,21,0.06,22,0.167,23,1.755,24,1.211,27,0.003,28,0.005,29,0.003,34,2.128,35,0.434,36,1.461,37,1.728,41,0.484,43,1.932,44,1.027,45,0.599,46,1.645,48,2.024,49,2.217,54,1.242,63,2.024,151,2.641,152,2.641,268,1.958,272,2.479,276,4.922,278,3.039,279,1.817,283,3.946,291,0.88,292,2.28,327,3.115,425,2.865,437,3.865,438,3.115,439,4.571,440,3.262,441,4.058,442,3.527,443,3.527,444,3.527,445,5.778,446,3.527,447,5.934,448,3.527,449,5.765,450,3.115,451,3.527,452,3.527,453,3.527,454,3.527,455,3.527,456,2.843,457,3.527,458,3.527,459,4.291,460,1.884,461,2.479,462,2.843,463,3.114,464,3.115,465,3.114,466,3.115,467,3.115,468,3.527,469,2.641,470,3.527,471,3.527,472,2.344,473,2.641,474,2.641,475,2.641,476,3.527,477,2.641,478,3.527,479,3.527,480,2.479,481,3.527,482,3.527,483,6.719,484,4.559,485,4.922,486,3.527,487,5.162,488,3.115,489,3.115,490,4.922,491,3.527,492,3.115,493,3.527,494,3.527,495,3.527,496,3.527]],["title/modules/ApplicationsModule.html",[83,1.278,128,3.101]],["body/modules/ApplicationsModule.html",[2,3.276,3,0.082,4,0.071,5,0.06,9,0.213,10,0.009,12,0.756,21,0.094,22,0.262,27,0.005,28,0.007,29,0.005,44,0.795,83,2.238,85,2.665,86,2.756,87,2.959,88,2.959,89,2.959,90,4.126,91,4.126,95,3.756,96,2.227,97,2.959,128,6.119,138,3.2,147,3.892,148,2.427,268,3.074,324,3.074,354,5.264,437,5.783,465,5.47,466,4.891,497,4.891,498,4.891,499,4.891,500,5.537,501,5.537,502,4.891,503,4.146,504,4.891]],["title/injectables/ApplicationsService.html",[30,1.341,465,2.662]],["body/injectables/ApplicationsService.html",[3,0.047,4,0.041,5,0.034,9,0.189,10,0.009,12,0.431,21,0.053,22,0.149,24,1.632,25,1.762,27,0.003,28,0.005,29,0.003,30,1.444,31,1.47,35,0.388,36,1.345,37,2.482,41,0.519,43,2.07,44,1.18,45,0.688,46,1.762,48,2.107,49,2.268,54,2.526,56,2.131,60,3.18,61,2.432,63,2.03,121,0.931,144,3.531,145,1.685,148,1.382,229,2.637,268,4.131,276,3.831,280,2.097,281,2.538,283,2.874,291,0.309,310,2.786,321,2.217,322,1.625,328,3.303,330,1.993,336,3.944,400,1.903,411,3.838,420,2.867,425,3.173,439,3.558,440,3.003,441,3.799,460,2.538,465,2.867,480,3.34,502,2.786,504,2.786,505,2.786,506,3.558,507,2.543,508,4.763,509,3.154,510,4.751,511,4.02,512,3.154,513,4.196,514,6.105,515,3.154,516,3.834,517,3.831,518,3.154,519,3.831,520,3.154,521,3.558,522,3.154,523,4.751,524,3.154,525,2.786,526,3.154,527,2.362,528,3.154,529,2.786,530,3.154,531,4.751,532,3.154,533,3.154,534,2.786,535,3.154,536,3.154,537,3.154,538,3.154,539,6.361,540,3.154,541,3.154,542,3.154,543,2.786,544,3.154,545,3.154,546,3.154,547,3.154,548,3.154]],["title/interfaces/AsyncStorageOptions.html",[549,1.112,550,3.303]],["body/interfaces/AsyncStorageOptions.html",[3,0.082,4,0.071,5,0.06,9,0.195,10,0.009,21,0.093,27,0.005,28,0.007,29,0.005,33,1.405,35,0.677,37,1.559,45,0.755,46,2.025,49,1.488,83,2.233,154,3.486,227,4.686,228,5.124,267,5.699,273,1.726,285,4.427,549,1.389,550,5.245,551,2.277,552,3.871,553,3.48,554,6.187,555,7.161,556,4.864,557,4.864,558,4.049,559,3.183,560,3.871,561,2.344,562,4.864,563,4.864]],["title/controllers/AuthController.html",[0,2.056,564,3.303]],["body/controllers/AuthController.html",[0,1.305,2,1.305,3,0.042,4,0.036,5,0.03,7,1.77,9,0.215,10,0.009,11,1.862,12,0.382,21,0.047,22,0.132,23,1.394,24,1.49,25,1.039,27,0.003,28,0.004,29,0.003,35,0.344,36,1.228,37,1.503,41,0.463,43,1.849,44,0.983,45,0.573,46,1.575,48,1.938,49,2.091,54,2.106,56,1.453,57,3.592,61,1.735,63,1.832,71,1.862,78,1.619,81,1.394,104,2.318,151,2.097,152,2.097,230,3.249,233,1.096,249,2.837,287,1.228,291,0.671,292,2.183,333,1.555,334,1.69,378,2.702,409,1.348,410,2.088,413,1.192,417,3.406,459,3.05,460,1.496,461,1.969,463,1.69,464,2.474,484,2.474,564,3.249,565,2.474,566,3.832,567,3.832,568,3.069,569,4.339,570,3.249,571,3.832,572,2.474,573,2.801,574,4.339,575,2.801,576,2.801,577,4.478,578,2.801,579,3.132,580,2.801,581,2.801,582,4.478,583,5.311,584,4.451,585,3.78,586,2.801,587,2.801,588,2.801,589,4.691,590,2.801,591,2.801,592,2.801,593,4.478,594,2.801,595,2.801,596,2.801,597,4.478,598,2.801,599,2.801,600,2.474,601,2.097,602,1.69,603,2.801,604,3.249,605,2.474,606,2.474,607,2.884,608,2.474,609,2.258,610,2.801,611,2.801,612,2.801,613,4.339,614,2.801,615,2.801,616,2.801,617,2.258,618,4.339,619,2.801,620,2.258,621,2.801,622,2.097,623,2.801,624,2.801,625,2.258,626,2.618,627,2.258,628,1.77,629,2.801,630,2.801,631,2.801,632,2.801,633,2.258,634,2.801,635,1.969,636,2.801,637,2.801,638,2.801,639,2.801,640,2.801,641,2.196,642,2.474,643,2.801,644,2.801,645,2.258,646,2.801,647,2.801,648,2.801,649,2.801,650,4.339,651,4.339,652,3.069,653,2.801,654,2.801,655,2.801,656,2.801,657,2.474,658,2.097,659,2.801,660,2.801,661,2.097,662,2.801,663,1.969,664,2.801,665,2.097,666,2.801,667,2.097,668,2.801,669,2.097,670,2.258,671,2.258,672,2.801,673,1.77,674,2.258,675,1.265,676,2.258,677,2.474,678,2.801,679,2.801,680,2.258,681,2.258,682,2.801,683,2.258,684,2.801,685,2.801,686,2.801,687,2.801,688,2.801,689,2.801,690,2.801,691,1.969,692,2.801]],["title/guards/AuthGuard.html",[34,2.662,383,3.303]],["body/guards/AuthGuard.html",[3,0.043,4,0.037,5,0.032,9,0.202,10,0.009,12,0.399,17,3.266,18,2.052,21,0.092,22,0.138,24,2.099,25,3.033,26,3.445,27,0.003,28,0.004,29,0.003,30,1.361,34,2.703,35,0.359,36,1.268,37,2.17,38,4.929,39,3.612,40,5.426,41,0.446,43,1.88,44,0.947,45,0.583,46,1.667,47,5.611,48,1.731,49,1.21,51,4.579,52,2.186,54,2.451,56,2.621,57,3.026,58,2.354,60,3.573,61,2.557,63,1.867,64,2.254,81,2.229,113,1.319,121,0.878,142,2.186,144,3.393,145,1.56,229,3.026,233,2.723,249,2.393,268,2.487,278,2.383,279,3.15,280,1.941,281,3.871,287,1.963,291,0.599,300,1.207,328,3.533,329,2.052,330,1.845,336,1.687,369,1.845,378,2.024,414,2.703,417,1.453,418,3.979,425,2.487,465,3.689,584,1.762,601,2.186,602,1.762,661,2.186,693,2.354,694,2.354,695,3.956,696,4.48,697,4.48,698,2.578,699,6.399,700,2.919,701,3.956,702,2.919,703,4.082,704,4.48,705,2.919,706,2.578,707,4.48,708,2.919,709,2.919,710,2.052,711,2.919,712,2.487,713,2.589,714,2.578,715,2.578,716,2.354,717,2.919,718,3.612,719,3.612,720,2.919,721,2.919,722,1.762,723,4.48,724,2.919,725,2.919,726,1.845,727,2.919,728,2.919,729,2.919,730,2.919,731,2.919,732,3.956,733,2.919,734,2.919,735,2.919,736,2.919,737,2.919,738,3.149,739,2.919,740,2.919,741,3.956,742,2.578,743,2.578,744,3.956,745,2.354,746,2.578,747,2.578,748,2.578,749,2.578]],["title/injectables/AuthMiddleware.html",[30,1.341,67,3.303]],["body/injectables/AuthMiddleware.html",[3,0.071,4,0.061,5,0.052,9,0.203,10,0.009,12,0.653,17,4.103,18,3.362,21,0.081,22,0.226,23,2.38,24,1.642,26,4.038,27,0.005,28,0.006,29,0.005,30,1.942,31,2.229,35,0.588,36,1.809,37,2.037,41,0.433,43,1.727,44,0.918,45,0.535,46,1.47,48,1.354,49,1.727,50,2.302,51,4.854,52,3.581,54,1.685,56,1.602,57,2.655,60,3.353,61,2.51,62,3.856,67,4.785,68,3.547,69,5.643,71,5.105,72,3.957,73,6.783,75,6.355,78,2.764,113,2.161,121,0.937,122,4.224,233,2.815,278,1.728,287,2.096,300,1.978,336,2.764,405,2.035,410,2.302,417,2.38,584,2.886,601,3.581,602,2.886,661,3.581,710,3.362,738,3.362,741,4.224,742,4.224,743,4.224,744,5.643,745,3.856,746,4.224,747,4.224,750,4.224,751,4.783,752,4.783,753,6.39,754,3.023,755,4.783,756,2.886,757,2.886]],["title/modules/AuthModule.html",[83,1.278,129,2.932]],["body/modules/AuthModule.html",[2,3.086,3,0.075,4,0.065,5,0.055,9,0.216,10,0.009,12,0.689,21,0.086,22,0.239,27,0.005,28,0.006,29,0.005,44,0.951,83,2.142,85,2.43,86,2.512,87,2.697,88,2.697,89,2.697,90,3.948,91,3.948,95,3.538,96,2.03,97,2.697,129,5.811,134,5.283,138,3.827,147,3.549,148,2.213,165,4.07,324,3.676,503,3.78,564,5.534,607,5.947,608,4.459,758,4.459,759,5.048,760,4.459,761,4.459,762,5.048,763,6.622,764,5.048,765,3.356,766,4.959,767,4.459,768,4.459,769,3.356,770,4.959,771,4.459,772,4.459,773,5.048,774,5.048]],["title/injectables/AuthService.html",[30,1.341,607,2.932]],["body/injectables/AuthService.html",[3,0.041,4,0.035,5,0.03,9,0.205,10,0.009,12,0.376,17,3.167,18,1.936,21,0.047,22,0.13,24,2.205,25,2.381,26,3.321,27,0.003,28,0.004,29,0.003,30,1.302,31,1.284,35,0.339,36,1.213,37,2.336,41,0.46,43,1.837,44,0.976,45,0.569,46,1.564,48,1.818,49,2.081,54,2.977,56,2.524,60,3.168,61,2.397,63,1.488,64,1.771,96,1.108,121,0.839,148,1.207,233,3.069,256,1.326,278,1.548,283,1.935,291,0.864,300,1.139,322,1.419,346,2.707,378,3.071,463,1.662,508,5.313,527,2.063,566,3.783,567,3.783,568,2.475,570,3.207,571,3.783,572,3.783,579,3.034,607,2.847,626,3.577,627,2.221,635,3.011,641,2.451,652,4.101,669,2.063,670,4.237,671,4.237,673,3.321,674,4.237,675,2.374,676,2.221,691,3.011,712,2.377,738,4.167,745,3.453,765,3.94,767,2.433,768,2.433,769,2.847,771,2.433,772,2.433,775,2.433,776,2.755,777,3.935,778,3.577,779,5.255,780,5.255,781,2.755,782,2.755,783,4.283,784,2.755,785,4.283,786,2.755,787,4.283,788,2.755,789,4.283,790,2.755,791,2.475,792,3.037,793,3.037,794,2.755,795,3.783,796,4.283,797,2.221,798,2.755,799,2.755,800,2.433,801,2.221,802,2.755,803,2.755,804,3.321,805,2.755,806,2.755,807,2.755,808,3.783,809,2.755,810,2.755,811,2.755,812,2.755,813,2.755,814,2.433,815,2.755,816,2.755,817,2.755,818,2.755,819,2.755,820,2.755,821,2.755,822,2.221,823,2.433,824,2.755,825,2.755]],["title/modules/BullBoardModule.html",[83,1.278,130,3.101]],["body/modules/BullBoardModule.html",[3,0.087,4,0.075,5,0.063,9,0.201,10,0.009,12,0.798,21,0.099,22,0.276,27,0.006,28,0.007,29,0.006,83,2.294,85,2.813,86,2.908,87,3.123,88,3.123,89,3.123,90,4.23,91,3.123,95,3.885,96,2.35,97,3.123,107,3.527,130,6.258,131,5.49,138,4.203,160,4.377,162,4.712,826,5.162,827,5.845,828,5.162,829,6.106,830,4.712,831,5.845,832,5.845]],["title/injectables/BullBoardProvider.html",[30,1.341,829,3.101]],["body/injectables/BullBoardProvider.html",[3,0.085,4,0.074,5,0.062,9,0.209,10,0.009,12,0.782,21,0.097,22,0.271,24,2.466,25,2.663,27,0.006,28,0.007,29,0.006,30,2.182,31,2.669,41,0.388,43,1.548,44,0.823,45,0.48,46,1.318,83,1.66,107,4.333,108,4.618,121,1.407,146,5.059,160,5.377,829,5.048,830,5.79,833,5.059,834,5.728,835,7.071,836,6.928,837,5.728,838,6.342,839,4.618,840,3.456,841,5.728,842,4.618,843,5.059,844,5.059,845,5.728,846,5.728]],["title/classes/Counter.html",[22,0.209,847,3.101]],["body/classes/Counter.html",[3,0.063,4,0.055,5,0.046,9,0.108,10,0.009,21,0.072,22,0.201,23,2.117,27,0.004,28,0.006,29,0.004,33,1.183,35,0.523,36,1.67,41,0.563,43,2.076,44,1.103,45,0.644,46,1.768,48,1.204,63,2.308,104,3.908,121,0.834,168,3.56,269,0.674,285,3.729,353,2.839,847,4.147,848,3.757,849,6.773,850,7.315,851,7.315,852,5.9,853,4.757,854,5.9,855,5.211,856,3.958,857,4.254,858,5.13,859,4.254,860,5.9,861,4.254,862,4.254,863,5.9,864,4.254,865,7.95,866,5.9,867,8.544,868,4.254,869,5.9,870,4.254,871,5.9,872,4.254,873,4.254,874,4.254,875,4.254,876,2.047,877,4.254,878,7.315,879,6.773,880,6.773,881,4.254,882,4.254]],["title/classes/CreateApplicationDto.html",[22,0.209,445,3.303]],["body/classes/CreateApplicationDto.html",[3,0.074,4,0.064,5,0.054,9,0.166,10,0.009,21,0.084,22,0.31,27,0.005,28,0.006,29,0.005,35,0.612,41,0.444,44,1.252,45,0.549,64,2.712,268,4.884,269,0.788,273,1.616,281,4.331,291,0.643,292,2.091,294,2.657,298,3.143,318,2.18,328,4.24,330,3.143,349,2.475,445,4.91,529,4.392,856,2.562,883,6.479,884,4.392,885,3.143,886,4.973,887,4.973,888,4.712,889,5.287,890,4.877,891,4.359,892,4.973,893,4.973,894,5.791,895,6.557,896,4.973,897,5.287,898,6.557,899,4.973,900,4.973,901,6.557,902,4.973,903,3.79,904,4.91,905,3.64,906,2.76,907,4.01,908,4.973,909,3.724]],["title/classes/CreateDirectoryEntryDto.html",[22,0.209,910,3.303]],["body/classes/CreateDirectoryEntryDto.html",[3,0.077,4,0.067,5,0.056,9,0.171,10,0.009,21,0.088,22,0.319,27,0.005,28,0.006,29,0.005,35,0.638,41,0.507,44,1.232,45,0.627,118,2.499,269,0.823,273,1.662,291,0.806,292,2.389,294,2.774,300,2.789,318,2.276,353,3.246,885,3.282,888,4.159,889,5.438,890,4.484,891,4.484,903,3.898,904,5.051,905,4.159,906,2.882,910,5.051,911,7.004,912,4.052,913,4.187,914,3.728,915,4.52,916,4.586,917,4.586,918,4.586,919,4.586,920,6.617,921,4.586,922,4.741,923,3.888,924,4.187,925,4.586]],["title/interfaces/DeleteFileJob.html",[549,1.112,926,3.303]],["body/interfaces/DeleteFileJob.html",[3,0.099,4,0.086,5,0.072,10,0.009,21,0.113,27,0.006,28,0.008,29,0.006,35,0.819,45,0.558,273,1.94,291,0.822,549,1.68,551,2.755,926,5.895,927,5.884,928,5.884,929,7.649]],["title/classes/DeleteUserDto.html",[22,0.209,930,3.303]],["body/classes/DeleteUserDto.html",[3,0.093,4,0.08,5,0.068,9,0.159,10,0.009,21,0.106,22,0.359,27,0.006,28,0.007,29,0.006,35,0.77,41,0.424,45,0.525,269,0.993,273,1.87,291,0.744,292,1.998,318,2.746,579,3.594,885,3.96,888,3.478,903,4.386,905,4.213,906,3.478,930,5.683,931,6.703,932,4.692,933,4.404,934,6.266]],["title/classes/DiskStorage.html",[22,0.209,935,3.101]],["body/classes/DiskStorage.html",[3,0.06,4,0.052,5,0.043,9,0.191,10,0.009,21,0.096,22,0.19,23,1.998,24,1.379,25,2.895,27,0.004,28,0.005,29,0.004,35,0.494,36,1.604,37,2.21,41,0.528,43,2.109,44,1.121,45,0.654,46,1.796,48,2.129,49,1.927,54,1.996,60,2.64,61,1.312,63,2.019,64,1.66,81,2.819,113,2.559,118,2.727,121,0.787,154,1.998,168,2.423,269,0.636,278,2.821,291,0.868,460,3.027,549,1.012,561,2.411,722,2.423,726,2.538,912,1.871,935,3.983,936,3.237,937,3.962,938,5.666,939,5.666,940,4.243,941,4.568,942,3.006,943,5.013,944,4.015,945,5.004,946,4.015,947,5.004,948,4.015,949,3.766,950,4.015,951,3.962,952,3.983,953,4.015,954,3.766,955,4.015,956,4.243,957,2.669,958,2.321,959,2.669,960,2.822,961,2.822,962,3.546,963,3.546,964,3.546,965,2.538,966,3.546,967,3.546,968,3.546,969,3.546,970,3.546,971,3.546,972,3.546,973,3.546,974,3.546,975,3.546,976,3.546,977,3.546]],["title/interfaces/DiskStorageEngineOptions.html",[549,1.112,943,3.101]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.073,4,0.063,5,0.053,9,0.205,10,0.009,21,0.111,22,0.233,23,2.456,24,1.695,25,2.42,27,0.005,28,0.006,29,0.005,35,0.607,37,1.847,45,0.413,49,1.763,54,2.298,60,3.041,61,1.613,63,2.202,64,2.041,81,3.247,113,2.23,118,3.14,154,2.456,168,2.979,273,1.608,278,1.784,291,0.843,549,1.245,551,2.041,561,2.101,722,2.979,726,3.12,912,3.624,935,3.47,936,3.98,937,3.937,943,5.138,945,4.36,947,4.36,949,3.281,951,3.937,952,3.47,954,3.281,956,4.886,957,3.281,958,2.853,959,3.281,960,3.47,961,3.47,962,4.36,963,4.36,964,4.36,965,3.12,966,4.36,967,4.36,968,4.36,969,4.36,970,4.36,971,4.36,972,4.36,973,4.36,974,4.36,975,4.36,976,4.36,977,4.36]],["title/classes/DisplayNameTaken.html",[22,0.209,978,2.549]],["body/classes/DisplayNameTaken.html",[3,0.077,4,0.067,5,0.073,9,0.132,10,0.009,12,0.711,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.721,41,0.352,44,0.748,45,0.436,68,4.164,121,1.682,269,0.825,291,0.51,378,2.352,402,3.606,406,2.961,408,3.288,413,2.216,419,2.961,516,2.682,641,2.153,675,2.352,978,3.905,979,3.29,980,5.206,981,2.794,982,4.491,983,3.461,984,3.009,985,3.461,986,3.009,987,2.89,988,3.461,989,3.29,990,3.009,991,3.141,992,2.352,993,2.682,994,2.682,995,3.009,996,3.461,997,3.009,998,3.461,999,3.461]],["title/interfaces/Email.html",[549,1.112,641,1.824]],["body/interfaces/Email.html",[3,0.092,4,0.079,5,0.067,10,0.009,21,0.105,27,0.006,28,0.007,29,0.006,35,0.759,36,2.128,41,0.549,48,2.296,49,2.031,291,0.863,549,1.556,551,2.551,641,3.109,1000,5.449,1001,7.455,1002,6.806,1003,6.806,1004,6.169,1005,6.169,1006,6.169]],["title/classes/EmailConfirmation.html",[22,0.209,1007,2.932]],["body/classes/EmailConfirmation.html",[3,0.06,4,0.051,5,0.043,9,0.191,10,0.009,21,0.096,22,0.267,27,0.004,28,0.005,29,0.004,33,1.133,35,0.492,41,0.528,45,0.653,56,1.339,61,1.307,63,1.132,64,3.705,72,2.911,82,2.527,148,1.753,249,2.137,269,0.634,271,3.953,273,1.392,275,3.637,283,2.96,284,3.637,287,3.417,291,0.764,292,2.27,293,4.355,294,3.804,296,4.115,297,5.182,298,3.571,306,4.5,307,3.756,314,4.732,318,1.753,322,2.06,323,4.992,324,3.136,325,2.658,333,2.22,334,2.413,342,2.658,343,2.658,344,2.811,345,2.811,346,2.527,347,2.811,348,4.355,349,1.99,357,2.658,358,2.658,362,2.527,378,3.216,876,2.719,1007,3.756,1008,6.46,1009,3.224,1010,4.355,1011,5.282,1012,3.999,1013,2.811,1014,3.971,1015,3.999,1016,4.605,1017,3.999,1018,5.74,1019,3.999,1020,3.999,1021,3.999,1022,3.971,1023,2.994,1024,3.999,1025,2.994,1026,3.532,1027,3.999,1028,3.224,1029,3.224,1030,3.224]],["title/classes/EmailTaken.html",[22,0.209,984,2.549]],["body/classes/EmailTaken.html",[3,0.077,4,0.067,5,0.073,9,0.132,10,0.009,12,0.711,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.721,41,0.352,44,0.748,45,0.436,68,4.164,121,1.682,269,0.825,291,0.51,378,2.352,402,3.606,406,2.961,408,3.288,413,2.216,419,2.961,516,2.682,641,2.153,675,2.352,978,3.009,979,3.29,981,2.794,982,4.491,983,3.461,984,3.905,985,3.461,986,3.009,987,2.89,988,3.461,989,3.29,990,3.009,991,3.141,992,2.352,993,2.682,994,2.682,995,3.009,996,3.461,997,3.009,998,3.461,999,3.461,1031,5.206]],["title/classes/Entry.html",[22,0.209,1032,2.195]],["body/classes/Entry.html",[3,0.031,4,0.027,5,0.023,9,0.153,10,0.009,21,0.058,22,0.163,27,0.002,28,0.003,29,0.002,33,0.689,35,0.257,37,1.434,41,0.538,44,0.628,45,0.665,49,0.929,54,2.238,56,2.302,63,1.946,64,3.54,72,3.274,81,2.177,82,3.201,113,1.553,118,3.194,148,0.917,249,1.118,256,3.489,269,0.332,271,2.639,273,0.847,275,2.428,278,2.173,282,3.527,283,2.998,284,2.428,285,3.201,287,2.22,291,0.726,292,2.312,293,2.285,294,2.989,296,2.927,297,3.998,298,2.765,300,1.809,304,1.687,306,4.194,307,2.285,314,4.411,319,1.567,320,1.078,322,1.078,323,5.009,324,1.908,325,1.391,333,1.161,334,1.262,342,1.391,348,2.285,349,2.177,353,3.405,357,3.367,358,2.285,361,3.075,362,1.322,395,2.771,397,1.687,398,1.687,399,1.687,480,2.416,514,3.075,516,2.254,658,1.567,722,2.639,726,2.765,853,1.687,856,1.078,858,2.927,876,2.105,914,3.521,915,3.056,923,1.567,924,1.687,1013,3.075,1032,3.162,1033,1.687,1034,3.933,1035,4.228,1036,3.863,1037,3.863,1038,4.374,1039,3.998,1040,3.075,1041,3.075,1042,2.639,1043,2.092,1044,2.092,1045,2.092,1046,2.092,1047,2.092,1048,2.092,1049,2.092,1050,3.036,1051,2.092,1052,2.092,1053,3.437,1054,2.092,1055,2.092,1056,2.092,1057,2.092,1058,2.092,1059,2.092,1060,2.092,1061,2.092,1062,2.092,1063,2.092,1064,4.374,1065,1.848,1066,1.567,1067,1.848,1068,3.036,1069,1.848,1070,1.848,1071,1.848,1072,1.567,1073,1.848,1074,2.092,1075,4.374,1076,1.848,1077,5.065,1078,5.595,1079,5.595,1080,4.374,1081,2.092,1082,2.092,1083,2.092,1084,1.848,1085,2.092,1086,1.848,1087,3.437,1088,4.374,1089,3.437,1090,3.437,1091,3.437,1092,2.092,1093,3.437,1094,4.374,1095,3.437,1096,2.092,1097,3.036,1098,1.848,1099,2.092,1100,2.092,1101,2.092,1102,2.092,1103,2.092,1104,2.092,1105,2.092,1106,2.092,1107,3.437,1108,2.092,1109,2.092,1110,3.437,1111,3.863,1112,2.092,1113,3.437,1114,2.092,1115,2.092,1116,2.092,1117,2.092,1118,2.092,1119,2.092,1120,2.092,1121,3.437,1122,2.092,1123,2.092,1124,2.092]],["title/classes/EntryAlreadyExists.html",[22,0.209,1125,2.549]],["body/classes/EntryAlreadyExists.html",[3,0.077,4,0.067,5,0.056,9,0.132,10,0.009,12,0.709,21,0.143,22,0.398,27,0.005,28,0.006,29,0.005,33,1.72,41,0.352,43,1.403,44,1.076,45,0.435,46,1.195,121,1.651,269,0.823,291,0.735,402,3.284,403,3.604,405,3.375,406,3.284,408,2.276,409,2.499,413,2.871,912,2.42,914,3.356,1032,3.728,1125,3.898,1126,3.282,1127,5.192,1128,3.452,1129,3.001,1130,3.452,1131,2.675,1132,2.882,1133,3.452,1134,3.001,1135,4.484,1136,3.452,1137,4.484,1138,3.001,1139,2.882,1140,3.452]],["title/classes/EntryDto.html",[22,0.209,1034,3.101]],["body/classes/EntryDto.html",[3,0.071,4,0.061,5,0.051,9,0.12,10,0.009,21,0.08,22,0.301,27,0.005,28,0.006,29,0.005,35,0.584,41,0.604,44,1.03,45,0.747,118,3.451,269,0.753,273,1.567,275,3.98,278,2.591,283,3.239,284,3.98,287,3.356,291,0.856,292,1.514,300,2.63,320,2.447,353,4.2,430,5.04,858,3.675,914,3.568,915,4.326,1034,4.47,1035,5.04,1036,6.332,1039,4.766,1040,5.04,1041,5.04,1141,4.194,1142,4.749,1143,4.749,1144,4.749,1145,4.749,1146,4.749,1147,4.749,1148,4.749,1149,4.749,1150,4.749,1151,4.749,1152,4.749,1153,4.749,1154,4.749]],["title/classes/EntryNotDeletable.html",[22,0.209,1129,2.549]],["body/classes/EntryNotDeletable.html",[3,0.079,4,0.068,5,0.057,9,0.135,10,0.009,12,0.724,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.729,41,0.359,44,0.761,121,1.689,269,0.84,291,0.52,402,2.997,403,2.833,405,3.521,406,3.317,408,2.324,409,2.552,413,2.91,912,2.471,914,3.402,1032,3.766,1125,3.065,1126,3.351,1128,3.525,1129,3.952,1130,3.525,1131,2.732,1132,2.943,1133,3.525,1134,3.065,1135,4.545,1136,3.525,1137,4.545,1138,3.065,1139,2.943,1140,3.525,1155,5.303]],["title/classes/EntryNotFound.html",[22,0.209,1132,2.449]],["body/classes/EntryNotFound.html",[3,0.079,4,0.068,5,0.057,9,0.135,10,0.009,12,0.724,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.729,41,0.359,44,0.761,121,1.689,269,0.84,291,0.52,402,2.997,403,2.833,405,3.402,406,3.504,408,2.324,409,2.552,413,2.91,912,2.471,914,3.402,1032,3.766,1125,3.065,1126,3.351,1128,3.525,1129,3.065,1130,3.525,1131,2.732,1132,3.795,1133,3.525,1134,3.065,1135,4.545,1136,3.525,1137,4.545,1138,3.065,1139,2.943,1140,3.525,1156,5.303]],["title/classes/FileTooLarge.html",[22,0.209,1157,2.549]],["body/classes/FileTooLarge.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,43,1.41,44,0.75,45,0.567,46,1.201,121,1.653,269,0.827,291,0.736,981,3.405,1157,3.912,1158,3.299,1159,4.992,1160,4.499,1161,5.22,1162,3.757,1163,4.499,1164,3.47,1165,3.47,1166,3.017,1167,3.47,1168,3.487,1169,3.47,1170,3.017,1171,4.992,1172,4.992,1173,3.47,1174,3.017,1175,3.017,1176,3.299,1177,3.017,1178,3.47,1179,3.47,1180,3.47]],["title/controllers/FilesController.html",[0,2.056,1181,3.303]],["body/controllers/FilesController.html",[0,1.196,2,1.196,3,0.038,4,0.033,5,0.044,7,1.623,9,0.204,10,0.009,11,1.707,12,0.35,21,0.044,22,0.121,24,1.959,25,2.115,27,0.002,28,0.004,29,0.002,34,1.549,35,0.316,36,1.147,37,2.302,41,0.42,43,1.678,44,0.992,45,0.52,46,1.429,48,1.758,49,2.04,54,2.324,56,2.21,57,3.447,60,1.196,61,1.324,63,1.615,64,2.568,70,5.321,71,3.791,78,1.484,81,2.499,121,0.503,136,3.338,144,2.25,145,1.372,154,1.278,229,1.425,230,1.922,249,2.683,256,2.988,278,2.87,283,3.771,291,0.856,292,1.98,328,1.484,329,1.805,330,1.623,353,2.417,417,2.838,440,2.562,441,3.338,449,5.006,450,2.267,456,2.07,459,3.53,460,1.372,461,1.805,462,2.07,463,1.549,467,2.267,472,1.707,473,1.922,474,1.922,475,1.922,477,1.922,485,4.599,488,2.267,489,2.267,490,4.049,492,2.267,516,1.323,710,1.805,876,1.236,910,4.271,912,2.34,914,2.017,915,2.446,951,1.549,1032,1.278,1034,1.805,1035,3.53,1039,3.338,1040,2.849,1041,2.849,1042,2.446,1065,2.267,1111,5.038,1131,1.323,1132,1.425,1139,2.25,1168,2.939,1181,3.035,1182,2.267,1183,5.022,1184,5.022,1185,5.022,1186,2.567,1187,2.567,1188,2.567,1189,2.567,1190,2.567,1191,2.567,1192,2.567,1193,2.567,1194,2.567,1195,4.271,1196,2.567,1197,2.567,1198,2.567,1199,6.209,1200,2.567,1201,2.567,1202,4.053,1203,2.267,1204,2.446,1205,2.267,1206,4.053,1207,2.267,1208,3.268,1209,2.567,1210,1.922,1211,2.267,1212,2.343,1213,1.922,1214,2.567,1215,5.704,1216,2.267,1217,2.567,1218,2.567,1219,2.567,1220,2.567,1221,2.267,1222,2.567,1223,2.567,1224,2.567,1225,2.567,1226,2.567,1227,2.567,1228,2.567,1229,2.567,1230,2.267,1231,1.922,1232,2.567,1233,2.07,1234,2.567,1235,2.567,1236,2.567,1237,2.567,1238,2.567,1239,2.267,1240,2.567,1241,2.567,1242,2.567,1243,2.567,1244,2.567,1245,2.567,1246,2.567,1247,2.267,1248,1.922,1249,1.922,1250,2.567,1251,2.267,1252,2.567,1253,2.567,1254,2.567,1255,2.567,1256,2.267,1257,2.567,1258,2.567,1259,2.567,1260,2.567,1261,2.567]],["title/modules/FilesModule.html",[83,1.278,131,2.788]],["body/modules/FilesModule.html",[2,2.881,3,0.068,4,0.058,5,0.049,9,0.217,10,0.009,12,0.622,21,0.077,22,0.215,27,0.004,28,0.006,29,0.004,44,0.888,83,2.034,85,2.192,86,2.266,87,2.433,88,2.433,89,2.433,90,3.75,91,3.75,95,3.303,96,1.831,97,2.433,131,5.523,138,3.573,144,4.369,145,2.433,147,3.201,148,1.996,155,3.41,204,3.672,227,3.573,228,3.907,229,3.432,236,3.41,264,3.672,265,3.672,291,0.447,324,2.528,503,3.41,840,2.748,912,2.122,965,2.878,1032,2.266,1072,4.629,1168,2.346,1181,5.256,1204,5.313,1205,4.022,1262,4.022,1263,4.022,1264,4.022,1265,4.022,1266,5.232,1267,5.705,1268,4.554,1269,5.46,1270,4.554,1271,4.554,1272,4.022,1273,4.022,1274,4.022,1275,4.022,1276,4.022,1277,3.41,1278,4.022]],["title/injectables/FilesProcessor.html",[30,1.341,1267,3.101]],["body/injectables/FilesProcessor.html",[3,0.081,4,0.07,5,0.059,9,0.212,10,0.009,12,0.742,21,0.092,22,0.257,23,2.703,24,1.865,27,0.005,28,0.007,29,0.005,30,2.11,31,2.532,35,0.668,36,1.966,37,2.167,41,0.47,43,1.876,44,0.997,45,0.582,46,1.598,48,1.538,49,1.876,54,2.446,107,3.278,121,1.065,154,3.456,292,1.732,840,3.278,926,4.068,1212,4.662,1213,4.068,1267,4.881,1279,4.798,1280,6.944,1281,4.798,1282,5.432,1283,6.944,1284,7.362,1285,5.432,1286,5.432,1287,4.068,1288,4.798,1289,5.432,1290,5.432,1291,5.432,1292,5.432,1293,5.432,1294,4.798]],["title/injectables/FilesService.html",[30,1.341,1204,2.662]],["body/injectables/FilesService.html",[3,0.032,4,0.028,5,0.049,9,0.177,10,0.009,12,0.297,21,0.037,22,0.103,24,1.545,25,2.587,27,0.002,28,0.003,29,0.002,30,1.08,31,1.015,35,0.754,36,1.006,37,2.418,41,0.497,43,1.984,44,1.111,45,0.656,46,1.689,48,2.03,49,2.185,54,2.638,56,2.336,60,3.25,61,2.344,63,2.03,64,2.146,68,1.209,107,1.315,121,0.696,148,0.955,154,1.768,256,1.71,271,1.315,278,2.215,283,3.151,291,0.758,300,1.469,322,1.122,336,3.304,409,1.71,440,2.245,441,2.99,480,2.497,506,3.369,508,3.886,511,3.28,514,5.733,516,3.331,517,2.865,519,3.627,521,2.66,525,1.924,527,1.631,543,3.138,706,1.924,835,4.184,836,3.973,839,1.757,840,1.315,844,1.924,858,2.6,876,1.049,897,1.757,914,3.653,915,2.715,929,3.138,940,2.66,949,2.362,951,1.315,958,1.259,1032,3.849,1035,2.497,1037,1.924,1039,2.362,1040,3.162,1041,3.648,1042,1.315,1076,3.138,1097,1.924,1098,1.924,1125,1.259,1129,2.053,1132,2.881,1134,2.053,1138,2.053,1139,2.497,1162,2.497,1176,1.377,1203,1.924,1204,2.144,1212,2.999,1213,1.631,1256,3.138,1272,1.924,1275,3.138,1281,1.924,1295,1.924,1296,3.553,1297,3.553,1298,4.499,1299,2.179,1300,3.553,1301,2.179,1302,3.553,1303,5.19,1304,2.179,1305,3.553,1306,2.179,1307,2.179,1308,3.553,1309,2.179,1310,2.179,1311,3.138,1312,2.179,1313,2.179,1314,2.179,1315,2.179,1316,2.179,1317,3.553,1318,3.553,1319,2.179,1320,2.179,1321,2.179,1322,3.553,1323,3.553,1324,3.553,1325,2.179,1326,2.179,1327,5.19,1328,3.553,1329,3.553,1330,2.179,1331,4.499,1332,4.499,1333,2.179,1334,2.179,1335,2.179,1336,2.179,1337,2.179,1338,4.499,1339,2.179,1340,1.924,1341,1.924,1342,2.179,1343,2.179,1344,2.179,1345,3.553,1346,3.553,1347,4.499,1348,2.179,1349,2.179,1350,2.179,1351,2.179,1352,2.179,1353,2.179,1354,2.179,1355,3.553,1356,2.179,1357,2.179,1358,2.179,1359,2.179,1360,2.179,1361,2.179,1362,2.179,1363,2.179,1364,2.179,1365,2.179,1366,1.757,1367,2.179,1368,2.179,1369,2.179]],["title/classes/ForgotPasswordDto.html",[22,0.209,577,3.303]],["body/classes/ForgotPasswordDto.html",[3,0.089,4,0.077,5,0.065,9,0.188,10,0.009,21,0.102,22,0.35,27,0.006,28,0.007,29,0.006,35,0.738,41,0.406,233,2.348,269,0.951,273,1.822,292,1.914,318,2.631,577,5.536,641,3.616,801,4.84,888,4.447,903,4.273,905,4.104,906,3.332,933,4.219,1016,5.632,1370,6.53,1371,4.84,1372,5.961,1373,4.673,1374,4.84,1375,6.003,1376,6.003]],["title/classes/GenerateApplicationKeyDto.html",[22,0.209,469,3.303]],["body/classes/GenerateApplicationKeyDto.html",[3,0.098,4,0.085,5,0.071,10,0.008,21,0.112,22,0.312,27,0.006,28,0.008,29,0.006,35,0.811,41,0.447,45,0.552,268,4.345,269,1.045,273,1.929,279,4.3,291,0.767,469,5.861,1377,6.913,1378,5.826,1379,6.596]],["title/classes/GoogleCloudEngine.html",[22,0.209,1380,3.101]],["body/classes/GoogleCloudEngine.html",[3,0.067,4,0.058,5,0.049,9,0.178,10,0.009,21,0.104,22,0.214,23,2.256,24,2.58,25,2.597,27,0.004,28,0.006,29,0.004,33,0.909,35,0.557,36,1.745,37,1.982,41,0.532,43,2.03,44,1.079,45,0.629,46,1.729,48,1.982,49,1.665,54,1.597,56,1.519,61,1.481,63,1.745,113,2.784,121,0.888,154,3.067,269,0.718,273,1.519,278,2.53,291,0.848,349,2.256,460,3.293,549,1.143,558,3.562,561,2.623,856,2.336,937,4.225,940,4.615,941,4.969,942,3.395,949,4.097,951,4.225,952,4.332,954,4.097,957,4.655,958,2.62,959,3.014,960,3.187,1380,4.332,1381,6.07,1382,3.395,1383,6.184,1384,5.282,1385,4.534,1386,5.443,1387,4.534,1388,4.534,1389,4.534,1390,4.534,1391,3.655,1392,3.655,1393,3.395,1394,4.004,1395,4.004,1396,4.004,1397,4.004]],["title/interfaces/GoogleCloudEngineOptions.html",[549,1.112,1384,3.101]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.081,4,0.07,5,0.059,9,0.194,10,0.009,21,0.118,22,0.258,23,2.711,24,2.389,25,2.02,27,0.005,28,0.007,29,0.005,33,1.395,35,0.67,37,1.542,45,0.456,49,1.472,54,1.918,56,1.824,61,1.78,63,1.969,113,2.461,154,3.462,273,1.714,291,0.837,549,1.373,551,2.253,558,4.429,561,2.318,937,4.197,949,3.621,951,4.197,952,3.829,954,3.621,957,4.624,958,3.148,959,3.621,960,3.829,1380,3.829,1381,4.079,1382,4.079,1383,4.811,1384,5.387,1386,4.811,1391,4.392,1392,4.392,1393,4.079,1394,7.132,1395,4.811,1396,4.811,1397,4.811]],["title/controllers/HealthController.html",[0,2.056,1398,3.303]],["body/controllers/HealthController.html",[0,2.341,2,2.341,3,0.075,4,0.065,5,0.054,7,3.175,9,0.199,10,0.009,12,0.686,21,0.085,22,0.238,24,2.867,25,3.096,27,0.005,28,0.006,29,0.005,35,0.618,36,1.869,41,0.34,48,1.422,49,2.256,63,1.422,118,3.548,121,0.984,144,3.664,145,2.684,184,5.322,229,2.788,292,1.602,965,3.175,1398,4.942,1399,4.436,1400,6.6,1401,7.83,1402,5.023,1403,5.023,1404,6.6,1405,6.6,1406,6.6,1407,5.023,1408,6.6,1409,5.023,1410,6.6,1411,6.6,1412,4.05,1413,5.023,1414,5.023,1415,5.023,1416,5.023,1417,5.023,1418,5.023,1419,5.023,1420,5.023,1421,5.023,1422,5.023,1423,5.023,1424,5.023,1425,5.023,1426,5.023,1427,5.023,1428,5.023]],["title/modules/HealthModule.html",[83,1.278,132,3.101]],["body/modules/HealthModule.html",[2,3.605,3,0.096,4,0.083,5,0.07,9,0.21,10,0.009,12,0.883,21,0.11,22,0.306,27,0.006,28,0.007,29,0.006,83,2.242,85,3.113,132,5.438,138,3.738,1398,6.198,1412,5.215,1429,6.468,1430,7.736,1431,6.468]],["title/interfaces/IRequest.html",[51,2.788,549,1.112]],["body/interfaces/IRequest.html",[3,0.089,4,0.076,5,0.064,9,0.202,10,0.009,21,0.101,27,0.006,28,0.007,29,0.006,33,1.475,35,0.732,45,0.498,46,1.692,51,4.647,78,3.438,233,3.413,273,1.812,279,3.065,291,0.583,300,3.3,417,3.971,549,1.5,551,2.46,584,5.03,589,5.254,801,4.797,1432,5.254,1433,5.168,1434,5.949]],["title/interfaces/ISession.html",[549,1.112,1435,3.303]],["body/interfaces/ISession.html",[3,0.092,4,0.079,5,0.067,9,0.157,10,0.009,21,0.105,27,0.006,28,0.007,29,0.006,35,0.761,45,0.68,273,1.856,287,3.559,291,0.796,549,1.56,551,2.559,584,5.226,585,5.34,625,4.989,1014,5.94,1435,5.64,1436,5.465,1437,8.45]],["title/interfaces/ISessionData.html",[549,1.112,585,2.788]],["body/interfaces/ISessionData.html",[3,0.084,4,0.073,5,0.061,10,0.009,21,0.096,27,0.005,28,0.007,29,0.005,33,1.136,35,0.696,45,0.733,273,1.757,280,5.444,283,3.7,287,3.42,291,0.875,300,3.227,511,4.506,549,1.428,551,2.342,585,4.506,602,4.942,604,6.133,663,3.981,665,4.24,667,4.24,1438,5.001,1439,5.001,1440,6.604,1441,5.663,1442,5.001,1443,5.001,1444,5.001]],["title/interfaces/IncomingFile.html",[549,1.112,1445,2.932]],["body/interfaces/IncomingFile.html",[3,0.091,4,0.079,5,0.066,10,0.009,21,0.104,27,0.006,28,0.007,29,0.006,35,0.752,45,0.705,273,1.842,291,0.9,549,1.541,551,2.528,1162,4.671,1445,4.97,1446,5.399,1447,4.928,1448,7.432,1449,7.432,1450,6.784]],["title/classes/IncorrectPassword.html",[22,0.209,1451,2.549]],["body/classes/IncorrectPassword.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.963,96,2.099,121,1.706,233,2.042,269,0.827,405,2.88,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,2.897,713,3.017,754,3.299,756,3.149,757,3.149,791,3.017,792,3.017,793,3.017,804,3.299,981,3.106,992,3.057,993,3.487,994,3.487,1451,3.912,1452,3.299,1453,5.22,1454,3.47,1455,3.47,1456,3.47,1457,3.47]],["title/classes/InsufficientScopes.html",[22,0.209,414,2.662]],["body/classes/InsufficientScopes.html",[3,0.081,4,0.07,5,0.059,9,0.138,10,0.009,12,0.742,21,0.141,22,0.394,27,0.005,28,0.007,29,0.005,33,1.71,41,0.368,44,0.78,50,3.342,121,1.671,269,0.861,279,2.799,281,2.902,291,0.533,369,3.433,400,3.278,401,3.611,402,3.043,403,2.902,405,3.433,406,3.043,407,3.818,408,2.381,409,2.614,410,2.614,411,3.278,412,4.881,413,2.312,414,4.19,415,3.611,416,3.611,417,2.703,418,3.278,419,2.381,420,3.278,421,2.902,422,3.818,423,3.611,424,3.818,425,3.015,426,3.818,1458,5.432]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.209,1459,3.557]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.079,4,0.068,5,0.057,9,0.173,10,0.009,12,0.722,21,0.09,22,0.25,23,2.632,24,1.816,27,0.005,28,0.007,29,0.005,35,0.65,36,1.932,41,0.462,43,1.844,44,0.98,45,0.572,46,1.571,48,1.497,56,2.286,70,4.264,71,3.515,78,3.057,81,2.632,104,3.647,113,3.083,121,1.036,136,4.537,236,5.659,269,0.838,710,5.614,722,3.191,726,4.777,888,2.936,992,2.389,1230,4.671,1459,5.503,1460,6.675,1461,6.094,1462,4.671,1463,7.558,1464,5.289,1465,7.986,1466,5.289,1467,6.826,1468,7.986,1469,5.289,1470,5.289,1471,5.289,1472,6.826,1473,5.289,1474,5.289,1475,5.289,1476,4.671,1477,4.264,1478,4.671]],["title/classes/InvalidAPIKey.html",[22,0.209,418,2.662]],["body/classes/InvalidAPIKey.html",[3,0.081,4,0.07,5,0.059,9,0.138,10,0.009,12,0.742,21,0.141,22,0.394,27,0.005,28,0.007,29,0.005,33,1.71,41,0.368,44,0.78,50,3.684,121,1.671,269,0.861,279,2.799,281,2.902,291,0.533,369,3.433,400,3.278,401,3.611,402,3.043,403,2.902,405,3.257,406,3.043,407,3.818,408,2.381,409,2.614,410,2.614,411,3.278,412,4.881,413,2.312,414,3.278,415,3.611,416,3.611,417,2.703,418,4.19,419,2.381,420,3.278,421,2.902,422,3.818,423,3.611,424,3.818,425,3.015,426,3.818,1479,5.432]],["title/classes/InvalidAvatarFileType.html",[22,0.209,986,2.549]],["body/classes/InvalidAvatarFileType.html",[3,0.077,4,0.067,5,0.073,9,0.132,10,0.009,12,0.711,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.721,41,0.352,44,0.748,45,0.436,68,4.164,121,1.682,269,0.825,291,0.51,378,2.352,402,3.479,406,2.961,408,3.288,413,2.216,419,2.961,516,2.682,641,2.153,675,2.352,978,3.009,979,3.29,981,2.794,982,4.986,983,3.461,984,3.009,985,3.461,986,3.905,987,2.89,988,3.461,989,3.29,990,3.009,991,3.141,992,2.352,993,2.682,994,2.682,995,3.009,996,3.461,997,3.009,998,3.461,999,3.461,1480,5.206]],["title/classes/InvalidCredentials.html",[22,0.209,791,2.549]],["body/classes/InvalidCredentials.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.963,96,2.099,121,1.706,233,2.042,269,0.827,405,2.88,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,2.897,713,3.017,754,3.299,756,3.149,757,3.149,791,3.912,792,3.017,793,3.017,804,3.299,981,3.106,992,3.057,993,3.487,994,3.487,1451,3.017,1452,3.299,1454,3.47,1455,3.47,1456,3.47,1457,3.47,1481,5.22]],["title/classes/InvalidEmailConfirmationToken.html",[22,0.209,990,2.549]],["body/classes/InvalidEmailConfirmationToken.html",[3,0.077,4,0.067,5,0.073,9,0.132,10,0.009,12,0.711,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.721,41,0.352,44,0.748,45,0.436,68,4.164,121,1.682,269,0.825,291,0.51,378,2.352,402,3.479,406,2.961,408,3.288,413,2.216,419,2.961,516,2.682,641,2.153,675,2.352,978,3.009,979,3.29,981,3.102,982,4.491,983,3.461,984,3.009,985,3.461,986,3.009,987,2.89,988,3.461,989,3.29,990,3.905,991,3.141,992,2.352,993,2.682,994,2.682,995,3.009,996,3.461,997,3.009,998,3.461,999,3.461,1482,5.206]],["title/classes/InvalidPasswordResetLink.html",[22,0.209,792,2.549]],["body/classes/InvalidPasswordResetLink.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.824,96,2.099,121,1.706,233,2.042,269,0.827,405,2.88,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,2.897,713,3.017,754,3.299,756,3.149,757,3.149,791,3.017,792,3.912,793,3.017,804,3.299,981,3.286,992,3.057,993,3.487,994,3.487,1451,3.017,1452,3.299,1454,3.47,1455,3.47,1456,3.47,1457,3.47,1483,5.22]],["title/classes/InvalidUserActivationLink.html",[22,0.209,793,2.549]],["body/classes/InvalidUserActivationLink.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.824,96,2.099,121,1.706,233,2.042,269,0.827,405,2.88,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,2.897,713,3.017,754,3.299,756,3.149,757,3.149,791,3.017,792,3.017,793,3.912,804,3.299,981,3.286,992,3.057,993,3.487,994,3.487,1451,3.017,1452,3.299,1454,3.47,1455,3.47,1456,3.47,1457,3.47,1484,5.22]],["title/classes/IsStringPathSafeConstraint.html",[22,0.209,1485,3.303]],["body/classes/IsStringPathSafeConstraint.html",[3,0.073,4,0.063,5,0.053,9,0.125,10,0.009,21,0.124,22,0.308,27,0.005,28,0.006,29,0.005,35,0.604,36,1.841,37,1.391,41,0.44,43,1.327,44,0.934,45,0.411,46,1.13,48,1.841,56,2.178,63,2.064,72,2.531,104,2.624,113,2.938,118,3.509,256,2.364,269,0.778,291,0.853,307,4.323,318,2.851,321,3.453,353,3.13,561,2.09,856,3.757,922,4.572,1066,3.678,1070,4.338,1485,5.46,1486,5.46,1487,3.96,1488,6.44,1489,6.855,1490,4.912,1491,5.744,1492,4.912,1493,5.244,1494,5.744,1495,6.258,1496,4.338,1497,4.912,1498,3.678,1499,3.678,1500,3.678,1501,3.453,1502,3.96,1503,4.87,1504,5.879,1505,3.96,1506,3.96,1507,3.96]],["title/classes/IsStringValidPathConstraint.html",[22,0.209,1508,3.303]],["body/classes/IsStringValidPathConstraint.html",[3,0.074,4,0.064,5,0.054,9,0.127,10,0.009,21,0.124,22,0.311,27,0.005,28,0.006,29,0.005,35,0.613,36,1.859,37,1.411,41,0.445,43,1.347,44,0.943,45,0.418,46,1.147,48,1.859,56,2.2,63,2.079,72,2.569,104,2.664,113,2.967,118,2.399,256,2.399,269,0.79,291,0.855,307,4.366,318,2.879,321,3.504,353,3.161,561,2.122,856,3.784,1373,4.934,1486,5.5,1488,6.487,1489,6.895,1491,5.801,1493,5.296,1494,5.801,1495,6.294,1498,3.733,1499,3.733,1500,3.733,1501,3.504,1502,4.02,1503,4.918,1504,5.922,1505,4.02,1506,4.02,1507,4.02,1508,5.5,1509,4.02,1510,4.985,1511,4.985,1512,4.02,1513,4.403,1514,4.918,1515,4.985]],["title/classes/ListEntriesDto.html",[22,0.209,1516,3.557]],["body/classes/ListEntriesDto.html",[3,0.089,4,0.077,5,0.065,9,0.212,10,0.009,21,0.102,22,0.379,27,0.006,28,0.007,29,0.006,35,0.738,41,0.406,45,0.503,118,3.856,269,0.951,273,1.822,291,0.82,292,1.914,318,2.631,320,3.093,905,4.104,923,4.495,1373,3.794,1514,5.536,1516,5.961,1517,6.53,1518,5.301,1519,6.003,1520,6.003,1521,6.003,1522,6.003,1523,6.003,1524,6.003,1525,6.003,1526,6.003]],["title/classes/LoginDto.html",[22,0.209,582,3.303]],["body/classes/LoginDto.html",[3,0.085,4,0.073,5,0.062,9,0.145,10,0.009,21,0.096,22,0.338,27,0.005,28,0.007,29,0.005,35,0.7,41,0.53,45,0.655,269,0.903,273,1.763,291,0.846,292,2.495,318,2.496,579,3.497,582,5.358,652,4.887,885,4.522,888,3.972,903,4.744,905,4.556,906,3.972,933,5.03,1527,5.03,1528,5.859,1529,5.695,1530,5.03,1531,5.695,1532,5.695]],["title/modules/MailerModule.html",[83,1.278,133,3.101]],["body/modules/MailerModule.html",[3,0.05,4,0.043,5,0.036,9,0.202,10,0.009,12,0.458,21,0.057,22,0.159,25,2.598,27,0.003,28,0.005,29,0.003,36,0.95,37,1.409,41,0.444,43,1.772,44,1.006,45,0.549,46,1.509,48,1.857,49,0.907,63,2.077,83,2.261,85,1.615,86,1.67,87,1.793,88,1.793,89,1.793,90,3.743,91,3.168,95,2.658,96,1.349,97,1.793,133,5.782,138,2.876,144,3.292,145,1.793,155,2.512,204,2.705,227,3.427,228,3.748,229,1.862,236,2.512,264,2.705,265,2.705,266,5.916,267,2.358,278,1.212,361,3.497,559,2.876,561,3.123,570,2.512,626,5.024,840,2.024,876,1.615,1269,4.394,1274,2.963,1533,2.963,1534,2.963,1535,2.963,1536,5.158,1537,3.355,1538,7.038,1539,2.963,1540,4.394,1541,6.071,1542,3.355,1543,6.187,1544,2.963,1545,4.394,1546,3.355,1547,4.394,1548,4.145,1549,3.355,1550,6.187,1551,2.963,1552,4.394,1553,3.355,1554,4.781,1555,4.912,1556,2.963,1557,3.355,1558,3.355,1559,5.237,1560,3.497,1561,2.963,1562,3.355,1563,5.237,1564,2.963,1565,2.963,1566,4.394,1567,5.237,1568,4.394,1569,5.237,1570,2.963,1571,2.963,1572,3.355]],["title/interfaces/MailerModuleAsyncOptions.html",[549,1.112,1541,3.303]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.082,4,0.071,5,0.06,9,0.195,10,0.009,21,0.093,27,0.005,28,0.007,29,0.005,33,1.405,35,0.677,37,1.559,45,0.755,46,2.025,49,1.488,83,2.233,227,4.686,228,5.124,267,5.699,273,1.726,285,4.427,549,1.389,551,2.277,553,3.48,554,6.187,555,7.161,556,4.864,557,4.864,559,3.183,561,2.344,563,4.864,635,4.924,1541,5.245,1548,4.427,1560,3.871,1561,4.864,1573,4.124]],["title/interfaces/MailerOptions.html",[549,1.112,1548,2.788]],["body/interfaces/MailerOptions.html",[3,0.098,4,0.084,5,0.071,9,0.167,10,0.008,21,0.111,27,0.006,28,0.008,29,0.006,33,1.319,72,3.387,83,1.905,549,1.97,551,2.719,553,4.155,906,3.649,1498,4.923,1499,4.923,1500,4.923,1501,4.621,1548,4.937,1573,4.923,1574,6.575,1575,6.575,1576,6.575,1577,6.575,1578,6.575]],["title/interfaces/MailerOptionsFactory.html",[549,1.112,1560,3.101]],["body/interfaces/MailerOptionsFactory.html",[3,0.094,4,0.081,5,0.068,9,0.16,10,0.009,21,0.107,27,0.006,28,0.007,29,0.006,35,0.775,36,2.157,41,0.427,48,1.785,49,2.059,83,2.373,549,1.59,551,2.608,559,3.644,561,3.242,635,4.432,1548,5.174,1560,5.355,1573,5.705,1579,5.569,1580,8.504,1581,6.305]],["title/injectables/MailerProcessor.html",[30,1.341,1536,3.101]],["body/injectables/MailerProcessor.html",[3,0.07,4,0.06,5,0.051,9,0.212,10,0.009,12,0.638,21,0.079,22,0.221,24,2.612,25,2.821,27,0.004,28,0.006,29,0.004,30,1.911,31,2.177,35,0.574,36,1.78,37,2.315,41,0.515,43,1.699,44,0.903,45,0.527,46,1.447,48,1.78,49,2.055,54,2.504,83,1.354,107,2.819,113,2.11,121,0.915,227,2.7,273,1.55,292,1.49,349,2.324,559,3.635,561,2.677,840,2.819,842,5.071,856,2.407,942,3.498,1284,7.012,1287,3.498,1288,4.126,1294,4.126,1536,4.421,1548,4.807,1555,3.498,1556,4.126,1559,4.126,1582,4.126,1583,7.11,1584,7.222,1585,5.555,1586,4.671,1587,4.671,1588,6.289,1589,4.671,1590,4.671,1591,6.289,1592,5.555,1593,4.671,1594,3.105,1595,4.126,1596,3.498,1597,4.671,1598,4.671,1599,4.671,1600,4.671,1601,4.671]],["title/injectables/MailerService.html",[30,1.341,626,2.662]],["body/injectables/MailerService.html",[3,0.057,4,0.049,5,0.041,9,0.205,10,0.009,12,0.523,21,0.065,22,0.181,24,1.882,25,2.032,27,0.004,28,0.005,29,0.004,30,1.665,31,1.785,35,0.471,36,1.551,37,2.24,41,0.5,43,1.996,44,1.061,45,0.619,46,1.7,48,1.977,49,1.887,54,2.253,56,2.339,60,1.785,61,1.252,63,1.811,64,1.584,107,2.311,121,1.074,144,3.876,145,2.047,168,2.311,202,3.088,229,3.042,256,1.844,291,0.82,336,4.036,507,3.088,559,2.214,561,2.332,626,3.306,835,5.63,838,5.65,839,3.088,840,2.311,843,3.383,876,1.844,956,4.103,1001,4.84,1585,4.84,1594,4.642,1595,3.383,1596,2.868,1602,3.383,1603,5.48,1604,5.48,1605,5.48,1606,3.831,1607,5.48,1608,3.831,1609,3.831,1610,5.48,1611,5.65,1612,5.65,1613,3.831,1614,3.088,1615,5.48,1616,3.831,1617,5.48,1618,3.831,1619,4.791,1620,4.84,1621,3.831,1622,3.831,1623,3.831,1624,3.831,1625,2.868,1626,5.48,1627,3.831,1628,3.831,1629,3.831,1630,3.831,1631,3.831,1632,5.48,1633,3.831,1634,3.831,1635,3.831,1636,3.831,1637,5.48,1638,3.831,1639,3.831,1640,3.831,1641,3.831,1642,3.831,1643,3.831]],["title/classes/NoFilesUploaded.html",[22,0.209,1166,2.549]],["body/classes/NoFilesUploaded.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.728,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.731,41,0.361,45,0.446,121,1.691,269,0.845,291,0.523,981,3.508,1157,3.081,1158,3.369,1159,4.561,1160,3.544,1162,2.959,1163,4.561,1164,3.544,1165,3.544,1166,3.965,1167,3.544,1168,3.535,1169,3.544,1170,3.081,1171,5.043,1172,5.043,1173,3.544,1174,3.081,1175,3.081,1176,3.369,1177,3.081,1178,3.544,1179,3.544,1180,3.544,1644,5.331]],["title/classes/ParentDirectoryNotFound.html",[22,0.209,1139,2.449]],["body/classes/ParentDirectoryNotFound.html",[3,0.079,4,0.068,5,0.057,9,0.135,10,0.009,12,0.724,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.729,41,0.359,44,0.761,121,1.689,269,0.84,291,0.52,402,2.997,403,2.833,405,3.402,406,3.504,408,2.324,409,2.552,413,2.91,912,2.471,914,3.402,1032,3.766,1125,3.065,1126,3.351,1128,3.525,1129,3.065,1130,3.525,1131,2.732,1132,2.943,1133,3.525,1134,3.065,1135,4.545,1136,3.525,1137,4.545,1138,3.065,1139,3.795,1140,3.525,1645,5.303]],["title/classes/ParentIsChildrenOfItself.html",[22,0.209,1134,2.549]],["body/classes/ParentIsChildrenOfItself.html",[3,0.079,4,0.068,5,0.057,9,0.135,10,0.009,12,0.724,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.729,41,0.359,44,0.761,121,1.689,269,0.84,291,0.52,402,2.997,403,2.833,405,3.521,406,3.317,408,2.324,409,2.552,413,2.91,912,2.471,914,3.402,1032,3.766,1125,3.065,1126,3.351,1128,3.525,1129,3.065,1130,3.525,1131,2.732,1132,2.943,1133,3.525,1134,3.952,1135,4.545,1136,3.525,1137,4.545,1138,3.065,1139,2.943,1140,3.525,1646,5.303]],["title/classes/ParentIsItself.html",[22,0.209,1138,2.549]],["body/classes/ParentIsItself.html",[3,0.079,4,0.068,5,0.057,9,0.135,10,0.009,12,0.724,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.729,41,0.359,44,0.761,121,1.689,269,0.84,291,0.52,402,2.997,403,2.833,405,3.521,406,3.317,408,2.324,409,2.552,413,2.91,912,2.471,914,3.402,1032,3.766,1125,3.065,1126,3.351,1128,3.525,1129,3.065,1130,3.525,1131,2.732,1132,2.943,1133,3.525,1134,3.065,1135,4.545,1136,3.525,1137,4.545,1138,3.952,1139,2.943,1140,3.525,1647,5.303]],["title/classes/PartialUserDto.html",[22,0.209,1648,3.303]],["body/classes/PartialUserDto.html",[3,0.067,4,0.057,5,0.048,8,4.059,9,0.155,10,0.009,21,0.076,22,0.289,27,0.004,28,0.006,29,0.004,33,1.225,35,0.55,41,0.598,45,0.74,76,7.754,269,0.709,273,1.505,275,3.39,278,2.207,284,3.39,287,3.048,291,0.825,292,2.574,300,2.525,320,2.304,353,3.347,430,5.913,579,2.525,628,5.648,641,3.234,652,3.53,673,3.86,932,3.349,987,3.39,1010,4.059,1131,3.146,1648,4.573,1649,5.394,1650,4.924,1651,4.473,1652,4.473,1653,4.473,1654,4.473,1655,4.473,1656,4.473,1657,4.473,1658,4.473,1659,4.473,1660,4.473,1661,4.473,1662,4.473,1663,4.473,1664,3.95]],["title/classes/PasswordReset.html",[22,0.209,765,2.932]],["body/classes/PasswordReset.html",[3,0.064,4,0.055,5,0.047,9,0.187,10,0.009,21,0.101,22,0.204,27,0.004,28,0.006,29,0.004,33,1.194,35,0.53,41,0.523,45,0.646,56,1.443,61,1.408,63,1.22,64,3.634,72,3.067,82,2.723,148,1.889,249,2.302,269,0.683,271,4.115,273,1.467,275,3.785,283,3.081,284,3.785,287,3.498,291,0.721,292,2.175,293,3.957,294,3.93,296,4.251,297,4.889,298,3.762,306,3.762,314,4.889,322,2.22,323,4.889,324,3.304,325,2.864,333,2.392,334,2.6,342,2.864,343,2.864,344,3.029,345,3.029,346,2.723,347,3.029,348,3.957,349,2.144,357,2.864,358,2.864,362,2.723,378,3.323,765,3.957,766,3.227,876,2.865,1010,4.533,1013,3.029,1014,4.184,1018,5.93,1022,4.184,1023,3.227,1028,3.474,1029,3.474,1030,3.474,1665,6.435,1666,3.474,1667,4.309,1668,4.309,1669,4.309,1670,4.309,1671,4.309,1672,4.309,1673,3.806,1674,4.309]],["title/guards/RecaptchaGuard.html",[383,3.303,622,3.303]],["body/guards/RecaptchaGuard.html",[3,0.052,4,0.045,5,0.038,9,0.189,10,0.009,12,0.477,21,0.103,22,0.165,24,2.086,25,2.643,27,0.005,28,0.005,29,0.003,30,1.559,35,0.43,36,1.452,37,1.72,38,5.395,39,4.135,40,5.762,41,0.411,43,1.808,44,0.872,45,0.56,46,1.398,47,6.004,48,1.452,49,1.386,54,1.231,56,2.864,57,1.94,58,2.819,60,3.118,61,2.186,63,1.72,71,2.324,78,2.02,81,2.552,113,1.579,121,1.005,142,2.618,144,3.714,145,1.868,229,2.847,249,2.74,279,2.642,291,0.656,338,2.819,362,2.209,417,2.552,459,3.605,463,2.109,507,2.819,601,2.618,602,2.109,622,3.84,661,2.618,693,2.819,695,4.529,699,6.797,701,3.088,703,4.548,710,2.457,722,2.109,748,3.088,749,3.088,909,2.618,981,1.446,992,2.317,1477,2.819,1528,5.576,1625,4.548,1675,2.819,1676,6.691,1677,3.496,1678,3.496,1679,3.496,1680,5.128,1681,3.496,1682,2.819,1683,3.088,1684,2.819,1685,2.819,1686,2.819,1687,5.909,1688,5.365,1689,2.618,1690,3.088,1691,4.135,1692,3.088,1693,2.819,1694,3.088,1695,2.819,1696,3.088,1697,3.496,1698,3.496,1699,3.496,1700,3.496,1701,3.496,1702,3.496,1703,3.496,1704,3.496,1705,3.496,1706,3.496,1707,5.128,1708,3.496,1709,3.496,1710,3.496,1711,3.496,1712,3.496,1713,3.496,1714,3.496,1715,3.496,1716,3.496,1717,3.496,1718,3.496,1719,3.496,1720,5.128,1721,5.128,1722,3.496]],["title/classes/RegisterDto.html",[22,0.209,593,3.303]],["body/classes/RegisterDto.html",[3,0.071,4,0.061,5,0.051,9,0.12,10,0.009,21,0.08,22,0.301,27,0.005,28,0.006,29,0.005,35,0.584,41,0.518,45,0.641,269,0.753,273,1.567,291,0.836,292,2.442,294,2.537,296,2.745,308,3.556,318,2.081,579,3.47,593,4.762,641,3.398,652,4.614,888,4.885,890,5.09,891,5.09,903,4.614,905,4.432,906,3.98,907,3.829,933,4.47,1016,5.04,1372,5.127,1373,4.019,1374,3.829,1528,5.369,1530,4.194,1723,4.194,1724,4.749,1725,5.127,1726,4.749,1727,4.749,1728,4.749,1729,5.616,1730,6.763,1731,4.194,1732,4.749,1733,5.616,1734,4.749,1735,3.829,1736,4.194]],["title/classes/ResetPasswordDto.html",[22,0.209,597,3.303]],["body/classes/ResetPasswordDto.html",[3,0.083,4,0.071,5,0.06,9,0.141,10,0.009,21,0.094,22,0.333,27,0.005,28,0.007,29,0.005,35,0.683,41,0.477,45,0.59,61,2.301,96,2.832,269,0.88,273,1.735,291,0.797,292,2.246,296,3.209,318,2.434,378,3.791,579,3.546,597,5.273,691,5.436,885,4.451,888,4.514,890,4.681,891,4.681,903,4.469,905,4.292,906,3.082,1084,4.904,1371,4.477,1725,4.477,1735,5.678,1737,6.83,1738,5.553,1739,5.553,1740,5.553,1741,5.553]],["title/interfaces/SendMailOptions.html",[549,1.112,1594,2.932]],["body/interfaces/SendMailOptions.html",[3,0.094,4,0.081,5,0.068,9,0.193,10,0.009,21,0.107,27,0.006,28,0.007,29,0.006,33,1.261,35,0.773,45,0.685,46,1.75,273,1.874,336,3.633,511,4.806,549,1.585,551,2.599,553,3.972,956,5.694,1594,5.055,1596,5.694,1611,5.551,1612,5.551,1614,5.068,1619,6.361,1742,5.551,1743,6.285,1744,6.285]],["title/classes/SessionDto.html",[22,0.209,1433,3.101]],["body/classes/SessionDto.html",[3,0.081,4,0.07,5,0.059,9,0.139,10,0.009,21,0.093,22,0.33,27,0.005,28,0.007,29,0.005,35,0.672,41,0.578,45,0.727,269,0.866,273,1.717,280,5.101,283,3.467,287,3.054,291,0.837,292,1.742,300,2.882,320,2.814,430,5.394,511,3.452,602,4.63,604,5.746,663,3.839,665,4.09,667,4.09,1433,4.898,1440,6.187,1442,4.824,1443,4.824,1444,4.824,1745,4.824,1746,7.674,1747,6.968,1748,5.462,1749,5.462,1750,5.462,1751,5.462,1752,5.462,1753,5.462]],["title/controllers/SessionsController.html",[0,2.056,1754,3.303]],["body/controllers/SessionsController.html",[0,1.933,2,1.933,3,0.062,4,0.053,5,0.045,7,2.622,9,0.205,10,0.009,11,2.757,12,0.566,21,0.07,22,0.274,23,2.064,24,1.425,27,0.004,28,0.006,29,0.004,34,2.503,35,0.51,36,1.641,37,1.892,41,0.452,43,1.806,44,0.96,45,0.56,46,1.538,48,1.892,49,2.131,54,1.461,56,1.389,63,1.892,278,2.614,283,3.791,291,0.85,292,2.131,319,3.106,320,2.137,460,2.216,461,2.916,472,2.757,473,3.106,474,3.106,475,3.106,477,3.106,485,3.345,490,3.345,584,4.984,585,5.117,625,3.345,657,6.39,669,5.004,777,5.004,778,3.498,822,3.345,1433,2.916,1754,4.341,1755,3.664,1756,6.683,1757,5.797,1758,5.797,1759,4.148,1760,6.683,1761,4.148,1762,4.148,1763,4.148,1764,4.148,1765,4.148,1766,4.148,1767,4.148,1768,3.664,1769,4.148,1770,4.148,1771,4.148,1772,4.148,1773,4.148,1774,4.148,1775,4.148,1776,4.148,1777,4.148,1778,4.148,1779,4.148,1780,4.148,1781,4.148,1782,4.148]],["title/modules/SessionsModule.html",[83,1.278,134,2.788]],["body/modules/SessionsModule.html",[2,3.383,3,0.087,4,0.075,5,0.063,9,0.201,10,0.009,12,0.796,21,0.099,22,0.276,27,0.006,28,0.007,29,0.006,83,2.291,85,2.805,86,2.9,87,3.114,88,3.114,89,3.114,90,4.224,91,4.224,95,3.878,96,2.343,97,3.114,134,5.564,778,5.507,1754,5.92,1768,5.147,1783,5.147,1784,5.147,1785,5.147,1786,5.828,1787,5.828]],["title/injectables/SessionsService.html",[30,1.341,778,2.662]],["body/injectables/SessionsService.html",[3,0.067,4,0.058,5,0.049,9,0.19,10,0.009,12,0.615,21,0.076,22,0.213,24,1.546,25,2.779,27,0.004,28,0.006,29,0.004,30,1.864,31,2.099,35,0.554,36,1.737,37,2.29,41,0.548,43,2.118,44,1.126,45,0.657,46,1.804,48,2.121,49,2.276,54,2.161,63,1.737,121,0.882,148,1.974,273,1.512,322,2.32,349,2.241,440,3.877,460,3.278,480,4.312,506,4.594,513,5.418,514,6.22,516,3.86,517,4.946,519,4.946,521,4.594,777,5.225,778,3.702,856,2.32,1435,3.372,1788,3.977,1789,4.503,1790,8.089,1791,6.135,1792,4.503,1793,4.503,1794,4.503,1795,4.503,1796,6.135,1797,4.503,1798,4.503,1799,4.503,1800,4.503,1801,4.503,1802,4.503,1803,4.503]],["title/interfaces/StorageEngine.html",[549,1.112,937,2.662]],["body/interfaces/StorageEngine.html",[3,0.081,4,0.07,5,0.059,9,0.137,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,35,0.666,36,1.962,41,0.518,43,2.066,44,1.098,45,0.64,46,1.759,48,2.164,49,2.302,104,3.704,278,2.762,291,0.869,460,3.704,549,1.366,551,2.24,552,5.665,937,4.183,940,5.191,941,5.589,949,4.608,951,4.613,952,4.873,954,4.608,957,5.081,958,3.131,1804,4.785,1805,5.417,1806,5.417,1807,5.417]],["title/modules/StorageModule.html",[83,1.278,1266,2.932]],["body/modules/StorageModule.html",[3,0.054,4,0.047,5,0.039,9,0.192,10,0.009,12,0.496,21,0.062,22,0.172,25,2.685,27,0.004,28,0.005,29,0.004,36,1.029,37,1.494,41,0.461,43,1.842,44,0.979,45,0.571,46,1.568,48,1.93,49,0.982,63,2.137,83,2.313,85,1.75,86,1.809,87,1.942,88,1.942,89,1.942,90,3.867,91,3.319,95,2.82,96,1.462,97,1.942,138,2.101,227,3.05,228,3.335,266,6.087,267,2.556,278,1.314,361,3.71,550,6.186,558,3.94,559,3.05,560,3.71,561,3.213,562,3.211,570,2.722,876,1.75,959,4.13,1212,4.89,1266,5.407,1538,7.184,1539,3.211,1540,4.661,1543,6.393,1544,3.211,1545,4.661,1547,4.661,1550,6.393,1551,3.211,1552,4.661,1563,5.487,1564,3.211,1565,3.211,1566,4.661,1567,5.487,1568,4.661,1569,5.487,1570,3.211,1571,3.211,1808,3.211,1809,3.211,1810,3.211,1811,3.636,1812,3.636,1813,3.636,1814,3.636,1815,3.636,1816,5.009,1817,5.104,1818,3.211,1819,3.636,1820,3.636]],["title/interfaces/StorageOptions.html",[549,1.112,558,2.549]],["body/interfaces/StorageOptions.html",[3,0.093,4,0.08,5,0.068,9,0.193,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,35,0.77,45,0.684,83,1.816,273,1.87,511,4.797,549,1.58,551,2.591,552,4.404,553,3.96,558,4.386,943,5.335,965,3.96,1277,6.354,1384,5.335,1821,5.534,1822,5.534,1823,5.534,1824,5.534]],["title/interfaces/StorageOptionsFactory.html",[549,1.112,560,3.101]],["body/interfaces/StorageOptionsFactory.html",[3,0.094,4,0.081,5,0.068,9,0.16,10,0.009,21,0.107,27,0.006,28,0.007,29,0.006,35,0.775,36,2.157,41,0.427,48,1.785,49,2.059,83,2.373,154,3.138,549,1.59,551,2.608,552,5.355,558,4.732,559,3.644,560,5.355,561,3.242,1825,5.569,1826,8.504,1827,6.305]],["title/injectables/StorageService.html",[30,1.341,1212,2.549]],["body/injectables/StorageService.html",[3,0.036,4,0.031,5,0.052,9,0.211,10,0.009,12,0.333,21,0.041,22,0.115,24,0.837,25,2.511,27,0.002,28,0.004,29,0.002,30,1.181,31,1.135,35,0.3,36,1.101,37,2.103,41,0.458,43,1.635,44,0.869,45,0.54,46,1.392,48,1.713,49,1.743,54,1.369,56,2.662,57,2.693,60,1.135,61,2.368,63,1.99,64,2.006,81,3.498,83,0.706,104,2.592,113,1.1,121,0.477,227,1.408,256,1.871,273,0.958,278,2.001,291,0.632,300,1.007,320,1.255,333,1.352,334,1.47,349,1.212,353,1.172,460,2.077,558,3.201,559,2.247,561,2.575,600,2.151,658,1.824,667,2.911,680,1.964,681,1.964,683,1.964,722,1.47,726,1.54,847,2.733,856,1.255,912,1.812,935,3.41,937,2.927,942,1.824,951,2.927,954,2.584,957,1.619,958,2.804,959,2.584,960,1.712,965,2.457,1042,1.47,1157,1.408,1162,2.693,1166,2.247,1168,1.255,1170,2.247,1174,2.247,1175,2.247,1177,2.247,1212,2.247,1231,1.824,1239,3.434,1249,4.147,1277,3.633,1380,1.712,1445,2.584,1448,3.434,1449,4.285,1450,3.135,1584,5.697,1625,1.824,1689,3.633,1817,1.824,1818,2.151,1821,2.151,1822,2.151,1823,2.151,1824,3.434,1828,2.151,1829,4.851,1830,3.434,1831,3.888,1832,2.436,1833,2.436,1834,5.979,1835,2.436,1836,3.888,1837,2.436,1838,2.436,1839,3.888,1840,2.436,1841,3.888,1842,4.147,1843,2.436,1844,3.888,1845,2.436,1846,3.135,1847,5.345,1848,2.436,1849,2.436,1850,3.135,1851,2.911,1852,2.436,1853,2.436,1854,2.436,1855,2.911,1856,2.436,1857,4.851,1858,1.824,1859,2.151,1860,2.436,1861,2.436,1862,3.888,1863,2.436,1864,2.436,1865,2.436,1866,2.436,1867,2.436,1868,2.436,1869,2.911,1870,2.151,1871,2.436,1872,2.436,1873,1.964,1874,5.538,1875,4.851,1876,2.436,1877,3.888,1878,2.436,1879,2.436,1880,2.436,1881,2.436,1882,4.851,1883,2.436,1884,2.436,1885,2.436,1886,2.436,1887,2.436,1888,2.436,1889,3.888,1890,2.436,1891,3.888,1892,2.436,1893,2.436,1894,2.436,1895,2.436,1896,2.436,1897,3.888,1898,2.436,1899,2.436,1900,2.436,1901,2.436,1902,5.538,1903,2.436,1904,2.436,1905,2.436,1906,2.436,1907,2.436,1908,2.436,1909,2.436,1910,2.436,1911,2.436,1912,2.436,1913,2.436,1914,2.436,1915,2.151,1916,2.436]],["title/classes/StreamMeter.html",[22,0.209,1855,3.303]],["body/classes/StreamMeter.html",[3,0.08,4,0.069,5,0.058,9,0.136,10,0.009,21,0.091,22,0.253,25,2.817,27,0.005,28,0.007,29,0.005,33,1.378,35,0.657,36,1.946,41,0.514,43,1.444,44,0.768,45,0.576,46,1.23,48,1.513,63,1.513,104,3.672,269,0.847,273,1.694,291,0.745,349,2.66,855,6.07,856,2.754,858,3.972,876,3.308,958,3.089,961,4.831,1042,4.583,1855,5.146,1869,5.688,1873,4.31,1917,7.082,1918,4.721,1919,7.596,1920,7.596,1921,6.872,1922,5.345,1923,6.872,1924,6.709,1925,7.596,1926,8.018,1927,5.345,1928,5.345,1929,5.345,1930,6.872,1931,5.345]],["title/classes/TooManyApplications.html",[22,0.209,420,2.662]],["body/classes/TooManyApplications.html",[3,0.081,4,0.07,5,0.059,9,0.138,10,0.009,12,0.742,21,0.141,22,0.394,27,0.005,28,0.007,29,0.005,33,1.71,41,0.368,44,0.78,50,3.342,121,1.671,269,0.861,279,2.799,281,2.902,291,0.533,369,3.433,400,3.278,401,3.611,402,3.043,403,2.902,405,3.433,406,3.043,407,3.818,408,2.381,409,2.614,410,2.614,411,3.278,412,4.881,413,2.312,414,3.278,415,3.611,416,3.611,417,2.703,418,3.278,419,2.381,420,4.19,421,2.902,422,3.818,423,3.611,424,3.818,425,3.015,426,3.818,1932,5.432]],["title/classes/TooManyFields.html",[22,0.209,1170,2.549]],["body/classes/TooManyFields.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.728,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.731,41,0.361,45,0.446,121,1.691,269,0.845,291,0.523,981,3.508,1157,3.081,1158,3.369,1159,4.561,1160,3.544,1162,2.959,1163,4.561,1164,3.544,1165,3.544,1166,3.081,1167,3.544,1168,3.535,1169,3.544,1170,3.965,1171,5.043,1172,5.043,1173,3.544,1174,3.081,1175,3.081,1176,3.369,1177,3.081,1178,3.544,1179,3.544,1180,3.544,1933,5.331]],["title/classes/TooManyFiles.html",[22,0.209,1174,2.549]],["body/classes/TooManyFiles.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.728,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.731,41,0.361,45,0.446,121,1.691,269,0.845,291,0.523,981,3.508,1157,3.081,1158,3.369,1159,4.561,1160,3.544,1162,2.959,1163,4.561,1164,3.544,1165,3.544,1166,3.081,1167,3.544,1168,3.535,1169,3.544,1170,3.081,1171,5.043,1172,5.043,1173,3.544,1174,3.965,1175,3.081,1176,3.369,1177,3.081,1178,3.544,1179,3.544,1180,3.544,1934,5.331]],["title/classes/TooManyParts.html",[22,0.209,1175,2.549]],["body/classes/TooManyParts.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.728,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.731,41,0.361,45,0.446,121,1.691,269,0.845,291,0.523,981,3.508,1157,3.081,1158,3.369,1159,4.561,1160,3.544,1162,2.959,1163,4.561,1164,3.544,1165,3.544,1166,3.081,1167,3.544,1168,3.535,1169,3.544,1170,3.081,1171,5.043,1172,5.043,1173,3.544,1174,3.081,1175,3.965,1176,3.369,1177,3.081,1178,3.544,1179,3.544,1180,3.544,1935,5.331]],["title/classes/UnsupportedContentType.html",[22,0.209,1177,2.549]],["body/classes/UnsupportedContentType.html",[3,0.079,4,0.068,5,0.058,9,0.135,10,0.009,12,0.728,21,0.144,22,0.401,27,0.005,28,0.007,29,0.005,33,1.731,41,0.361,45,0.446,121,1.691,269,0.845,291,0.523,981,3.427,1157,3.081,1158,3.369,1159,4.561,1160,3.544,1162,2.959,1163,5.043,1164,3.544,1165,3.544,1166,3.081,1167,3.544,1168,3.535,1169,3.544,1170,3.081,1171,5.043,1172,5.043,1173,3.544,1174,3.081,1175,3.081,1176,3.369,1177,3.965,1178,3.544,1179,3.544,1180,3.544,1936,5.331]],["title/classes/UpdateEntryDto.html",[22,0.209,1195,3.303]],["body/classes/UpdateEntryDto.html",[3,0.078,4,0.067,5,0.057,9,0.172,10,0.009,21,0.089,22,0.321,27,0.005,28,0.007,29,0.005,35,0.645,41,0.51,44,1.235,45,0.631,118,2.525,269,0.832,273,1.673,291,0.809,292,2.401,294,2.803,300,2.808,318,2.3,353,3.268,885,3.316,888,4.179,889,5.475,890,4.514,891,4.514,903,3.925,904,5.085,905,4.179,906,2.912,913,4.23,914,3.747,915,4.543,916,4.634,917,4.634,918,4.634,919,4.634,920,6.65,921,4.634,922,4.773,923,3.929,924,4.23,925,4.634,1032,3.962,1195,5.085,1937,7.032]],["title/classes/UpdateUserDto.html",[22,0.209,1938,3.303]],["body/classes/UpdateUserDto.html",[3,0.066,4,0.057,5,0.048,9,0.112,10,0.009,21,0.075,22,0.287,27,0.004,28,0.006,29,0.004,35,0.544,41,0.504,44,0.87,45,0.623,46,1.851,61,2.43,269,0.701,273,1.494,291,0.823,292,2.372,294,2.363,296,2.557,308,3.312,318,1.939,579,3.52,641,2.859,691,4.86,885,3.83,888,4.865,890,4.944,891,4.944,903,4.503,904,5.569,905,4.325,906,4.128,907,3.566,932,3.312,933,3.109,1011,5.574,1016,4.86,1372,4.886,1373,3.83,1374,3.566,1725,3.566,1729,5.353,1731,3.907,1733,5.353,1735,4.886,1736,3.907,1938,4.538,1939,6.881,1940,6.106,1941,6.487,1942,6.568,1943,4.423,1944,4.423,1945,4.423,1946,4.423,1947,4.423,1948,4.423,1949,4.423]],["title/interfaces/UploadedFile.html",[549,1.112,1851,3.303]],["body/interfaces/UploadedFile.html",[3,0.093,4,0.08,5,0.068,9,0.159,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,33,1.522,35,0.77,45,0.636,273,1.87,278,3.066,291,0.801,549,1.58,551,2.591,858,4.719,1042,5.12,1445,5.427,1447,5.052,1850,5.052,1851,5.683,1950,5.534,1951,5.534]],["title/classes/User.html",[22,0.209,233,1.726]],["body/classes/User.html",[3,0.035,4,0.03,5,0.026,8,3.159,9,0.182,10,0.009,21,0.064,22,0.257,27,0.002,28,0.004,29,0.002,33,0.76,35,0.466,37,0.668,41,0.541,45,0.694,49,1.47,56,1.592,61,0.772,63,1.893,64,3.64,72,2.803,81,1.887,82,2.397,113,1.713,148,1.035,233,2.489,256,3.452,269,0.374,271,3.283,273,0.934,275,2.638,278,2.153,282,3.831,284,2.638,285,3.003,287,2.93,291,0.791,292,2.347,293,3.159,294,3.399,296,2.746,297,4.767,298,4.225,300,3.043,301,3.349,304,1.904,305,4.805,306,4.225,307,4.229,308,4.461,314,4.229,318,1.035,319,1.768,320,1.217,322,1.217,323,4.999,324,2.105,325,1.57,326,4.197,333,1.311,334,1.425,342,1.57,343,2.521,344,1.66,345,2.665,346,2.397,347,2.665,348,3.616,349,2.965,350,2.085,353,3.062,357,2.521,358,1.57,360,2.085,361,1.66,362,1.492,389,2.085,395,3.831,397,1.904,398,1.904,399,1.904,460,2.907,561,2.022,579,2.765,628,3.438,641,2.25,642,2.085,652,2.746,658,1.768,673,3.003,703,2.839,853,1.904,876,1.136,987,3.02,1010,3.159,1013,3.34,1014,1.66,1016,3.34,1022,2.665,1023,1.768,1039,1.57,1050,2.085,1131,2.803,1503,1.768,1650,3.831,1730,2.085,1941,1.904,1942,2.085,1952,1.904,1953,4.752,1954,2.361,1955,2.361,1956,2.361,1957,2.361,1958,2.361,1959,2.361,1960,2.361,1961,2.361,1962,2.361,1963,2.361,1964,2.361,1965,2.361,1966,2.361,1967,2.361,1968,2.361,1969,3.349,1970,3.792,1971,4.752,1972,2.361,1973,2.085,1974,2.085,1975,4.752,1976,2.361,1977,4.752,1978,1.768,1979,2.085,1980,3.792,1981,5.44,1982,2.361,1983,2.361,1984,2.361,1985,2.361,1986,2.361,1987,2.361,1988,2.085,1989,2.361,1990,2.361,1991,2.361,1992,2.361,1993,2.361,1994,2.361,1995,2.361,1996,2.361,1997,2.361,1998,2.361,1999,4.752,2000,2.361,2001,2.361]],["title/classes/UserActivation.html",[22,0.209,769,2.932]],["body/classes/UserActivation.html",[3,0.059,4,0.051,5,0.043,9,0.179,10,0.009,21,0.095,22,0.186,27,0.004,28,0.005,29,0.004,33,1.12,35,0.484,41,0.525,45,0.65,56,1.871,61,1.286,63,1.114,64,3.668,72,2.878,82,2.488,148,1.725,249,2.103,269,0.624,271,3.919,273,1.377,275,3.605,283,2.934,284,3.605,287,3.399,291,0.693,292,2.254,293,3.714,294,3.777,296,4.086,297,4.699,298,4.468,306,3.531,314,4.699,322,2.028,323,4.962,324,3.101,325,2.616,333,2.185,334,2.375,342,2.616,343,2.616,344,2.767,345,2.767,346,2.488,347,2.767,348,3.714,349,2.78,357,2.616,358,2.616,362,2.488,378,3.193,633,3.173,769,3.714,770,2.947,858,3.229,876,3.732,1010,4.317,1013,3.927,1014,3.927,1018,5.7,1022,3.927,1023,2.947,1028,3.173,1029,3.173,1030,3.173,1067,3.476,1068,4.934,1069,3.476,1071,4.934,1974,3.476,2002,6.431,2003,3.173,2004,6.495,2005,3.936,2006,3.936,2007,5.587,2008,5.236,2009,3.936,2010,3.936,2011,3.936,2012,3.936,2013,3.476,2014,3.936]],["title/classes/UserDto.html",[22,0.209,628,2.788]],["body/classes/UserDto.html",[3,0.069,4,0.059,5,0.05,8,4.704,9,0.117,10,0.009,21,0.078,22,0.296,27,0.004,28,0.006,29,0.004,35,0.569,41,0.598,45,0.739,269,0.733,273,1.54,275,3.928,278,2.557,284,3.928,287,3.574,291,0.866,292,2.524,300,3.134,320,2.384,353,3.925,430,6.159,579,2.926,628,3.95,641,2.926,652,4.09,673,4.473,987,3.928,1010,4.704,1131,3.646,1650,5.706,2015,4.087,2016,4.628,2017,4.628,2018,4.628,2019,4.628,2020,4.628,2021,4.628,2022,4.628,2023,4.628,2024,4.628,2025,4.628,2026,4.628,2027,4.628]],["title/classes/UserNotActivated.html",[22,0.209,712,2.449]],["body/classes/UserNotActivated.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.824,96,2.099,121,1.706,233,2.042,269,0.827,405,3.196,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,3.757,713,3.017,754,3.299,756,3.149,757,3.149,791,3.017,792,3.017,793,3.017,804,3.299,981,3.106,992,3.057,993,3.487,994,3.487,1451,3.017,1452,3.299,1454,3.47,1455,3.47,1456,3.47,1457,3.47,2028,5.22]],["title/classes/UserNotFound.html",[22,0.209,997,2.549]],["body/classes/UserNotFound.html",[3,0.076,4,0.065,5,0.072,9,0.129,10,0.009,12,0.696,21,0.142,22,0.396,27,0.005,28,0.006,29,0.005,33,1.713,41,0.345,43,1.378,44,0.957,45,0.558,46,1.173,68,4.123,121,1.643,269,0.808,291,0.728,378,2.304,402,3.452,406,3.255,408,3.255,413,2.17,419,2.922,516,3.435,641,2.109,675,2.304,978,2.948,979,3.223,981,2.757,982,4.431,983,3.39,984,2.948,985,3.39,986,2.948,987,2.831,988,3.39,989,3.223,990,2.948,991,3.077,992,2.304,993,2.628,994,2.628,995,2.948,996,3.39,997,3.853,998,4.431,999,3.39,2029,5.1]],["title/classes/UserNotLoggedIn.html",[22,0.209,713,2.549]],["body/classes/UserNotLoggedIn.html",[3,0.078,4,0.067,5,0.056,9,0.132,10,0.009,12,0.713,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.722,41,0.353,50,3.963,96,2.099,121,1.706,233,2.042,269,0.827,405,2.88,410,2.512,419,3.292,421,2.789,568,3.017,579,2.799,675,3.59,712,2.897,713,3.912,754,3.299,756,3.149,757,3.149,791,3.017,792,3.017,793,3.017,804,3.299,981,3.106,992,3.057,993,3.487,994,3.487,1451,3.017,1452,3.299,1454,3.47,1455,3.47,1456,3.47,1457,3.47,2030,5.22]],["title/classes/UsernameTaken.html",[22,0.209,995,2.549]],["body/classes/UsernameTaken.html",[3,0.077,4,0.067,5,0.073,9,0.132,10,0.009,12,0.711,21,0.143,22,0.399,27,0.005,28,0.007,29,0.005,33,1.721,41,0.352,44,0.748,45,0.436,68,4.164,121,1.682,269,0.825,291,0.51,378,2.352,402,3.606,406,2.961,408,3.288,413,2.216,419,2.961,516,2.682,641,2.153,675,2.352,978,3.009,979,3.29,981,2.794,982,4.491,983,3.461,984,3.009,985,3.461,986,3.009,987,2.89,988,3.461,989,3.29,990,3.009,991,3.141,992,2.352,993,2.682,994,2.682,995,3.905,996,3.461,997,3.009,998,3.461,999,3.461,2031,5.206]],["title/controllers/UsersController.html",[0,2.056,2032,3.303]],["body/controllers/UsersController.html",[0,1.359,2,1.359,3,0.043,4,0.037,5,0.048,7,1.842,9,0.215,10,0.009,11,1.938,12,0.398,17,2.391,21,0.049,22,0.138,24,1.87,25,2.02,26,2.828,27,0.003,28,0.004,29,0.003,34,1.759,35,0.358,36,1.267,37,1.969,41,0.471,43,1.879,44,1.04,45,0.583,46,1.6,48,1.969,49,2.114,54,1.918,56,2.207,57,3.658,60,1.359,61,0.953,63,1.969,64,2.526,78,1.685,118,2.154,121,0.571,154,1.451,168,1.759,184,3.608,233,3.264,256,2.621,278,1.053,283,1.317,291,0.682,292,2.218,300,1.206,328,1.685,329,2.049,330,1.842,378,2.021,417,3.04,440,2.828,441,2.974,449,3.608,456,2.35,459,2.049,461,2.049,462,2.35,463,1.759,472,3.62,473,2.183,474,2.183,475,2.183,477,2.183,579,1.85,628,3.442,652,3.147,677,3.952,738,2.049,914,1.451,915,1.759,930,4.574,986,2.586,987,2.484,989,1.842,997,1.685,1035,2.049,1039,1.938,1040,2.049,1041,2.049,1042,1.759,1168,2.305,1204,2.7,1207,2.575,1210,2.183,1211,2.575,1212,2.586,1213,2.183,1221,2.575,1231,2.183,1247,2.575,1248,2.183,1249,2.183,1251,2.575,1450,3.608,1648,2.183,1664,4.81,1869,2.183,1873,2.35,1938,4.574,1973,2.575,2032,3.351,2033,2.575,2034,3.952,2035,4.475,2036,3.952,2037,2.575,2038,2.915,2039,4.475,2040,2.915,2041,2.915,2042,2.915,2043,2.915,2044,2.915,2045,2.915,2046,2.915,2047,2.915,2048,2.915,2049,2.915,2050,2.915,2051,2.915,2052,2.915,2053,2.915,2054,2.915,2055,4.81,2056,2.575,2057,2.575,2058,2.915,2059,2.915,2060,2.35,2061,2.575,2062,2.915,2063,2.915,2064,2.915,2065,2.915,2066,2.915,2067,2.915,2068,2.915,2069,2.915,2070,2.915,2071,2.915,2072,2.915,2073,2.915,2074,2.915,2075,2.915,2076,4.475,2077,2.915,2078,2.915,2079,2.915,2080,2.915,2081,2.575,2082,2.915,2083,2.915,2084,2.915,2085,2.915,2086,2.915,2087,2.915,2088,2.915,2089,2.915,2090,2.915,2091,2.915,2092,2.915,2093,2.915,2094,2.915,2095,2.915,2096,2.915,2097,2.915,2098,2.915,2099,2.915]],["title/modules/UsersModule.html",[83,1.278,135,3.101]],["body/modules/UsersModule.html",[2,2.812,3,0.065,4,0.056,5,0.048,9,0.22,10,0.009,12,0.6,17,4.677,21,0.074,22,0.208,27,0.004,28,0.006,29,0.004,44,0.866,83,1.997,85,2.115,86,2.187,87,2.348,88,2.348,89,2.348,90,3.681,91,3.681,95,3.223,96,1.767,97,2.348,129,5.338,131,5.075,134,5.075,135,6.267,138,3.487,144,3.824,145,2.348,147,3.089,148,1.926,158,3.881,162,3.543,165,3.543,227,2.54,228,2.777,229,2.439,233,1.719,291,0.431,324,3.349,503,3.29,912,2.048,965,2.777,1007,2.921,1025,4.518,1266,5.167,1273,3.881,1276,3.881,1277,3.29,1278,3.881,1978,4.518,2032,5.159,2057,3.881,2060,3.543,2100,3.881,2101,4.394,2102,3.881,2103,3.881,2104,4.394,2105,4.394,2106,3.881,2107,3.881,2108,4.394,2109,4.394]],["title/injectables/UsersService.html",[17,2.357,30,1.341]],["body/injectables/UsersService.html",[3,0.034,4,0.03,5,0.025,9,0.201,10,0.009,12,0.315,17,1.986,21,0.039,22,0.109,24,2.161,25,2.333,26,2.954,27,0.002,28,0.004,29,0.002,30,1.13,31,1.074,35,0.283,36,1.053,37,2.366,41,0.466,43,1.861,44,0.989,45,0.612,46,1.585,48,1.874,49,2.119,54,2.904,56,1.971,60,3.315,61,2.44,63,1.781,121,0.729,148,1.01,233,3.172,249,1.231,256,1.109,278,1.344,283,2.423,291,0.824,322,1.187,336,3.1,346,2.35,378,1.68,409,1.789,425,2.064,439,2.784,440,2.35,441,3.107,465,3.236,506,2.784,508,4.956,511,2.35,514,4.653,516,2.408,521,2.784,527,1.725,579,3.088,626,3.236,627,1.858,635,3.285,641,2.433,652,3.636,669,1.725,670,4.744,671,3.768,673,3.719,674,4.744,675,2.111,676,2.998,691,3.77,698,2.035,714,2.035,715,2.035,726,1.456,738,2.613,777,3.5,778,3.236,795,2.035,800,2.035,808,4.128,814,3.284,822,1.858,823,2.035,978,2.149,984,2.701,990,3.1,991,2.82,995,2.149,1007,2.471,1011,5.073,1131,1.187,1168,2.408,1204,3.236,1216,2.035,1311,3.284,1451,2.701,1858,2.784,1859,2.035,1940,5.557,2034,3.284,2036,3.284,2037,3.284,2056,2.035,2060,1.858,2061,2.035,2106,2.035,2107,2.035,2110,2.035,2111,4.674,2112,2.304,2113,2.304,2114,3.718,2115,2.304,2116,3.718,2117,2.304,2118,2.304,2119,2.304,2120,3.718,2121,5.363,2122,2.304,2123,2.304,2124,2.304,2125,1.858,2126,3.718,2127,3.718,2128,2.304,2129,1.858,2130,2.304,2131,2.304,2132,2.304,2133,2.304,2134,5.884,2135,3.718,2136,3.718,2137,2.304,2138,2.304,2139,3.718,2140,2.304,2141,2.304,2142,2.304,2143,2.304,2144,2.304,2145,2.304,2146,2.304,2147,2.304,2148,2.304,2149,2.304,2150,2.304,2151,4.674]],["title/interfaces/WriteOptions.html",[549,1.112,1842,3.303]],["body/interfaces/WriteOptions.html",[3,0.08,4,0.069,5,0.083,9,0.194,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,35,0.664,45,0.639,46,1.852,57,3.841,81,3.799,104,4.301,256,2.6,273,1.705,285,5.088,291,0.749,300,2.234,353,2.6,549,1.362,551,2.234,553,3.415,958,4,1231,6.028,1248,6.028,1249,6.028,1445,5.075,1625,4.046,1834,6.743,1842,5.182,1846,4.356,1850,4.356,1869,4.046,1870,6.112,1915,4.772,1951,4.772,2081,7.11,2152,4.772]],["title/coverage.html",[2153,4.877]],["body/coverage.html",[0,2.628,1,1.212,5,0.018,6,1.429,10,0.009,13,1.076,15,1.212,17,0.865,22,0.419,27,0.002,28,0.003,29,0.002,30,2.161,32,1.429,34,0.976,37,0.784,45,0.136,51,1.023,61,0.529,65,1.212,66,1.429,67,1.212,83,1.529,118,1.748,120,1.429,136,1.076,137,2.234,160,1.212,167,1.305,169,1.305,233,0.633,268,1.538,270,2.929,272,1.138,291,0.517,331,1.305,333,0.898,335,1.305,354,1.212,383,2.075,400,0.976,401,3.215,411,0.976,414,0.976,418,0.976,420,0.976,427,1.429,437,1.212,438,1.429,445,1.212,463,0.976,465,0.976,469,1.212,472,1.076,505,1.429,549,1.903,550,1.212,552,3.024,553,3.333,558,0.935,560,1.138,561,1.179,564,1.212,565,1.429,577,1.212,582,1.212,585,1.023,593,1.212,597,1.212,607,1.076,609,1.305,617,1.305,620,1.305,622,1.212,626,0.976,628,1.023,641,0.669,694,2.929,712,0.898,713,0.935,716,1.305,718,1.305,719,1.305,750,1.429,765,1.842,766,1.212,769,1.842,770,1.212,775,1.429,778,0.976,791,0.935,792,0.935,793,0.935,797,1.305,829,1.138,830,1.305,833,1.429,847,1.138,848,1.429,876,4.478,883,1.429,884,1.429,910,1.212,911,1.429,912,0.754,913,2.234,922,1.138,926,1.212,927,1.429,928,1.429,930,1.212,931,1.429,932,2.72,935,1.138,936,2.234,937,0.976,943,1.138,961,1.138,978,0.935,979,3.333,984,0.935,986,0.935,990,0.935,995,0.935,997,0.935,1000,1.429,1007,1.842,1008,2.234,1009,2.234,1025,1.212,1032,0.805,1033,2.234,1034,1.138,1066,1.212,1072,1.212,1125,0.935,1126,3.333,1129,0.935,1132,0.898,1134,0.935,1138,0.935,1139,0.898,1141,1.429,1157,0.935,1158,3.333,1166,0.935,1170,0.935,1174,0.935,1175,0.935,1177,0.935,1181,1.212,1182,1.429,1195,1.212,1204,0.976,1208,1.305,1210,1.212,1212,0.935,1267,1.138,1279,1.429,1295,1.429,1370,1.429,1371,2.234,1373,2.296,1377,1.429,1378,1.429,1380,1.138,1381,2.72,1382,2.72,1384,1.138,1393,1.212,1398,1.212,1399,1.429,1432,1.429,1433,1.138,1435,1.212,1436,1.429,1438,1.429,1439,1.429,1440,1.305,1445,1.076,1446,1.429,1447,2.234,1451,0.935,1452,3.333,1459,1.305,1460,1.429,1461,1.305,1462,1.429,1485,1.212,1486,3.95,1487,2.929,1508,1.212,1509,2.929,1512,1.305,1514,1.212,1516,1.305,1517,1.429,1518,1.429,1527,1.429,1536,1.138,1541,1.212,1548,1.023,1554,1.305,1555,1.212,1560,1.138,1573,2.72,1579,1.429,1582,1.429,1594,1.076,1596,1.212,1602,1.429,1648,1.212,1649,1.429,1665,2.234,1666,2.234,1675,4.546,1682,1.305,1684,1.305,1686,1.305,1691,1.305,1693,1.305,1695,1.305,1723,1.429,1737,1.429,1742,1.429,1745,1.429,1754,1.212,1755,1.429,1788,1.429,1804,1.429,1816,1.305,1817,1.212,1825,1.429,1828,1.429,1842,1.212,1851,1.212,1855,1.212,1858,1.212,1917,1.429,1918,1.429,1937,1.429,1938,1.212,1939,1.429,1950,1.429,1952,2.234,1978,1.212,2002,2.929,2003,2.929,2008,1.305,2015,1.429,2032,1.212,2033,1.429,2110,1.429,2125,1.305,2129,1.305,2152,1.429,2153,1.305,2154,1.618,2155,1.618,2156,8.688,2157,8.723,2158,1.429,2159,1.429,2160,1.429,2161,1.429,2162,2.447,2163,1.429,2164,1.429,2165,1.429,2166,6.638,2167,8.65,2168,5.638,2169,5.946,2170,2.447,2171,1.429,2172,2.771,2173,3.633,2174,2.771,2175,5.946,2176,5.638,2177,2.447,2178,2.447,2179,1.429,2180,1.429,2181,1.429,2182,1.429,2183,2.771,2184,1.618,2185,1.618,2186,2.447,2187,2.447,2188,2.447,2189,2.447,2190,1.429,2191,1.429,2192,1.618,2193,1.429,2194,1.429,2195,1.429,2196,1.429,2197,1.429,2198,1.618,2199,1.618]],["title/dependencies.html",[86,2.644,2200,3.67]],["body/dependencies.html",[5,0.053,10,0.009,12,0.666,22,0.306,27,0.005,28,0.006,29,0.005,78,3.741,86,2.426,107,3.905,108,3.931,140,4.307,142,3.651,145,2.605,148,2.137,151,4.847,152,4.847,154,2.426,155,3.651,318,2.137,320,2.512,322,2.512,417,2.426,584,2.942,602,2.942,604,3.651,605,4.307,606,4.307,840,2.942,842,3.931,1022,3.428,1391,3.931,1392,3.931,1412,3.931,1619,3.651,1620,4.307,1689,3.651,1846,3.931,1847,4.307,1969,4.307,2055,4.307,2201,4.876,2202,4.876,2203,4.876,2204,7.265,2205,4.876,2206,4.876,2207,4.876,2208,4.876,2209,4.876,2210,4.876,2211,4.876,2212,4.876,2213,4.876,2214,6.472,2215,4.876,2216,4.876,2217,4.876,2218,4.876,2219,4.876,2220,4.876,2221,4.876,2222,4.876,2223,4.876,2224,4.876,2225,4.876,2226,4.876,2227,4.876,2228,4.876,2229,4.876,2230,4.307,2231,7.265,2232,4.876,2233,4.876,2234,4.876,2235,4.876,2236,4.876,2237,4.876,2238,4.876,2239,4.876,2240,4.876,2241,4.876,2242,4.876,2243,4.876,2244,4.876,2245,4.876,2246,4.876,2247,4.876,2248,4.876,2249,4.876]],["title/miscellaneous/enumerations.html",[2250,2.58,2251,4.693]],["body/miscellaneous/enumerations.html",[10,0.009,27,0.006,28,0.008,29,0.006,35,0.806,328,4.506,856,4.533,2250,4.606,2251,5.788,2252,6.553,2253,7.796,2254,6.553,2255,6.553,2256,6.553,2257,6.553,2258,6.553,2259,6.553,2260,6.553,2261,6.553,2262,6.553,2263,6.553,2264,6.553]],["title/index.html",[35,0.451,2265,3.241,2266,3.241]],["body/index.html",[4,0.069,10,0.009,27,0.005,28,0.007,29,0.005,202,4.344,425,2.991,992,2.434,1461,4.344,1501,3.788,1830,4.759,2153,4.344,2230,6.734,2267,5.388,2268,5.388,2269,6.908,2270,5.388,2271,5.388,2272,5.388,2273,5.388,2274,5.388,2275,5.388,2276,5.388,2277,4.759,2278,5.388,2279,5.388,2280,5.388,2281,8.651,2282,5.388,2283,5.388,2284,5.388,2285,8.508,2286,5.388,2287,5.388,2288,6.908,2289,5.388,2290,5.388,2291,5.388,2292,6.908,2293,6.908,2294,5.388,2295,5.388,2296,5.388,2297,6.908,2298,6.908,2299,5.388,2300,5.388,2301,5.388,2302,5.388,2303,5.388,2304,4.344,2305,5.388,2306,5.388,2307,5.388,2308,5.388,2309,4.759,2310,5.388,2311,5.388,2312,5.388,2313,5.388,2314,5.388,2315,5.388,2316,5.388,2317,5.388,2318,5.388,2319,5.388,2320,4.344]],["title/license.html",[2265,3.241,2266,3.241,2320,2.959]],["body/license.html",[4,0.092,5,0.052,9,0.055,10,0.008,27,0.003,28,0.002,29,0.002,41,0.083,44,0.175,61,1.322,68,2.485,116,1.077,233,0.477,260,1.911,268,0.677,271,0.736,287,0.948,306,0.77,343,0.81,380,1.911,385,2.577,415,0.81,416,0.81,423,1.438,439,3.029,447,1.077,534,1.077,645,1.745,732,1.077,757,1.306,847,1.521,858,0.705,894,1.077,897,3.61,909,2.646,912,0.568,915,2.702,1002,1.745,1003,0.983,1086,1.077,1168,0.628,1233,0.983,1287,0.913,1340,1.911,1341,1.911,1366,0.983,1478,1.077,1685,0.983,1941,0.983,1988,1.077,2250,0.857,2277,1.911,2304,2.352,2309,3.12,2320,7.024,2321,3.533,2322,6.846,2323,3.533,2324,1.219,2325,2.164,2326,8,2327,6.957,2328,3.533,2329,4.478,2330,1.219,2331,1.219,2332,1.219,2333,8.076,2334,8.145,2335,1.219,2336,2.918,2337,5.168,2338,1.219,2339,4.478,2340,1.219,2341,4.045,2342,1.219,2343,1.219,2344,7.244,2345,7.774,2346,2.918,2347,2.918,2348,5.915,2349,4.045,2350,4.848,2351,7.917,2352,4.478,2353,1.219,2354,4.848,2355,1.219,2356,1.219,2357,1.219,2358,4.478,2359,6.111,2360,6.288,2361,2.918,2362,5.915,2363,3.533,2364,2.577,2365,8.039,2366,7.156,2367,1.219,2368,1.219,2369,5.915,2370,1.219,2371,4.478,2372,1.219,2373,1.219,2374,1.219,2375,1.219,2376,1.219,2377,2.918,2378,2.164,2379,2.164,2380,4.478,2381,4.478,2382,2.918,2383,2.918,2384,1.219,2385,6.447,2386,2.164,2387,1.219,2388,1.219,2389,1.219,2390,1.219,2391,1.219,2392,1.219,2393,1.219,2394,1.219,2395,5.696,2396,5.168,2397,1.219,2398,4.045,2399,5.168,2400,1.219,2401,2.164,2402,2.164,2403,1.219,2404,1.219,2405,2.164,2406,2.164,2407,1.219,2408,2.918,2409,2.918,2410,1.219,2411,4.045,2412,1.219,2413,1.219,2414,4.478,2415,1.219,2416,1.219,2417,1.219,2418,1.219,2419,1.219,2420,1.219,2421,1.219,2422,1.219,2423,1.219,2424,1.219,2425,2.164,2426,1.219,2427,1.219,2428,1.219,2429,2.164,2430,2.164,2431,1.219,2432,1.219,2433,1.219,2434,2.918,2435,3.533,2436,2.918,2437,1.219,2438,1.219,2439,1.219,2440,1.219,2441,1.219,2442,4.478,2443,2.918,2444,2.164,2445,1.219,2446,1.219,2447,1.219,2448,2.164,2449,4.045,2450,1.219,2451,1.219,2452,1.219,2453,1.219,2454,1.219,2455,3.533,2456,2.164,2457,5.449,2458,1.219,2459,1.219,2460,3.533,2461,1.219,2462,2.918,2463,1.219,2464,2.164,2465,5.449,2466,5.915,2467,2.918,2468,2.918,2469,2.164,2470,1.219,2471,3.533,2472,4.045,2473,2.164,2474,4.478,2475,1.219,2476,1.219,2477,1.219,2478,2.918,2479,1.219,2480,1.219,2481,1.219,2482,1.219,2483,2.918,2484,1.219,2485,4.848,2486,1.219,2487,1.219,2488,1.219,2489,1.219,2490,1.219,2491,1.219,2492,2.918,2493,4.478,2494,2.164,2495,2.918,2496,1.219,2497,2.918,2498,1.219,2499,2.164,2500,1.219,2501,2.164,2502,2.164,2503,2.918,2504,1.219,2505,1.219,2506,2.164,2507,1.219,2508,1.219,2509,1.219,2510,1.219,2511,2.918,2512,1.219,2513,2.164,2514,2.918,2515,1.219,2516,1.219,2517,1.219,2518,1.219,2519,2.164,2520,2.918,2521,2.164,2522,1.219,2523,1.219,2524,2.164,2525,4.045,2526,3.533,2527,2.918,2528,2.918,2529,2.164,2530,3.533,2531,1.219,2532,2.918,2533,1.219,2534,1.219,2535,2.164,2536,2.164,2537,3.533,2538,1.219,2539,1.219,2540,3.533,2541,1.219,2542,1.219,2543,2.164,2544,1.219,2545,1.219,2546,4.478,2547,1.219,2548,2.164,2549,5.168,2550,5.449,2551,1.219,2552,1.219,2553,1.219,2554,1.219,2555,1.219,2556,1.219,2557,1.219,2558,2.164,2559,1.219,2560,2.918,2561,1.219,2562,2.164,2563,1.219,2564,1.219,2565,1.219,2566,1.219,2567,1.219,2568,1.219,2569,1.219,2570,1.219,2571,2.164,2572,1.219,2573,2.918,2574,1.219,2575,2.164,2576,2.918,2577,3.533,2578,1.219,2579,1.219,2580,1.219,2581,1.219,2582,1.219,2583,1.219,2584,1.219,2585,1.219,2586,1.219,2587,1.219,2588,1.219,2589,1.219,2590,1.219,2591,1.219,2592,3.533,2593,2.164,2594,2.164,2595,1.219,2596,2.164,2597,2.164,2598,1.219,2599,1.219,2600,1.219,2601,1.219,2602,1.219,2603,1.219,2604,2.164,2605,1.219,2606,1.219,2607,3.533,2608,2.918,2609,1.911,2610,1.219,2611,1.219,2612,1.219,2613,1.219,2614,2.164,2615,1.219,2616,1.219,2617,2.164,2618,1.219,2619,3.533,2620,2.918,2621,1.219,2622,1.219,2623,1.219,2624,2.164,2625,1.219,2626,1.219,2627,1.219,2628,2.164,2629,1.219,2630,1.219,2631,1.219,2632,1.219,2633,1.219,2634,5.696,2635,1.219,2636,1.219,2637,1.219,2638,1.219,2639,2.164,2640,1.219,2641,1.219,2642,1.219,2643,2.918,2644,1.219,2645,1.219,2646,1.219,2647,1.219,2648,1.219,2649,1.219,2650,1.219,2651,1.219,2652,1.219,2653,1.219,2654,1.219,2655,1.219,2656,1.219,2657,1.219,2658,1.219,2659,1.219,2660,1.219,2661,1.219,2662,1.219,2663,1.219,2664,1.219,2665,1.219,2666,1.219,2667,1.219,2668,1.219,2669,2.164,2670,1.219,2671,1.219,2672,1.219,2673,2.164,2674,2.164,2675,4.045,2676,1.219,2677,1.219,2678,1.219,2679,1.219,2680,1.219,2681,1.219,2682,1.219,2683,1.219,2684,1.219,2685,1.219,2686,1.219,2687,1.219,2688,1.219,2689,1.219,2690,1.219,2691,2.164,2692,1.219,2693,1.219,2694,1.219,2695,1.219,2696,2.918,2697,1.219,2698,1.219,2699,2.164,2700,1.219,2701,1.219,2702,1.219,2703,1.219,2704,1.219,2705,1.219,2706,1.219,2707,1.219,2708,1.219,2709,1.219,2710,1.219,2711,1.219,2712,1.219,2713,1.219,2714,1.219,2715,1.219,2716,1.219,2717,1.219,2718,1.219,2719,2.164,2720,1.219,2721,1.219,2722,1.219,2723,1.219,2724,1.219,2725,1.219,2726,1.219,2727,1.219,2728,1.219,2729,1.219,2730,1.219,2731,3.533,2732,2.164,2733,1.219,2734,1.219,2735,1.219,2736,1.219,2737,1.219,2738,1.219,2739,2.918,2740,1.219,2741,1.219,2742,1.219,2743,1.219,2744,1.219,2745,1.219,2746,1.219,2747,2.164,2748,1.219,2749,1.219,2750,1.219,2751,1.219,2752,1.219,2753,1.219,2754,1.219,2755,1.219,2756,1.219,2757,1.219]],["title/modules.html",[85,2.911]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.245,85,2.906,124,4.522,128,4.245,129,4.014,130,4.245,131,3.817,132,4.245,133,4.245,134,3.817,135,4.245,663,6.385,1266,4.014,2304,7.323,2364,5.333,2758,9.083,2759,9.13,2760,6.039]],["title/overview.html",[2761,5.343]],["body/overview.html",[2,1.682,10,0.009,13,5.167,17,4.153,27,0.003,28,0.005,29,0.003,31,1.682,83,1.046,84,5.294,85,1.737,86,1.796,87,1.928,88,1.928,89,1.928,90,1.928,91,1.928,92,3.188,93,3.188,94,3.188,95,2.805,96,1.451,97,1.928,124,6.737,125,3.188,126,3.188,127,3.188,128,5.798,129,5.397,130,5.463,131,5.34,132,4.349,133,5.939,134,5.033,135,6.191,136,4.516,269,0.572,295,3.188,465,4.69,497,3.188,498,3.188,499,3.188,551,1.493,607,5.167,626,4.69,693,2.91,758,3.188,760,3.188,761,3.188,778,4.69,826,3.188,828,3.188,829,4.349,1204,4.69,1212,4.492,1262,3.188,1263,3.188,1264,3.188,1265,3.188,1266,5.167,1267,4.349,1366,2.91,1533,3.188,1534,3.188,1535,3.188,1536,4.349,1783,3.188,1784,3.188,1785,3.188,1808,3.188,1809,3.188,1810,3.188,2100,3.188,2102,3.188,2103,3.188,2761,3.188,2762,3.609,2763,3.188,2764,3.609,2765,3.609]],["title/miscellaneous/variables.html",[2250,2.58,2766,4.693]],["body/miscellaneous/variables.html",[3,0.023,10,0.009,27,0.002,28,0.003,29,0.002,35,0.194,37,0.446,40,1.178,45,0.611,46,0.622,49,0.425,56,1.192,61,1.697,63,1.347,64,0.651,72,2.176,81,1.346,96,2.56,104,1.445,118,1.712,136,1.798,137,1.269,154,0.783,167,2.181,168,1.632,169,2.181,170,1.39,233,1.392,270,1.269,281,1.445,291,0.856,317,1.39,318,1.186,321,1.901,328,0.91,331,2.181,333,1.502,335,2.181,336,4.382,337,1.39,338,2.181,339,1.39,340,1.39,341,1.39,349,4.309,354,2.026,355,1.39,410,2.032,463,2.147,472,1.798,561,1.151,568,1.563,579,2.716,584,0.95,585,0.995,602,0.95,609,2.181,617,2.181,620,2.181,633,1.269,641,2.148,645,2.181,663,1.106,665,1.178,673,3.514,675,3.294,680,1.269,681,1.269,683,1.269,694,1.269,703,1.178,716,2.181,718,2.868,719,2.868,722,0.95,756,2.147,765,1.798,766,2.026,769,1.798,770,2.026,797,2.181,856,4.461,858,2.749,876,0.757,909,1.178,922,1.901,961,1.901,991,0.95,992,2.876,1002,4.483,1003,4.483,1007,1.798,1008,1.269,1009,2.181,1025,2.026,1026,1.39,1033,1.269,1042,2.147,1066,2.026,1072,2.026,1073,1.39,1131,0.811,1162,0.874,1208,2.181,1210,2.026,1233,3.405,1248,1.178,1287,1.178,1373,3.006,1381,1.178,1382,2.026,1393,2.026,1476,1.39,1477,1.269,1485,1.178,1486,2.026,1487,2.868,1493,2.181,1495,4.188,1496,1.39,1498,2.026,1499,2.026,1500,2.026,1501,1.901,1502,2.181,1503,3.562,1504,4.188,1505,2.181,1506,2.181,1507,2.181,1508,1.178,1509,2.868,1512,2.181,1513,1.39,1514,2.026,1528,2.664,1554,2.868,1555,2.664,1592,5.184,1594,3.696,1614,4.483,1619,4.163,1665,1.269,1666,2.181,1673,1.39,1675,1.269,1682,2.181,1683,1.39,1684,2.181,1685,1.269,1686,2.181,1687,3.142,1688,3.142,1689,1.178,1690,1.39,1691,2.181,1692,1.39,1693,2.181,1694,1.39,1695,2.181,1696,1.39,1816,2.868,1817,2.664,1858,2.026,1924,3.142,1952,1.269,1978,2.026,1979,1.39,2002,1.269,2003,2.868,2008,2.181,2013,1.39,2125,2.181,2129,2.181,2158,1.39,2159,2.389,2160,1.39,2161,2.389,2162,2.389,2163,2.389,2164,2.389,2165,1.39,2170,1.39,2171,2.389,2177,2.389,2178,3.73,2179,1.39,2180,2.389,2181,1.39,2182,2.389,2186,1.39,2187,1.39,2188,2.389,2189,3.73,2190,2.389,2191,1.39,2193,1.39,2194,1.39,2195,1.39,2196,1.39,2197,1.39,2250,1.106,2609,1.39,2763,1.39,2766,1.39,2767,2.705,2768,1.574,2769,2.705,2770,1.574,2771,1.574,2772,1.574,2773,1.574,2774,3.558,2775,1.574,2776,1.574,2777,4.223,2778,2.705,2779,2.705,2780,3.558,2781,2.705,2782,1.574,2783,4.223,2784,5.194,2785,2.705,2786,1.574,2787,2.705,2788,1.574,2789,1.574,2790,1.574,2791,2.705,2792,1.574,2793,1.574,2794,1.574,2795,1.574,2796,1.574,2797,1.574,2798,1.574,2799,1.574,2800,1.574,2801,1.574,2802,1.574,2803,1.574,2804,2.705,2805,2.705,2806,4.223,2807,5.56,2808,3.558,2809,4.223,2810,4.223,2811,5.56,2812,5.56,2813,1.574,2814,2.705,2815,3.558,2816,2.705,2817,3.558,2818,1.574,2819,1.574,2820,1.574,2821,1.574,2822,1.574,2823,1.574,2824,1.574,2825,1.574,2826,1.574,2827,1.574,2828,1.574,2829,1.574,2830,2.705,2831,1.574,2832,1.574,2833,1.574,2834,1.574,2835,1.574,2836,1.574,2837,1.574,2838,1.574,2839,1.574,2840,1.574,2841,1.574,2842,1.574,2843,1.574,2844,4.223,2845,1.574,2846,3.558,2847,1.574,2848,1.574,2849,4.223,2850,1.574,2851,1.574,2852,1.574,2853,1.574,2854,1.574,2855,1.574,2856,1.574,2857,1.574,2858,1.574,2859,1.574,2860,1.574,2861,1.574,2862,1.574,2863,1.574,2864,1.574,2865,1.574,2866,1.574,2867,1.574,2868,1.574,2869,1.574,2870,1.574,2871,1.574,2872,1.574,2873,1.574,2874,1.574,2875,1.574]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":876,"title":{},"body":{"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0).length",{"_index":1118,"title":{},"body":{"classes/Entry.html":{}}}],["0.1.13",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["0.25.4",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1424,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["0]+/g",{"_index":1513,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/MailerService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["1.1",{"_index":2325,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2387,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2407,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2416,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2418,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2335,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2342,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2343,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2357,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2370,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2375,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2376,"title":{},"body":{"license.html":{}}}],["10",{"_index":1984,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2729,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2501,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2732,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2745,"title":{},"body":{"license.html":{}}}],["1024",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":2762,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2764,"title":{},"body":{"overview.html":{}}}],["16",{"_index":314,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":295,"title":{},"body":{"classes/Application.html":{},"overview.html":{}}}],["2",{"_index":1366,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{},"overview.html":{}}}],["2).join(path.sep",{"_index":976,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2323,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2411,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2477,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2463,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2470,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2496,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2504,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2510,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2518,"title":{},"body":{"license.html":{}}}],["200",{"_index":1428,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1420,"title":{},"body":{"controllers/HealthController.html":{}}}],["25",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":1053,"title":{},"body":{"classes/Entry.html":{}}}],["3",{"_index":372,"title":{},"body":{"classes/Application.html":{}}}],["3.0",{"_index":2413,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2520,"title":{},"body":{"license.html":{}}}],["3.1.3",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2521,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2503,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2495,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2557,"title":{},"body":{"license.html":{}}}],["30",{"_index":2615,"title":{},"body":{"license.html":{}}}],["300",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":305,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2593,"title":{},"body":{"license.html":{}}}],["5.1.2",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2617,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2635,"title":{},"body":{"license.html":{}}}],["5.9.20",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":534,"title":{},"body":{"injectables/ApplicationsService.html":{},"license.html":{}}}],["51",{"_index":379,"title":{},"body":{"classes/Application.html":{}}}],["512",{"_index":2083,"title":{},"body":{"controllers/UsersController.html":{}}}],["58",{"_index":2765,"title":{},"body":{"overview.html":{}}}],["6.4.10",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":447,"title":{},"body":{"controllers/ApplicationsController.html":{},"license.html":{}}}],["64",{"_index":1018,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2763,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":2080,"title":{},"body":{"controllers/UsersController.html":{}}}],["_",{"_index":399,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":1829,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1833,"title":{},"body":{"injectables/StorageService.html":{}}}],["_encoding",{"_index":1925,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":938,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":945,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":939,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":947,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_handleapikey",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handleapikey(req",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession(req",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_id",{"_index":1437,"title":{},"body":{"interfaces/ISession.html":{}}}],["_renamewithindex",{"_index":1296,"title":{},"body":{"injectables/FilesService.html":{}}}],["_renamewithindex(filename",{"_index":1300,"title":{},"body":{"injectables/FilesService.html":{}}}],["_req",{"_index":2073,"title":{},"body":{"controllers/UsersController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_size",{"_index":1920,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":1921,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":1923,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_validateparent",{"_index":1297,"title":{},"body":{"injectables/FilesService.html":{}}}],["_validateparent(entry",{"_index":1302,"title":{},"body":{"injectables/FilesService.html":{}}}],["_value",{"_index":860,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2713,"title":{},"body":{"license.html":{}}}],["abort",{"_index":1877,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":1905,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1892,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1902,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1874,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2478,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2487,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":966,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2563,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1891,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":1870,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":855,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":410,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["account/${activation.token",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["account/:token",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{}}}],["accurate",{"_index":2757,"title":{},"body":{"license.html":{}}}],["action",{"_index":1687,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2627,"title":{},"body":{"license.html":{}}}],["activate",{"_index":756,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["activateaccount",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activateaccount(@param(\"token",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["activateaccount(token",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activated",{"_index":1650,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activation.deleteone",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email.ts",{"_index":2182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.mjml",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activation.schema",{"_index":772,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["activation.schema.ts",{"_index":2003,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":2005,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":2012,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":2006,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":2009,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":2010,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":2011,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["actually",{"_index":1987,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":2756,"title":{},"body":{"license.html":{}}}],["addition",{"_index":2389,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2472,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2542,"title":{},"body":{"license.html":{}}}],["address",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2582,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2412,"title":{},"body":{"license.html":{}}}],["again",{"_index":1477,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2620,"title":{},"body":{"license.html":{}}}],["agent",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2568,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2715,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2638,"title":{},"body":{"license.html":{}}}],["all(@currentuser(\"id",{"_index":478,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["all(uid",{"_index":442,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["alleging",{"_index":2629,"title":{},"body":{"license.html":{}}}],["allow",{"_index":732,"title":{},"body":{"guards/AuthGuard.html":{},"license.html":{}}}],["allowed",{"_index":426,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["alone",{"_index":2567,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":1736,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":1731,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["already",{"_index":408,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["alter",{"_index":2530,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2305,"title":{},"body":{"index.html":{}}}],["amount",{"_index":424,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["angular",{"_index":2276,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2670,"title":{},"body":{"license.html":{}}}],["api",{"_index":369,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["api_key_secret",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":2283,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2400,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2513,"title":{},"body":{"license.html":{}}}],["application",{"_index":268,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{},"license.html":{}}}],["application.comparekey(key",{"_index":730,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.deleteone",{"_index":540,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":468,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":884,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:14",{"_index":900,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.dto.ts:9",{"_index":892,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.generatekey(this.config.get(\"api_key_secret",{"_index":542,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.hassufficientscopes(scopes",{"_index":737,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.name",{"_index":504,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["application.save",{"_index":548,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes",{"_index":544,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes.addtoset(scope",{"_index":547,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.todto",{"_index":483,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.uid",{"_index":739,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.updateone",{"_index":740,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application[\"name",{"_index":531,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application[\"uid",{"_index":532,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationalreadyexists",{"_index":400,"title":{"classes/ApplicationAlreadyExists.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applicationalreadyexists(name",{"_index":536,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationdto",{"_index":272,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":411,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applications",{"_index":425,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["applications.controller",{"_index":501,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":528,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.map(application",{"_index":482,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["applications.service",{"_index":466,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":354,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.comparekey",{"_index":363,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.generatekey",{"_index":367,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.hassufficientscopes",{"_index":391,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":394,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":356,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":437,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationscopes",{"_index":328,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["applicationsmodule",{"_index":128,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":465,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2691,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":563,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1468,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["array.from(new",{"_index":545,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["arrayunique",{"_index":901,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["arrayunique({message",{"_index":893,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["asserting",{"_index":2621,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2659,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":550,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["atob(req.headers.authorization",{"_index":727,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attached",{"_index":2347,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2529,"title":{},"body":{"license.html":{}}}],["auth",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["auth.controller",{"_index":764,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.ts",{"_index":2161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_optional",{"_index":718,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_scopes",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":564,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":129,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2313,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2665,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":607,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":343,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":2364,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avatar",{"_index":987,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["avatar.filename",{"_index":2085,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id",{"_index":2084,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id).then(user",{"_index":2089,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.size",{"_index":2086,"title":{},"body":{"controllers/UsersController.html":{}}}],["avoid",{"_index":373,"title":{},"body":{"classes/Application.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":2362,"title":{},"body":{"license.html":{}}}],["back",{"_index":2611,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2306,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":981,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1719,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1700,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64",{"_index":376,"title":{},"body":{"classes/Application.html":{}}}],["base64\").tostring(\"binary",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basis",{"_index":2460,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1969,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1986,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1983,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2468,"title":{},"body":{"license.html":{}}}],["before",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":2562,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2507,"title":{},"body":{"license.html":{}}}],["below",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below.\\n",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beneficial",{"_index":2441,"title":{},"body":{"license.html":{}}}],["binary\")).tostring(\"base64",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":831,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":832,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":833,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":837,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":459,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{}}}],["body[\"error",{"_index":1708,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":353,"title":{},"body":{"classes/Application.html":{},"classes/Counter.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2714,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2701,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2759,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["btoa",{"_index":331,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["btoa(key",{"_index":390,"title":{},"body":{"classes/Application.html":{}}}],["bucket",{"_index":1383,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1394,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":1924,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(this.key",{"_index":366,"title":{},"body":{"classes/Application.html":{}}}],["buffer.tostring",{"_index":1630,"title":{},"body":{"injectables/MailerService.html":{}}}],["building",{"_index":2270,"title":{},"body":{"index.html":{}}}],["bull",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":130,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":829,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1269,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1274,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1847,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1836,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":1915,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":1887,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2707,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1592,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2486,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1869,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":2079,"title":{},"body":{"controllers/UsersController.html":{}}}],["callback(null",{"_index":1873,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2353,"title":{},"body":{"license.html":{}}}],["catch",{"_index":726,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["catch(error",{"_index":362,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1467,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1470,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1881,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2431,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2481,"title":{},"body":{"license.html":{}}}],["cb",{"_index":867,"title":{},"body":{"classes/Counter.html":{}}}],["changed",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed.email",{"_index":2127,"title":{},"body":{"injectables/UsersService.html":{}}}],["changed.email.ts",{"_index":2189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["changed.mjml",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":2676,"title":{},"body":{"license.html":{}}}],["characters",{"_index":891,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["charge",{"_index":2535,"title":{},"body":{"license.html":{}}}],["child",{"_index":1099,"title":{},"body":{"classes/Entry.html":{}}}],["child.id",{"_index":1350,"title":{},"body":{"injectables/FilesService.html":{}}}],["child.path",{"_index":1100,"title":{},"body":{"classes/Entry.html":{}}}],["child.path.substr(oldpath.length",{"_index":1101,"title":{},"body":{"classes/Entry.html":{}}}],["child.save",{"_index":1102,"title":{},"body":{"classes/Entry.html":{}}}],["children",{"_index":1136,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["childrens",{"_index":1108,"title":{},"body":{"classes/Entry.html":{}}}],["choice",{"_index":2499,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2558,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":961,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":1931,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":975,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunks",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2666,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2623,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2397,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2396,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":269,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":1970,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":1971,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2564,"title":{},"body":{"license.html":{}}}],["client",{"_index":1393,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1386,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1823,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1382,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1385,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1387,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1390,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1388,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1389,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1392,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":1977,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":497,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":498,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_providers",{"_index":499,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":758,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":760,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":759,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":761,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":826,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":827,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":828,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1262,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1264,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1263,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1265,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1533,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1534,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1535,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule",{"_index":1783,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_exports",{"_index":1784,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_providers",{"_index":1785,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1808,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1809,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1810,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2100,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2102,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2101,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2103,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2344,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1709,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["combination",{"_index":2336,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2372,"title":{},"body":{"license.html":{}}}],["come",{"_index":2610,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2685,"title":{},"body":{"license.html":{}}}],["common",{"_index":2424,"title":{},"body":{"license.html":{}}}],["comparekey",{"_index":274,"title":{},"body":{"classes/Application.html":{}}}],["comparepassword",{"_index":1953,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1685,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2607,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2596,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2493,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2682,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2716,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2443,"title":{},"body":{"license.html":{}}}],["config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1278,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation",{"_index":991,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["confirmation.deleteone",{"_index":2136,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email",{"_index":2128,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email.ts",{"_index":2190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.mjml",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation.newemail",{"_index":2135,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.schema",{"_index":2107,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["confirmation.schema.ts",{"_index":1009,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":1012,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":1021,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":1015,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":1017,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":1019,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":1020,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":2133,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmemail",{"_index":2034,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["confirmemail(@param(\"token",{"_index":2094,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmemail(token",{"_index":2037,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["conflict",{"_index":2710,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":402,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["connect",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":1790,"title":{},"body":{"injectables/SessionsService.html":{}}}],["connectmongo(session",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2674,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2663,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":890,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["constraint1'})@maxlength(32",{"_index":887,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["constraints",{"_index":1507,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(nodemailer_module_options",{"_index":1598,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1860,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectconnection",{"_index":1799,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(_value",{"_index":857,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(applications",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(config",{"_index":507,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(connection",{"_index":1789,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(emailsqueue",{"_index":834,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1160,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(logger",{"_index":1464,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["constructor(mailer",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(name",{"_index":403,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{}}}],["constructor(options",{"_index":942,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"controllers/SessionsController.html":{}}}],["constructor(query",{"_index":998,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["constructor(storage",{"_index":1281,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{}}}],["constructor(users",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{}}}],["construe",{"_index":2728,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2726,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["contain",{"_index":1497,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["contained",{"_index":2551,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2393,"title":{},"body":{"license.html":{}}}],["content",{"_index":1180,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2392,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":749,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2434,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2523,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2331,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2341,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2337,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2326,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2340,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2633,"title":{},"body":{"license.html":{}}}],["control",{"_index":2425,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2423,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":476,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1214,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1413,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"sessions",{"_index":1771,"title":{},"body":{"controllers/SessionsController.html":{}}}],["controller(\"users",{"_index":2062,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2422,"title":{},"body":{"license.html":{}}}],["converted",{"_index":375,"title":{},"body":{"classes/Application.html":{}}}],["conveyed",{"_index":2386,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1746,"title":{},"body":{"classes/SessionDto.html":{}}}],["copies",{"_index":1332,"title":{},"body":{"injectables/FilesService.html":{}}}],["copy",{"_index":2528,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2514,"title":{},"body":{"license.html":{}}}],["correct",{"_index":994,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["correction",{"_index":2662,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2536,"title":{},"body":{"license.html":{}}}],["counter",{"_index":847,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2702,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2153,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2333,"title":{},"body":{"license.html":{}}}],["create",{"_index":439,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(data",{"_index":510,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["create(dto",{"_index":444,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(email",{"_index":2114,"title":{},"body":{"injectables/UsersService.html":{}}}],["createabsolutelink",{"_index":1603,"title":{},"body":{"injectables/MailerService.html":{}}}],["createabsolutelink(relativelink",{"_index":1607,"title":{},"body":{"injectables/MailerService.html":{}}}],["createapplicationdto",{"_index":445,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1539,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1540,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1544,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1545,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":275,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createdirectory",{"_index":1183,"title":{},"body":{"controllers/FilesController.html":{}}}],["createdirectory(dto",{"_index":1186,"title":{},"body":{"controllers/FilesController.html":{}}}],["createdirectoryentrydto",{"_index":910,"title":{"classes/CreateDirectoryEntryDto.html":{}},"body":{"classes/CreateDirectoryEntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["createentry",{"_index":1256,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["createentry(data",{"_index":1305,"title":{},"body":{"injectables/FilesService.html":{}}}],["createhmac(\"sha256",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["createmaileroptions",{"_index":1580,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator((field",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":940,"title":{},"body":{"classes/DiskStorage.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":949,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2330,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":1826,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":941,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":952,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creation",{"_index":1086,"title":{},"body":{"classes/Entry.html":{},"license.html":{}}}],["creation(s",{"_index":2509,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1456,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2628,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":317,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.binarylike",{"_index":337,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(size",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.timingsafeequal(buffer.from(hmac_sha256(key",{"_index":365,"title":{},"body":{"classes/Application.html":{}}}],["ctx",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":1760,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentsession.identifier",{"_index":1776,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentuser",{"_index":472,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser(\"id",{"_index":485,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["cursor",{"_index":1097,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["customdecorator",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2675,"title":{},"body":{"license.html":{}}}],["data",{"_index":336,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.displayname},\\n",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.displayname}\\n",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.hidden",{"_index":1357,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.interface",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{}}}],["data.interface.ts",{"_index":1439,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["data.isfile",{"_index":1334,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.link",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.name",{"_index":543,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["data.parent",{"_index":1327,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.parent).then(parent",{"_index":1354,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.public",{"_index":1360,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.session.ip",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.name",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.version}\\n",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.name",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.version",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.uid",{"_index":1329,"title":{},"body":{"injectables/FilesService.html":{}}}],["date",{"_index":287,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().toutcstring",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1023,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2609,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1414,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2516,"title":{},"body":{"license.html":{}}}],["death",{"_index":2692,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2625,"title":{},"body":{"license.html":{}}}],["decode",{"_index":382,"title":{},"body":{"classes/Application.html":{}}}],["decorator",{"_index":1234,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":292,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":473,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["decorators/optional",{"_index":1209,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/recaptcha",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/scopes.decorator",{"_index":1211,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["decrement",{"_index":850,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":349,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmessage",{"_index":1489,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["defective",{"_index":2658,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2648,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2703,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2427,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2324,"title":{},"body":{"license.html":{}}}],["deletable",{"_index":1035,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":460,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id",{"_index":488,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["delete(\"/:id/revoke",{"_index":1777,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"all",{"_index":1780,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"logout",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id",{"_index":451,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete('/:id')@usescopes(applicationscopes.files_write",{"_index":1190,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('/:id/revoke",{"_index":1763,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('all",{"_index":1766,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('logout",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(id",{"_index":954,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(query",{"_index":513,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/SessionsService.html":{}}}],["deleted",{"_index":1131,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deleted.todto",{"_index":1217,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":926,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deletemany",{"_index":1076,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["deletemany(query",{"_index":1308,"title":{},"body":{"injectables/FilesService.html":{}}}],["deleteone",{"_index":440,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteone(@body",{"_index":2091,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(@currentuser(\"id",{"_index":489,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(query",{"_index":517,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["deleteone(uid",{"_index":450,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(undefined",{"_index":2041,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(user",{"_index":2116,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserdto",{"_index":930,"title":{"classes/DeleteUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deletion",{"_index":2390,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1036,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{}}}],["describe",{"_index":2581,"title":{},"body":{"license.html":{}}}],["described",{"_index":2361,"title":{},"body":{"license.html":{}}}],["description",{"_index":2277,"title":{},"body":{"index.html":{},"license.html":{}}}],["desirable",{"_index":2751,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":2588,"title":{},"body":{"license.html":{}}}],["development",{"_index":2284,"title":{},"body":{"index.html":{}}}],["device",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["different",{"_index":2539,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2744,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":341,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2429,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2432,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2630,"title":{},"body":{"license.html":{}}}],["directory",{"_index":912,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"license.html":{}}}],["directory')@usescopes(applicationscopes.files_write",{"_index":1188,"title":{},"body":{"controllers/FilesController.html":{}}}],["directory.todto",{"_index":1225,"title":{},"body":{"controllers/FilesController.html":{}}}],["dirname",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1499,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":1232,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2643,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2548,"title":{},"body":{"license.html":{}}}],["disk",{"_index":965,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["diskhealthindicator",{"_index":1404,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":935,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1863,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":943,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":1941,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["displayname",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["displaynametaken",{"_index":978,"title":{"classes/DisplayNameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["distinguishing",{"_index":2735,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2457,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2749,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2469,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2746,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2474,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2585,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2639,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1415,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1405,"title":{},"body":{"controllers/HealthController.html":{}}}],["doctrines",{"_index":2515,"title":{},"body":{"license.html":{}}}],["document",{"_index":271,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1882,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1184,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(uid",{"_index":1192,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2727,"title":{},"body":{"license.html":{}}}],["dto",{"_index":449,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto).then(application",{"_index":494,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto).then(user",{"_index":2070,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto.name",{"_index":1222,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.parent",{"_index":1223,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.public",{"_index":1224,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/application.dto",{"_index":327,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/create",{"_index":467,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["dto/delete",{"_index":2058,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/entry.dto",{"_index":1065,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/generate",{"_index":470,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/login.dto",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/partial",{"_index":2059,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/reset",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":1769,"title":{},"body":{"controllers/SessionsController.html":{}}}],["dto/update",{"_index":1207,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto/user.dto",{"_index":1973,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2575,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1550,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2294,"title":{},"body":{"index.html":{}}}],["each",{"_index":897,"title":{},"body":{"classes/CreateApplicationDto.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["eachasync(async",{"_index":1098,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["eachasync(child",{"_index":1349,"title":{},"body":{"injectables/FilesService.html":{}}}],["earlier",{"_index":2367,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2736,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2464,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2271,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1620,"title":{},"body":{"injectables/MailerService.html":{},"dependencies.html":{}}}],["ejs.render(this.transpilemjml(mjml",{"_index":1631,"title":{},"body":{"injectables/MailerService.html":{}}}],["el.length",{"_index":1117,"title":{},"body":{"classes/Entry.html":{}}}],["elements",{"_index":895,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["email",{"_index":641,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailTaken.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email!'})@isnotempty({message",{"_index":1374,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["email/${confirmation.token",{"_index":2149,"title":{},"body":{"injectables/UsersService.html":{}}}],["email/:token",{"_index":2039,"title":{},"body":{"controllers/UsersController.html":{}}}],["emailchanged",{"_index":2125,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailchanged(olduser.email",{"_index":2140,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation",{"_index":1007,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmation(newemail",{"_index":2147,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation.name",{"_index":2108,"title":{},"body":{"modules/UsersModule.html":{}}}],["emailconfirmations",{"_index":2111,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmationschema",{"_index":1025,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":1027,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1562,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/email",{"_index":2126,"title":{},"body":{"injectables/UsersService.html":{}}}],["emails/password",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["emails/successful",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["emails/user",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsqueue",{"_index":838,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["emailtaken",{"_index":984,"title":{"classes/EmailTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["empty",{"_index":906,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring",{"_index":1945,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@maxlength(32",{"_index":1943,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@minlength(8",{"_index":1947,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring",{"_index":933,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring()@isstringpathsafe()@maxlength(255",{"_index":916,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":1732,"title":{},"body":{"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":1738,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring({message",{"_index":886,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["encoding",{"_index":1448,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2637,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2723,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1277,"title":{},"body":{"modules/FilesModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["engine.interface",{"_index":960,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1804,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1805,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1806,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1807,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1821,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1822,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":969,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["ensure",{"_index":993,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["enter",{"_index":1372,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["entire",{"_index":2653,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2420,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2329,"title":{},"body":{"license.html":{}}}],["entries",{"_index":1298,"title":{},"body":{"injectables/FilesService.html":{}}}],["entries.dto.ts",{"_index":1518,"title":{},"body":{"classes/ListEntriesDto.html":{},"coverage.html":{}}}],["entries.dto.ts:12",{"_index":1520,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["entry",{"_index":1032,"title":{"classes/Entry.html":{}},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.deletable",{"_index":1348,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.dto",{"_index":1206,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.dto.ts",{"_index":913,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.dto.ts:10",{"_index":917,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:14",{"_index":919,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:17",{"_index":921,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.hidden",{"_index":1356,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.id",{"_index":1331,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.isfile",{"_index":1344,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.name",{"_index":1275,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["entry.parent",{"_index":1358,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.public",{"_index":1359,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.remove",{"_index":1346,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.save",{"_index":1361,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.todto",{"_index":1219,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.uid",{"_index":1368,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"deletable",{"_index":1317,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"hidden",{"_index":1318,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"id",{"_index":1319,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isdirectory",{"_index":1320,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isfile",{"_index":1321,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"name",{"_index":1322,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"parent",{"_index":1323,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"public",{"_index":1324,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"size",{"_index":1325,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"uid",{"_index":1326,"title":{},"body":{"injectables/FilesService.html":{}}}],["entryalreadyexists",{"_index":1125,"title":{"classes/EntryAlreadyExists.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entryalreadyexists(data.name",{"_index":1335,"title":{},"body":{"injectables/FilesService.html":{}}}],["entrydto",{"_index":1034,"title":{"classes/EntryDto.html":{}},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["entrynotdeletable",{"_index":1129,"title":{"classes/EntryNotDeletable.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entrynotfound",{"_index":1132,"title":{"classes/EntryNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entryschema",{"_index":1072,"title":{},"body":{"classes/Entry.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entryschema.methods.getchildren",{"_index":1119,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.getparent",{"_index":1120,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.todto",{"_index":1123,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"remove",{"_index":1074,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"save",{"_index":1080,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.virtual(\"depth\").get(function(this",{"_index":1115,"title":{},"body":{"classes/Entry.html":{}}}],["enum",{"_index":351,"title":{},"body":{"classes/Application.html":{}}}],["enumerations",{"_index":2251,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/application",{"_index":529,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/CreateApplicationDto.html":{}}}],["env.development",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2517,"title":{},"body":{"license.html":{}}}],["err",{"_index":1239,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":964,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(\"file",{"_index":1083,"title":{},"body":{"classes/Entry.html":{}}}],["error(errors.join(\"\\n",{"_index":1643,"title":{},"body":{"injectables/MailerService.html":{}}}],["error.code",{"_index":968,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error.exception.ts",{"_index":1462,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1466,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1469,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["errorcodes",{"_index":1707,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1715,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1713,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1714,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1711,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1712,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":1637,"title":{},"body":{"injectables/MailerService.html":{}}}],["errors.length",{"_index":1642,"title":{},"body":{"injectables/MailerService.html":{}}}],["escaperegexp",{"_index":1521,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["escaperegexp(value",{"_index":1526,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["eslint",{"_index":1498,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":1502,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":1577,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2664,"title":{},"body":{"license.html":{}}}],["even",{"_index":2687,"title":{},"body":{"license.html":{}}}],["event",{"_index":2636,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":849,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":875,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":422,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["except",{"_index":2485,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1230,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1473,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1463,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":430,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":398,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["excluding",{"_index":2624,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2699,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2450,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2350,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1343,"title":{},"body":{"injectables/FilesService.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2419,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2349,"title":{},"body":{"license.html":{}}}],["exist",{"_index":413,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["exists",{"_index":409,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":1311,"title":{},"body":{"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["expires",{"_index":1014,"title":{},"body":{"classes/EmailConfirmation.html":{},"interfaces/ISession.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":1010,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2601,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2458,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.session",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IRequest.html":{}}}],["express.sessioncookiedata",{"_index":1747,"title":{},"body":{"classes/SessionDto.html":{}}}],["express.sessiondata",{"_index":1441,"title":{},"body":{"interfaces/ISessionData.html":{}}}],["expressed",{"_index":2645,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendMailOptions.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["extension",{"_index":1362,"title":{},"body":{"injectables/FilesService.html":{}}}],["extent",{"_index":2381,"title":{},"body":{"license.html":{}}}],["extname",{"_index":2076,"title":{},"body":{"controllers/UsersController.html":{}}}],["factory",{"_index":1561,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":562,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1825,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1827,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1579,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1581,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2555,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2595,"title":{},"body":{"license.html":{}}}],["failed",{"_index":1683,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2605,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2683,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2511,"title":{},"body":{"license.html":{}}}],["false",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["fee",{"_index":2559,"title":{},"body":{"license.html":{}}}],["field",{"_index":1248,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":1449,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1173,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2437,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file.filename",{"_index":1258,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1257,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.interface",{"_index":1850,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1447,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1290,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":928,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.size",{"_index":1259,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1261,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileid",{"_index":929,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1162,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filename.includes",{"_index":1363,"title":{},"body":{"injectables/FilesService.html":{}}}],["filename.split",{"_index":1364,"title":{},"body":{"injectables/FilesService.html":{}}}],["files",{"_index":1168,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["files.controller",{"_index":1270,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1203,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1884,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map(file",{"_index":1254,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1271,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":1906,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1205,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files:read",{"_index":2256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:write",{"_index":2258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_read",{"_index":2255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_write",{"_index":2257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["filescontroller",{"_index":1181,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1251,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["filesmodule",{"_index":131,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1267,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesqueue",{"_index":836,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1204,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":1157,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1903,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":2074,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(file.mimetype",{"_index":2078,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":2077,"title":{},"body":{"controllers/UsersController.html":{}}}],["filter",{"_index":1231,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":1890,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1710,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":514,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["final",{"_index":368,"title":{},"body":{"classes/Application.html":{}}}],["finally",{"_index":2602,"title":{},"body":{"license.html":{}}}],["find",{"_index":480,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["find(query",{"_index":519,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["findone",{"_index":506,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(query",{"_index":521,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["finish",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finished",{"_index":1875,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":757,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2650,"title":{},"body":{"license.html":{}}}],["folder",{"_index":1199,"title":{},"body":{"controllers/FilesController.html":{}}}],["folders:read",{"_index":2260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders:write",{"_index":2262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders_read",{"_index":2259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["folders_write",{"_index":2261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following",{"_index":2388,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":405,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":755,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":577,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["form",{"_index":2345,"title":{},"body":{"license.html":{}}}],["format",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["foundation",{"_index":2730,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2269,"title":{},"body":{"index.html":{}}}],["free",{"_index":2448,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":956,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":970,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":973,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":1611,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":971,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(template).then(buffer",{"_index":1629,"title":{},"body":{"injectables/MailerService.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":967,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":285,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/Entry.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{}}}],["function(next",{"_index":357,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":395,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["further",{"_index":2545,"title":{},"body":{"license.html":{}}}],["g",{"_index":1496,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"miscellaneous/variables.html":{}}}],["gcloud",{"_index":1824,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2409,"title":{},"body":{"license.html":{}}}],["generateapplicationkeydto",{"_index":469,"title":{"classes/GenerateApplicationKeyDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["generated",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":333,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":386,"title":{},"body":{"classes/Application.html":{}}}],["generateid(32",{"_index":1028,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{},"classes/Entry.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generateid(9",{"_index":359,"title":{},"body":{"classes/Application.html":{}}}],["generatekey",{"_index":276,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["generatekey(query",{"_index":523,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generatekey(uid",{"_index":453,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["get(\"@me",{"_index":2063,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"confirm",{"_index":2093,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"download/:id",{"_index":1226,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"search/@:username",{"_index":2096,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('@me')@usescopes(applicationscopes.users_read",{"_index":2045,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('confirm",{"_index":2038,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('download/:id')@optionalauth()@usescopes(applicationscopes.files_read",{"_index":1193,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('search/@:username",{"_index":2048,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":1402,"title":{},"body":{"controllers/HealthController.html":{}}}],["getchildren",{"_index":1037,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["getclientip",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getparent",{"_index":1038,"title":{},"body":{"classes/Entry.html":{}}}],["getsessions",{"_index":1756,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsessions(uid",{"_index":1759,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsize",{"_index":1928,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2265,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":873,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2734,"title":{},"body":{"license.html":{}}}],["global",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2408,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2680,"title":{},"body":{"license.html":{}}}],["google",{"_index":1391,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1380,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1864,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1384,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2526,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2380,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2465,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2442,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2760,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":889,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["grow",{"_index":2301,"title":{},"body":{"index.html":{}}}],["guard",{"_index":383,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"classes/Application.html":{},"coverage.html":{}}}],["guards",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":475,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlefiledeletion",{"_index":1280,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1283,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["hapi/joi",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hashed",{"_index":1975,"title":{},"body":{"classes/User.html":{}}}],["hassufficientscopes",{"_index":277,"title":{},"body":{"classes/Application.html":{}}}],["having",{"_index":2378,"title":{},"body":{"license.html":{}}}],["headers",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1400,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1431,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1406,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1407,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1408,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1398,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1409,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":132,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2274,"title":{},"body":{"index.html":{}}}],["held",{"_index":2720,"title":{},"body":{"license.html":{}}}],["helmet",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2310,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2444,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2718,"title":{},"body":{"license.html":{}}}],["hey",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":1039,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["hideschemaproperty",{"_index":1976,"title":{},"body":{"classes/User.html":{}}}],["hmac_sha256",{"_index":335,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hmac_sha256(key",{"_index":388,"title":{},"body":{"classes/Application.html":{}}}],["hook",{"_index":347,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1471,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.\\n",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1001,"title":{},"body":{"interfaces/Email.html":{},"injectables/MailerService.html":{}}}],["http",{"_index":1625,"title":{},"body":{"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1426,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2750,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":763,"title":{},"body":{"modules/AuthModule.html":{}}}],["https",{"_index":1624,"title":{},"body":{"injectables/MailerService.html":{}}}],["https://nestjs.com",{"_index":2317,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1692,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1676,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["id",{"_index":278,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/PartialUserDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1440,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"coverage.html":{}}}],["ii",{"_index":2484,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["implied",{"_index":2473,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2578,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2574,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2556,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incidental",{"_index":2673,"title":{},"body":{"license.html":{}}}],["include",{"_index":2571,"title":{},"body":{"license.html":{}}}],["included",{"_index":2584,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2421,"title":{},"body":{"license.html":{}}}],["including",{"_index":2354,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1951,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1445,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":1834,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2358,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1455,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1451,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["increment",{"_index":851,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2570,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2569,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2560,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2430,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2631,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1341,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2524,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2689,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2401,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2622,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2480,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2632,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2652,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["initial",{"_index":2346,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2618,"title":{},"body":{"license.html":{}}}],["inject",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":1797,"title":{},"body":{"injectables/SessionsService.html":{}}}],["injectmodel",{"_index":527,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":530,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":2130,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(entry.name",{"_index":1316,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(user.name",{"_index":2131,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(useractivation.name",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectqueue",{"_index":839,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":843,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":844,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2694,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2275,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2280,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2282,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insufficientscopes",{"_index":414,"title":{"classes/InsufficientScopes.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["intellectual",{"_index":2451,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2512,"title":{},"body":{"license.html":{}}}],["interface",{"_index":549,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":551,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/incoming",{"_index":1849,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1559,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1595,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["interfaces/session",{"_index":1770,"title":{},"body":{"controllers/SessionsController.html":{}}}],["interfaces/session.interface",{"_index":1798,"title":{},"body":{"injectables/SessionsService.html":{}}}],["interfaces/storage",{"_index":959,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1852,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":1853,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":743,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1240,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(recaptcha_unexpected_result",{"_index":1722,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(result.error",{"_index":1717,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1459,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalid",{"_index":898,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["invalidapikey",{"_index":418,"title":{"classes/InvalidAPIKey.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["invalidavatarfiletype",{"_index":986,"title":{"classes/InvalidAvatarFileType.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":791,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationtoken",{"_index":990,"title":{"classes/InvalidEmailConfirmationToken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":792,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":793,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["ioredis",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISessionData.html":{},"guards/RecaptchaGuard.html":{},"classes/SessionDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":863,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":1729,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["isboolean",{"_index":920,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["iscurrent",{"_index":1775,"title":{},"body":{"controllers/SessionsController.html":{}}}],["isdirectory",{"_index":1040,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isemail",{"_index":1016,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":902,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isenum(applicationscopes",{"_index":908,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isession",{"_index":1435,"title":{"interfaces/ISession.html":{}},"body":{"interfaces/ISession.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["isessiondata",{"_index":585,"title":{"interfaces/ISessionData.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"controllers/SessionsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfile",{"_index":1041,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isnotempty",{"_index":903,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":1530,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":885,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":904,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":918,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["ispublic",{"_index":1111,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["isstring",{"_index":905,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isstringvalidpath()@transform(undefined",{"_index":1519,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["isstringpathsafe",{"_index":922,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringpathsafeconstraint",{"_index":1485,"title":{"classes/IsStringPathSafeConstraint.html":{}},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpath",{"_index":1514,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpathconstraint",{"_index":1508,"title":{"classes/IsStringValidPathConstraint.html":{}},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":1137,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["iuaparser.ibrowser",{"_index":1442,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.idevice",{"_index":1443,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.ios",{"_index":1444,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["job",{"_index":1284,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1294,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1289,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["joi",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2308,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpeg",{"_index":988,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["jpeg|jpg|png/gi",{"_index":2075,"title":{},"body":{"controllers/UsersController.html":{}}}],["js",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":1999,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2626,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2579,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2573,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2698,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2314,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":1639,"title":{},"body":{"injectables/MailerService.html":{}}}],["key",{"_index":279,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"classes/GenerateApplicationKeyDto.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{}}}],["key.dto",{"_index":471,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto.ts",{"_index":1378,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["key.dto.ts:2",{"_index":1379,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{}}}],["key.split",{"_index":728,"title":{},"body":{"guards/AuthGuard.html":{}}}],["kind",{"_index":2644,"title":{},"body":{"license.html":{}}}],["know",{"_index":384,"title":{},"body":{"classes/Application.html":{}}}],["known",{"_index":2554,"title":{},"body":{"license.html":{}}}],["language",{"_index":2725,"title":{},"body":{"license.html":{}}}],["large",{"_index":1165,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2371,"title":{},"body":{"license.html":{}}}],["lastused",{"_index":280,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["later",{"_index":1478,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2696,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2708,"title":{},"body":{"license.html":{}}}],["legal",{"_index":2328,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":370,"title":{},"body":{"classes/Application.html":{}}}],["lesser",{"_index":2410,"title":{},"body":{"license.html":{}}}],["level",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2550,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2671,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2377,"title":{},"body":{"license.html":{}}}],["license",{"_index":2320,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2543,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2368,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2298,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2360,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2475,"title":{},"body":{"license.html":{}}}],["limit",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["limitation",{"_index":2399,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2471,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1249,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1500,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["listentriesdto",{"_index":1516,"title":{"classes/ListEntriesDto.html":{}},"body":{"classes/ListEntriesDto.html":{},"coverage.html":{}}}],["literal",{"_index":511,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/UsersService.html":{}}}],["litigation",{"_index":2619,"title":{},"body":{"license.html":{}}}],["location",{"_index":2753,"title":{},"body":{"license.html":{}}}],["lodash.escaperegexp",{"_index":1522,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["log",{"_index":1235,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":754,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1465,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["login",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["login(undefined",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.email",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.email.ts",{"_index":2180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login.mjml",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logindto",{"_index":582,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2491,"title":{},"body":{"license.html":{}}}],["logout",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@session",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(session",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":1735,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1726,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":1733,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["look",{"_index":2755,"title":{},"body":{"license.html":{}}}],["loss",{"_index":2679,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2686,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2677,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":348,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["made",{"_index":2363,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1596,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["mail.options",{"_index":1744,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["mailer",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/UsersService.html":{}}}],["mailer.constants",{"_index":1556,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1557,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1558,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":133,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1541,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1548,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1560,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1536,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerservice",{"_index":626,"title":{"injectables/MailerService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2704,"title":{},"body":{"license.html":{}}}],["make",{"_index":2455,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2498,"title":{},"body":{"license.html":{}}}],["making",{"_index":2402,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2684,"title":{},"body":{"license.html":{}}}],["management",{"_index":2433,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2534,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1236,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":1172,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["marks",{"_index":2490,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2373,"title":{},"body":{"license.html":{}}}],["matter",{"_index":2717,"title":{},"body":{"license.html":{}}}],["max",{"_index":2007,"title":{},"body":{"classes/UserActivation.html":{}}}],["max(max_port",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":2008,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["maxlength",{"_index":294,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":925,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["maxlength(32",{"_index":907,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["me(@currentuser",{"_index":2065,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2044,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.id",{"_index":2087,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2066,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2327,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1416,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1410,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2649,"title":{},"body":{"license.html":{}}}],["message",{"_index":888,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["metadata",{"_index":1689,"title":{},"body":{"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":1857,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":1907,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":1918,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":1927,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":1922,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":1929,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares",{"_index":1342,"title":{},"body":{"injectables/FilesService.html":{}}}],["middlewares/admin.middleware",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1450,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{}}}],["min",{"_index":1071,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["min(0",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":296,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":1725,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["minutes",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2250,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1084,"title":{},"body":{"classes/Entry.html":{},"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1740,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2297,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":1619,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html",{"_index":1621,"title":{},"body":{"injectables/MailerService.html":{}}}],["mjml2html(mjml",{"_index":1638,"title":{},"body":{"injectables/MailerService.html":{}}}],["mm",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2288,"title":{},"body":{"index.html":{}}}],["model",{"_index":508,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["modification",{"_index":2391,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2352,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2739,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2456,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":556,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.errors",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["modules/applications/applications.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.service",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/applications/enums/application",{"_index":329,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["modules/auth/auth.errors",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/auth/auth.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["modules/bull",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/UsersModule.html":{}}}],["modules/files/files.service",{"_index":2061,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/health/health.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/sessions/dto/session.dto",{"_index":1434,"title":{},"body":{"interfaces/IRequest.html":{}}}],["modules/sessions/interfaces/session",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/sessions/sessions.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["modules/sessions/sessions.service",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/storage/storage.module",{"_index":1273,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["modules/storage/storage.service",{"_index":1213,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["modules/users/dto/user.dto",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/users/schemas/user.schema",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{}}}],["modules/users/users.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["mongo",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":322,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1411,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":503,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2309,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":2612,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["mozilla",{"_index":2321,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2748,"title":{},"body":{"license.html":{}}}],["ms",{"_index":1022,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1672,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":1024,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":1974,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["multiple",{"_index":371,"title":{},"body":{"classes/Application.html":{}}}],["myśliwiec",{"_index":2315,"title":{},"body":{"index.html":{}}}],["n",{"_index":865,"title":{},"body":{"classes/Counter.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["names",{"_index":1942,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ne",{"_index":1782,"title":{},"body":{"controllers/SessionsController.html":{}}}],["necessary",{"_index":2492,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2669,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2230,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2319,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":840,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":557,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1412,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":753,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/ResetPasswordDto.html":{},"injectables/StorageService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":2121,"title":{},"body":{"injectables/UsersService.html":{}}}],["newdisplayname",{"_index":1940,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newemail",{"_index":1011,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpassword",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpath",{"_index":1094,"title":{},"body":{"classes/Entry.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(new",{"_index":1082,"title":{},"body":{"classes/Entry.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2268,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailer",{"_index":842,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1591,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer/lib/mailer",{"_index":1743,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["nodemailer_module_id",{"_index":1554,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1555,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1166,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["non",{"_index":2449,"title":{},"body":{"license.html":{}}}],["note",{"_index":2743,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":406,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["nothing",{"_index":2712,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2348,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2546,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2613,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2606,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2476,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2281,"title":{},"body":{"index.html":{}}}],["null",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"injectables/FilesService.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["number",{"_index":858,"title":{},"body":{"classes/Counter.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"injectables/FilesService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1503,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":1506,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["object.values(applicationscopes",{"_index":352,"title":{},"body":{"classes/Application.html":{}}}],["obligation",{"_index":2565,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2561,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2527,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1476,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":2462,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2566,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2404,"title":{},"body":{"license.html":{}}}],["oldpath",{"_index":1095,"title":{},"body":{"classes/Entry.html":{}}}],["olduser",{"_index":2137,"title":{},"body":{"injectables/UsersService.html":{}}}],["on(\"error",{"_index":1909,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":1910,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":1911,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":1913,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":1912,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1584,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":852,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":866,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":2540,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":2604,"title":{},"body":{"license.html":{}}}],["open",{"_index":2299,"title":{},"body":{"index.html":{}}}],["option",{"_index":2544,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"interfaces/SendMailOptions.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateUserDto.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1208,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":561,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.field",{"_index":1888,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter",{"_index":1871,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1872,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.html",{"_index":1632,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.imports",{"_index":1564,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1570,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":559,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":553,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limits",{"_index":1868,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.mjml",{"_index":1633,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.mjml.data",{"_index":1635,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.transformers",{"_index":1897,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1569,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1566,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1567,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1571,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1572,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1820,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2580,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2589,"title":{},"body":{"license.html":{}}}],["original",{"_index":2508,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2737,"title":{},"body":{"license.html":{}}}],["os",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1844,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2338,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2435,"title":{},"body":{"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2439,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2761,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1990,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2436,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2332,"title":{},"body":{"license.html":{}}}],["package",{"_index":2200,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":374,"title":{},"body":{"classes/Application.html":{}}}],["param",{"_index":461,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":490,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":914,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{}}}],["parent.deletable",{"_index":1106,"title":{},"body":{"classes/Entry.html":{}}}],["parent.id",{"_index":1355,"title":{},"body":{"injectables/FilesService.html":{}}}],["parent.path.startswith(`${entry.path",{"_index":1369,"title":{},"body":{"injectables/FilesService.html":{}}}],["parent.path}/${this.name",{"_index":1089,"title":{},"body":{"classes/Entry.html":{}}}],["parent?.hidden",{"_index":1109,"title":{},"body":{"classes/Entry.html":{}}}],["parent?.public",{"_index":1112,"title":{},"body":{"classes/Entry.html":{}}}],["parentdirectorynotfound",{"_index":1139,"title":{"classes/ParentDirectoryNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentid",{"_index":1303,"title":{},"body":{"injectables/FilesService.html":{}}}],["parentischildrenofitself",{"_index":1134,"title":{"classes/ParentIsChildrenOfItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentisitself",{"_index":1138,"title":{"classes/ParentIsItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parseboolpipe",{"_index":1202,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":385,"title":{},"body":{"classes/Application.html":{},"license.html":{}}}],["partialfilterexpression",{"_index":350,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["partialuserdto",{"_index":1648,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2339,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1176,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["parts.join(\".\").trim",{"_index":1367,"title":{},"body":{"injectables/FilesService.html":{}}}],["parts[parts.length",{"_index":1365,"title":{},"body":{"injectables/FilesService.html":{}}}],["party",{"_index":2688,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2483,"title":{},"body":{"license.html":{}}}],["pass",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":1919,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteUserDto.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":1371,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":1741,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1739,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1375,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchangedemail",{"_index":2129,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordchangedemail(user.email",{"_index":2150,"title":{},"body":{"injectables/UsersService.html":{}}}],["passwordreset",{"_index":765,"title":{"classes/PasswordReset.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordreset(email",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.deleteone",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":773,"title":{},"body":{"modules/AuthModule.html":{}}}],["passwordreset.uid",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresets",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetschema",{"_index":766,"title":{},"body":{"modules/AuthModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1674,"title":{},"body":{"classes/PasswordReset.html":{}}}],["passwordresetted",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetted(user.email",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":462,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["patch(\"/:id",{"_index":492,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["patch(\"@me",{"_index":2067,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":457,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["patch('/:id')@usescopes(applicationscopes.files_write",{"_index":1196,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('@me",{"_index":2053,"title":{},"body":{"controllers/UsersController.html":{}}}],["patent",{"_index":2395,"title":{},"body":{"license.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":963,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":977,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":974,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1422,"title":{},"body":{"controllers/HealthController.html":{}}}],["path.validator",{"_index":1524,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["path.validator.ts",{"_index":1509,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.validator.ts:12",{"_index":1510,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path.validator.ts:16",{"_index":1511,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path_safe_regex",{"_index":1066,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_safe_regex.test(value",{"_index":1070,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{}}}],["path_valid_regex",{"_index":1512,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_valid_regex.test(value",{"_index":1515,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["payloadtoolargeexception",{"_index":1159,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2438,"title":{},"body":{"license.html":{}}}],["perform",{"_index":416,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["performance",{"_index":2656,"title":{},"body":{"license.html":{}}}],["period",{"_index":377,"title":{},"body":{"classes/Application.html":{}}}],["permits",{"_index":2541,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2502,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2693,"title":{},"body":{"license.html":{}}}],["pick",{"_index":554,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1895,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1899,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1900,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2706,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2583,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":319,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"controllers/SessionsController.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":396,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":2000,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(entrydto",{"_index":1124,"title":{},"body":{"classes/Entry.html":{}}}],["plaintoclass(sessiondto",{"_index":1774,"title":{},"body":{"controllers/SessionsController.html":{}}}],["plaintoclass(userdto",{"_index":2001,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":992,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"guards/RecaptchaGuard.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":989,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["poolsize",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2355,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2690,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2382,"title":{},"body":{"license.html":{}}}],["post",{"_index":463,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post(\"/:id/key",{"_index":495,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"@me/avatar",{"_index":2071,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"@me/delete",{"_index":2090,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"create",{"_index":1220,"title":{},"body":{"controllers/FilesController.html":{}}}],["post(\"forgot",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"reset",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1243,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/:id/key')@throttle(25",{"_index":454,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post('@me/avatar",{"_index":2051,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('@me/delete",{"_index":2042,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('create",{"_index":1187,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('forgot",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload')@usescopes(applicationscopes.files_write",{"_index":1200,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@throttle(25",{"_index":446,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["power",{"_index":2428,"title":{},"body":{"license.html":{}}}],["pre",{"_index":345,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2417,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1988,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2705,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2608,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1287,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process(\"delete",{"_index":1292,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1600,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1285,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1589,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1288,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1597,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1291,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerService.html":{},"index.html":{}}}],["profits",{"_index":2678,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2267,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2586,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2697,"title":{},"body":{"license.html":{}}}],["project",{"_index":2300,"title":{},"body":{"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1253,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":323,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":301,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1013,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({enum",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["prop({lowercase",{"_index":293,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":304,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1059,"title":{},"body":{"classes/Entry.html":{}}}],["prop({required",{"_index":1050,"title":{},"body":{"classes/Entry.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1056,"title":{},"body":{"classes/Entry.html":{}}}],["properties",{"_index":273,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"injectables/SessionsService.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":2452,"title":{},"body":{"license.html":{}}}],["propertyname",{"_index":1504,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["protocol",{"_index":1622,"title":{},"body":{"injectables/MailerService.html":{}}}],["protocol}://${this.config.get(\"frontend_domain",{"_index":1627,"title":{},"body":{"injectables/MailerService.html":{}}}],["prove",{"_index":2657,"title":{},"body":{"license.html":{}}}],["provide",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":909,"title":{},"body":{"classes/CreateApplicationDto.html":{},"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided!'})@isoptional",{"_index":899,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["provider",{"_index":1543,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2724,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2719,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2598,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2711,"title":{},"body":{"license.html":{}}}],["public",{"_index":915,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["publish",{"_index":2733,"title":{},"body":{"license.html":{}}}],["published",{"_index":2738,"title":{},"body":{"license.html":{}}}],["pump",{"_index":1846,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":1904,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1896,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2651,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2426,"title":{},"body":{"license.html":{}}}],["put",{"_index":2752,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1681,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2655,"title":{},"body":{"license.html":{}}}],["query",{"_index":516,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"injectables/SessionsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{}}}],["query(\"folder",{"_index":1244,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"public",{"_index":1245,"title":{},"body":{"controllers/FilesController.html":{}}}],["querycursor",{"_index":1064,"title":{},"body":{"classes/Entry.html":{}}}],["queue",{"_index":835,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":326,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["read",{"_index":1830,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1839,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":951,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1229,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1901,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1242,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1889,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1401,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2532,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1528,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1694,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1693,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1682,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1684,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1696,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1695,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_unexpected_result",{"_index":1686,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_url",{"_index":1691,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":622,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.7",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2616,"title":{},"body":{"license.html":{}}}],["received",{"_index":2614,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2537,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2525,"title":{},"body":{"license.html":{}}}],["record",{"_index":1612,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["recursive",{"_index":972,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":1989,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":2709,"title":{},"body":{"license.html":{}}}],["references",{"_index":2742,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2722,"title":{},"body":{"license.html":{}}}],["regex",{"_index":1077,"title":{},"body":{"classes/Entry.html":{}}}],["register",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1547,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1551,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1552,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdecorator",{"_index":1493,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["registerdto",{"_index":593,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regulation",{"_index":2577,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2597,"title":{},"body":{"license.html":{}}}],["reject",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1885,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2700,"title":{},"body":{"license.html":{}}}],["relativelink",{"_index":1609,"title":{},"body":{"injectables/MailerService.html":{}}}],["relativelink.substring(relativelink.startswith",{"_index":1628,"title":{},"body":{"injectables/MailerService.html":{}}}],["relevant",{"_index":2754,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2553,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1702,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":1340,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["removed",{"_index":2479,"title":{},"body":{"license.html":{}}}],["rename",{"_index":2741,"title":{},"body":{"license.html":{}}}],["render",{"_index":1604,"title":{},"body":{"injectables/MailerService.html":{}}}],["render(template",{"_index":1610,"title":{},"body":{"injectables/MailerService.html":{}}}],["repair",{"_index":2661,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2279,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2505,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2506,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2454,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1699,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":1916,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.headers.authorization",{"_index":723,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.pipe(busboy",{"_index":1914,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":742,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":746,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":747,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":744,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":741,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":417,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["request.mjml",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1575,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2494,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1706,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1238,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1241,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1475,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2640,"title":{},"body":{"license.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"classes/ResetPasswordDto.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reset.email",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset.email.ts",{"_index":2178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.mjml",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset.schema",{"_index":768,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["reset.schema.ts",{"_index":1666,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1667,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1671,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1668,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1669,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1670,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":597,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resize(512",{"_index":2082,"title":{},"body":{"controllers/UsersController.html":{}}}],["resolve",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1886,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2467,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2522,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2531,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1720,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1716,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1721,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1718,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2695,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revoke",{"_index":1757,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(@currentuser(\"id",{"_index":1778,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(uid",{"_index":1762,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall",{"_index":1758,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(@currentuser(\"id",{"_index":1781,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(uid",{"_index":1765,"title":{},"body":{"controllers/SessionsController.html":{}}}],["right",{"_index":2379,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2385,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2654,"title":{},"body":{"license.html":{}}}],["root",{"_index":1626,"title":{},"body":{"injectables/MailerService.html":{}}}],["rotate",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":733,"title":{},"body":{"guards/AuthGuard.html":{}}}],["royalty",{"_index":2447,"title":{},"body":{"license.html":{}}}],["run",{"_index":2285,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["safe.validator",{"_index":924,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{}}}],["safe.validator.ts",{"_index":1487,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["safe.validator.ts:12",{"_index":1490,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safe.validator.ts:16",{"_index":1492,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safety",{"_index":1991,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2405,"title":{},"body":{"license.html":{}}}],["same",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":346,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2272,"title":{},"body":{"index.html":{}}}],["schema",{"_index":324,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":325,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":355,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":1026,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(entry",{"_index":1073,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1673,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1979,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":2013,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":502,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":2106,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemas/entry.schema",{"_index":1272,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/password",{"_index":767,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user",{"_index":771,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user.schema",{"_index":2060,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":894,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["scopes",{"_index":281,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"miscellaneous/variables.html":{}}}],["scopes.enum",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["scopes.enum.ts",{"_index":2253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scopes.every(scope",{"_index":392,"title":{},"body":{"classes/Application.html":{}}}],["scopes.length",{"_index":736,"title":{},"body":{"guards/AuthGuard.html":{}}}],["score",{"_index":1688,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2035,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2097,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2047,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2359,"title":{},"body":{"license.html":{}}}],["secret",{"_index":338,"title":{},"body":{"classes/Application.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2466,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2519,"title":{},"body":{"license.html":{}}}],["secure",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2500,"title":{},"body":{"license.html":{}}}],["sell",{"_index":2461,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2403,"title":{},"body":{"license.html":{}}}],["send",{"_index":1585,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["send(job",{"_index":1588,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["send(options",{"_index":1615,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmailoptions",{"_index":1594,"title":{"interfaces/SendMailOptions.html":{}},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separate",{"_index":2374,"title":{},"body":{"license.html":{}}}],["seperator",{"_index":381,"title":{},"body":{"classes/Application.html":{}}}],["server",{"_index":1461,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2489,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2660,"title":{},"body":{"license.html":{}}}],["session",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.destroy(error",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SessionsController.html":{}}}],["session.ip",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["session_secret",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":1433,"title":{"classes/SessionDto.html":{}},"body":{"interfaces/IRequest.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["sessions",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["sessions.controller",{"_index":1787,"title":{},"body":{"modules/SessionsModule.html":{}}}],["sessions.map",{"_index":1773,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessions.service",{"_index":1768,"title":{},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{}}}],["sessionscontroller",{"_index":1754,"title":{"controllers/SessionsController.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"coverage.html":{}}}],["sessionsmodule",{"_index":134,"title":{"modules/SessionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionsservice",{"_index":778,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":853,"title":{},"body":{"classes/Counter.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["set(data.scopes)).foreach(scope",{"_index":546,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["set(value",{"_index":869,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(auth_guard_optional",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_guard_scopes",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":841,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":845,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settle",{"_index":1858,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle(files.map(file",{"_index":1879,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2634,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2440,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":2055,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["side",{"_index":2273,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1042,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2590,"title":{},"body":{"license.html":{}}}],["smtp_from",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1574,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1578,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2334,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2394,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2672,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2572,"title":{},"body":{"license.html":{}}}],["specify",{"_index":734,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sponsors",{"_index":2303,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application",{"_index":2252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../application.schema.ts",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entry.schema.ts",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../optional",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scopes.decorator.ts",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../successful",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/optional",{"_index":2160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/scopes.decorator.ts",{"_index":2165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/internal",{"_index":1460,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/auth.guard.ts:29",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:37",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:53",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:81",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:96",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1675,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:27",{"_index":1677,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:34",{"_index":1679,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:85",{"_index":1678,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1432,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":750,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":751,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":752,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:16",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":438,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:21",{"_index":443,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:29",{"_index":448,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:37",{"_index":452,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:42",{"_index":458,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:52",{"_index":455,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":401,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:13",{"_index":436,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.errors.ts:19",{"_index":1458,"title":{},"body":{"classes/InsufficientScopes.html":{}}}],["src/modules/applications/applications.errors.ts:25",{"_index":1479,"title":{},"body":{"classes/InvalidAPIKey.html":{}}}],["src/modules/applications/applications.errors.ts:31",{"_index":1932,"title":{},"body":{"classes/TooManyApplications.html":{}}}],["src/modules/applications/applications.errors.ts:8",{"_index":404,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":500,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":505,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:18",{"_index":509,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:26",{"_index":512,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:44",{"_index":515,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:48",{"_index":518,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:55",{"_index":520,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:59",{"_index":522,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:63",{"_index":524,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:70",{"_index":526,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":427,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:11",{"_index":431,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:13",{"_index":432,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:15",{"_index":433,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:17",{"_index":434,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:20",{"_index":435,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":428,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":429,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":883,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/generate",{"_index":1377,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["src/modules/applications/enums/application",{"_index":2254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":270,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:29",{"_index":288,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:30",{"_index":316,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:40",{"_index":299,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:57",{"_index":302,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:65",{"_index":303,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:74",{"_index":309,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:80",{"_index":312,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:89",{"_index":315,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:91",{"_index":286,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:92",{"_index":289,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:93",{"_index":290,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:94",{"_index":313,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:108",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:113",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:50",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:55",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:67",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:98",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1452,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1483,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":1484,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2028,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1453,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:33",{"_index":2030,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1481,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":762,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:40",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:70",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:91",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1370,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1527,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1531,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1532,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1529,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1723,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1724,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1727,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1728,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1734,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1737,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/emails/password",{"_index":2177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/successful",{"_index":2179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/user",{"_index":2181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/password",{"_index":1665,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/user",{"_index":2002,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/bull",{"_index":830,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/create",{"_index":911,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts",{"_index":1141,"title":{},"body":{"classes/EntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts:11",{"_index":1145,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:13",{"_index":1146,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:15",{"_index":1147,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:17",{"_index":1148,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:19",{"_index":1149,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:21",{"_index":1150,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:23",{"_index":1151,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:25",{"_index":1152,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:27",{"_index":1153,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:29",{"_index":1154,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:4",{"_index":1142,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:6",{"_index":1143,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:8",{"_index":1144,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/list",{"_index":1517,"title":{},"body":{"classes/ListEntriesDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/update",{"_index":1937,"title":{},"body":{"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1182,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:118",{"_index":1201,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:51",{"_index":1191,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:59",{"_index":1197,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:74",{"_index":1189,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:96",{"_index":1194,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":1126,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:15",{"_index":1156,"title":{},"body":{"classes/EntryNotFound.html":{}}}],["src/modules/files/files.errors.ts:21",{"_index":1646,"title":{},"body":{"classes/ParentIsChildrenOfItself.html":{}}}],["src/modules/files/files.errors.ts:27",{"_index":1647,"title":{},"body":{"classes/ParentIsItself.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":1127,"title":{},"body":{"classes/EntryAlreadyExists.html":{}}}],["src/modules/files/files.errors.ts:33",{"_index":1645,"title":{},"body":{"classes/ParentDirectoryNotFound.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":1155,"title":{},"body":{"classes/EntryNotDeletable.html":{}}}],["src/modules/files/files.module.ts",{"_index":1268,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1279,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1282,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:16",{"_index":1286,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1295,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:103",{"_index":1312,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:107",{"_index":1313,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:111",{"_index":1314,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:115",{"_index":1315,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:140",{"_index":1301,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:151",{"_index":1304,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:23",{"_index":1299,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:34",{"_index":1306,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:66",{"_index":1307,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:76",{"_index":1309,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:90",{"_index":1310,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":927,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/entry.schema.ts",{"_index":1033,"title":{},"body":{"classes/Entry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/entry.schema.ts:24",{"_index":1043,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:29",{"_index":1044,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:31",{"_index":1045,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:36",{"_index":1048,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:45",{"_index":1049,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:50",{"_index":1051,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:55",{"_index":1052,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:63",{"_index":1054,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:66",{"_index":1055,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:71",{"_index":1057,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:76",{"_index":1058,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:82",{"_index":1060,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:91",{"_index":1062,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:93",{"_index":1063,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:95",{"_index":1046,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:96",{"_index":1047,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:97",{"_index":1061,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1399,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1403,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1429,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":1000,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":1004,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":1005,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":1006,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1573,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1742,"title":{},"body":{"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1537,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:33",{"_index":1549,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:49",{"_index":1553,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:63",{"_index":1546,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:77",{"_index":1542,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1582,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:16",{"_index":1593,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:18",{"_index":1586,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:22",{"_index":1587,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:27",{"_index":1590,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1602,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:14",{"_index":1606,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:22",{"_index":1608,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:29",{"_index":1613,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:34",{"_index":1616,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:42",{"_index":1618,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/sessions/dto/session.dto.ts",{"_index":1745,"title":{},"body":{"classes/SessionDto.html":{},"coverage.html":{}}}],["src/modules/sessions/dto/session.dto.ts:11",{"_index":1751,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:13",{"_index":1752,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:19",{"_index":1753,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:5",{"_index":1748,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:7",{"_index":1749,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:9",{"_index":1750,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/interfaces/session",{"_index":1438,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["src/modules/sessions/interfaces/session.interface.ts",{"_index":1436,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts",{"_index":1755,"title":{},"body":{"controllers/SessionsController.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts:21",{"_index":1761,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:36",{"_index":1764,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:44",{"_index":1767,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.module.ts",{"_index":1786,"title":{},"body":{"modules/SessionsModule.html":{}}}],["src/modules/sessions/sessions.service.ts",{"_index":1788,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.service.ts:10",{"_index":1791,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:14",{"_index":1792,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:18",{"_index":1793,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:22",{"_index":1794,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:26",{"_index":1795,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":936,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":944,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":955,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":950,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":953,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":946,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":948,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1381,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1446,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":552,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":1950,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2152,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2187,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1158,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":1933,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":1934,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":1935,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":1161,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":1936,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1644,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1811,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1814,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1815,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1813,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1812,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1828,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":1835,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":1832,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":1845,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":1838,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":1837,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":1840,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":1843,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/delete",{"_index":931,"title":{},"body":{"classes/DeleteUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/partial",{"_index":1649,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":1939,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":2015,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":2019,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":2020,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":2021,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":2022,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":2023,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":2024,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":2025,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":2026,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":2027,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":2016,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":2017,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":2018,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/emails/email",{"_index":2188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/emails/password",{"_index":2191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/email",{"_index":1008,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":1952,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":1965,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":1968,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":1957,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":1959,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":1966,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":1958,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":1967,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":1954,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":1955,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":1956,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":1960,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":1961,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":1962,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":1963,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":1964,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2033,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":2046,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":2054,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:49",{"_index":2052,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:89",{"_index":2043,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:94",{"_index":2040,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:99",{"_index":2049,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":979,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:14",{"_index":1031,"title":{},"body":{"classes/EmailTaken.html":{}}}],["src/modules/users/users.errors.ts:20",{"_index":1480,"title":{},"body":{"classes/InvalidAvatarFileType.html":{}}}],["src/modules/users/users.errors.ts:26",{"_index":1482,"title":{},"body":{"classes/InvalidEmailConfirmationToken.html":{}}}],["src/modules/users/users.errors.ts:32",{"_index":2031,"title":{},"body":{"classes/UsernameTaken.html":{}}}],["src/modules/users/users.errors.ts:38",{"_index":2029,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:8",{"_index":980,"title":{},"body":{"classes/DisplayNameTaken.html":{}}}],["src/modules/users/users.module.ts",{"_index":2104,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2110,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:152",{"_index":2122,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:30",{"_index":2112,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:44",{"_index":2113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":2115,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:78",{"_index":2117,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:90",{"_index":2118,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:94",{"_index":2119,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:98",{"_index":2124,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":848,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":861,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":862,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":864,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":859,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":868,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":870,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":872,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":874,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/generateid.ts",{"_index":2196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":1917,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["src/validators/is",{"_index":1486,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2286,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2289,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2290,"title":{},"body":{"index.html":{}}}],["started",{"_index":2266,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2278,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1538,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1472,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2576,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2646,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2311,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2731,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2681,"title":{},"body":{"license.html":{}}}],["storage",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1818,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1848,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1819,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1816,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1817,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":937,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1266,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1276,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["storageoptions",{"_index":558,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":560,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1212,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":958,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":1855,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["strict",{"_index":1641,"title":{},"body":{"injectables/MailerService.html":{}}}],["string",{"_index":291,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1680,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":1002,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2538,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2497,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2384,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2547,"title":{},"body":{"license.html":{}}}],["successful",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfullogin",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successfullogin(user.email",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":2351,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":415,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["sufficiently",{"_index":2587,"title":{},"body":{"license.html":{}}}],["super",{"_index":877,"title":{},"body":{"classes/Counter.html":{}}}],["super(\"application",{"_index":412,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(\"display",{"_index":983,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"email",{"_index":985,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"entry",{"_index":1133,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"invalid",{"_index":419,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["super(\"missing",{"_index":1178,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":1167,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"parent",{"_index":1140,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"please",{"_index":1457,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"the",{"_index":1135,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"this",{"_index":1130,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"too",{"_index":1171,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"username",{"_index":996,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"you",{"_index":421,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1454,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`application",{"_index":407,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(`entry",{"_index":1128,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentDirectoryNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(`file",{"_index":1164,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(`user",{"_index":999,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2304,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2642,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2758,"title":{},"body":{"modules.html":{}}}],["t",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["target",{"_index":1505,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":1614,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"miscellaneous/variables.html":{}}}],["templates/email",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/password",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/successful",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/user",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2594,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2603,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2592,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1430,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2366,"title":{},"body":{"license.html":{}}}],["test",{"_index":2293,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2296,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2295,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2292,"title":{},"body":{"index.html":{}}}],["text",{"_index":1003,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["thanks",{"_index":2302,"title":{},"body":{"index.html":{}}}],["then(application",{"_index":487,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(applications",{"_index":481,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(entry",{"_index":1330,"title":{},"body":{"injectables/FilesService.html":{}}}],["then(file",{"_index":1260,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(id",{"_index":360,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["then(res",{"_index":1705,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(token",{"_index":1029,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2667,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2356,"title":{},"body":{"license.html":{}}}],["third",{"_index":2482,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":1867,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._getmetadata(auth_guard_optional",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(auth_guard_scopes",{"_index":721,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1697,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1698,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._handleapikey(req",{"_index":724,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._handlesession(req",{"_index":725,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._renamewithindex(data.name",{"_index":1336,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._size",{"_index":1930,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._validateparent(entry",{"_index":1353,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._value",{"_index":878,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":1993,"title":{},"body":{"classes/User.html":{}}}],["this.applications",{"_index":479,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications(data).save",{"_index":537,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.countdocuments",{"_index":533,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create",{"_index":486,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete",{"_index":2142,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.applications.deletemany(query",{"_index":538,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.deleteone",{"_index":491,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.exists",{"_index":535,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.find(query).sort",{"_index":541,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.findone",{"_index":729,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.applications.findone(query",{"_index":539,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.generatekey",{"_index":496,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.updateone",{"_index":493,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.activateaccount(token",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.forgotpassword(email",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.register(email",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1994,"title":{},"body":{"classes/User.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1396,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1397,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1395,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_secret",{"_index":731,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.config.get(\"max_file_size",{"_index":1252,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1250,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"node_env",{"_index":1623,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1703,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":1796,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1568,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1565,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1418,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.deletable",{"_index":1107,"title":{},"body":{"classes/Entry.html":{}}}],["this.delete(file.id",{"_index":1880,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":1995,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1421,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1425,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":1996,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":2146,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailconfirmations.findone",{"_index":2132,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1636,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":879,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1862,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1866,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1894,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1865,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.entries",{"_index":1328,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries(entry).save",{"_index":1337,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.countdocuments",{"_index":1333,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.exists(query",{"_index":1351,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.find(query",{"_index":1352,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.findone",{"_index":1338,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.findone(query",{"_index":1347,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files",{"_index":1255,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.createentry",{"_index":1221,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.files.createreadable(id",{"_index":1228,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.deletemany",{"_index":2143,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.files.deleteone",{"_index":1216,"title":{},"body":{"controllers/FilesController.html":{},"injectables/UsersService.html":{}}}],["this.files.exists",{"_index":1246,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.updateone",{"_index":1218,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":846,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1345,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.getparent",{"_index":1088,"title":{},"body":{"classes/Entry.html":{}}}],["this.health.check",{"_index":1417,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hidden",{"_index":1110,"title":{},"body":{"classes/Entry.html":{}}}],["this.http",{"_index":1701,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":361,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.id}.${token",{"_index":387,"title":{},"body":{"classes/Application.html":{}}}],["this.isdirectory",{"_index":1087,"title":{},"body":{"classes/Entry.html":{}}}],["this.isfile",{"_index":1081,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"deletable",{"_index":1103,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"hidden",{"_index":1104,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"name",{"_index":1092,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"parent",{"_index":1093,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"password",{"_index":1982,"title":{},"body":{"classes/User.html":{}}}],["this.ismodified(\"public",{"_index":1105,"title":{},"body":{"classes/Entry.html":{}}}],["this.isnew",{"_index":358,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.key",{"_index":364,"title":{},"body":{"classes/Application.html":{}}}],["this.logger.error(error",{"_index":1237,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.logger.error(exception.message",{"_index":1474,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.createabsolutelink(\"/forgot",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/activate",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.createabsolutelink(`/confirm",{"_index":2148,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/reset",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.send",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1427,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.model(entry.name",{"_index":1075,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).findone",{"_index":1122,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).updatemany",{"_index":1114,"title":{},"body":{"classes/Entry.html":{}}}],["this.name",{"_index":1090,"title":{},"body":{"classes/Entry.html":{}}}],["this.on(string(n",{"_index":882,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":881,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1861,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.parent",{"_index":1121,"title":{},"body":{"classes/Entry.html":{}}}],["this.password",{"_index":1981,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordresets.findone",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.path",{"_index":1078,"title":{},"body":{"classes/Entry.html":{}}}],["this.path.split(\"/\").filter(el",{"_index":1116,"title":{},"body":{"classes/Entry.html":{}}}],["this.path.tostring",{"_index":1096,"title":{},"body":{"classes/Entry.html":{}}}],["this.public",{"_index":1113,"title":{},"body":{"classes/Entry.html":{}}}],["this.reflector.get(key",{"_index":748,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["this.render(options.mjml.template",{"_index":1634,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.save",{"_index":389,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["this.scopes.includes(scope",{"_index":393,"title":{},"body":{"classes/Application.html":{}}}],["this.sessions.delete",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["this.sessions.deletemany(query",{"_index":1800,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.deleteone",{"_index":1779,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.deleteone(query",{"_index":1801,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.find",{"_index":1772,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.find(query).toarray",{"_index":1802,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.findone(query",{"_index":1803,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.size",{"_index":1091,"title":{},"body":{"classes/Entry.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1293,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1339,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.storage.write(req",{"_index":1247,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.tojson",{"_index":397,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["this.token",{"_index":1030,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail(job.data",{"_index":1601,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1599,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.uid",{"_index":1079,"title":{},"body":{"classes/Entry.html":{}}}],["this.useractivations",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useractivations.findone",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":2141,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.confirmemail(token",{"_index":2095,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.create(email",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.deleteone(me",{"_index":2092,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.exists",{"_index":2134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2145,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":738,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.users.updateavatar(me",{"_index":2088,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.updateone(me",{"_index":2069,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.value",{"_index":880,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2415,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1423,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":464,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle(25",{"_index":484,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle_limit",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forrootasync",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":2533,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1419,"title":{},"body":{"controllers/HealthController.html":{}}}],["timesresent",{"_index":2004,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamps",{"_index":342,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["time}.\\n",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tls",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["todto",{"_index":282,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["tojson",{"_index":1067,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["token",{"_index":378,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"classes/UserActivation.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toobject",{"_index":1069,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["toomanyapplications",{"_index":420,"title":{"classes/TooManyApplications.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["toomanyfields",{"_index":1170,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":1174,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":1175,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1704,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2668,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2312,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2453,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2488,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2406,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1523,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["transform((value",{"_index":1525,"title":{},"body":{"classes/ListEntriesDto.html":{}}}],["transformcallback",{"_index":1926,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":320,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/ListEntriesDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1898,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":1972,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":2081,"title":{},"body":{"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["transpilemjml",{"_index":1605,"title":{},"body":{"injectables/MailerService.html":{}}}],["transpilemjml(mjml",{"_index":1617,"title":{},"body":{"injectables/MailerService.html":{}}}],["transport",{"_index":1576,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1583,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":297,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":722,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2318,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":321,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["types.array",{"_index":310,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{}}}],["typescript",{"_index":1501,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ua",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["uid",{"_index":283,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["under",{"_index":2365,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2591,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2721,"title":{},"body":{"license.html":{}}}],["unique",{"_index":298,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unique!'})@isenum(applicationscopes",{"_index":896,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["unit",{"_index":2291,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2599,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2459,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":982,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["unsupported",{"_index":1179,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1177,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":1163,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["until",{"_index":2600,"title":{},"body":{"license.html":{}}}],["up",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update(data",{"_index":340,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["updateavatar",{"_index":2036,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateavatar(@currentuser",{"_index":2072,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(me",{"_index":2050,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(user",{"_index":2120,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":284,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["updateentrydto",{"_index":1195,"title":{"classes/UpdateEntryDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["updateone",{"_index":441,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateone(@body",{"_index":2068,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateone(dto",{"_index":456,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["updateone(query",{"_index":525,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["updateone(user",{"_index":2123,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":1938,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["upload",{"_index":1185,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(uid",{"_index":1198,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":1169,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["uploadedfile",{"_index":1851,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["upon",{"_index":1085,"title":{},"body":{"classes/Entry.html":{}}}],["uri",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["usage",{"_index":735,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":380,"title":{},"body":{"classes/Application.html":{},"license.html":{}}}],["useexisting",{"_index":555,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["usefindandmodify",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":477,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":233,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/User.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user.activated",{"_index":745,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":2151,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.comparepassword(password",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.decorator",{"_index":474,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":2144,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.displayname",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":1664,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":932,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":1944,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":1946,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:29",{"_index":1948,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":1949,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":934,"title":{},"body":{"classes/DeleteUserDto.html":{}}}],["user.dto.ts:7",{"_index":1651,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":2139,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.expiresat",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":2109,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.todto",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user.todto(partialuserdto",{"_index":2099,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":2138,"title":{},"body":{"injectables/UsersService.html":{}}}],["user[\"email",{"_index":1376,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["user[field",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractivation",{"_index":769,"title":{"classes/UserActivation.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivation(email",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivation.name",{"_index":774,"title":{},"body":{"modules/AuthModule.html":{}}}],["useractivations",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivationschema",{"_index":770,"title":{},"body":{"modules/AuthModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.pre(\"save",{"_index":2014,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":628,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1655,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1656,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1657,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1658,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1659,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1660,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1661,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1662,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1663,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1652,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1653,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1654,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernames",{"_index":1730,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernametaken",{"_index":995,"title":{"classes/UsernameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernotactivated",{"_index":712,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":997,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usernotfound(username",{"_index":2098,"title":{},"body":{"controllers/UsersController.html":{}}}],["usernotloggedin",{"_index":713,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2105,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2056,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":2057,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users:read",{"_index":2264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users_read",{"_index":2263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":1978,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.comparepassword",{"_index":1985,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":1992,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":1998,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":1980,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2032,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":135,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usescopes",{"_index":1210,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usescopes(applicationscopes.files_read",{"_index":1227,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_write",{"_index":1215,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.users_read",{"_index":2064,"title":{},"body":{"controllers/UsersController.html":{}}}],["useunifiedtopology",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1563,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":1233,"title":{},"body":{"controllers/FilesController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["utils/atob",{"_index":717,"title":{},"body":{"guards/AuthGuard.html":{}}}],["utils/btoa",{"_index":332,"title":{},"body":{"classes/Application.html":{}}}],["utils/chunk",{"_index":962,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/counter",{"_index":1854,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":334,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/settle",{"_index":1859,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["utils/stream",{"_index":1856,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2747,"title":{},"body":{"license.html":{}}}],["v3",{"_index":1690,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1373,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":307,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{}}}],["validate(value",{"_index":1491,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatebeforesave",{"_index":1997,"title":{},"body":{"classes/User.html":{}}}],["validationlevel",{"_index":1640,"title":{},"body":{"injectables/MailerService.html":{}}}],["validationoptions",{"_index":1495,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":318,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateDirectoryEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ListEntriesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["validatorconstraint",{"_index":1494,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatorconstraintinterface",{"_index":1488,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validators/is",{"_index":923,"title":{},"body":{"classes/CreateDirectoryEntryDto.html":{},"classes/Entry.html":{},"classes/ListEntriesDto.html":{},"classes/UpdateEntryDto.html":{}}}],["validly",{"_index":2641,"title":{},"body":{"license.html":{}}}],["value",{"_index":856,"title":{},"body":{"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/Entry.html":{},"classes/GoogleCloudEngine.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2766,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2322,"title":{},"body":{"license.html":{}}}],["versions",{"_index":2414,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":1068,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["visit",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visiting",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2740,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2647,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2549,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2287,"title":{},"body":{"index.html":{}}}],["website",{"_index":2316,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":854,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":871,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":2383,"title":{},"body":{"license.html":{}}}],["wide",{"_index":2446,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2552,"title":{},"body":{"license.html":{}}}],["without",{"_index":2398,"title":{},"body":{"license.html":{}}}],["work",{"_index":2369,"title":{},"body":{"license.html":{}}}],["world",{"_index":2445,"title":{},"body":{"license.html":{}}}],["writable",{"_index":957,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1831,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1841,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1876,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":1908,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1893,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1883,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1878,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":1842,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["yes",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FilesService.html":{}}}],["you'd",{"_index":2307,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\n@Module({\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsModule\n                        \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SessionsModule } from \"./modules/sessions/sessions.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_KEY_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    ThrottlerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    }),\n\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SessionsModule,\n    UsersModule\n  ],\n  exports: [ApplicationsModule, ConfigModule, Logger, MailerModule, UsersModule],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                compareKey\n                            \n                            \n                                createdAt\n                            \n                            \n                                generateKey\n                            \n                            \n                                hasSufficientScopes\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSufficientScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 18, minlength: 18, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Types.Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({enum: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { btoa } from \"@/utils/btoa\";\nimport { generateId } from \"@/utils/generateId\";\n\nconst HMAC_SHA256 = (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\");\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 18,\n    minlength: 18,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          key: {\n            $type: \"string\"\n          }\n        }\n      },\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  key!: string | null;\n\n  @Prop(\n    raw({\n      default: null,\n      type: Date\n    })\n  )\n  lastUsed!: Date | null;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop({\n    enum: Object.values(ApplicationScopes),\n    type: [String]\n  })\n  scopes!: Types.Array;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  compareKey!: (key: string, secret: string) => boolean;\n  generateKey!: (secret: string) => Promise;\n  hasSufficientScopes!: (scopes: ApplicationScopes[]) => boolean;\n  toDto!: () => ApplicationDto;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(9)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.compareKey = function(\n  this: Application,\n  key: string,\n  secret: string\n): boolean {\n  if (!this.key) return false;\n\n  return crypto.timingSafeEqual(Buffer.from(HMAC_SHA256(key, secret)), Buffer.from(this.key));\n};\n\nApplicationSchema.methods.generateKey = async function(\n  this: Application,\n  secret: string\n): Promise {\n  /**\n   ** The final api key length must be a multiple of 3 to avoid padding when converted to base64.\n   ** Application ID (18) + period (1) + Application secret token (32) = 51\n   ** The period is used as a seperator so when we decode the base64 in the auth guard, we know\n   ** which part is our application id and secret token.\n   */\n  const token = await generateId(16);\n  const key = `${this.id}.${token}`;\n\n  this.key = HMAC_SHA256(key, secret);\n\n  await this.save();\n\n  return btoa(key);\n};\n\nApplicationSchema.methods.hasSufficientScopes = function(\n  this: Application,\n  scopes: ApplicationScopes[]\n) {\n  return scopes.every(scope => this.scopes.includes(scope));\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationAlreadyExists.html":{"url":"classes/ApplicationAlreadyExists.html","title":"class - ApplicationAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  @Exclude()\n  key!: string | null;\n\n  lastUsed!: Date | null;\n\n  name!: string;\n\n  scopes!: ApplicationScopes[];\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                create\n                            \n                            \n                                deleteOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/key')@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: CreateApplicationDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { GenerateApplicationKeyDto } from \"./dto/generate-application-key.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @Get()\n  all(@CurrentUser(\"id\") uid: string): Promise {\n    return this.applications\n      .find({ uid })\n      .then(applications => applications.map(application => application.toDto()));\n  }\n\n  @Post()\n  @Throttle(25, 60)\n  create(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    return this.applications.create({ ...dto, uid }).then(application => application.toDto());\n  }\n\n  @Delete(\"/:id\")\n  deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.applications.deleteOne({ id, uid }).then(application => application.toDto());\n  }\n\n  @Patch(\"/:id\")\n  updateOne(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.applications.updateOne({ id, uid }, dto).then(application => application.toDto());\n  }\n\n  @Post(\"/:id/key\")\n  @Throttle(25, 60)\n  async generateKey(\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return {\n      key: await this.applications.generateKey({ id, uid })\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }])],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { FilterQuery, Model, Types } from \"mongoose\";\n\nimport {\n  ApplicationAlreadyExists,\n  ApplicationNotFound,\n  TooManyApplications\n} from \"./applications.errors\";\n\nimport { ApplicationScopes } from \"./enums/application-scopes.enum\";\n\nimport { Application } from \"./schemas/application.schema\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(data: {\n    name: Application[\"name\"];\n    scopes: ApplicationScopes[];\n    uid: Application[\"uid\"];\n  }): Promise {\n    const { name, uid } = data;\n\n    if ((await this.applications.countDocuments({ uid })) > 50) {\n      throw new TooManyApplications();\n    }\n\n    if (await this.applications.exists({ name, uid })) {\n      throw new ApplicationAlreadyExists(name);\n    }\n\n    return new this.applications(data).save();\n  }\n\n  async delete(query: FilterQuery): Promise {\n    await this.applications.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.deleteOne();\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.applications.find(query).sort(\"-lastUsed\");\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.applications.findOne(query);\n  }\n\n  async generateKey(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.generateKey(this.config.get(\"API_KEY_SECRET\") as string);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      name: Application[\"name\"];\n      scopes: ApplicationScopes[];\n    }\n  ): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    application.name = data.name;\n    application.scopes = new Types.Array();\n\n    Array.from(new Set(data.scopes)).forEach(scope => application.scopes.addToSet(scope));\n\n    return application.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: Express.Session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Express.Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { successfulLogin } from \"./emails/successful-login.email\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\n\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { ISessionData } from \"@/modules/sessions/interfaces/session-data.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\n\nimport { UserDto } from \"@/modules/users/dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly mailer: MailerService) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.auth.activateAccount(token);\n  }\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISessionData\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    await this.mailer.send(\n      successfulLogin(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\"),\n        session\n      })\n    );\n\n    return user.toDto();\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: Express.Session): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Private\n                                    Async\n                                _handleAPIKey\n                            \n                            \n                                    Private\n                                    Async\n                                _handleSession\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, config: ConfigService, reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:96\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleAPIKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                ApplicationScopes[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleSession(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { InsufficientScopes, InvalidAPIKey } from \"@/modules/applications/applications.errors\";\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { atob } from \"@/utils/atob\";\n\nexport const AUTH_GUARD_OPTIONAL = \"AUTH_GUARD_OPTIONAL\";\nexport const AUTH_GUARD_SCOPES = \"AUTH_GUARD_SCOPES\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly config: ConfigService,\n    private readonly reflector: Reflector,\n    private readonly users: UsersService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const optional = this._getMetadata(AUTH_GUARD_OPTIONAL, context);\n    const scopes = this._getMetadata(AUTH_GUARD_SCOPES, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      return req.headers.authorization\n        ? await this._handleAPIKey(req, scopes)\n        : await this._handleSession(req);\n    } catch (error) {\n      if (!optional) throw error;\n      return true;\n    }\n  }\n\n  private async _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[]) {\n    const key = req.headers.authorization && atob(req.headers.authorization);\n    if (!key) throw new InvalidAPIKey();\n\n    const [id, token] = key.split(\".\");\n    if (!id || !token) throw new InvalidAPIKey();\n\n    const application = await this.applications.findOne({ id });\n\n    if (!application || !application.compareKey(key, this.config.get(\"API_SECRET\") as string)) {\n      throw new InvalidAPIKey();\n    }\n\n    // Only allow routes that specify scopes to allow the usage of an API key.\n    if (!scopes || !scopes.length || !application.hasSufficientScopes(scopes)) {\n      throw new InsufficientScopes();\n    }\n\n    const user = await this.users.findOne({ id: application.uid });\n    if (!user) throw new InvalidAPIKey();\n\n    await application.updateOne({ lastUsed: new Date() });\n\n    req.user = user;\n\n    return true;\n  }\n\n  private async _handleSession(req: IRequest) {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UserNotLoggedIn();\n    if (!user.activated) throw new UserNotActivated();\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n\n  private _getMetadata(key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSessionsModule\n\nSessionsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SessionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\n\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    HttpModule,\n\n    MongooseModule.forFeature([\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ]),\n\n    SessionsModule\n  ],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, sessions: SessionsService, users: UsersService, passwordResets: Model, userActivations: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activateAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport {\n  InvalidCredentials,\n  InvalidPasswordResetLink,\n  InvalidUserActivationLink,\n  UserNotActivated\n} from \"./auth.errors\";\n\nimport { passwordReset } from \"./emails/password-reset.email\";\nimport { passwordResetted } from \"./emails/password-post-reset.email\";\nimport { userActivation } from \"./emails/user-activation.email\";\n\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n    private readonly users: UsersService,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model\n  ) {}\n\n  async activateAccount(token: string): Promise {\n    const activation = await this.userActivations.findOne({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    user.activated = true;\n    user.expiresAt = null;\n\n    await user.save();\n    await activation.deleteOne();\n  }\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.mailer.send(\n      passwordReset(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/reset-password/${reset.token}`)\n      })\n    );\n\n    return true;\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    const activation = await new this.userActivations({ uid: user.id }).save();\n\n    await this.mailer.send(\n      userActivation(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/activate-account/${activation.token}`)\n      })\n    );\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.passwordResets.findOne({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.uid });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await this.sessions.delete({ \"session.uid\": user.id });\n\n    user.password = newPassword;\n\n    await user.save();\n    await passwordReset.deleteOne();\n\n    await this.mailer.send(\n      passwordResetted(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString({message: 'Application name must be a $constraint1'})@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ArrayUnique({message: 'Application scope elements must be unique!'})@IsEnum(ApplicationScopes, {each: true, message: 'Invalid application scopes provided!'})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayUnique, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { ApplicationScopes } from \"../enums/application-scopes.enum\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString({ message: \"Application name must be a $constraint1\" })\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ArrayUnique({ message: \"Application scope elements must be unique!\" })\n  @IsEnum(ApplicationScopes, { each: true, message: \"Invalid application scopes provided!\" })\n  @IsOptional()\n  scopes: ApplicationScopes[] = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDirectoryEntryDto.html":{"url":"classes/CreateDirectoryEntryDto.html","title":"class - CreateDirectoryEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDirectoryEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/create-directory-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Directory name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Directory name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-directory-entry.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-directory-entry.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-directory-entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class CreateDirectoryEntryDto {\n  @IsNotEmpty({ message: \"Directory name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Directory name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @IsOptional()\n  @IsString()\n  parent!: string | null;\n\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDto.html":{"url":"classes/DeleteUserDto.html","title":"class - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/delete-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/delete-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameTaken.html":{"url":"classes/DisplayNameTaken.html","title":"class - DisplayNameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTaken.html":{"url":"classes/EmailTaken.html","title":"class - EmailTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/entry.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            EntryDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                getChildren\n                            \n                            \n                                getParent\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isDirectory\n                            \n                            \n                                isFile\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChildren\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDirectory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true, validate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 0, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, FilterQuery, QueryCursor } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { EntryDto } from \"../dto/entry.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nimport { PATH_SAFE_REGEX } from \"@/validators/is-string-path-safe.validator\";\n\n@Schema({\n  id: false,\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class Entry extends Document implements EntryDto {\n  createdAt!: Date;\n\n  @Prop({\n    default: true\n  })\n  deletable!: boolean;\n\n  depth!: number;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    required: true\n  })\n  isDirectory!: boolean;\n\n  @Prop({\n    required: true\n  })\n  isFile!: boolean;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true,\n    validate: (value: string) => !PATH_SAFE_REGEX.test(value)\n  })\n  name!: string;\n\n  @Prop()\n  parent!: string | null;\n\n  @Prop({\n    unique: true\n  })\n  path!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 0,\n    required: true\n  })\n  size!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  updatedAt!: Date;\n\n  getChildren!: (query?: FilterQuery) => QueryCursor;\n  getParent!: () => Promise;\n  toDto!: () => EntryDto;\n}\n\nexport const EntrySchema = SchemaFactory.createForClass(Entry);\n\nEntrySchema.pre(\"remove\", function(next) {\n  this.model(Entry.name)\n    .deleteMany({\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .then(() => next())\n    .catch(error => next(error));\n});\n\nEntrySchema.pre(\"save\", async function(next) {\n  if (!this.isNew) return next();\n  if (!this.id && this.isFile) return next(new Error(\"File ID is missing upon entry creation!\"));\n\n  try {\n    if (!this.id && this.isDirectory) {\n      this.id = await generateId(8);\n    }\n\n    const parent = await this.getParent();\n\n    this.path = parent ? `${parent.path}/${this.name}` : `/${this.name}`;\n    this.size = this.isDirectory ? 0 : this.size;\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", async function(next) {\n  if (this.isNew || (!this.isModified(\"name\") && !this.isModified(\"parent\"))) return next();\n\n  try {\n    const parent = await this.getParent();\n\n    const newPath = parent ? `${parent.path}/${this.name}` : `/${this.name}`;\n    const oldPath = this.path.toString();\n\n    this.path = newPath;\n\n    await this.model(Entry.name)\n      .find({\n        path: { $regex: `^${oldPath}/` },\n        uid: this.uid\n      })\n      .cursor()\n      .eachAsync(async child => {\n        child.path = newPath + child.path.substr(oldPath.length);\n        await child.save();\n      });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", async function(next) {\n  if (\n    !this.isModified(\"deletable\") &&\n    !this.isModified(\"hidden\") &&\n    !this.isModified(\"parent\") &&\n    !this.isModified(\"public\")\n  ) {\n    return next();\n  }\n\n  try {\n    const parent = await this.getParent();\n\n    const deletable = parent ? parent.deletable : this.deletable;\n\n    // If the parent is set to false for these, then the childrens for these can only be false\n    const hidden = parent?.hidden === false ? false : this.hidden;\n    const isPublic = parent?.public === false ? false : this.public;\n\n    this.deletable = deletable;\n    this.hidden = hidden;\n    this.public = isPublic;\n\n    await this.model(Entry.name).updateMany(\n      {\n        path: { $regex: `^${this.path}/` },\n        uid: this.uid\n      },\n      {\n        deletable,\n        hidden,\n        public: isPublic\n      }\n    );\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.virtual(\"depth\").get(function(this: Entry) {\n  return this.path.split(\"/\").filter(el => el.length > 0).length;\n});\n\nEntrySchema.methods.getChildren = function(\n  this: Entry,\n  query: FilterQuery = {}\n): QueryCursor {\n  return this.model(Entry.name)\n    .find({\n      ...query,\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .cursor();\n};\n\nEntrySchema.methods.getParent = async function(this: Entry): Promise {\n  if (!this.parent) return null;\n\n  return this.model(Entry.name).findOne({\n    id: this.parent,\n    uid: this.uid\n  });\n};\n\nEntrySchema.methods.toDto = function(this: Entry): EntryDto {\n  return plainToClass(EntryDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryAlreadyExists.html":{"url":"classes/EntryAlreadyExists.html","title":"class - EntryAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryDto.html":{"url":"classes/EntryDto.html","title":"class - EntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isDirectory\n                            \n                            \n                                isFile\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDirectory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class EntryDto {\n  createdAt!: Date;\n\n  deletable!: boolean;\n\n  depth!: number;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  isDirectory!: boolean;\n\n  isFile!: boolean;\n\n  name!: string;\n\n  parent!: string | null;\n\n  path!: string;\n\n  public!: boolean;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotDeletable.html":{"url":"classes/EntryNotDeletable.html","title":"class - EntryNotDeletable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotDeletable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotFound.html":{"url":"classes/EntryNotFound.html","title":"class - EntryNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDirectory\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createDirectory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createDirectory(dto: CreateDirectoryEntryDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create-directory')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDirectoryEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(uid: string | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@OptionalAuth()@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(dto: UpdateEntryDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(uid: string, folder: string, isPublic: boolean, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isPublic\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  ParseBoolPipe,\n  Patch,\n  Post,\n  Req,\n  Res,\n  Query,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { EntryNotFound, ParentDirectoryNotFound } from \"./files.errors\";\nimport { FilesService } from \"./files.service\";\n\nimport { CreateDirectoryEntryDto } from \"./dto/create-directory-entry.dto\";\nimport { EntryDto } from \"./dto/entry.dto\";\nimport { UpdateEntryDto } from \"./dto/update-entry.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/optional-auth\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"/:id\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const deleted = await this.files.deleteOne({ id, uid });\n\n    return deleted.toDto();\n  }\n\n  @Patch(\"/:id\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async updateOne(\n    @Body() dto: UpdateEntryDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    const entry = await this.files.updateOne(\n      { id, uid },\n      { ...dto, deletable: true, hidden: false }\n    );\n\n    return entry.toDto();\n  }\n\n  @Post(\"create-directory\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async createDirectory(\n    @Body() dto: CreateDirectoryEntryDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    const directory = await this.files.createEntry({\n      deletable: true,\n      hidden: false,\n      isDirectory: true,\n      isFile: false,\n      name: dto.name,\n      parent: dto.parent,\n      public: dto.public,\n      size: 0,\n      uid\n    });\n\n    return directory.toDto();\n  }\n\n  @Get(\"download/:id\")\n  @OptionalAuth()\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async download(\n    @CurrentUser(\"id\") uid: string | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const readable = await this.files.createReadable(id, uid);\n\n    readable.on(\"error\", (error: Error) => {\n      // Exception filter disabled when using the @Res() decorator, so we have to log the error manually\n      this.logger.error(error);\n\n      if (!res.headersSent) {\n        const err = new InternalServerErrorException(error);\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Post(\"upload\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async upload(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"folder\") folder: string,\n    @Query(\"public\", ParseBoolPipe) isPublic: boolean,\n    @Req() req: Request\n  ): Promise {\n    if (!(await this.files.exists({ id: folder, uid }))) {\n      throw new ParentDirectoryNotFound();\n    }\n\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map(file =>\n        this.files\n          .createEntry({\n            deletable: true,\n            hidden: false,\n            id: file.id,\n            isDirectory: false,\n            isFile: true,\n            name: file.filename,\n            parent: folder,\n            public: isPublic,\n            size: file.size,\n            uid\n          })\n          .then(file => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { Entry, EntrySchema } from \"./schemas/entry.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: Entry.name, schema: EntrySchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(private readonly storage: StorageService) {}\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _renameWithIndex\n                            \n                            \n                                    Private\n                                    Async\n                                _validateParent\n                            \n                            \n                                    Async\n                                createEntry\n                            \n                            \n                                    Async\n                                createReadable\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, entries: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _renameWithIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _renameWithIndex(filename: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _validateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _validateParent(entry: Entry, parentId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReadable(id: string, uid?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model } from \"mongoose\";\nimport { Queue } from \"bull\";\nimport { Readable } from \"stream\";\n\nimport {\n  EntryAlreadyExists,\n  EntryNotDeletable,\n  EntryNotFound,\n  ParentDirectoryNotFound,\n  ParentIsChildrenOfItself,\n  ParentIsItself\n} from \"./files.errors\";\n\nimport { Entry } from \"./schemas/entry.schema\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    private readonly storage: StorageService,\n\n    @InjectModel(Entry.name)\n    private readonly entries: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async createEntry(data: {\n    deletable: Entry[\"deletable\"];\n    hidden: Entry[\"hidden\"];\n    id?: Entry[\"id\"];\n    isDirectory: Entry[\"isDirectory\"];\n    isFile: Entry[\"isFile\"];\n    name: Entry[\"name\"];\n    parent: Entry[\"parent\"];\n    public: Entry[\"public\"];\n    size: Entry[\"size\"];\n    uid: Entry[\"uid\"];\n  }): Promise {\n    const parent = data.parent\n      ? await this.entries\n          .findOne({ id: data.parent, uid: data.uid })\n          .then(entry => entry && entry.id)\n      : null;\n\n    if (!parent && data.parent) throw new ParentDirectoryNotFound();\n\n    const copies = await this.entries.countDocuments({ name: data.name, parent, uid: data.uid });\n    const entry = { ...data, parent };\n\n    if (copies > 0) {\n      if (!data.isFile) throw new EntryAlreadyExists(data.name);\n\n      entry.name = this._renameWithIndex(data.name, copies);\n    }\n\n    return new this.entries(entry).save();\n  }\n\n  async createReadable(id: string, uid?: string): Promise {\n    const file = uid\n      ? await this.entries.findOne({ id, isDirectory: false, isFile: true, uid })\n      : await this.entries.findOne({ id, isDirectory: false, isFile: true, public: true });\n\n    if (!file) throw new EntryNotFound();\n\n    return this.storage.read(file.id);\n  }\n\n  async deleteMany(query: FilterQuery): Promise {\n    // We have to use .remove on each individual document so that middlewares are executed\n    await this.entries\n      .find(query)\n      .cursor()\n      .eachAsync(async (entry: Entry) => {\n        if (entry.isFile) {\n          await this.filesQueue.add(\"delete\", { fileId: entry.id });\n        }\n\n        await entry.remove();\n      });\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const entry = await this.entries.findOne(query);\n\n    if (!entry) throw new EntryNotFound();\n    if (!entry.deletable) throw new EntryNotDeletable();\n\n    await entry\n      .getChildren({ isFile: true })\n      .eachAsync(child => this.filesQueue.add(\"delete\", { fileId: child.id }));\n\n    return entry.remove();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.entries.exists(query);\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.entries.find(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.entries.findOne(query);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      deletable: Entry[\"deletable\"];\n      hidden: Entry[\"hidden\"];\n      name: Entry[\"name\"];\n      parent: Entry[\"parent\"];\n      public: Entry[\"public\"];\n    }\n  ): Promise {\n    const entry = await this.entries.findOne(query);\n    if (!entry) throw new EntryNotFound();\n\n    const parent = data.parent\n      ? await this._validateParent(entry, data.parent).then(parent => parent.id)\n      : null;\n\n    entry.hidden = data.hidden;\n    entry.parent = parent;\n    entry.public = data.public;\n    entry.name = data.name;\n\n    return entry.save();\n  }\n\n  private _renameWithIndex(filename: string, index: number): string {\n    // If filename has no extension\n    if (!filename.includes(\".\")) return `${filename} (${index})`;\n\n    const parts = filename.split(\".\");\n\n    parts[parts.length - 2] += ` (${index})`;\n\n    return parts.join(\".\").trim();\n  }\n\n  private async _validateParent(entry: Entry, parentId: string): Promise {\n    const parent = await this.entries.findOne({ id: parentId, uid: entry.uid });\n\n    if (!parent) throw new ParentDirectoryNotFound();\n    if (parent.id === entry.id) throw new ParentIsItself();\n    if (parent.path.startsWith(`${entry.path}/`)) throw new ParentIsChildrenOfItself();\n\n    return parent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateApplicationKeyDto.html":{"url":"classes/GenerateApplicationKeyDto.html","title":"class - GenerateApplicationKeyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateApplicationKeyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/generate-application-key.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/generate-application-key.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateApplicationKeyDto {\n  key!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { SessionDto } from \"@/modules/sessions/dto/session.dto\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: Express.Session & SessionDto;\n  user: (User & { [key: string]: any }) | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        expires\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISessionData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISessionData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISessionData } from \"./session-data.interface\";\n\nexport interface ISession {\n  _id: string;\n  expires: Date;\n  session: ISessionData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISessionData.html":{"url":"interfaces/ISessionData.html","title":"interface - ISessionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISessionData extends Express.SessionData {\n  identifier: string;\n\n  ip: string | null;\n\n  lastUsed: Date;\n\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsufficientScopes.html":{"url":"classes/InsufficientScopes.html","title":"class - InsufficientScopes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsufficientScopes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAPIKey.html":{"url":"classes/InvalidAPIKey.html","title":"class - InvalidAPIKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAPIKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAvatarFileType.html":{"url":"classes/InvalidAvatarFileType.html","title":"class - InvalidAvatarFileType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAvatarFileType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnprocessableEntityException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationToken.html":{"url":"classes/InvalidEmailConfirmationToken.html","title":"class - InvalidEmailConfirmationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringPathSafeConstraint.html":{"url":"classes/IsStringPathSafeConstraint.html","title":"class - IsStringPathSafeConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringPathSafeConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-path-safe.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_SAFE_REGEX = /[\\\\/:*?\\\"<>|]/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringPathSafe\" })\nexport class IsStringPathSafeConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return `Value ($value) cannot contain / : * ? \\\\ \"  |`;\n  }\n\n  validate(value: string): boolean {\n    return !PATH_SAFE_REGEX.test(value);\n  }\n}\n\nexport const IsStringPathSafe = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringValidPathConstraint.html":{"url":"classes/IsStringValidPathConstraint.html","title":"class - IsStringValidPathConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringValidPathConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-valid-path.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_VALID_REGEX = /[^\\0]+/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringValidPath\" })\nexport class IsStringValidPathConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return \"Value ($value) is not a valid path!\";\n  }\n\n  validate(value: string): boolean {\n    return !PATH_VALID_REGEX.test(value);\n  }\n}\n\nexport const IsStringValidPath = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntriesDto.html":{"url":"classes/ListEntriesDto.html","title":"class - ListEntriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/list-entries.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsStringValidPath()@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/list-entries.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import escapeRegExp from \"lodash.escaperegexp\";\n\nimport { IsString } from \"class-validator\";\nimport { Transform } from \"class-transformer\";\n\nimport { IsStringValidPath } from \"@/validators/is-string-valid-path.validator\";\n\nexport class ListEntriesDto {\n  @IsString()\n  @IsStringValidPath()\n  @Transform((value: string) => escapeRegExp(value))\n  path!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    })\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(@Inject(NODEMAILER_MODULE_OPTIONS) private readonly options: MailerOptions) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @Process(\"send\")\n  async send(job: Job): Promise {\n    await this.transporter.sendMail(job.data);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAbsoluteLink\n                            \n                            \n                                    Async\n                                render\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                transpileMJML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAbsoluteLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAbsoluteLink(relativeLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relativeLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render(template: fs.PathLike, data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            fs.PathLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(options: SendMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                SendMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transpileMJML\n                        \n                        \n                    \n                \n            \n            \n                \ntranspileMJML(mjml: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mjml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import ejs from \"ejs\";\nimport fs from \"fs\";\nimport mjml2html from \"mjml\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\nexport class MailerService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  createAbsoluteLink(relativeLink: string): string {\n    const protocol = this.config.get(\"NODE_ENV\") === \"production\" ? \"https\" : \"http\";\n    const root = `${protocol}://${this.config.get(\"FRONTEND_DOMAIN\")}/`;\n\n    return root + relativeLink.substring(relativeLink.startsWith(\"/\") ? 1 : 0);\n  }\n\n  async render(template: fs.PathLike, data: Record): Promise {\n    const mjml = await fs.promises.readFile(template).then(buffer => buffer.toString());\n    return ejs.render(this.transpileMJML(mjml), data, { async: true });\n  }\n\n  async send(options: SendMailOptions): Promise {\n    options.html = options.mjml\n      ? await this.render(options.mjml.template, options.mjml.data || {})\n      : options.html;\n\n    await this.emailsQueue.add(\"send\", options);\n  }\n\n  transpileMJML(mjml: string): string {\n    const { errors, html } = mjml2html(mjml, { keepComments: false, validationLevel: \"strict\" });\n    if (errors && errors.length) throw new Error(errors.join(\"\\n\"));\n\n    return html;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentDirectoryNotFound.html":{"url":"classes/ParentDirectoryNotFound.html","title":"class - ParentDirectoryNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentDirectoryNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsChildrenOfItself.html":{"url":"classes/ParentIsChildrenOfItself.html","title":"class - ParentIsChildrenOfItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsChildrenOfItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsItself.html":{"url":"classes/ParentIsItself.html","title":"class - ParentIsItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Entry \"${name}\" already exists!`);\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\nexport class ParentDirectoryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent directory does not exist!\");\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:85\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_UNEXPECTED_RESULT = \"Action or score metadata not provided for v3 reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    if (result.action && result.score) {\n      if (!action || !score) throw new InternalServerErrorException(RECAPTCHA_UNEXPECTED_RESULT);\n\n      if (result.action !== action || result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendMailOptions.html":{"url":"interfaces/SendMailOptions.html","title":"interface - SendMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-mail-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mjml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mjml\n                                    \n                                \n                                \n                                    \n                                        mjml:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\n\nimport Mail from \"nodemailer/lib/mailer\";\n\nexport interface SendMailOptions extends Mail.Options {\n  mjml?: {\n    data?: Record;\n    template: fs.PathLike;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionDto.html":{"url":"classes/SessionDto.html","title":"class - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/dto/session.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookie\n                            \n                            \n                                identifier\n                            \n                            \n                                ip\n                            \n                            \n                                lastUsed\n                            \n                            \n                                ua\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookie\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Express.SessionCookieData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class SessionDto {\n  @Exclude()\n  cookie!: Express.SessionCookieData;\n\n  identifier!: string;\n\n  ip!: string | null;\n\n  lastUsed!: Date;\n\n  ua!: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SessionsController.html":{"url":"controllers/SessionsController.html","title":"controller - SessionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SessionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sessions\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                revoke\n                            \n                            \n                                revokeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string, currentSession: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \nrevoke(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/revoke')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAll\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAll(uid: string, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('all')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { plainToClass } from \"class-transformer\";\n\nimport { Controller, Delete, Get, Param, Session, UseGuards } from \"@nestjs/common\";\n\nimport { SessionsService } from \"./sessions.service\";\n\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { ISessionData } from \"./interfaces/session-data.interface\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"sessions\")\n@UseGuards(AuthGuard)\nexport class SessionsController {\n  constructor(private readonly sessions: SessionsService) {}\n\n  @Get()\n  async getSessions(\n    @CurrentUser(\"id\") uid: string,\n    @Session() currentSession: ISessionData\n  ): Promise {\n    const sessions = await this.sessions.find({ \"session.uid\": uid });\n\n    return sessions.map(({ session }) =>\n      plainToClass(SessionDto, {\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      })\n    );\n  }\n\n  @Delete(\"/:id/revoke\")\n  revoke(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.sessions.deleteOne({\n      \"session.identifier\": id,\n      \"session.uid\": uid\n    });\n  }\n\n  @Delete(\"all\")\n  revokeAll(@CurrentUser(\"id\") uid: string, @Session() session: ISessionData): Promise {\n    return this.sessions.delete({\n      \"session.identifier\": { $ne: session.identifier },\n      \"session.uid\": uid\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionsModule.html":{"url":"modules/SessionsModule.html","title":"module - SessionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nSessionsService \n\nSessionsService \n\n\n\nSessionsModule\n\nSessionsModule\n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sessions/sessions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SessionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { SessionsController } from \"./sessions.controller\";\nimport { SessionsService } from \"./sessions.service\";\n\n@Module({\n  exports: [SessionsService],\n  controllers: [SessionsController],\n  providers: [SessionsService]\n})\nexport class SessionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection, FilterQuery } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"./interfaces/session.interface\";\n\n@Injectable()\nexport class SessionsService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  async delete(query: FilterQuery): Promise {\n    await this.sessions.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    await this.sessions.deleteOne(query);\n  }\n\n  find(query: FilterQuery): Promise {\n    return this.sessions.find(query).toArray();\n  }\n\n  findOne(query: FilterQuery): Promise {\n    return this.sessions.findOne(query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyApplications.html":{"url":"classes/TooManyApplications.html","title":"class - TooManyApplications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyApplications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:31\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application \"${name}\" already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File \"${filename}\" is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEntryDto.html":{"url":"classes/UpdateEntryDto.html","title":"class - UpdateEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/update-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Entry name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Entry name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class UpdateEntryDto {\n  @IsNotEmpty({ message: \"Entry name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Entry name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @IsOptional()\n  @IsString()\n  parent!: string | null;\n\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                newDisplayName\n                            \n                            \n                                    Optional\n                                newEmail\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsOptional()@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsOptional()@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class UpdateUserDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName?: string;\n\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  newEmail?: string;\n\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword?: string;\n\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  this.activated = false;\n  this.avatar = null;\n  this.deleted = true;\n  this.email = null;\n  this.password = null;\n\n  return this.save({ validateBeforeSave: false });\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                timesResent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timesResent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  timesResent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameTaken.html":{"url":"classes/UsernameTaken.html","title":"class - UsernameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:32\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User \"${query}\" does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                deleteOne\n                            \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(undefined: DeleteUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')@UseScopes(ApplicationScopes.USERS_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(me: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/avatar')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: UpdateUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport { Body, Controller, Get, Param, Patch, Post, Req, UseGuards } from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { InvalidAvatarFileType, UserNotFound } from \"./users.errors\";\nimport { UsersService } from \"./users.service\";\n\nimport { DeleteUserDto } from \"./dto/delete-user.dto\";\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly storage: StorageService,\n    private readonly users: UsersService\n  ) {}\n\n  @Get(\"@me\")\n  @UseScopes(ApplicationScopes.USERS_READ)\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Patch(\"@me\")\n  updateOne(@Body() dto: UpdateUserDto, @CurrentUser() me: User): Promise {\n    return this.users.updateOne(me, dto).then(user => user.toDto());\n  }\n\n  @Post(\"@me/avatar\")\n  async updateAvatar(@CurrentUser() me: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new InvalidAvatarFileType(), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.createEntry({\n      deletable: false,\n      hidden: true,\n      id: avatar.id,\n      isDirectory: false,\n      isFile: true,\n      name: avatar.filename,\n      parent: null,\n      public: true,\n      size: avatar.size,\n      uid: me.id\n    });\n\n    return this.users.updateAvatar(me, avatar.id).then(user => user.toDto());\n  }\n\n  @Post(\"@me/delete\")\n  deleteOne(@Body() { password }: DeleteUserDto, @CurrentUser() me: User): Promise {\n    return this.users.deleteOne(me, password);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.users.confirmEmail(token);\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new UserNotFound(username);\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n\n    FilesModule,\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n\n    SessionsModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, files: FilesService, mailer: MailerService, sessions: SessionsService, emailConfirmations: Model, users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(user: User, newAvatarId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(user: User, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport {\n  DisplayNameTaken,\n  EmailTaken,\n  InvalidEmailConfirmationToken,\n  UsernameTaken\n} from \"./users.errors\";\n\nimport { emailChanged } from \"./emails/email-changed.email\";\nimport { emailConfirmation } from \"./emails/email-confirmation.email\";\nimport { passwordChangedEmail } from \"./emails/password-changed.email\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { User } from \"./schemas/user.schema\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(User.name)\n    private readonly users: Model\n  ) {}\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.emailConfirmations.findOne({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationToken();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationToken();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationToken();\n    }\n\n    const oldUser = user.toObject();\n\n    user.email = confirmation.newEmail;\n\n    await user.save();\n    await confirmation.deleteOne();\n\n    await this.mailer.send(\n      emailChanged(oldUser.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailTaken();\n    if (await this.users.exists({ username })) throw new UsernameTaken();\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async deleteOne(user: User, password: string): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.applications.delete({ uid: user.id }),\n      this.files.deleteMany({ uid: user.id }),\n      this.sessions.delete({ \"session.uid\": user.id })\n    ]);\n\n    return user.delete();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.users.exists(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  async updateOne(\n    user: User,\n    data: {\n      newDisplayName?: string;\n      newEmail?: string;\n      newPassword?: string;\n      password: string;\n    }\n  ): Promise {\n    const { newDisplayName, newEmail, newPassword, password } = data;\n\n    if (!(await user.comparePassword(password))) {\n      throw new IncorrectPassword();\n    }\n\n    if (newDisplayName && newDisplayName !== user.displayName) {\n      if (await this.users.exists({ displayName: newDisplayName })) {\n        throw new DisplayNameTaken();\n      }\n\n      user.displayName = newDisplayName;\n    }\n\n    if (newEmail && newEmail !== user.email) {\n      if (await this.users.exists({ email: newEmail })) {\n        throw new EmailTaken();\n      }\n\n      const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n      await this.mailer.send(\n        emailConfirmation(newEmail, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(`/confirm-email/${confirmation.token}`)\n        })\n      );\n    }\n\n    if (newPassword) {\n      user.password = newPassword;\n\n      await this.mailer.send(\n        passwordChangedEmail(user.email, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n        })\n      );\n    }\n\n    await user.save();\n\n    return user;\n  }\n\n  async updateAvatar(user: User, newAvatarId: string): Promise {\n    if (user.avatar) {\n      await this.files.deleteOne({ id: user.avatar, uid: user.id }).catch(() => undefined);\n    }\n\n    user.avatar = newAvatarId;\n\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/optional-auth.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/scopes.decorator.ts\n            \n            variable\n            UseScopes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_OPTIONAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_SCOPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_UNEXPECTED_RESULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InsufficientScopes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InvalidAPIKey\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            TooManyApplications\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/generate-application-key.dto.ts\n            \n            class\n            GenerateApplicationKeyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            HMAC_SHA256\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-post-reset.email.ts\n            \n            variable\n            passwordResetted\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-reset.email.ts\n            \n            variable\n            passwordReset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/successful-login.email.ts\n            \n            variable\n            successfulLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/user-activation.email.ts\n            \n            variable\n            userActivation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/create-directory-entry.dto.ts\n            \n            class\n            CreateDirectoryEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/dto/entry.dto.ts\n            \n            class\n            EntryDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/files/dto/list-entries.dto.ts\n            \n            class\n            ListEntriesDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/update-entry.dto.ts\n            \n            class\n            UpdateEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotDeletable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentDirectoryNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsChildrenOfItself\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsItself\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            class\n            Entry\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            variable\n            EntrySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-mail-options.interface.ts\n            \n            interface\n            SendMailOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/dto/session.dto.ts\n            \n            class\n            SessionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session-data.interface.ts\n            \n            interface\n            ISessionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.controller.ts\n            \n            controller\n            SessionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/delete-user.dto.ts\n            \n            class\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-changed.email.ts\n            \n            variable\n            emailChanged\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-confirmation.email.ts\n            \n            variable\n            emailConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/password-changed.email.ts\n            \n            variable\n            passwordChangedEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidAvatarFileType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidEmailConfirmationToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            class\n            IsStringPathSafeConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            IsStringPathSafe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            PATH_SAFE_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            class\n            IsStringValidPathConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            IsStringValidPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            PATH_VALID_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.1.2\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.16.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.9.20\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.2\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.10\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            sharp : ^0.25.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationScopes   (src/.../application-scopes.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/enums/application-scopes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationScopes\n                    \n                \n                        \n                            \n                                 FILES_READ\n                            \n                        \n                        \n                            \n                                Value : files:read\n                            \n                        \n                        \n                            \n                                 FILES_WRITE\n                            \n                        \n                        \n                            \n                                Value : files:write\n                            \n                        \n                        \n                            \n                                 FOLDERS_READ\n                            \n                        \n                        \n                            \n                                Value : folders:read\n                            \n                        \n                        \n                            \n                                 FOLDERS_WRITE\n                            \n                        \n                        \n                            \n                                Value : folders:write\n                            \n                        \n                        \n                            \n                                 USERS_READ\n                            \n                        \n                        \n                            \n                                Value : users:read\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nSessionsService \n\nSessionsService \n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    58 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            AUTH_GUARD_OPTIONAL   (src/.../auth.guard.ts)\n                        \n                        \n                            AUTH_GUARD_SCOPES   (src/.../auth.guard.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            emailChanged   (src/.../email-changed.email.ts)\n                        \n                        \n                            emailConfirmation   (src/.../email-confirmation.email.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            EntrySchema   (src/.../entry.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            HMAC_SHA256   (src/.../application.schema.ts)\n                        \n                        \n                            IsStringPathSafe   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            IsStringValidPath   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../optional-auth.ts)\n                        \n                        \n                            passwordChangedEmail   (src/.../password-changed.email.ts)\n                        \n                        \n                            passwordReset   (src/.../password-reset.email.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            passwordResetted   (src/.../password-post-reset.email.ts)\n                        \n                        \n                            PATH_SAFE_REGEX   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            PATH_VALID_REGEX   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_UNEXPECTED_RESULT   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            successfulLogin   (src/.../successful-login.email.ts)\n                        \n                        \n                            userActivation   (src/.../user-activation.email.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            UseScopes   (src/.../scopes.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HMAC_SHA256\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/guards/auth.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_OPTIONAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_OPTIONAL\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_SCOPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_SCOPES\"\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((field: string, ctx: ExecutionContext) => {\n  const user = ctx.switchToHttp().getRequest().user;\n  return field ? user && user[field] : user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-changed.mjml\"\n  },\n  subject: \"Bytebin - Email Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your email has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-confirmation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-confirmation.mjml\"\n  },\n  subject: \"Bytebin - Please confirm your email address\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"To confirm your email address, please visit the link below.\",\n    \"This email confirmation link is only valid for the next 72 hours.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/entry.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EntrySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Entry)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-path-safe.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringPathSafe\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_SAFE_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\\\/:*?\\\"<>|]/g\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-valid-path.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringValidPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_VALID_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[^\\0]+/g\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/optional-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_OPTIONAL, optional)\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/password-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordChangedEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-changed.mjml\"\n  },\n  subject: \"Bytebin - Password Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your password has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-reset-request.mjml\"\n  },\n  subject: \"Bytebin - Password reset requested\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To reset your password, please visit the link below.\",\n    \"This password reset link is only valid for the next 1 hour.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-post-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordResetted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-post-reset.mjml\"\n  },\n  subject: \"Bytebin - Your password has been reset\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"Your password has been reset.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_UNEXPECTED_RESULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Action or score metadata not provided for v3 reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/successful-login.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            successfulLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: {\n    displayName: string;\n    link: string;\n    session: ISessionData;\n  }\n): SendMailOptions => {\n  const time = new Date().toUTCString();\n\n  return {\n    mjml: {\n      data: {\n        ...data,\n        time\n      },\n      template: \"./templates/successful-login.mjml\"\n    },\n    subject: \"Bytebin - Successful Login\",\n    text: [\n      `Hey ${data.displayName},\\n`,\n      `This email was sent because a new login has occurred on your account at ${time}.\\n`,\n      `IP Address: ${data.session.ip || \"Unknown\"}`,\n      `Device: ${data.session.ua.os.name} ${data.session.ua.os.version}`,\n      `Browser: ${data.session.ua.browser.name} ${data.session.ua.browser.version}\\n`,\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      data.link\n    ].join(\"\\n\"),\n    to\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/user-activation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userActivation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/user-activation.mjml\"\n  },\n  subject: \"Bytebin - Activate your account\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To finish up the registration process, please activate your account by visiting the link below\",\n    \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/scopes.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UseScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...scopes: ApplicationScopes[]): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_SCOPES, scopes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
