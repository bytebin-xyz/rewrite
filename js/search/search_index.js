var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,2.08,1,3.327]],["body/controllers/AdminController.html",[0,2.995,1,5.772,2,2.995,3,0.092,4,0.079,5,0.067,6,5.644,7,4.049,8,5.129,9,0.211,10,0.009,11,4.257,12,0.903,13,5.129,14,5.644,15,4.791,16,6.385,17,4.131,18,4.499,19,6.385,20,6.385,21,0.105,22,0.289,23,3.196,24,2.671,25,2.391,26,4.049,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.327,30,1.365]],["body/injectables/AdminGuard.html",[3,0.085,4,0.074,5,0.062,8,3.949,9,0.196,10,0.009,12,0.838,15,5.513,21,0.097,22,0.268,27,0.006,28,0.007,29,0.006,30,2.262,31,2.778,32,5.235,33,1.541,34,4.839,35,0.495,36,2.11,37,2.192,38,5.933,39,5.933,40,6.267,41,0.417,42,5.923,43,1.625,44,0.838,45,0.402,46,1.358,47,4.782,48,1.701,49,1.927,50,2.868,51,3.756,52,4.444,53,5.923,54,1.958,55,5.923,56,1.867,57,3.303,58,4.782,59,5.235,60,2.778,61,1.781,62,4.782,63,1.215,64,2.162]],["title/injectables/AdminMiddleware.html",[30,1.365,65,3.327]],["body/injectables/AdminMiddleware.html",[3,0.076,4,0.066,5,0.055,8,3.521,9,0.197,10,0.009,12,0.747,21,0.087,22,0.239,27,0.005,28,0.006,29,0.005,30,2.103,31,2.477,33,1.433,35,0.441,36,1.962,37,2.276,41,0.481,43,1.875,44,0.966,45,0.464,46,1.567,48,1.962,49,1.986,50,2.557,51,5.389,52,3.962,54,1.746,57,3.81,59,4.668,60,2.477,61,1.588,62,4.264,65,5.126,66,4.668,67,6.009,68,4.466,69,6.695,70,6.467,71,5.665,72,3.891,73,7.511,74,5.281,75,6.04,76,5.281,77,5.281,78,3.065,79,5.281,80,5.281,81,2.643,82,3.349]],["title/modules/AdminModule.html",[83,1.303,84,3.125]],["body/modules/AdminModule.html",[1,5.715,2,3.229,3,0.077,4,0.067,5,0.056,9,0.205,10,0.009,12,0.755,13,6.042,14,4.722,21,0.088,22,0.242,27,0.005,28,0.006,29,0.005,36,1.534,41,0.376,43,1.466,44,0.755,45,0.363,46,1.225,48,1.534,65,4.008,83,2.238,84,6.11,85,2.587,86,2.674,87,2.869,88,2.869,89,2.869,90,4.09,91,4.09,92,4.722,93,4.722,94,4.722,95,3.696,96,2.166,97,2.869,98,5.343,99,5.343,100,6.885,101,8.045,102,5.343,103,6.885,104,3.696,105,4.722,106,6.885,107,3.236,108,4.314,109,6.885,110,5.343,111,5.343,112,5.343,113,2.359,114,5.343,115,5.343,116,4.722,117,5.343,118,2.227,119,5.343]],["title/injectables/AdminService.html",[13,2.957,30,1.365]],["body/injectables/AdminService.html",[3,0.094,4,0.081,5,0.068,9,0.191,10,0.009,12,0.918,13,5.181,17,4.629,18,4.576,21,0.107,22,0.294,23,3.25,24,2.254,26,4.928,27,0.006,28,0.007,29,0.006,30,2.393,31,3.046,41,0.457,43,1.782,44,0.918,45,0.441,46,1.489,120,5.74,121,1.302,122,5.74,123,6.494]],["title/modules/AppModule.html",[83,1.303,124,3.327]],["body/modules/AppModule.html",[3,0.044,4,0.038,5,0.032,9,0.21,10,0.009,12,0.435,21,0.05,22,0.139,27,0.003,28,0.004,29,0.003,56,2.134,61,0.925,63,0.631,64,2.059,83,1.658,84,5.022,85,1.489,86,1.539,87,1.651,88,1.651,89,1.651,90,2.506,91,3.029,95,2.506,96,1.247,97,1.651,124,6.706,125,2.719,126,2.719,127,2.719,128,5.784,129,4.751,130,5.022,131,4.519,132,5.022,133,5.705,134,4.519,135,5.784,136,5.086,137,2.483,138,2.709,139,3.076,140,2.719,141,4.668,142,2.308,143,4.668,144,4.13,145,1.651,146,4.126,147,2.167,148,1.358,149,4.668,150,3.076,151,3.502,152,3.502,153,4.668,154,2.336,155,2.308,156,3.076,157,3.076,158,2.719,159,3.076,160,2.308,161,3.076,162,2.483,163,3.076,164,3.076,165,2.483,166,3.076,167,2.483,168,1.539,169,2.483,170,2.719,171,3.076,172,3.076,173,3.076,174,3.076,175,3.076,176,3.076,177,7.967,178,3.076,179,3.076,180,3.076,181,7.814,182,5.641,183,3.076,184,3.769,185,3.076,186,4.668,187,3.076,188,3.076,189,3.076,190,4.668,191,3.076,192,4.668,193,3.076,194,3.076,195,6.298,196,6.298,197,3.076,198,3.076,199,3.076,200,3.076,201,3.076,202,2.483,203,3.076,204,4.554,205,3.076,206,3.076,207,3.076,208,3.076,209,3.076,210,3.076,211,3.076,212,3.076,213,3.076,214,3.076,215,3.076,216,3.076,217,4.668,218,3.076,219,3.076,220,3.076,221,4.668,222,3.076,223,3.076,224,3.076,225,3.076,226,3.076,227,3.274,228,3.577,229,3.146,230,2.308,231,6.298,232,3.076,233,2.299,234,3.076,235,3.076,236,3.502,237,3.076,238,3.076,239,3.076,240,3.076,241,3.076,242,3.076,243,3.076,244,5.641,245,3.076,246,3.076,247,3.076,248,3.076,249,1.399,250,3.076,251,3.076,252,3.076,253,3.076,254,3.076,255,3.076,256,1.358,257,3.076,258,3.076,259,3.076,260,2.05,261,3.076,262,3.076,263,3.076,264,2.483,265,2.483,266,2.483,267,2.167]],["title/classes/Application.html",[22,0.201,268,2.473]],["body/classes/Application.html",[3,0.041,4,0.036,5,0.03,9,0.188,10,0.009,21,0.073,22,0.244,27,0.003,28,0.004,29,0.003,33,0.926,35,0.369,37,0.785,41,0.569,44,0.763,45,0.576,49,1.158,54,1.46,56,1.911,63,1.42,64,3.172,72,2.071,82,1.814,113,1.949,148,1.263,168,1.432,230,2.146,249,2.009,256,1.949,268,4.266,269,0.456,270,2.31,271,3.007,272,4.618,273,0.791,274,5.393,275,3.007,276,4.354,277,5.393,278,2.506,279,3.61,280,3.595,281,3.519,282,4.354,283,2.453,284,3.13,285,4.578,286,2.861,287,3.187,288,2.861,289,2.861,290,2.861,291,0.808,292,2.235,293,2.944,294,3.519,295,6.554,296,3.519,297,4.813,298,3.654,299,2.861,300,2.528,301,3.903,302,2.861,303,2.861,304,2.31,305,4.767,306,3.845,307,2.944,308,4.046,309,2.861,310,3.903,311,2.861,312,2.861,313,2.861,314,4.043,315,2.861,316,2.861,317,4.767,318,1.301,319,2.146,320,1.595,321,2.016,322,1.385,323,4.813,324,2.462,325,1.907,326,4.767,327,2.528,328,3.13,329,2.016,330,1.814,331,2.31,332,2.861,333,1.595,334,1.733,335,2.31,336,1.595,337,2.528,338,6.309,339,2.528,340,2.528,341,2.528,342,1.907,343,1.907,344,2.016,345,1.907,346,1.66,347,1.907,348,2.674,349,1.533,350,2.528,351,2.861,352,2.861,353,2.381,354,2.146,355,2.528,356,2.861,357,2.146,358,1.907,359,2.861,360,2.861,361,2.016,362,2.016,363,2.861,364,4.416,365,2.861,366,2.861,367,2.861,368,2.861,369,1.814,370,2.861,371,2.861,372,2.861,373,2.861,374,2.861,375,2.861,376,4.416,377,4.416,378,2.453,379,2.861,380,2.146,381,2.861,382,2.861,383,2.146,384,2.861,385,2.528,386,2.861,387,2.861,388,2.861,389,2.31,390,2.861,391,2.861,392,2.861,393,2.861,394,2.861,395,2.861,396,2.861,397,2.31,398,2.31,399,2.31]],["title/classes/ApplicationAlreadyExists.html",[22,0.201,400,2.686]],["body/classes/ApplicationAlreadyExists.html",[3,0.08,4,0.069,5,0.058,9,0.136,10,0.009,12,0.783,21,0.138,22,0.381,27,0.005,28,0.007,29,0.005,33,1.804,41,0.39,43,1.519,44,1.095,45,0.376,46,1.269,50,3.411,121,1.688,269,0.883,279,2.681,281,2.973,291,0.732,369,3.511,400,4.266,401,3.691,402,3.42,403,3.782,404,5.537,405,3.322,406,3.109,407,3.901,408,2.444,409,2.681,410,2.518,411,3.353,412,4.963,413,2.374,414,3.353,415,3.691,416,3.691,417,3.511,418,3.353,419,2.444,420,3.353,421,2.973,422,2.973,423,2.868,424,2.973,425,3.087,426,3.901]],["title/classes/ApplicationDto.html",[22,0.201,272,3.125]],["body/classes/ApplicationDto.html",[3,0.079,4,0.068,5,0.057,9,0.172,10,0.009,21,0.09,22,0.317,27,0.005,28,0.007,29,0.005,35,0.457,41,0.614,44,1.089,45,0.592,269,0.872,272,4.925,273,1.252,275,4.295,278,2.674,279,3.73,280,5.135,281,4.136,284,4.47,287,3.787,291,0.811,292,2.256,300,2.962,320,3.05,328,4.47,329,3.855,330,3.469,427,4.835,428,5.47,429,5.47,430,6.292,431,5.47,432,5.47,433,5.47,434,5.47,435,5.47]],["title/classes/ApplicationNotFound.html",[22,0.201,411,2.686]],["body/classes/ApplicationNotFound.html",[3,0.081,4,0.07,5,0.059,9,0.139,10,0.009,12,0.798,21,0.139,22,0.384,27,0.005,28,0.007,29,0.005,33,1.814,41,0.398,44,0.798,50,3.453,121,1.734,269,0.9,279,2.734,281,3.031,291,0.534,369,3.58,400,3.419,401,3.764,402,3.148,403,3.031,405,3.352,406,3.451,407,3.978,408,2.492,409,2.734,410,2.568,411,4.319,412,5.025,413,2.421,414,3.419,415,3.764,416,3.764,417,3.58,418,3.419,419,2.492,420,3.419,421,3.031,422,3.031,423,2.924,424,3.031,425,3.148,426,3.978,436,5.646]],["title/controllers/ApplicationsController.html",[0,2.08,437,3.327]],["body/controllers/ApplicationsController.html",[0,1.731,2,1.731,3,0.053,4,0.046,5,0.039,7,2.34,9,0.201,10,0.009,11,2.46,12,0.522,21,0.061,22,0.167,23,1.847,24,1.281,27,0.003,28,0.005,29,0.003,34,2.235,35,0.308,36,1.534,37,1.723,41,0.515,43,2.004,44,1.033,45,0.496,46,1.675,48,2.098,49,2.183,54,1.22,56,1.163,63,1.498,151,2.768,152,2.768,268,2.058,272,2.6,276,5.071,278,2.959,279,3.041,283,4.018,291,0.857,292,2.358,327,3.262,425,2.979,437,4.008,438,3.262,439,4.187,440,3.388,441,4.187,442,3.69,443,3.262,444,3.69,445,3.69,446,5.894,447,3.69,448,6.085,449,3.69,450,5.899,451,3.69,452,3.69,453,3.69,454,3.69,455,3.262,456,3.69,457,3.69,458,2.979,459,3.69,460,3.69,461,5.715,462,1.847,463,4.425,464,1.981,465,2.6,466,2.979,467,2.235,468,3.262,469,3.236,470,3.262,471,4.722,472,3.69,473,2.768,474,3.69,475,2.46,476,2.768,477,2.768,478,2.768,479,3.69,480,2.768,481,3.69,482,3.69,483,2.235,484,3.69,485,3.69,486,6.885,487,3.262,488,4.722,489,5.071,490,3.69,491,5.343,492,3.69,493,5.071,494,3.69,495,3.262,496,3.262,497,3.69,498,3.262,499,3.69,500,3.69]],["title/modules/ApplicationsModule.html",[83,1.303,128,3.125]],["body/modules/ApplicationsModule.html",[2,3.382,3,0.083,4,0.072,5,0.06,9,0.209,10,0.009,12,0.812,21,0.094,22,0.26,27,0.005,28,0.007,29,0.005,44,0.812,83,2.315,85,2.782,86,2.875,87,3.085,88,3.085,89,3.085,90,4.23,91,4.23,95,3.871,96,2.329,97,3.085,128,6.211,138,3.334,147,4.048,148,2.536,268,3.203,324,3.203,354,5.409,437,5.911,469,5.544,470,5.078,501,5.078,502,5.078,503,5.078,504,5.745,505,5.745,506,5.078,507,4.31,508,5.078]],["title/injectables/ApplicationsService.html",[30,1.365,469,2.686]],["body/injectables/ApplicationsService.html",[3,0.049,4,0.042,5,0.036,9,0.188,10,0.009,12,0.482,21,0.056,22,0.154,24,1.751,25,1.888,27,0.003,28,0.005,29,0.003,30,1.552,31,1.599,35,0.285,36,1.448,37,2.441,41,0.554,43,2.159,44,1.187,45,0.57,46,1.804,48,2.201,49,2.243,54,2.449,56,2.09,60,3.319,61,2.305,63,1.519,121,1.011,144,3.697,145,1.831,148,1.505,229,2.812,268,4.274,276,4.071,280,2.273,281,2.708,283,3.016,291,0.322,310,3.014,321,2.403,322,1.651,328,3.483,330,2.162,336,3.946,400,2.065,411,4.016,420,3.054,425,3.346,439,3.362,440,3.198,441,4,464,2.708,469,3.054,483,3.054,506,3.014,508,3.014,509,3.014,510,3.553,511,2.753,512,4.204,513,3.41,514,5.043,515,4.016,516,3.41,517,5.043,518,5.595,519,3.41,520,3.595,521,4.457,522,3.41,523,4.071,524,3.41,525,4.071,526,3.41,527,3.783,528,3.41,529,3.014,530,3.41,531,2.558,532,3.41,533,3.014,534,3.41,535,5.043,536,3.41,537,3.41,538,3.014,539,3.41,540,3.41,541,3.41,542,6.63,543,3.41,544,3.41,545,3.41,546,3.41,547,3.014,548,3.41,549,3.41,550,3.41,551,3.41,552,3.41]],["title/interfaces/AsyncStorageOptions.html",[553,1.04,554,3.327]],["body/interfaces/AsyncStorageOptions.html",[3,0.082,4,0.071,5,0.06,9,0.193,10,0.009,21,0.094,27,0.005,28,0.007,29,0.005,33,1.507,35,0.477,37,1.568,45,0.618,46,2.042,49,1.499,83,2.31,154,3.597,227,4.787,228,5.23,267,5.812,273,1.287,285,4.557,553,1.34,554,5.392,555,2.256,556,4.028,557,3.625,558,6.352,559,7.29,560,5.052,561,5.052,562,4.171,563,3.317,564,4.028,565,2.256,566,5.052,567,5.052]],["title/controllers/AuthController.html",[0,2.08,568,3.327]],["body/controllers/AuthController.html",[0,1.409,2,1.409,3,0.043,4,0.037,5,0.031,7,1.904,9,0.213,10,0.009,11,2.002,12,0.425,21,0.049,22,0.136,23,1.503,24,1.591,25,1.125,27,0.003,28,0.004,29,0.003,35,0.251,36,1.316,37,1.525,41,0.497,43,1.937,44,0.999,45,0.479,46,1.619,48,2.028,49,2.076,54,2.057,56,1.445,57,3.736,61,1.672,63,1.374,71,2.002,78,1.743,81,1.503,104,2.461,151,2.253,152,2.253,230,3.439,233,1.096,249,2.528,287,1.326,291,0.667,292,2.279,333,1.675,334,1.819,378,2.829,409,1.454,410,2.085,413,1.288,461,5.51,462,1.503,463,3.23,464,1.612,465,2.116,467,1.819,468,2.654,488,2.654,568,3.439,569,2.654,570,4.051,571,4.051,572,3.226,573,4.584,574,3.439,575,4.051,576,2.654,577,3.003,578,4.584,579,3.003,580,3.003,581,4.667,582,3.003,583,3.328,584,3.003,585,3.003,586,4.667,587,5.559,588,3.419,589,4.587,590,3.945,591,3.003,592,3.003,593,3.003,594,4.913,595,3.003,596,3.003,597,3.003,598,4.667,599,3.003,600,3.003,601,3.003,602,4.667,603,3.003,604,3.003,605,2.654,606,2.253,607,1.819,608,3.003,609,3.439,610,2.654,611,2.654,612,3.056,613,2.654,614,2.425,615,3.003,616,3.003,617,3.003,618,4.584,619,3.003,620,3.003,621,3.003,622,2.425,623,4.584,624,3.003,625,2.425,626,3.003,627,2.253,628,3.003,629,3.003,630,2.425,631,2.776,632,2.425,633,2.002,634,3.003,635,3.003,636,3.003,637,3.003,638,2.253,639,3.003,640,2.116,641,3.003,642,3.003,643,3.003,644,3.003,645,3.003,646,2.384,647,2.654,648,3.003,649,3.003,650,2.002,651,3.003,652,3.003,653,3.003,654,3.003,655,4.584,656,4.584,657,3.226,658,3.003,659,3.003,660,3.003,661,3.003,662,2.654,663,2.253,664,3.003,665,3.003,666,2.253,667,3.003,668,2.116,669,3.003,670,2.253,671,3.003,672,2.253,673,3.003,674,2.253,675,2.425,676,2.425,677,3.003,678,1.904,679,2.425,680,1.366,681,2.425,682,2.654,683,3.003,684,3.003,685,2.425,686,2.425,687,3.003,688,2.425,689,3.003,690,3.003,691,3.003,692,3.003,693,3.003,694,3.003,695,3.003,696,2.116,697,3.003]],["title/guards/AuthGuard.html",[34,2.686,383,3.327]],["body/guards/AuthGuard.html",[3,0.045,4,0.039,5,0.033,9,0.2,10,0.009,12,0.444,17,3.419,18,2.215,21,0.094,22,0.142,24,2.21,25,3.124,26,3.625,27,0.003,28,0.004,29,0.003,30,1.461,34,2.874,35,0.262,36,1.363,37,2.157,38,5.141,39,3.831,40,5.598,41,0.481,43,1.972,44,0.967,45,0.488,46,1.711,47,5.803,48,1.829,49,1.244,51,4.731,52,2.358,54,2.376,56,2.525,57,3.187,58,2.538,60,3.687,61,2.409,63,1.402,64,2.086,81,2.375,113,1.388,121,0.952,142,2.358,144,3.551,145,1.688,229,3.187,233,2.623,249,2.158,268,2.646,278,2.373,279,3.083,280,2.095,281,4.006,287,2.095,291,0.602,300,1.147,328,3.696,329,2.215,330,1.993,336,1.753,369,1.993,378,2.158,414,2.874,418,4.14,425,2.646,469,3.857,588,1.522,589,1.904,606,2.358,607,1.904,666,2.358,698,2.538,699,2.538,700,4.194,701,4.745,702,4.745,703,2.778,704,6.595,705,3.143,706,4.194,707,3.143,708,3.625,709,4.745,710,3.143,711,2.538,712,4.745,713,3.143,714,3.143,715,3.344,716,3.143,717,2.646,718,2.754,719,2.778,720,2.778,721,2.538,722,3.143,723,3.831,724,3.831,725,3.143,726,3.143,727,1.904,728,4.745,729,3.143,730,3.143,731,1.993,732,3.143,733,3.143,734,3.143,735,3.143,736,3.143,737,4.194,738,3.143,739,3.143,740,3.143,741,3.143,742,3.143,743,3.344,744,3.143,745,3.143,746,4.194,747,5.052,748,2.538,749,4.194,750,2.538,751,2.778,752,2.778,753,2.778,754,2.778]],["title/injectables/AuthMiddleware.html",[30,1.365,67,3.327]],["body/injectables/AuthMiddleware.html",[3,0.073,4,0.063,5,0.053,9,0.201,10,0.009,12,0.711,17,4.22,18,3.542,21,0.083,22,0.228,23,2.515,24,1.745,26,4.195,27,0.005,28,0.006,29,0.005,30,2.037,31,2.358,35,0.42,36,1.9,37,2.029,41,0.466,43,1.815,44,0.936,45,0.449,46,1.517,48,1.443,49,1.735,50,2.434,51,4.983,52,3.771,54,1.662,56,1.584,57,2.803,60,3.469,61,2.363,62,4.058,67,4.964,68,3.689,69,5.848,71,5.239,72,3.686,73,6.946,75,6.537,78,2.917,113,2.219,121,1.008,122,4.443,233,2.699,278,1.745,287,2.219,300,1.834,336,2.803,405,2.155,410,2.286,588,2.434,589,3.044,606,3.771,607,3.044,666,3.771,715,3.542,743,3.542,746,4.443,747,4.443,749,5.848,750,4.058,751,4.443,752,4.443,755,4.443,756,5.026,757,5.026,758,6.616,759,5.026,760,3.187,761,5.026,762,3.044,763,3.044]],["title/modules/AuthModule.html",[83,1.303,129,2.957]],["body/modules/AuthModule.html",[2,3.205,3,0.076,4,0.066,5,0.055,9,0.213,10,0.009,12,0.747,21,0.087,22,0.239,27,0.005,28,0.006,29,0.005,44,0.966,83,2.226,85,2.557,86,2.643,87,2.836,88,2.836,89,2.836,90,4.067,91,4.067,95,3.669,96,2.142,97,2.836,129,5.905,134,5.389,138,3.966,147,3.721,148,2.331,165,4.264,324,3.81,507,3.962,568,5.683,612,6.032,613,4.668,764,4.668,765,5.281,766,4.668,767,4.668,768,5.281,769,6.833,770,5.281,771,3.521,772,5.126,773,4.668,774,4.668,775,3.521,776,5.126,777,4.668,778,4.668,779,5.281,780,5.281]],["title/injectables/AuthService.html",[30,1.365,612,2.957]],["body/injectables/AuthService.html",[3,0.043,4,0.037,5,0.031,9,0.203,10,0.009,12,0.424,17,3.338,18,2.113,21,0.049,22,0.136,24,2.324,25,2.507,26,3.522,27,0.003,28,0.004,29,0.003,30,1.41,31,1.407,35,0.25,36,1.315,37,2.312,41,0.497,43,1.936,44,0.998,45,0.479,46,1.618,48,1.923,49,2.075,54,2.847,56,2.445,60,3.311,61,2.277,63,1.139,64,1.671,96,1.216,121,0.918,148,1.324,233,2.937,256,1.324,278,1.59,283,2.083,291,0.845,300,1.095,322,1.452,346,2.658,378,3.21,467,1.816,512,4.655,531,2.25,570,4.047,571,4.047,572,2.658,574,3.435,575,4.047,576,4.047,583,3.246,612,3.053,631,3.765,632,2.421,640,3.227,646,2.666,657,4.261,674,2.25,675,4.485,676,4.485,678,3.522,679,4.485,680,2.526,681,2.421,696,3.227,717,2.553,743,4.38,750,3.697,771,4.144,773,2.651,774,2.651,775,3.053,777,2.651,778,2.651,781,2.651,782,2.999,783,4.167,784,3.765,785,5.555,786,5.555,787,2.999,788,2.999,789,4.579,790,2.999,791,4.579,792,2.999,793,4.579,794,2.999,795,4.579,796,2.999,797,2.658,798,3.224,799,3.224,800,2.999,801,4.047,802,4.579,803,2.421,804,2.999,805,2.999,806,2.651,807,2.421,808,2.999,809,2.999,810,3.522,811,2.999,812,2.999,813,2.999,814,4.047,815,2.999,816,2.999,817,2.999,818,2.999,819,2.999,820,2.651,821,2.999,822,2.999,823,2.999,824,2.999,825,2.999,826,2.999,827,2.999,828,2.421,829,2.651,830,2.999,831,2.999]],["title/modules/BullBoardModule.html",[83,1.303,130,3.125]],["body/modules/BullBoardModule.html",[3,0.087,4,0.075,5,0.063,9,0.198,10,0.009,12,0.853,21,0.099,22,0.273,27,0.006,28,0.007,29,0.006,83,2.367,85,2.921,86,3.019,87,3.239,88,3.239,89,3.239,90,4.325,91,3.239,95,3.99,96,2.446,97,3.239,107,3.653,130,6.34,131,5.575,138,4.313,160,4.526,162,4.87,832,5.332,833,6.032,834,5.332,835,6.195,836,4.87,837,6.032,838,6.032]],["title/injectables/BullBoardProvider.html",[30,1.365,835,3.125]],["body/injectables/BullBoardProvider.html",[3,0.085,4,0.074,5,0.062,9,0.205,10,0.009,12,0.838,21,0.097,22,0.268,24,2.551,25,2.752,27,0.006,28,0.007,29,0.006,30,2.262,31,2.778,41,0.417,43,1.625,44,0.838,45,0.402,46,1.358,83,1.74,107,4.45,108,4.782,121,1.474,146,5.235,160,5.513,835,5.178,836,5.933,839,5.235,840,5.923,841,7.164,842,7.061,843,5.923,844,6.495,845,4.782,846,3.587,847,5.923,848,4.782,849,5.235,850,5.235,851,5.923,852,5.923]],["title/classes/Counter.html",[22,0.201,853,3.125]],["body/classes/Counter.html",[3,0.065,4,0.056,5,0.047,9,0.111,10,0.009,21,0.074,22,0.204,23,2.258,27,0.004,28,0.006,29,0.004,33,1.291,35,0.377,36,1.767,41,0.596,43,2.16,44,1.113,45,0.535,46,1.805,48,1.295,63,1.706,104,4.039,121,0.905,168,3.08,269,0.719,285,3.902,353,2.717,853,4.336,854,3.988,855,7.004,856,7.523,857,7.523,858,6.154,859,4.336,860,6.154,861,2.98,862,2.667,863,4.511,864,4.657,865,4.511,866,6.154,867,4.511,868,4.511,869,6.154,870,4.511,871,7.182,872,6.154,873,8.683,874,4.511,875,6.154,876,4.511,877,6.154,878,4.511,879,4.511,880,4.511,881,4.511,882,2.116,883,4.511,884,7.523,885,7.004,886,7.004,887,4.511,888,4.511]],["title/classes/CreateApplicationDto.html",[22,0.201,446,3.327]],["body/classes/CreateApplicationDto.html",[3,0.075,4,0.065,5,0.055,9,0.166,10,0.009,21,0.086,22,0.307,27,0.005,28,0.006,29,0.005,35,0.435,41,0.477,44,1.249,45,0.46,64,2.472,268,4.97,269,0.831,273,1.213,281,4.435,291,0.64,292,2.186,294,2.797,298,2.905,318,2.369,328,4.367,330,3.303,349,1.808,446,5.081,533,4.604,862,1.764,889,6.076,890,4.604,891,3.67,892,5.209,893,5.209,894,3.313,895,5.081,896,5.017,897,4.515,898,5.209,899,5.209,900,5.986,901,6.773,902,5.209,903,5.468,904,6.773,905,5.209,906,5.209,907,6.773,908,5.209,909,3.93,910,5.081,911,3.93,912,2.905,913,4.206,914,5.209,915,3.908]],["title/classes/CreateApplicationKeyDto.html",[22,0.201,473,3.327]],["body/classes/CreateApplicationKeyDto.html",[3,0.097,4,0.084,5,0.071,10,0.008,21,0.11,22,0.304,27,0.006,28,0.007,29,0.006,35,0.561,41,0.473,45,0.456,268,4.424,269,1.072,273,1.421,279,4.087,291,0.75,473,5.952,889,6.405,916,5.942,917,6.723]],["title/classes/CreateFolderEntryDto.html",[22,0.201,918,3.327]],["body/classes/CreateFolderEntryDto.html",[3,0.069,4,0.06,5,0.05,9,0.178,10,0.009,21,0.079,22,0.29,27,0.004,28,0.006,29,0.004,35,0.4,41,0.509,44,1.229,45,0.546,64,2.34,118,1.999,269,0.765,273,1.148,278,2.226,291,0.782,292,2.332,294,2.574,300,2.815,318,2.181,353,2.831,439,4.275,462,2.4,859,4.518,862,2.172,894,2.777,895,4.811,896,4.275,897,4.275,909,3.721,910,4.811,911,4.193,912,2.674,918,4.811,919,6.818,920,4.435,921,3.871,922,4.869,923,5.091,924,3.576,925,4.811,926,4.518,927,4.238,928,4.238,929,4.795,930,4.238,931,4.238,932,4.518,933,4.518,934,4.275,935,4.238,936,4.238,937,5.142,938,5.668,939,4.518,940,3.871,941,3.871,942,2.93,943,4.238]],["title/interfaces/DeleteFileJob.html",[553,1.04,944,3.327]],["body/interfaces/DeleteFileJob.html",[3,0.098,4,0.084,5,0.071,10,0.008,21,0.111,27,0.006,28,0.007,29,0.006,35,0.566,45,0.461,273,1.428,291,0.801,553,1.59,555,2.677,944,5.983,945,5.995,946,5.995,947,7.728]],["title/classes/DeleteUserDto.html",[22,0.201,948,3.327]],["body/classes/DeleteUserDto.html",[3,0.093,4,0.08,5,0.067,9,0.158,10,0.009,21,0.105,22,0.35,27,0.006,28,0.007,29,0.006,35,0.536,41,0.452,45,0.436,269,1.024,273,1.382,291,0.73,292,2.072,318,2.921,583,3.768,891,4.524,894,2.468,909,4.48,911,4.48,912,3.58,948,5.792,949,6.823,950,4.817,951,4.524,952,6.421]],["title/classes/DiskStorage.html",[22,0.201,953,3.125]],["body/classes/DiskStorage.html",[3,0.062,4,0.053,5,0.045,9,0.19,10,0.009,21,0.097,22,0.194,23,2.14,24,1.484,25,2.993,27,0.004,28,0.006,29,0.004,35,0.357,36,1.703,37,2.193,41,0.563,43,2.193,44,1.13,45,0.543,46,1.833,48,2.218,49,1.928,54,1.961,60,2.782,61,1.286,63,1.508,64,1.56,81,2.968,113,2.618,118,2.472,121,0.857,154,2.14,168,2.14,269,0.682,278,2.775,291,0.848,464,3.184,553,1.002,565,2.341,727,2.59,731,2.711,953,4.179,954,3.452,955,4.124,956,5.931,957,5.931,958,4.45,959,4.788,960,3.208,961,5.182,962,4.276,963,5.242,964,4.276,965,5.242,966,4.276,967,3.954,968,4.276,969,4.124,970,4.179,971,4.276,972,3.954,973,4.276,974,4.45,975,2.85,976,2.481,977,2.85,978,3.013,979,3.013,980,3.779,981,2.85,982,3.779,983,3.779,984,2.711,985,3.779,986,3.779,987,3.779,988,3.779,989,3.779,990,3.779,991,3.779,992,3.779,993,3.779,994,3.779,995,3.779,996,3.779]],["title/interfaces/DiskStorageEngineOptions.html",[553,1.04,961,3.125]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.075,4,0.064,5,0.054,9,0.203,10,0.009,21,0.111,22,0.234,23,2.589,24,1.796,25,2.525,27,0.005,28,0.006,29,0.005,35,0.432,37,1.85,45,0.351,49,1.768,54,2.229,60,3.163,61,1.556,63,1.63,64,1.888,81,3.374,113,2.284,118,2.811,154,2.589,168,2.589,273,1.207,278,1.796,291,0.825,553,1.213,555,2.042,565,2.042,727,3.134,731,3.281,953,3.646,954,4.177,955,4.084,961,5.285,963,4.573,965,4.573,967,3.449,969,4.084,970,3.646,972,3.449,974,5.059,975,3.449,976,3.003,977,3.449,978,3.646,979,3.646,980,4.573,981,5.298,982,4.573,983,4.573,984,3.281,985,4.573,986,4.573,987,4.573,988,4.573,989,4.573,990,4.573,991,4.573,992,4.573,993,4.573,994,4.573,995,4.573,996,4.573]],["title/classes/DisplayNameTaken.html",[22,0.201,997,2.574]],["body/classes/DisplayNameTaken.html",[3,0.078,4,0.068,5,0.073,9,0.133,10,0.009,12,0.768,21,0.141,22,0.388,27,0.005,28,0.006,29,0.005,33,1.826,41,0.383,44,0.768,45,0.369,68,4.281,121,1.746,269,0.866,291,0.513,378,2.47,402,3.694,406,3.072,408,3.389,413,2.329,419,3.072,520,2.548,646,2.329,680,2.47,997,4.038,998,3.444,999,5.431,1000,2.9,1001,4.638,1002,3.621,1003,3.152,1004,3.621,1005,3.152,1006,3.029,1007,3.621,1008,3.621,1009,3.152,1010,3.29,1011,2.47,1012,2.813,1013,2.813,1014,3.152,1015,3.621,1016,3.152,1017,3.621,1018,3.621]],["title/interfaces/Email.html",[553,1.04,646,1.902]],["body/interfaces/Email.html",[3,0.091,4,0.079,5,0.066,10,0.009,21,0.104,27,0.006,28,0.007,29,0.006,35,0.529,36,2.198,41,0.58,48,2.363,49,2.007,291,0.841,553,1.485,555,2.499,646,3.283,1019,5.597,1020,7.555,1021,6.902,1022,6.902,1023,6.332,1024,6.332,1025,6.332]],["title/classes/EmailConfirmation.html",[22,0.201,1026,2.957]],["body/classes/EmailConfirmation.html",[3,0.061,4,0.053,5,0.045,9,0.19,10,0.009,21,0.097,22,0.268,27,0.004,28,0.006,29,0.004,33,1.241,35,0.356,41,0.562,45,0.542,56,1.343,61,1.281,63,0.874,64,3.31,72,2.775,82,2.701,148,1.881,249,1.938,269,0.679,271,3.789,273,1.059,275,3.789,283,3.091,284,3.944,287,3.525,291,0.755,292,2.37,293,4.53,294,3.942,296,4.261,297,5.323,298,3.299,306,4.656,307,3.943,314,4.895,318,1.938,322,2.063,323,5.143,324,3.299,325,2.84,333,2.375,334,2.58,342,2.84,343,2.84,344,3.001,345,2.84,346,2.472,347,2.84,348,4.116,349,1.479,357,3.196,358,2.84,362,3.001,378,3.34,882,2.775,1026,3.943,1027,6.612,1028,3.439,1029,4.789,1030,5.487,1031,4.26,1032,3.001,1033,4.168,1034,4.26,1035,4.789,1036,4.26,1037,5.928,1038,4.26,1039,4.26,1040,4.26,1041,4.168,1042,3.196,1043,4.26,1044,3.196,1045,3.765,1046,4.26,1047,3.439,1048,3.439,1049,3.439]],["title/classes/EmailTaken.html",[22,0.201,1003,2.574]],["body/classes/EmailTaken.html",[3,0.078,4,0.068,5,0.073,9,0.133,10,0.009,12,0.768,21,0.141,22,0.388,27,0.005,28,0.006,29,0.005,33,1.826,41,0.383,44,0.768,45,0.369,68,4.281,121,1.746,269,0.866,291,0.513,378,2.47,402,3.694,406,3.072,408,3.389,413,2.329,419,3.072,520,2.548,646,2.329,680,2.47,997,3.152,998,3.444,1000,2.9,1001,4.638,1002,3.621,1003,4.038,1004,3.621,1005,3.152,1006,3.029,1007,3.621,1008,3.621,1009,3.152,1010,3.29,1011,2.47,1012,2.813,1013,2.813,1014,3.152,1015,3.621,1016,3.152,1017,3.621,1018,3.621,1050,5.431]],["title/classes/Entry.html",[22,0.201,1051,2.148]],["body/classes/Entry.html",[3,0.031,4,0.026,5,0.022,9,0.149,10,0.009,21,0.073,22,0.157,27,0.002,28,0.003,29,0.002,33,0.728,35,0.177,37,1.402,41,0.569,44,0.723,45,0.548,49,0.91,54,2.211,56,2.183,61,0.636,63,1.462,64,3.144,72,3.616,81,2.21,82,3.241,113,1.533,118,2.788,148,0.934,168,1.059,249,0.962,256,3.224,269,0.337,271,3.147,273,0.622,275,2.462,278,2.105,282,3.565,283,3.042,284,3.275,285,4.631,287,2.256,291,0.705,292,2.406,293,2.315,294,3.03,296,2.966,297,4.043,298,2.462,300,1.865,304,1.708,306,4.241,307,2.315,314,4.459,319,1.587,320,1.18,322,1.024,323,5.21,324,1.936,325,1.41,333,1.18,334,1.281,342,1.41,345,2.315,346,2.015,347,2.315,348,2.103,349,1.533,353,3.147,358,2.315,361,3.111,380,2.605,389,1.708,397,1.708,398,1.708,399,1.708,483,2.103,518,2.8,520,2.071,663,1.587,727,2.674,731,2.8,859,1.491,862,0.717,864,3.141,882,2.071,920,3.452,922,3.095,924,1.18,940,1.708,941,1.708,1032,3.111,1051,3.102,1052,1.708,1053,3.976,1054,4.273,1055,3.903,1056,3.903,1057,4.416,1058,4.043,1059,3.111,1060,3.111,1061,2.563,1062,3.565,1063,2.116,1064,2.116,1065,2.116,1066,2.116,1067,2.116,1068,2.116,1069,2.116,1070,2.116,1071,3.069,1072,2.116,1073,2.116,1074,3.472,1075,2.116,1076,2.116,1077,2.116,1078,2.116,1079,2.116,1080,2.116,1081,2.116,1082,3.472,1083,2.803,1084,3.472,1085,3.472,1086,3.069,1087,2.116,1088,2.116,1089,2.116,1090,4.416,1091,1.87,1092,1.587,1093,1.87,1094,3.069,1095,1.87,1096,1.87,1097,1.708,1098,1.587,1099,1.87,1100,2.605,1101,1.87,1102,1.87,1103,1.87,1104,1.587,1105,2.116,1106,1.587,1107,2.116,1108,4.416,1109,1.87,1110,4.517,1111,6.064,1112,5.643,1113,1.87,1114,5.11,1115,2.116,1116,2.116,1117,2.116,1118,1.281,1119,2.116,1120,1.87,1121,3.472,1122,3.472,1123,2.116,1124,2.116,1125,2.116,1126,3.472,1127,2.116,1128,3.472,1129,4.416,1130,2.116,1131,2.116,1132,1.708,1133,2.116,1134,2.446,1135,1.87,1136,2.116,1137,2.116,1138,2.116,1139,2.116,1140,2.116,1141,2.116,1142,2.116,1143,3.472,1144,2.116,1145,3.472,1146,3.472,1147,1.341,1148,2.202,1149,2.116,1150,3.472,1151,3.903,1152,2.116,1153,3.472,1154,2.116,1155,2.116,1156,2.116,1157,2.116,1158,2.116,1159,2.116,1160,1.87,1161,2.116,1162,5.11,1163,2.116,1164,1.059,1165,2.116,1166,2.116]],["title/classes/EntryAlreadyExists.html",[22,0.201,1167,2.473]],["body/classes/EntryAlreadyExists.html",[3,0.058,4,0.05,5,0.042,9,0.098,10,0.009,12,0.565,21,0.128,22,0.354,27,0.004,28,0.005,29,0.004,33,1.686,35,0.333,41,0.503,43,1.095,44,1.106,45,0.384,46,0.915,63,1.604,118,3.352,121,1.568,269,0.637,273,1.012,291,0.824,349,1.962,402,2.897,403,3.035,405,3.06,406,2.897,408,3.151,409,2.737,413,2.424,711,3.223,861,2.737,862,1.915,894,3.157,920,1.933,924,3.659,942,3.331,1051,3.787,1148,2.532,1164,1.998,1167,3.152,1168,2.532,1169,4.401,1170,4.111,1171,5.653,1172,3.768,1173,3.992,1174,3.768,1175,2.068,1176,3.992,1177,1.998,1178,3.768,1179,2.662,1180,2.662,1181,2.226,1182,4.375,1183,2.662,1184,2.662,1185,2.662,1186,2.226,1187,2.662,1188,3.768,1189,2.662,1190,2.662,1191,2.662,1192,2.226,1193,2.662,1194,2.662,1195,2.662,1196,2.226,1197,3.768,1198,2.662,1199,2.662,1200,2.662,1201,2.226,1202,2.662,1203,2.662,1204,2.662]],["title/classes/EntryDto.html",[22,0.201,1053,3.125]],["body/classes/EntryDto.html",[3,0.043,4,0.038,5,0.058,9,0.113,10,0.009,21,0.05,22,0.208,27,0.003,28,0.004,29,0.003,35,0.252,41,0.594,44,0.949,45,0.581,61,1.383,63,0.943,64,2.275,118,2.798,168,3.12,233,1.678,249,2.535,256,2.03,269,0.481,273,0.823,275,3.107,278,2.553,283,2.535,284,3.234,287,3.122,291,0.772,292,2.722,298,2.564,300,2.275,320,1.681,353,3.499,430,3.449,462,1.509,650,4.155,864,3.663,882,2.924,895,3.449,920,3.902,922,4.065,923,5.889,924,3.476,925,3.449,926,3.239,932,5.343,933,5.343,934,5.055,937,5.623,942,3.389,1051,4.343,1053,3.239,1054,3.926,1055,5.932,1058,3.715,1059,3.926,1060,3.926,1061,4.269,1062,5.418,1164,2.301,1205,2.665,1206,5.033,1207,6.748,1208,3.015,1209,3.015,1210,4.598,1211,5.033,1212,6.233,1213,5.71,1214,4.598,1215,4.598,1216,3.015,1217,3.712,1218,3.015,1219,2.665,1220,3.015,1221,3.065,1222,3.015,1223,3.015,1224,3.015,1225,3.015,1226,4.064,1227,4.598,1228,4.598,1229,4.598,1230,3.015,1231,3.015,1232,4.598,1233,3.015,1234,4.598,1235,6.233,1236,5.51,1237,3.015,1238,3.015,1239,3.015,1240,4.064,1241,3.015]],["title/classes/EntryNotDeletable.html",[22,0.201,1181,2.473]],["body/classes/EntryNotDeletable.html",[3,0.059,4,0.051,5,0.043,9,0.101,10,0.009,12,0.581,21,0.13,22,0.357,27,0.004,28,0.005,29,0.004,33,1.7,35,0.343,41,0.509,44,0.942,45,0.279,63,1.619,118,3.013,121,1.626,269,0.655,273,1.033,291,0.795,349,2.002,402,2.546,403,2.205,405,3.264,406,2.942,408,2.942,409,2.792,413,2.473,861,2.792,862,1.953,894,3.18,920,1.989,924,3.716,942,3.355,1051,3.822,1148,2.604,1164,2.886,1167,2.29,1168,2.604,1169,4.414,1170,4.141,1172,2.738,1174,2.738,1175,2.127,1177,2.055,1178,3.844,1179,2.738,1180,2.738,1181,3.215,1182,4.818,1183,2.738,1184,2.738,1185,2.738,1186,2.29,1187,2.738,1188,3.844,1189,2.738,1190,2.738,1191,2.738,1192,2.29,1193,2.738,1194,2.738,1195,2.738,1196,2.29,1197,3.844,1198,2.738,1199,2.738,1200,2.738,1201,2.29,1202,2.738,1203,2.738,1204,2.738,1242,5.767,1243,4.107,1244,4.107]],["title/classes/EntryNotFound.html",[22,0.201,1186,2.473]],["body/classes/EntryNotFound.html",[3,0.059,4,0.051,5,0.043,9,0.101,10,0.009,12,0.58,21,0.13,22,0.357,27,0.004,28,0.005,29,0.004,33,1.699,35,0.342,41,0.509,44,0.941,45,0.278,63,1.618,118,3.01,121,1.625,269,0.654,273,1.031,291,0.795,349,1.999,402,2.543,403,2.201,405,3.097,406,3.188,408,2.939,409,2.789,413,2.855,861,2.789,862,1.951,894,3.179,920,1.985,924,3.712,942,3.354,1051,3.82,1148,2.6,1164,2.052,1167,2.286,1168,2.6,1169,4.413,1170,4.139,1172,2.733,1174,2.733,1175,2.123,1177,2.052,1178,3.839,1179,2.733,1180,2.733,1181,2.286,1182,4.438,1183,2.733,1184,2.733,1185,2.733,1186,3.211,1187,3.839,1188,4.438,1189,2.733,1190,2.733,1191,2.733,1192,2.286,1193,2.733,1194,2.733,1195,2.733,1196,2.286,1197,3.839,1198,2.733,1199,2.733,1200,2.733,1201,2.286,1202,2.733,1203,2.733,1204,2.733,1245,5.759,1246,4.1,1247,4.1]],["title/classes/FileTooLarge.html",[22,0.201,1248,2.473]],["body/classes/FileTooLarge.html",[3,0.058,4,0.05,5,0.06,9,0.099,10,0.009,12,0.571,21,0.129,22,0.355,27,0.004,28,0.005,29,0.004,33,1.691,35,0.337,41,0.505,43,1.107,44,0.571,45,0.448,46,0.925,63,1.609,121,1.574,269,0.643,273,1.02,291,0.802,349,1.977,422,3.544,423,3.419,424,3.058,588,3.196,861,2.758,862,1.929,894,3.166,942,3.34,1000,3.152,1118,2.444,1147,2.558,1169,4.406,1170,4.122,1175,2.09,1177,2.019,1248,3.175,1249,2.558,1250,4.4,1251,3.796,1252,5.695,1253,3.175,1254,3.796,1255,3.796,1256,4.547,1257,4.4,1258,4.035,1259,3.796,1260,4.035,1261,3.796,1262,2.69,1263,2.69,1264,2.69,1265,2.25,1266,2.558,1267,2.95,1268,4.547,1269,2.69,1270,2.69,1271,2.69,1272,2.25,1273,2.69,1274,4.4,1275,2.69,1276,2.69,1277,2.69,1278,2.25,1279,2.69,1280,2.69,1281,2.69,1282,2.25,1283,2.558,1284,2.69,1285,2.69,1286,2.69,1287,2.25,1288,2.69,1289,2.69,1290,2.69,1291,2.69,1292,2.69,1293,2.69]],["title/classes/FileUploadDto.html",[22,0.201,1294,3.327]],["body/classes/FileUploadDto.html",[3,0.093,4,0.081,5,0.09,9,0.159,10,0.009,21,0.106,22,0.293,27,0.006,28,0.007,29,0.006,35,0.541,41,0.456,45,0.564,269,1.033,273,1.389,291,0.733,292,2.09,462,3.241,937,5.172,1294,5.821,1295,6.858,1296,5.724,1297,6.476,1298,7.759,1299,6.476,1300,5.724]],["title/controllers/FilesController.html",[0,2.08,1301,3.327]],["body/controllers/FilesController.html",[0,0.919,2,0.919,3,0.028,4,0.024,5,0.034,7,1.242,9,0.195,10,0.009,11,1.305,12,0.277,21,0.032,22,0.089,24,1.692,25,1.825,27,0.002,28,0.003,29,0.002,34,1.186,35,0.164,36,0.935,37,2.235,41,0.436,43,1.698,44,0.952,45,0.44,46,1.419,48,1.778,49,1.98,54,2.143,56,2.043,57,3.017,60,1.528,61,1.95,63,1.198,64,1.975,70,4.715,71,3.249,78,1.136,81,2.093,121,0.393,136,2.788,144,1.816,145,1.051,154,0.98,229,1.092,230,1.469,249,3.611,256,2.389,260,3.249,278,2.727,283,3.781,291,0.831,292,1.998,300,2.131,328,1.136,329,1.38,330,1.242,336,1.092,353,1.846,440,2.065,441,2.788,450,4.369,455,1.731,458,1.581,462,0.98,463,2.947,464,1.051,465,1.38,466,1.581,467,1.186,471,1.731,475,1.305,476,1.469,477,1.469,478,1.469,480,1.469,487,1.731,489,4.369,493,3.935,495,1.731,496,1.731,498,1.731,510,2.295,520,0.919,588,2.36,715,1.38,864,3.025,882,0.919,918,3.657,920,3.656,922,1.973,942,3.107,969,1.186,1051,2.025,1053,1.38,1054,2.947,1058,2.788,1059,2.295,1060,2.295,1061,1.89,1083,2.63,1091,1.731,1134,3.434,1151,4.308,1164,0.98,1167,1.092,1170,4.281,1177,0.98,1181,1.092,1186,1.816,1192,1.816,1196,1.092,1201,1.092,1248,1.092,1256,2.652,1265,1.816,1267,2.525,1268,1.242,1272,1.816,1278,1.816,1282,1.816,1287,1.092,1294,2.444,1301,2.444,1302,1.731,1303,4.182,1304,4.182,1305,3.696,1306,1.958,1307,1.958,1308,1.958,1309,6.73,1310,3.257,1311,1.958,1312,1.958,1313,1.958,1314,1.958,1315,1.958,1316,1.958,1317,1.958,1318,1.958,1319,1.958,1320,1.958,1321,1.958,1322,1.958,1323,1.958,1324,1.958,1325,1.958,1326,3.657,1327,1.958,1328,1.958,1329,1.958,1330,1.958,1331,1.958,1332,1.958,1333,1.958,1334,1.958,1335,3.257,1336,1.958,1337,7.764,1338,1.581,1339,1.581,1340,1.958,1341,3.257,1342,4.182,1343,1.731,1344,1.973,1345,1.731,1346,3.257,1347,1.958,1348,1.958,1349,1.731,1350,2.63,1351,1.958,1352,1.469,1353,1.731,1354,1.469,1355,1.958,1356,1.958,1357,1.89,1358,1.469,1359,1.581,1360,1.958,1361,1.958,1362,1.958,1363,1.958,1364,4.874,1365,4.874,1366,1.958,1367,1.731,1368,1.958,1369,1.958,1370,3.257,1371,1.958,1372,1.958,1373,4.182,1374,1.958,1375,1.958,1376,1.958,1377,1.958,1378,1.731,1379,1.469,1380,1.958,1381,1.581,1382,1.958,1383,1.958,1384,1.958,1385,1.958,1386,1.958,1387,1.731,1388,1.958,1389,1.958,1390,1.958,1391,3.257,1392,3.257,1393,4.182,1394,4.182,1395,4.783,1396,4.783,1397,1.958,1398,1.958,1399,1.958,1400,1.958,1401,1.958,1402,1.958,1403,3.257,1404,1.731,1405,1.958,1406,1.958,1407,1.958,1408,1.958,1409,1.958,1410,1.958,1411,1.958,1412,3.257,1413,3.257,1414,1.958,1415,1.958,1416,1.958,1417,1.38,1418,1.958,1419,1.958,1420,1.958,1421,1.958,1422,1.958,1423,1.958,1424,1.958,1425,1.958,1426,1.958,1427,1.958,1428,1.958,1429,1.958,1430,1.958,1431,1.731,1432,1.242,1433,1.469,1434,1.958,1435,1.731,1436,1.958,1437,1.958,1438,1.958,1439,1.958,1440,1.731,1441,1.958,1442,1.958,1443,1.958,1444,1.958,1445,1.958]],["title/modules/FilesModule.html",[83,1.303,131,2.812]],["body/modules/FilesModule.html",[2,3.012,3,0.069,4,0.06,5,0.05,9,0.214,10,0.009,12,0.679,21,0.079,22,0.218,27,0.004,28,0.006,29,0.004,44,0.908,83,2.125,85,2.327,86,2.405,87,2.58,88,2.58,89,2.58,90,3.883,91,3.883,95,3.448,96,1.948,97,2.58,131,5.618,138,3.727,144,4.486,145,2.58,147,3.386,148,2.121,155,3.605,204,3.879,227,3.727,228,4.072,229,3.581,236,3.605,264,3.879,265,3.879,291,0.454,324,2.679,507,3.605,846,2.91,981,3.203,984,3.047,1051,2.327,1098,4.817,1267,2.489,1301,5.426,1344,5.404,1345,4.247,1446,4.247,1447,4.247,1448,4.247,1449,4.247,1450,5.363,1451,5.833,1452,4.805,1453,5.676,1454,4.805,1455,4.805,1456,4.247,1457,4.247,1458,4.247,1459,4.247,1460,4.247,1461,3.605,1462,4.247]],["title/injectables/FilesProcessor.html",[30,1.365,1451,3.125]],["body/injectables/FilesProcessor.html",[3,0.081,4,0.07,5,0.059,9,0.208,10,0.009,12,0.798,21,0.093,22,0.256,23,2.825,24,1.96,27,0.005,28,0.007,29,0.005,30,2.195,31,2.648,35,0.471,36,2.048,37,2.144,41,0.502,43,1.956,44,1.008,45,0.484,46,1.635,48,1.621,49,1.87,54,2.357,107,3.419,121,1.132,154,3.569,292,1.822,846,3.419,944,4.236,1357,4.765,1358,4.236,1451,5.025,1463,4.99,1464,7.131,1465,4.99,1466,5.646,1467,7.131,1468,7.484,1469,5.646,1470,5.646,1471,4.236,1472,4.99,1473,5.646,1474,5.646,1475,5.646,1476,5.646,1477,5.646,1478,4.99]],["title/injectables/FilesService.html",[30,1.365,1344,2.686]],["body/injectables/FilesService.html",[3,0.029,4,0.025,5,0.045,9,0.177,10,0.009,12,0.285,21,0.033,22,0.091,24,1.483,25,2.458,27,0.002,28,0.003,29,0.002,30,1.028,31,0.947,35,0.495,36,0.959,37,2.357,41,0.528,43,2.055,44,1.15,45,0.548,46,1.718,48,2.111,49,2.133,54,2.431,56,2.434,60,2.944,61,2.047,63,1.396,64,1.813,68,1.126,107,1.223,121,0.67,148,0.891,154,1.672,168,2.139,249,1.519,256,1.475,260,2.227,271,1.126,278,2.058,283,3.191,291,0.72,300,1.813,322,0.977,336,3.068,346,1.172,349,1.16,409,2.405,440,2.118,441,2.849,483,2.023,510,3.011,512,3.149,515,3.59,518,5.328,520,3.623,523,2.697,525,3.45,527,2.506,529,1.784,531,1.514,547,3.777,565,2.687,711,2.697,841,4.01,842,3.777,845,1.63,846,1.223,850,1.784,862,1.131,864,2.85,882,0.947,903,1.63,920,3.687,922,2.588,947,2.952,958,2.506,967,2.227,969,1.223,976,1.172,1051,3.687,1054,2.354,1056,1.784,1058,2.227,1059,3.499,1060,3.499,1061,1.172,1062,1.63,1083,4.01,1100,2.506,1106,1.514,1109,2.952,1110,1.784,1134,3.011,1135,1.784,1160,3.777,1167,1.126,1181,1.863,1186,2.769,1192,1.863,1196,1.126,1201,1.126,1253,2.769,1283,1.28,1305,3.777,1343,1.784,1344,2.023,1357,2.882,1358,1.514,1395,1.784,1396,1.784,1432,1.28,1440,2.952,1456,1.784,1459,2.952,1465,1.784,1479,1.784,1480,3.34,1481,3.34,1482,3.34,1483,2.019,1484,3.34,1485,2.019,1486,2.019,1487,2.019,1488,3.34,1489,2.019,1490,2.019,1491,3.34,1492,2.019,1493,2.019,1494,2.952,1495,2.019,1496,4.966,1497,2.019,1498,4.966,1499,2.019,1500,3.34,1501,2.019,1502,2.019,1503,2.019,1504,2.019,1505,1.63,1506,2.019,1507,1.422,1508,1.346,1509,1.784,1510,2.019,1511,3.34,1512,3.34,1513,3.34,1514,2.019,1515,2.019,1516,2.019,1517,3.34,1518,3.34,1519,2.019,1520,2.019,1521,5.502,1522,4.966,1523,3.34,1524,5.928,1525,3.34,1526,4.966,1527,3.34,1528,4.273,1529,2.019,1530,2.019,1531,3.34,1532,4.966,1533,2.019,1534,2.019,1535,1.422,1536,1.784,1537,2.019,1538,2.019,1539,2.019,1540,3.34,1541,2.019,1542,3.34,1543,3.34,1544,2.019,1545,2.019,1546,2.019,1547,2.019,1548,1.422,1549,2.019,1550,2.019,1551,2.019,1552,2.019,1553,3.34,1554,2.019,1555,2.019,1556,2.019,1557,2.019,1558,2.019,1559,2.019,1560,2.019,1561,2.019,1562,2.019,1563,2.019,1564,2.019,1565,3.34,1566,2.019,1567,2.019,1568,2.019,1569,2.019,1570,1.514,1571,2.019,1572,2.019,1573,1.514,1574,1.514,1575,2.019,1576,3.34,1577,2.019,1578,2.019,1579,2.019,1580,2.019,1581,2.019,1582,2.019,1583,2.019]],["title/classes/ForgotPasswordDto.html",[22,0.201,581,3.327]],["body/classes/ForgotPasswordDto.html",[3,0.089,4,0.077,5,0.065,9,0.185,10,0.009,21,0.101,22,0.342,27,0.006,28,0.007,29,0.006,35,0.516,41,0.435,233,2.255,269,0.985,273,1.351,292,1.994,318,2.81,581,5.658,646,3.792,807,4.988,894,3.129,909,4.377,911,4.377,912,3.445,951,4.354,1035,5.736,1584,6.666,1585,4.988,1586,6.089,1587,5.028,1588,4.988,1589,6.179,1590,6.179]],["title/classes/GoogleCloudEngine.html",[22,0.201,1591,3.125]],["body/classes/GoogleCloudEngine.html",[3,0.069,4,0.06,5,0.05,9,0.177,10,0.009,21,0.105,22,0.217,23,2.395,24,2.675,25,2.702,27,0.004,28,0.006,29,0.004,33,1.003,35,0.4,36,1.839,37,1.98,41,0.566,43,2.114,44,1.09,45,0.523,46,1.767,48,2.072,49,1.679,54,1.582,56,1.508,61,1.439,63,1.313,113,2.827,121,0.959,154,3.205,269,0.763,273,1.147,278,2.505,291,0.83,349,1.661,464,3.438,553,1.122,562,3.716,565,2.527,862,1.621,955,4.371,958,4.804,959,5.17,960,3.59,967,4.269,969,4.371,970,4.512,972,4.269,975,4.811,976,2.777,977,3.19,978,3.371,1591,4.512,1592,6.203,1593,3.59,1594,6.379,1595,5.43,1596,4.785,1597,5.66,1598,4.785,1599,4.785,1600,4.785,1601,4.785,1602,3.863,1603,3.863,1604,3.59,1605,4.229,1606,4.229,1607,4.229,1608,4.229]],["title/interfaces/GoogleCloudEngineOptions.html",[553,1.04,1595,3.125]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.082,4,0.07,5,0.059,9,0.192,10,0.009,21,0.117,22,0.256,23,2.832,24,2.479,25,2.119,27,0.005,28,0.007,29,0.005,33,1.498,35,0.473,37,1.553,45,0.384,49,1.484,54,1.871,56,1.784,61,1.702,63,1.465,113,2.499,154,3.574,273,1.279,291,0.818,553,1.327,555,2.234,562,4.541,565,2.234,955,4.326,967,3.773,969,4.326,970,3.988,972,3.773,975,4.761,976,3.285,977,3.773,978,3.988,1591,3.988,1592,4.246,1593,4.246,1594,5.002,1595,5.514,1597,5.002,1602,4.569,1603,4.569,1604,4.246,1605,7.264,1606,5.002,1607,5.002,1608,5.002]],["title/controllers/HealthController.html",[0,2.08,1609,3.327]],["body/controllers/HealthController.html",[0,2.421,2,2.421,3,0.074,4,0.064,5,0.054,7,3.273,9,0.202,10,0.009,12,0.73,21,0.085,22,0.234,24,2.932,25,3.162,27,0.005,28,0.006,29,0.005,35,0.431,36,1.933,41,0.364,48,1.482,49,2.215,63,1.059,118,3.123,121,1.035,144,3.754,145,2.772,184,5.436,229,2.878,292,1.666,462,2.584,984,3.273,1338,4.168,1339,4.168,1359,4.168,1609,5.051,1610,4.563,1611,6.733,1612,7.941,1613,5.162,1614,5.162,1615,6.733,1616,6.733,1617,6.733,1618,5.162,1619,6.733,1620,5.162,1621,6.733,1622,6.733,1623,4.168,1624,5.162,1625,5.162,1626,5.162,1627,5.162,1628,5.162,1629,5.162,1630,5.162,1631,5.162,1632,5.162,1633,5.162,1634,5.162,1635,5.162,1636,5.162,1637,5.162,1638,5.162,1639,5.162,1640,5.162]],["title/modules/HealthModule.html",[83,1.303,132,3.125]],["body/modules/HealthModule.html",[2,3.683,3,0.095,4,0.082,5,0.069,9,0.206,10,0.009,12,0.934,21,0.108,22,0.299,27,0.006,28,0.007,29,0.006,83,2.307,85,3.199,132,5.533,138,3.834,1609,6.286,1623,5.334,1641,6.606,1642,7.852,1643,6.606]],["title/interfaces/IRequest.html",[51,2.812,553,1.04]],["body/interfaces/IRequest.html",[3,0.088,4,0.076,5,0.064,9,0.199,10,0.009,21,0.101,27,0.006,28,0.007,29,0.006,33,1.574,35,0.512,45,0.416,46,1.721,51,4.759,78,3.557,233,3.221,273,1.344,279,2.968,291,0.579,300,2.961,553,1.437,555,2.419,588,3.928,589,5.12,594,5.417,807,4.948,1644,5.417,1645,5.288,1646,6.129]],["title/interfaces/ISession.html",[553,1.04,1647,3.327]],["body/interfaces/ISession.html",[3,0.092,4,0.079,5,0.067,9,0.156,10,0.009,21,0.104,27,0.006,28,0.007,29,0.006,35,0.53,45,0.559,273,1.373,287,3.637,291,0.779,553,1.489,555,2.506,589,5.305,590,5.425,630,5.127,1033,6.029,1548,6.029,1647,5.753,1648,5.613]],["title/interfaces/ISessionData.html",[553,1.04,590,2.812]],["body/interfaces/ISessionData.html",[3,0.085,4,0.073,5,0.061,10,0.009,21,0.096,27,0.005,28,0.007,29,0.005,33,1.229,35,0.489,45,0.601,273,1.307,280,5.548,283,3.786,287,3.511,291,0.853,300,2.902,515,4.422,553,1.374,555,2.314,590,4.63,607,5.041,609,6.244,668,4.131,670,4.398,672,4.398,1221,5.548,1649,5.182,1650,5.182,1651,5.862,1652,5.182,1653,5.182,1654,5.182]],["title/interfaces/IncomingFile.html",[553,1.04,1655,2.957]],["body/interfaces/IncomingFile.html",[3,0.091,4,0.078,5,0.066,10,0.008,21,0.103,27,0.006,28,0.007,29,0.006,35,0.524,45,0.579,273,1.364,291,0.875,553,1.472,555,2.479,1253,4.753,1655,5.078,1656,5.551,1657,5.071,1658,7.534,1659,7.534,1660,6.882]],["title/classes/IncorrectPassword.html",[22,0.201,1661,2.574]],["body/classes/IncorrectPassword.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,4.055,96,2.208,121,1.769,233,1.987,269,0.868,405,2.988,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.036,718,3.16,760,3.452,762,3.297,763,3.297,797,3.16,798,3.16,799,3.16,810,3.452,1000,3.204,1011,3.169,1012,3.609,1013,3.609,1661,4.044,1662,3.452,1663,5.444,1664,3.629,1665,3.629,1666,3.629,1667,3.629]],["title/classes/InsufficientScopes.html",[22,0.201,414,2.686]],["body/classes/InsufficientScopes.html",[3,0.081,4,0.07,5,0.059,9,0.139,10,0.009,12,0.798,21,0.139,22,0.384,27,0.005,28,0.007,29,0.005,33,1.814,41,0.398,44,0.798,50,3.453,121,1.734,269,0.9,279,2.734,281,3.031,291,0.534,369,3.58,400,3.419,401,3.764,402,3.148,403,3.031,405,3.521,406,3.148,407,3.978,408,2.492,409,2.734,410,2.568,411,3.419,412,5.025,413,2.421,414,4.319,415,3.764,416,3.764,417,3.58,418,3.419,419,2.492,420,3.419,421,3.031,422,3.031,423,2.924,424,3.031,425,3.148,426,3.978,1668,5.646]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.201,1669,3.581]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.079,4,0.069,5,0.058,9,0.173,10,0.009,12,0.779,21,0.09,22,0.25,23,2.758,24,1.913,27,0.005,28,0.007,29,0.005,35,0.46,36,2.016,41,0.495,43,1.926,44,0.993,45,0.477,46,1.61,48,1.582,56,2.213,70,4.449,71,3.673,78,3.198,81,2.758,104,3.77,113,3.1,121,1.105,136,4.681,236,5.798,269,0.879,715,5.734,727,3.337,731,4.901,894,2.118,1011,2.506,1378,4.87,1669,5.669,1670,6.831,1671,6.24,1672,4.87,1673,7.729,1674,5.51,1675,8.138,1676,5.51,1677,7.022,1678,8.138,1679,5.51,1680,5.51,1681,5.51,1682,7.022,1683,5.51,1684,5.51,1685,5.51,1686,4.87,1687,4.449,1688,4.87]],["title/classes/InvalidAPIKey.html",[22,0.201,418,2.686]],["body/classes/InvalidAPIKey.html",[3,0.081,4,0.07,5,0.059,9,0.139,10,0.009,12,0.798,21,0.139,22,0.384,27,0.005,28,0.007,29,0.005,33,1.814,41,0.398,44,0.798,50,3.785,121,1.734,269,0.9,279,2.734,281,3.031,291,0.534,369,3.58,400,3.419,401,3.764,402,3.148,403,3.031,405,3.352,406,3.148,407,3.978,408,2.492,409,2.734,410,2.568,411,3.419,412,5.025,413,2.421,414,3.419,415,3.764,416,3.764,417,3.58,418,4.319,419,2.492,420,3.419,421,3.031,422,3.031,423,2.924,424,3.031,425,3.148,426,3.978,1689,5.646]],["title/classes/InvalidAvatarFileType.html",[22,0.201,1005,2.574]],["body/classes/InvalidAvatarFileType.html",[3,0.078,4,0.068,5,0.073,9,0.133,10,0.009,12,0.768,21,0.141,22,0.388,27,0.005,28,0.006,29,0.005,33,1.826,41,0.383,44,0.768,45,0.369,68,4.281,121,1.746,269,0.866,291,0.513,378,2.47,402,3.574,406,3.072,408,3.389,413,2.329,419,3.072,520,2.548,646,2.329,680,2.47,997,3.152,998,3.444,1000,2.9,1001,5.118,1002,3.621,1003,3.152,1004,3.621,1005,4.038,1006,3.029,1007,3.621,1008,3.621,1009,3.152,1010,3.29,1011,2.47,1012,2.813,1013,2.813,1014,3.152,1015,3.621,1016,3.152,1017,3.621,1018,3.621,1690,5.431]],["title/classes/InvalidCredentials.html",[22,0.201,797,2.574]],["body/classes/InvalidCredentials.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,4.055,96,2.208,121,1.769,233,1.987,269,0.868,405,2.988,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.036,718,3.16,760,3.452,762,3.297,763,3.297,797,4.044,798,3.16,799,3.16,810,3.452,1000,3.204,1011,3.169,1012,3.609,1013,3.609,1661,3.16,1662,3.452,1664,3.629,1665,3.629,1666,3.629,1667,3.629,1691,5.444]],["title/classes/InvalidEmailConfirmationToken.html",[22,0.201,1009,2.574]],["body/classes/InvalidEmailConfirmationToken.html",[3,0.078,4,0.068,5,0.073,9,0.133,10,0.009,12,0.768,21,0.141,22,0.388,27,0.005,28,0.006,29,0.005,33,1.826,41,0.383,44,0.768,45,0.369,68,4.281,121,1.746,269,0.866,291,0.513,378,2.47,402,3.574,406,3.072,408,3.389,413,2.329,419,3.072,520,2.548,646,2.329,680,2.47,997,3.152,998,3.444,1000,3.2,1001,4.638,1002,3.621,1003,3.152,1004,3.621,1005,3.152,1006,3.029,1007,3.621,1008,3.621,1009,4.038,1010,3.29,1011,2.47,1012,2.813,1013,2.813,1014,3.152,1015,3.621,1016,3.152,1017,3.621,1018,3.621,1692,5.431]],["title/classes/InvalidPasswordResetLink.html",[22,0.201,798,2.574]],["body/classes/InvalidPasswordResetLink.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,3.923,96,2.208,121,1.769,233,1.987,269,0.868,405,2.988,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.036,718,3.16,760,3.452,762,3.297,763,3.297,797,3.16,798,4.044,799,3.16,810,3.452,1000,3.378,1011,3.169,1012,3.609,1013,3.609,1661,3.16,1662,3.452,1664,3.629,1665,3.629,1666,3.629,1667,3.629,1693,5.444]],["title/classes/InvalidUserActivationLink.html",[22,0.201,799,2.574]],["body/classes/InvalidUserActivationLink.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,3.923,96,2.208,121,1.769,233,1.987,269,0.868,405,2.988,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.036,718,3.16,760,3.452,762,3.297,763,3.297,797,3.16,798,3.16,799,4.044,810,3.452,1000,3.378,1011,3.169,1012,3.609,1013,3.609,1661,3.16,1662,3.452,1664,3.629,1665,3.629,1666,3.629,1667,3.629,1694,5.444]],["title/classes/IsStringPathSafeConstraint.html",[22,0.201,1695,3.327]],["body/classes/IsStringPathSafeConstraint.html",[3,0.074,4,0.064,5,0.054,9,0.127,10,0.009,21,0.123,22,0.304,27,0.005,28,0.006,29,0.005,35,0.43,36,1.93,37,1.413,41,0.473,43,1.413,44,0.951,45,0.35,46,1.181,48,1.93,56,2.119,63,1.535,72,2.416,104,2.765,113,2.968,118,3.12,256,2.274,269,0.821,291,0.833,307,4.482,318,3.058,321,3.629,353,2.968,565,2.033,862,2.535,939,4.737,1092,3.864,1096,4.552,1695,5.615,1696,5.615,1697,4.158,1698,6.615,1699,7.012,1700,5.151,1701,5.942,1702,5.151,1703,5.428,1704,5.942,1705,6.406,1706,4.552,1707,5.151,1708,3.864,1709,3.864,1710,3.864,1711,3.629,1712,4.158,1713,5.044,1714,6.043,1715,4.158,1716,4.158,1717,4.158]],["title/classes/IsStringValidPathConstraint.html",[22,0.201,1718,3.327]],["body/classes/IsStringValidPathConstraint.html",[3,0.075,4,0.065,5,0.055,9,0.128,10,0.009,21,0.124,22,0.307,27,0.005,28,0.006,29,0.005,35,0.436,36,1.948,37,1.432,41,0.478,43,1.432,44,0.959,45,0.355,46,1.197,48,1.948,56,2.138,63,1.545,72,2.449,104,2.803,113,2.994,118,2.176,256,2.305,269,0.833,291,0.835,307,4.521,318,3.085,321,3.679,353,2.994,565,2.061,862,2.552,1587,5.317,1696,5.652,1698,6.659,1699,7.049,1701,5.995,1703,5.476,1704,5.995,1705,6.439,1708,3.917,1709,3.917,1710,3.917,1711,3.679,1712,4.215,1713,5.089,1714,6.082,1715,4.215,1716,4.215,1717,4.215,1718,5.652,1719,4.215,1720,5.221,1721,5.221,1722,4.215,1723,4.615,1724,5.476,1725,5.221]],["title/classes/LoginDto.html",[22,0.201,586,3.327]],["body/classes/LoginDto.html",[3,0.085,4,0.073,5,0.062,9,0.145,10,0.009,21,0.097,22,0.332,27,0.006,28,0.007,29,0.006,35,0.492,41,0.561,45,0.541,269,0.94,273,1.312,291,0.826,292,2.573,318,2.68,583,3.677,586,5.495,657,4.977,891,5.161,894,2.815,909,4.839,911,4.839,912,4.084,951,5.161,1726,5.208,1727,5.98,1728,5.893,1729,5.208,1730,5.893,1731,5.893]],["title/modules/MailerModule.html",[83,1.303,133,3.125]],["body/modules/MailerModule.html",[3,0.052,4,0.045,5,0.038,9,0.2,10,0.009,12,0.511,21,0.059,22,0.164,25,2.713,27,0.003,28,0.005,29,0.003,36,1.038,37,1.444,41,0.48,43,1.87,44,1.025,45,0.463,46,1.563,48,1.958,49,0.948,63,1.551,83,2.351,85,1.75,86,1.809,87,1.941,88,1.941,89,1.941,90,3.891,91,3.333,95,2.826,96,1.466,97,1.941,133,5.916,138,3.054,144,3.461,145,1.941,155,2.712,204,2.918,227,3.602,228,3.936,229,2.015,236,2.712,264,2.918,265,2.918,266,6.106,267,2.547,278,1.255,361,3.708,563,3.054,565,2.985,574,2.712,631,5.142,846,2.189,882,1.695,1169,3.95,1453,4.652,1458,3.195,1732,3.195,1733,3.195,1734,3.195,1735,5.329,1736,3.614,1737,3.195,1738,4.652,1739,6.217,1740,3.614,1741,6.405,1742,3.195,1743,4.652,1744,3.614,1745,4.652,1746,4.323,1747,3.614,1748,6.405,1749,3.195,1750,4.652,1751,3.614,1752,5.011,1753,5.115,1754,3.195,1755,3.614,1756,3.614,1757,5.486,1758,3.708,1759,3.195,1760,3.614,1761,5.486,1762,3.195,1763,3.195,1764,4.652,1765,5.486,1766,4.652,1767,5.486,1768,3.195,1769,3.195,1770,3.614]],["title/interfaces/MailerModuleAsyncOptions.html",[553,1.04,1739,3.327]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.082,4,0.071,5,0.06,9,0.193,10,0.009,21,0.094,27,0.005,28,0.007,29,0.005,33,1.507,35,0.477,37,1.568,45,0.618,46,2.042,49,1.499,83,2.31,227,4.787,228,5.23,267,5.812,273,1.287,285,4.557,553,1.34,555,2.256,557,3.625,558,6.352,559,7.29,560,5.052,561,5.052,563,3.317,565,2.256,567,5.052,640,5.064,1739,5.392,1746,4.557,1758,4.028,1759,5.052,1771,4.288]],["title/interfaces/MailerOptions.html",[553,1.04,1746,2.812]],["body/interfaces/MailerOptions.html",[3,0.097,4,0.083,5,0.07,9,0.165,10,0.008,21,0.11,27,0.006,28,0.007,29,0.006,33,1.406,72,3.144,83,1.97,553,1.857,555,2.645,557,4.25,912,3.738,1708,5.029,1709,5.029,1710,5.029,1711,4.723,1746,5.022,1771,5.029,1772,6.703,1773,6.703,1774,6.703,1775,6.703,1776,6.703]],["title/interfaces/MailerOptionsFactory.html",[553,1.04,1758,3.125]],["body/interfaces/MailerOptionsFactory.html",[3,0.093,4,0.08,5,0.068,9,0.159,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,35,0.539,36,2.224,41,0.455,48,1.854,49,2.031,83,2.438,553,1.514,555,2.549,563,3.748,565,3.057,640,4.55,1746,5.262,1758,5.458,1771,5.811,1777,5.707,1778,8.604,1779,6.457]],["title/injectables/MailerProcessor.html",[30,1.365,1735,3.125]],["body/injectables/MailerProcessor.html",[3,0.071,4,0.061,5,0.052,9,0.209,10,0.009,12,0.695,21,0.081,22,0.223,24,2.705,25,2.918,27,0.005,28,0.006,29,0.005,30,2.008,31,2.307,35,0.411,36,1.873,37,2.286,41,0.549,43,1.789,44,0.922,45,0.443,46,1.495,48,1.873,49,2.043,54,2.419,83,1.445,107,2.979,113,2.171,121,0.986,227,2.854,273,1.168,292,1.587,349,1.707,563,3.785,565,2.574,846,2.979,848,5.266,862,1.666,960,3.69,1468,7.166,1471,3.69,1472,4.347,1478,4.347,1735,4.595,1746,4.941,1753,3.69,1754,4.347,1757,4.347,1780,4.347,1781,7.317,1782,7.365,1783,5.764,1784,4.918,1785,4.918,1786,6.522,1787,4.918,1788,4.918,1789,6.522,1790,5.764,1791,4.918,1792,3.279,1793,4.347,1794,3.69,1795,4.918,1796,4.918,1797,4.918,1798,4.918,1799,4.918]],["title/injectables/MailerService.html",[30,1.365,631,2.686]],["body/injectables/MailerService.html",[3,0.059,4,0.051,5,0.043,9,0.203,10,0.009,12,0.579,21,0.067,22,0.185,24,1.997,25,2.154,27,0.004,28,0.005,29,0.004,30,1.771,31,1.92,35,0.342,36,1.652,37,2.222,41,0.535,43,2.086,44,1.075,45,0.516,46,1.743,48,2.072,49,1.892,54,2.199,56,2.274,60,1.92,61,1.231,63,1.364,64,1.494,107,2.478,121,1.153,144,4.023,145,2.197,168,2.048,202,3.304,229,3.207,256,1.807,291,0.805,336,4.023,511,3.304,563,2.375,565,2.27,631,3.484,841,5.825,844,5.879,845,3.304,846,2.478,849,3.617,882,1.92,925,4.315,974,4.315,1020,5.084,1783,5.084,1792,4.81,1793,3.617,1794,3.07,1800,3.617,1801,5.752,1802,5.752,1803,5.752,1804,4.092,1805,5.752,1806,4.092,1807,4.092,1808,5.752,1809,5.879,1810,5.879,1811,4.092,1812,3.304,1813,5.752,1814,4.092,1815,5.752,1816,4.092,1817,4.99,1818,5.084,1819,4.092,1820,4.092,1821,4.092,1822,4.092,1823,3.07,1824,4.092,1825,4.092,1826,4.092,1827,4.092,1828,4.092,1829,5.752,1830,4.092,1831,4.092,1832,4.092,1833,4.092,1834,5.752,1835,4.092,1836,4.092,1837,4.092,1838,4.092,1839,4.092,1840,4.092]],["title/classes/NoFilesUploaded.html",[22,0.201,1265,2.473]],["body/classes/NoFilesUploaded.html",[3,0.059,4,0.051,5,0.06,9,0.101,10,0.009,12,0.58,21,0.13,22,0.357,27,0.004,28,0.005,29,0.004,33,1.699,35,0.342,41,0.509,45,0.391,63,1.618,121,1.625,269,0.654,273,1.031,291,0.782,349,1.999,422,3.575,423,3.448,424,3.092,588,3.224,861,2.789,862,1.951,894,3.179,942,3.354,1000,3.288,1118,2.483,1147,2.6,1169,4.413,1170,4.139,1175,2.123,1177,2.052,1248,2.286,1249,2.6,1250,3.839,1251,2.733,1253,2.286,1254,2.733,1255,2.733,1256,4.579,1257,3.839,1259,2.733,1261,3.839,1262,2.733,1263,2.733,1264,2.733,1265,3.211,1266,3.652,1267,3.448,1268,4.824,1269,2.733,1270,2.733,1271,2.733,1272,2.286,1273,2.733,1274,4.438,1275,2.733,1276,2.733,1277,2.733,1278,2.286,1279,2.733,1280,2.733,1281,2.733,1282,2.286,1283,2.6,1284,2.733,1285,2.733,1286,2.733,1287,2.286,1288,2.733,1289,2.733,1290,2.733,1291,2.733,1292,2.733,1293,2.733,1841,5.759,1842,4.1,1843,4.1]],["title/interfaces/Pagination.html",[553,1.04,1508,2.957]],["body/interfaces/Pagination.html",[3,0.065,4,0.056,5,0.048,9,0.112,10,0.009,21,0.115,27,0.004,28,0.006,29,0.004,35,0.379,37,1.245,45,0.477,49,1.19,54,1.5,56,2.672,63,0.931,72,3.818,168,4.169,260,3.025,271,2.531,273,1.106,279,2.198,291,0.746,300,2.753,322,2.198,353,3.101,483,2.749,512,4.782,518,3.918,520,3.295,553,1.449,555,1.791,565,1.791,708,4.455,864,3.639,1106,3.405,1134,3.198,1417,5.869,1432,4.782,1507,3.198,1508,4.119,1535,3.198,1548,3.198,1570,4.636,1573,4.636,1574,4.636,1844,3.405,1845,6.36,1846,5.461,1847,4.354,1848,5.658,1849,4.011,1850,4.011,1851,3.664,1852,3.405,1853,4.989,1854,3.664,1855,3.664,1856,3.664,1857,3.664,1858,3.664,1859,3.664,1860,3.405,1861,3.664,1862,3.198,1863,3.664,1864,3.664,1865,3.664,1866,3.664,1867,3.664,1868,3.664,1869,3.664]],["title/classes/PaginationDto.html",[22,0.201,1354,3.327]],["body/classes/PaginationDto.html",[3,0.09,4,0.078,5,0.065,9,0.153,10,0.009,21,0.102,22,0.282,27,0.006,28,0.007,29,0.006,35,0.52,41,0.575,45,0.555,72,3.832,113,3.346,269,0.993,273,1.357,291,0.716,300,2.766,353,3.346,708,4.806,1354,5.686,1417,5.756,1508,5.446,1509,5.506,1845,6.129,1870,5.506,1871,6.229,1872,6.229,1873,6.229]],["title/interfaces/PaginationOptions.html",[553,1.04,1847,3.125]],["body/interfaces/PaginationOptions.html",[3,0.061,4,0.052,5,0.044,9,0.103,10,0.009,21,0.111,27,0.004,28,0.005,29,0.004,35,0.351,37,1.154,45,0.565,46,1.963,49,1.103,54,1.39,56,2.623,63,0.862,72,3.166,168,4.231,249,2.667,260,4.867,271,2.345,273,1.05,279,2.036,291,0.726,300,2.14,322,2.036,353,1.856,483,2.547,512,4.63,515,3.551,518,4.63,520,3.73,553,1.374,555,1.66,565,1.66,708,2.666,864,4.227,1106,5.478,1134,5.145,1417,5.145,1432,5.174,1507,2.963,1508,2.803,1535,2.963,1548,2.963,1570,4.398,1573,4.398,1574,5.761,1844,3.155,1845,5.761,1846,6.454,1847,4.756,1848,6.122,1849,3.717,1850,3.717,1851,3.395,1852,3.155,1853,4.733,1854,3.395,1855,3.395,1856,3.395,1857,3.395,1858,3.395,1859,3.395,1860,3.155,1861,3.395,1862,2.963,1863,3.395,1864,3.395,1865,3.395,1866,3.395,1867,3.395,1868,3.395,1869,3.395]],["title/classes/ParentFolderNotFound.html",[22,0.201,1192,2.473]],["body/classes/ParentFolderNotFound.html",[3,0.059,4,0.051,5,0.043,9,0.101,10,0.009,12,0.58,21,0.13,22,0.357,27,0.004,28,0.005,29,0.004,33,1.699,35,0.342,41,0.509,44,0.941,45,0.278,63,1.618,118,3.01,121,1.625,269,0.654,273,1.031,291,0.795,349,1.999,402,2.543,403,2.201,405,3.097,406,3.188,408,2.939,409,2.789,413,2.855,861,2.789,862,1.951,894,3.179,920,2.789,924,4.026,942,3.354,1051,3.684,1148,2.6,1164,2.052,1167,2.286,1168,2.6,1169,4.413,1170,4.139,1172,2.733,1174,2.733,1175,2.123,1177,2.052,1178,3.839,1179,2.733,1180,2.733,1181,2.286,1182,4.438,1183,2.733,1184,2.733,1185,2.733,1186,2.286,1187,2.733,1188,4.438,1189,2.733,1190,2.733,1191,2.733,1192,3.211,1193,2.733,1194,2.733,1195,2.733,1196,2.286,1197,3.839,1198,2.733,1199,2.733,1200,2.733,1201,2.286,1202,2.733,1203,2.733,1204,2.733,1874,5.759,1875,4.1,1876,4.1]],["title/classes/ParentIsChildrenOfItself.html",[22,0.201,1196,2.473]],["body/classes/ParentIsChildrenOfItself.html",[3,0.059,4,0.051,5,0.043,9,0.101,10,0.009,12,0.579,21,0.129,22,0.357,27,0.004,28,0.005,29,0.004,33,1.698,35,0.342,41,0.508,44,0.941,45,0.278,63,1.617,118,3.008,121,1.624,269,0.653,273,1.03,291,0.794,349,1.997,402,2.539,403,2.197,405,3.26,406,2.936,408,2.936,409,2.785,413,2.467,861,2.785,862,1.948,894,3.177,920,1.982,924,4.023,942,3.352,1051,3.817,1148,3.647,1164,2.048,1167,2.282,1168,2.595,1169,4.412,1170,4.137,1172,2.728,1174,2.728,1175,2.12,1177,2.048,1178,3.835,1179,2.728,1180,2.728,1181,2.282,1182,4.81,1183,2.728,1184,2.728,1185,2.728,1186,2.282,1187,2.728,1188,3.835,1189,2.728,1190,2.728,1191,2.728,1192,2.282,1193,2.728,1194,2.728,1195,2.728,1196,3.207,1197,4.434,1198,2.728,1199,2.728,1200,2.728,1201,2.282,1202,2.728,1203,2.728,1204,2.728,1877,5.752,1878,4.092,1879,4.092]],["title/classes/ParentIsItself.html",[22,0.201,1201,2.473]],["body/classes/ParentIsItself.html",[3,0.059,4,0.051,5,0.043,9,0.101,10,0.009,12,0.58,21,0.13,22,0.357,27,0.004,28,0.005,29,0.004,33,1.699,35,0.342,41,0.509,44,0.941,45,0.278,63,1.618,118,3.01,121,1.625,269,0.654,273,1.031,291,0.795,349,1.999,402,2.543,403,2.201,405,3.262,406,2.939,408,2.939,409,2.789,413,2.47,861,2.789,862,1.951,894,3.179,920,1.985,924,4.026,942,3.354,1051,3.82,1148,2.6,1164,2.052,1167,2.286,1168,2.6,1169,4.413,1170,4.139,1172,2.733,1174,2.733,1175,2.123,1177,2.052,1178,3.839,1179,2.733,1180,2.733,1181,2.286,1182,4.814,1183,2.733,1184,2.733,1185,2.733,1186,2.286,1187,2.733,1188,3.839,1189,2.733,1190,2.733,1191,2.733,1192,2.286,1193,2.733,1194,2.733,1195,2.733,1196,2.286,1197,4.438,1198,2.733,1199,2.733,1200,2.733,1201,3.211,1202,2.733,1203,2.733,1204,2.733,1880,5.759,1881,4.1,1882,4.1]],["title/classes/PartialUserDto.html",[22,0.201,1883,3.327]],["body/classes/PartialUserDto.html",[3,0.064,4,0.055,5,0.073,8,5.224,9,0.109,10,0.009,21,0.073,22,0.202,27,0.004,28,0.006,29,0.004,35,0.372,41,0.57,44,0.862,45,0.573,61,1.338,64,2.225,233,3.161,249,2.024,256,2.691,269,0.71,273,1.092,275,3.878,278,2.72,287,3.07,291,0.819,292,2.612,298,3.399,300,2.73,348,3.692,353,2.691,410,2.773,462,2.227,650,4.064,657,4.968,678,4.41,923,5.702,926,4.296,932,4.296,933,4.296,934,4.064,937,5.524,942,3.282,950,3.339,1006,4.621,1206,4.922,1207,6.039,1211,6.039,1213,4.922,1217,4.922,1221,4.064,1883,4.574,1884,7.324,1885,4.45,1886,5.389,1887,4.45,1888,4.45,1889,4.296,1890,5.389,1891,4.45,1892,4.45,1893,4.922,1894,4.45]],["title/classes/PasswordReset.html",[22,0.201,771,2.957]],["body/classes/PasswordReset.html",[3,0.066,4,0.057,5,0.048,9,0.186,10,0.009,21,0.102,22,0.207,27,0.004,28,0.006,29,0.004,33,1.301,35,0.381,41,0.557,45,0.537,56,1.439,61,1.373,63,0.936,64,3.252,72,2.91,82,2.895,148,2.015,249,2.077,269,0.728,271,3.929,273,1.111,275,3.929,283,3.205,284,4.09,287,3.6,291,0.715,292,2.274,293,4.136,294,4.059,296,4.388,297,5.04,298,3.459,306,3.934,314,5.04,322,2.211,323,5.04,324,3.459,325,3.043,333,2.546,334,2.765,342,3.043,343,3.043,344,3.217,345,3.043,346,2.65,347,3.043,348,3.757,349,1.585,357,3.425,358,3.043,362,3.217,378,3.439,771,4.136,772,3.425,882,2.91,1029,4.965,1032,3.217,1033,4.371,1037,6.104,1041,4.371,1042,3.425,1047,3.686,1048,3.686,1049,3.686,1895,6.584,1896,3.686,1897,4.565,1898,4.565,1899,4.565,1900,4.565,1901,4.565,1902,4.565,1903,4.035,1904,4.565]],["title/guards/RecaptchaGuard.html",[383,3.327,627,3.327]],["body/guards/RecaptchaGuard.html",[3,0.054,4,0.047,5,0.039,9,0.188,10,0.009,12,0.531,21,0.104,22,0.17,24,2.202,25,2.755,27,0.005,28,0.005,29,0.004,30,1.666,35,0.314,36,1.554,37,1.74,38,5.605,39,4.37,40,5.926,41,0.447,43,1.904,44,0.897,45,0.471,46,1.455,47,6.188,48,1.554,49,1.419,54,1.242,56,2.741,57,2.095,58,3.033,60,3.256,61,2.088,63,1.301,71,2.504,78,2.18,81,2.709,113,1.658,121,1.085,142,2.818,144,3.871,145,2.017,229,3.018,249,2.462,279,2.621,291,0.656,338,3.033,362,2.647,417,4.402,463,3.814,467,2.275,511,3.033,588,2.621,606,2.818,607,2.275,627,4.06,666,2.818,698,3.033,700,4.784,704,6.981,706,3.32,708,4.023,715,2.647,727,2.275,748,3.033,753,3.32,754,3.32,915,2.818,1000,1.566,1011,2.462,1687,3.033,1727,5.75,1823,4.76,1905,3.033,1906,6.942,1907,3.757,1908,3.757,1909,3.757,1910,5.412,1911,3.757,1912,3.033,1913,3.033,1914,3.033,1915,3.033,1916,5.607,1917,2.818,1918,3.32,1919,4.37,1920,3.32,1921,3.033,1922,3.32,1923,3.033,1924,3.32,1925,3.757,1926,3.757,1927,3.757,1928,3.757,1929,3.757,1930,3.757,1931,3.757,1932,3.757,1933,3.757,1934,3.757,1935,5.412,1936,3.757,1937,3.757,1938,3.757,1939,3.757,1940,3.757,1941,3.757,1942,3.757,1943,3.757,1944,3.757,1945,3.757,1946,3.757,1947,3.757,1948,5.412,1949,5.412,1950,3.757]],["title/classes/RegisterDto.html",[22,0.201,598,3.327]],["body/classes/RegisterDto.html",[3,0.072,4,0.062,5,0.052,9,0.123,10,0.009,21,0.082,22,0.298,27,0.005,28,0.006,29,0.005,35,0.417,41,0.552,45,0.532,269,0.796,273,1.18,291,0.819,292,2.53,294,2.681,296,2.898,308,3.746,318,2.271,583,3.659,598,4.942,646,3.589,657,4.729,894,3.427,896,5.226,897,5.226,909,4.729,911,4.729,912,4.111,913,4.032,951,4.642,1035,5.194,1586,5.319,1587,4.391,1588,4.032,1727,5.531,1729,4.413,1951,4.413,1952,4.993,1953,5.319,1954,4.993,1955,4.993,1956,4.993,1957,5.822,1958,6.928,1959,4.413,1960,4.993,1961,5.822,1962,4.993,1963,4.032,1964,4.413]],["title/classes/ResetPasswordDto.html",[22,0.201,602,3.327]],["body/classes/ResetPasswordDto.html",[3,0.083,4,0.072,5,0.06,9,0.142,10,0.009,21,0.095,22,0.327,27,0.005,28,0.007,29,0.005,35,0.481,41,0.509,45,0.49,61,2.172,96,2.928,269,0.918,273,1.293,291,0.782,292,2.331,296,3.342,318,2.62,378,3.874,583,3.727,602,5.417,696,5.558,891,5.088,894,3.179,896,4.814,897,4.814,909,4.578,911,4.578,912,3.211,1118,3.488,1585,4.65,1953,4.65,1963,5.83,1965,6.972,1966,5.759,1967,5.759,1968,5.759,1969,5.759]],["title/interfaces/SendMailOptions.html",[553,1.04,1792,2.957]],["body/interfaces/SendMailOptions.html",[3,0.093,4,0.08,5,0.068,9,0.19,10,0.008,21,0.106,27,0.006,28,0.007,29,0.006,33,1.35,35,0.538,45,0.563,46,1.773,273,1.385,336,3.591,515,4.683,553,1.51,555,2.541,557,4.083,974,5.801,1792,5.155,1794,5.801,1809,5.691,1810,5.691,1812,5.199,1817,6.449,1970,5.691,1971,6.439,1972,6.439]],["title/classes/SessionDto.html",[22,0.201,1645,3.125]],["body/classes/SessionDto.html",[3,0.082,4,0.071,5,0.06,9,0.139,10,0.009,21,0.093,22,0.324,27,0.005,28,0.007,29,0.005,35,0.474,41,0.61,45,0.597,269,0.905,273,1.281,280,5.223,283,3.563,287,3.158,291,0.818,292,1.831,300,2.611,320,3.164,430,5.878,515,3.436,607,4.745,609,5.878,668,3.998,670,4.257,672,4.257,1221,5.223,1645,5.04,1652,5.015,1653,5.015,1654,5.015,1973,5.015,1974,7.834,1975,7.153,1976,5.674,1977,5.674,1978,5.674,1979,5.674,1980,5.674,1981,5.674]],["title/controllers/SessionsController.html",[0,2.08,1982,3.327]],["body/controllers/SessionsController.html",[0,2.032,2,2.032,3,0.062,4,0.054,5,0.045,7,2.747,9,0.206,10,0.009,11,2.888,12,0.613,21,0.071,22,0.271,23,2.168,24,1.504,27,0.004,28,0.006,29,0.004,34,2.624,35,0.362,36,1.719,37,1.881,41,0.483,43,1.881,44,0.97,45,0.466,46,1.572,48,1.969,49,2.105,54,1.432,56,1.365,63,1.406,278,2.567,283,3.871,291,0.829,292,2.213,319,3.25,320,2.416,443,3.829,461,5.549,462,2.168,464,2.326,465,3.053,475,2.888,476,3.25,477,3.25,478,3.25,480,3.25,489,3.498,493,3.498,589,5.078,590,5.217,630,3.498,662,6.537,674,5.144,783,5.144,784,3.625,828,3.498,1645,3.053,1982,4.49,1983,3.829,1984,6.857,1985,5.985,1986,5.985,1987,4.332,1988,6.857,1989,4.332,1990,4.332,1991,4.332,1992,4.332,1993,4.332,1994,4.332,1995,4.332,1996,3.829,1997,4.332,1998,4.332,1999,4.332,2000,4.332,2001,4.332,2002,4.332,2003,4.332,2004,4.332,2005,4.332,2006,4.332,2007,4.332,2008,4.332,2009,4.332,2010,4.332]],["title/modules/SessionsModule.html",[83,1.303,134,2.812]],["body/modules/SessionsModule.html",[2,3.48,3,0.087,4,0.075,5,0.063,9,0.198,10,0.009,12,0.851,21,0.099,22,0.272,27,0.006,28,0.007,29,0.006,83,2.364,85,2.913,86,3.011,87,3.23,88,3.23,89,3.23,90,4.32,91,4.32,95,3.984,96,2.44,97,3.23,134,5.645,784,5.578,1982,6.036,1996,5.318,2011,5.318,2012,5.318,2013,5.318,2014,6.016,2015,6.016]],["title/injectables/SessionsService.html",[30,1.365,784,2.686]],["body/injectables/SessionsService.html",[3,0.069,4,0.059,5,0.05,9,0.189,10,0.009,12,0.672,21,0.078,22,0.215,24,1.651,25,2.879,27,0.004,28,0.006,29,0.004,30,1.963,31,2.23,35,0.397,36,1.831,37,2.264,41,0.581,43,2.199,44,1.134,45,0.544,46,1.838,48,2.207,49,2.247,54,2.108,63,1.308,121,0.954,148,2.099,273,1.142,322,2.302,349,1.651,440,4.043,464,3.424,483,3.862,510,4.493,518,5.684,520,3.606,521,5.636,523,5.148,525,5.148,527,4.784,783,5.398,784,3.862,862,1.611,1647,3.567,2016,4.203,2017,4.755,2018,8.253,2019,6.377,2020,4.755,2021,4.755,2022,4.755,2023,4.755,2024,6.377,2025,4.755,2026,4.755,2027,4.755,2028,4.755,2029,4.755,2030,4.755,2031,4.755]],["title/interfaces/StorageEngine.html",[553,1.04,955,2.686]],["body/interfaces/StorageEngine.html",[3,0.081,4,0.07,5,0.059,9,0.138,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,35,0.47,36,2.045,41,0.55,43,2.142,44,1.104,45,0.53,46,1.79,48,2.242,49,2.266,104,3.823,278,2.71,291,0.847,464,3.823,553,1.32,555,2.223,556,5.78,955,4.312,958,5.342,959,5.748,967,4.746,969,4.729,970,5.017,972,4.746,975,5.205,976,3.268,2032,4.978,2033,5.632,2034,5.632,2035,5.632]],["title/modules/StorageModule.html",[83,1.303,1450,2.957]],["body/modules/StorageModule.html",[3,0.056,4,0.049,5,0.041,9,0.191,10,0.009,12,0.551,21,0.064,22,0.177,25,2.795,27,0.004,28,0.005,29,0.004,36,1.119,37,1.524,41,0.497,43,1.937,44,0.998,45,0.479,46,1.619,48,2.027,49,1.022,63,1.591,83,2.399,85,1.887,86,1.951,87,2.093,88,2.093,89,2.093,90,4.007,91,3.477,95,2.984,96,1.58,97,2.093,138,2.262,227,3.225,228,3.524,266,6.264,267,2.746,278,1.353,361,3.915,554,6.322,562,4.097,563,3.225,564,3.915,565,3.062,566,3.445,574,2.924,882,1.828,977,4.317,1169,4.023,1357,4.998,1450,5.538,1737,3.445,1738,4.911,1741,6.597,1742,3.445,1743,4.911,1745,4.911,1748,6.597,1749,3.445,1750,4.911,1761,5.724,1762,3.445,1763,3.445,1764,4.911,1765,5.724,1766,4.911,1767,5.724,1768,3.445,1769,3.445,2036,3.445,2037,3.445,2038,3.445,2039,3.897,2040,3.897,2041,3.897,2042,3.897,2043,3.897,2044,5.228,2045,5.296,2046,3.445,2047,3.897,2048,3.897]],["title/interfaces/StorageOptions.html",[553,1.04,562,2.574]],["body/interfaces/StorageOptions.html",[3,0.093,4,0.08,5,0.067,9,0.19,10,0.009,21,0.105,27,0.006,28,0.007,29,0.006,35,0.536,45,0.562,83,1.887,273,1.382,515,4.675,553,1.505,555,2.534,556,4.524,557,4.072,562,4.48,961,5.439,984,4.072,1461,6.443,1595,5.439,2049,5.675,2050,5.675,2051,5.675,2052,5.675]],["title/interfaces/StorageOptionsFactory.html",[553,1.04,564,3.125]],["body/interfaces/StorageOptionsFactory.html",[3,0.093,4,0.08,5,0.068,9,0.159,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,35,0.539,36,2.224,41,0.455,48,1.854,49,2.031,83,2.438,154,3.232,553,1.514,555,2.549,556,5.458,562,4.816,563,3.748,564,5.458,565,3.057,2053,5.707,2054,8.604,2055,6.457]],["title/injectables/StorageService.html",[30,1.365,1357,2.574]],["body/injectables/StorageService.html",[3,0.038,4,0.033,5,0.054,9,0.209,10,0.009,12,0.377,21,0.044,22,0.121,24,0.926,25,2.634,27,0.002,28,0.004,29,0.002,30,1.287,31,1.251,35,0.223,36,1.201,37,2.102,41,0.496,43,1.74,44,0.897,45,0.457,46,1.454,48,1.821,49,1.765,54,1.383,56,2.568,57,2.876,60,1.251,61,2.252,63,1.494,64,1.883,81,3.645,83,0.784,104,2.77,113,1.178,121,0.535,227,1.548,256,1.846,273,0.749,278,2.027,291,0.636,300,0.974,320,1.487,333,1.487,334,1.615,349,0.926,353,1.178,464,2.245,562,3.389,563,2.427,565,2.503,605,2.358,663,2.001,672,3.138,685,2.154,686,2.154,688,2.154,727,1.615,731,1.691,853,2.947,862,0.903,953,3.635,955,3.124,960,2.001,969,3.124,972,2.788,975,1.778,976,2.994,977,2.788,978,1.879,981,2.788,984,2.652,1061,1.548,1248,1.487,1253,2.876,1265,2.332,1267,1.382,1272,2.332,1278,2.332,1282,2.332,1287,2.332,1357,2.427,1379,2.001,1387,3.696,1433,4.381,1461,3.87,1591,1.879,1655,2.788,1658,3.696,1659,4.559,1660,3.376,1782,5.948,1823,2.001,1852,2.001,1917,3.87,2045,2.001,2046,2.358,2049,2.358,2050,2.358,2051,2.358,2052,3.696,2056,2.358,2057,5.158,2058,3.696,2059,4.182,2060,2.667,2061,2.667,2062,6.219,2063,2.667,2064,4.182,2065,2.667,2066,2.667,2067,4.182,2068,2.667,2069,4.182,2070,4.381,2071,2.667,2072,4.182,2073,2.667,2074,3.376,2075,5.606,2076,2.667,2077,2.667,2078,3.376,2079,3.138,2080,2.667,2081,2.667,2082,2.667,2083,3.138,2084,2.667,2085,5.158,2086,2.001,2087,2.358,2088,2.667,2089,2.667,2090,4.182,2091,2.667,2092,2.667,2093,2.667,2094,2.667,2095,2.667,2096,2.667,2097,3.138,2098,2.358,2099,2.667,2100,2.667,2101,2.154,2102,5.84,2103,5.158,2104,2.667,2105,4.182,2106,2.667,2107,2.667,2108,2.667,2109,2.667,2110,5.158,2111,2.667,2112,2.667,2113,2.667,2114,2.667,2115,2.667,2116,4.182,2117,2.667,2118,4.182,2119,2.667,2120,2.667,2121,2.667,2122,2.667,2123,2.667,2124,4.182,2125,2.667,2126,2.667,2127,2.667,2128,2.667,2129,5.84,2130,2.667,2131,2.667,2132,2.667,2133,2.667,2134,2.667,2135,2.667,2136,2.667,2137,2.667,2138,2.667,2139,2.667,2140,2.667,2141,2.667,2142,2.358,2143,2.667]],["title/classes/StreamMeter.html",[22,0.201,2083,3.327]],["body/classes/StreamMeter.html",[3,0.08,4,0.069,5,0.058,9,0.137,10,0.009,21,0.091,22,0.252,25,2.907,27,0.005,28,0.007,29,0.005,33,1.482,35,0.465,36,2.029,41,0.547,43,1.526,44,0.787,45,0.48,46,1.276,48,1.598,63,1.141,104,3.793,269,0.887,273,1.265,291,0.734,349,1.931,861,3.421,862,1.884,864,3.659,882,3.314,976,3.229,979,4.978,1061,4.506,2083,5.3,2097,5.824,2101,4.492,2144,7.219,2145,4.917,2146,7.763,2147,7.763,2148,7.065,2149,5.563,2150,7.065,2151,6.862,2152,7.763,2153,8.167,2154,5.563,2155,5.563,2156,5.563,2157,7.065,2158,5.563]],["title/classes/TooManyApplications.html",[22,0.201,420,2.686]],["body/classes/TooManyApplications.html",[3,0.081,4,0.07,5,0.059,9,0.139,10,0.009,12,0.798,21,0.139,22,0.384,27,0.005,28,0.007,29,0.005,33,1.814,41,0.398,44,0.798,50,3.453,121,1.734,269,0.9,279,2.734,281,3.031,291,0.534,369,3.58,400,3.419,401,3.764,402,3.148,403,3.031,405,3.521,406,3.148,407,3.978,408,2.492,409,2.734,410,2.568,411,3.419,412,5.025,413,2.421,414,3.419,415,3.764,416,3.764,417,3.58,418,3.419,419,2.492,420,4.319,421,3.031,422,3.031,423,2.924,424,3.031,425,3.148,426,3.978,2159,5.646]],["title/classes/TooManyFields.html",[22,0.201,1272,2.473]],["body/classes/TooManyFields.html",[3,0.059,4,0.051,5,0.06,9,0.1,10,0.009,12,0.577,21,0.129,22,0.357,27,0.004,28,0.005,29,0.004,33,1.697,35,0.34,41,0.507,45,0.39,63,1.615,121,1.622,269,0.65,273,1.027,291,0.781,349,1.992,422,3.868,423,3.731,424,3.081,588,3.488,861,2.778,862,1.943,894,3.174,942,3.349,1000,3.283,1118,2.47,1147,3.638,1169,4.41,1170,4.133,1175,2.112,1177,2.041,1248,2.274,1249,2.586,1250,3.825,1251,2.718,1253,2.274,1254,2.718,1255,2.718,1256,4.209,1257,3.825,1259,2.718,1261,3.825,1262,2.718,1263,2.718,1264,2.718,1265,2.274,1266,2.586,1267,2.972,1268,4.814,1269,2.718,1270,2.718,1271,2.718,1272,3.199,1273,3.825,1274,4.802,1275,2.718,1276,2.718,1277,2.718,1278,2.274,1279,2.718,1280,2.718,1281,2.718,1282,2.274,1283,2.586,1284,2.718,1285,2.718,1286,2.718,1287,2.274,1288,2.718,1289,2.718,1290,2.718,1291,2.718,1292,2.718,1293,2.718,2160,5.738,2161,4.078,2162,4.078]],["title/classes/TooManyFiles.html",[22,0.201,1278,2.473]],["body/classes/TooManyFiles.html",[3,0.059,4,0.051,5,0.06,9,0.1,10,0.009,12,0.576,21,0.129,22,0.356,27,0.004,28,0.005,29,0.004,33,1.696,35,0.34,41,0.507,45,0.389,63,1.614,121,1.621,269,0.649,273,1.026,291,0.78,349,1.989,422,3.865,423,3.728,424,3.561,588,3.486,861,2.775,862,1.941,894,3.173,942,3.348,1000,3.281,1118,2.465,1147,2.581,1169,4.41,1170,4.132,1175,2.108,1177,2.037,1248,2.27,1249,2.581,1250,3.82,1251,2.714,1253,2.27,1254,2.714,1255,2.714,1256,4.564,1257,3.82,1259,2.714,1261,3.82,1262,2.714,1263,2.714,1264,2.714,1265,2.27,1266,2.581,1267,3.435,1268,4.811,1269,2.714,1270,2.714,1271,2.714,1272,2.27,1273,2.714,1274,4.799,1275,2.714,1276,2.714,1277,2.714,1278,3.195,1279,2.714,1280,2.714,1281,2.714,1282,2.27,1283,2.581,1284,2.714,1285,2.714,1286,2.714,1287,2.27,1288,2.714,1289,2.714,1290,2.714,1291,2.714,1292,2.714,1293,2.714,2163,5.731,2164,4.071,2165,4.071]],["title/classes/TooManyParts.html",[22,0.201,1282,2.473]],["body/classes/TooManyParts.html",[3,0.059,4,0.051,5,0.06,9,0.1,10,0.009,12,0.577,21,0.129,22,0.357,27,0.004,28,0.005,29,0.004,33,1.697,35,0.34,41,0.507,45,0.39,63,1.615,121,1.622,269,0.65,273,1.027,291,0.781,349,1.992,422,3.868,423,3.731,424,3.564,588,3.488,861,2.778,862,1.943,894,3.174,942,3.349,1000,3.283,1118,2.47,1147,2.586,1169,4.41,1170,4.133,1175,2.112,1177,2.041,1248,2.274,1249,2.586,1250,3.825,1251,2.718,1253,2.274,1254,2.718,1255,2.718,1256,4.209,1257,3.825,1259,2.718,1261,3.825,1262,2.718,1263,2.718,1264,2.718,1265,2.274,1266,2.586,1267,2.972,1268,4.814,1269,2.718,1270,2.718,1271,2.718,1272,2.274,1273,2.718,1274,4.802,1275,2.718,1276,2.718,1277,2.718,1278,2.274,1279,2.718,1280,2.718,1281,2.718,1282,3.199,1283,3.638,1284,2.718,1285,2.718,1286,2.718,1287,2.274,1288,2.718,1289,2.718,1290,2.718,1291,2.718,1292,2.718,1293,2.718,2166,5.738,2167,4.078,2168,4.078]],["title/classes/UnsupportedContentType.html",[22,0.201,1287,2.473]],["body/classes/UnsupportedContentType.html",[3,0.059,4,0.051,5,0.06,9,0.101,10,0.009,12,0.579,21,0.129,22,0.357,27,0.004,28,0.005,29,0.004,33,1.698,35,0.342,41,0.508,45,0.452,63,1.617,121,1.624,269,0.653,273,1.03,291,0.781,349,1.997,422,3.571,423,3.445,424,3.088,588,3.221,861,2.785,862,1.948,894,3.177,942,3.352,1000,3.169,1118,3.484,1147,2.595,1169,4.412,1170,4.137,1175,2.12,1177,2.048,1248,2.282,1249,2.595,1250,3.835,1251,2.728,1253,2.282,1254,2.728,1255,2.728,1256,4.218,1257,3.835,1259,2.728,1261,4.434,1262,2.728,1263,2.728,1264,2.728,1265,2.282,1266,2.595,1267,2.979,1268,4.575,1269,2.728,1270,2.728,1271,2.728,1272,2.282,1273,2.728,1274,4.434,1275,2.728,1276,2.728,1277,2.728,1278,2.282,1279,2.728,1280,2.728,1281,2.728,1282,2.282,1283,2.595,1284,2.728,1285,2.728,1286,2.728,1287,3.207,1288,3.835,1289,3.835,1290,3.835,1291,2.728,1292,2.728,1293,2.728,2169,5.752,2170,4.092,2171,4.092]],["title/classes/UpdateEntryDto.html",[22,0.201,1326,3.327]],["body/classes/UpdateEntryDto.html",[3,0.069,4,0.06,5,0.05,9,0.178,10,0.009,21,0.079,22,0.291,27,0.004,28,0.006,29,0.004,35,0.402,41,0.51,44,1.23,45,0.547,64,2.347,118,2.007,269,0.768,273,1.151,278,2.232,291,0.783,292,2.337,294,2.585,300,2.82,318,2.19,353,2.839,462,2.41,859,4.531,862,2.178,894,2.783,895,4.824,896,4.287,897,4.287,909,3.732,910,4.824,911,4.202,912,2.685,920,4.095,921,3.887,922,4.876,923,5.101,924,3.586,925,4.824,926,4.531,927,4.256,928,4.256,930,4.256,931,4.256,932,4.531,933,4.531,934,4.287,935,4.256,936,4.256,937,5.151,938,5.684,939,4.531,940,3.887,941,3.887,942,2.936,943,4.256,1051,4.213,1326,4.824,2172,6.829,2173,6.43,2174,4.815]],["title/classes/UpdateUserDto.html",[22,0.201,2175,3.327]],["body/classes/UpdateUserDto.html",[3,0.067,4,0.058,5,0.049,9,0.115,10,0.009,21,0.077,22,0.286,27,0.004,28,0.006,29,0.004,35,0.391,41,0.538,44,0.892,45,0.519,46,1.883,61,2.296,269,0.746,273,1.129,291,0.807,292,2.465,294,2.511,296,2.714,308,3.509,318,2.127,583,3.709,646,3.06,696,5.027,891,4.444,894,3.415,896,5.091,897,5.091,909,4.627,910,5.729,911,4.627,912,4.258,913,3.776,950,3.509,951,3.296,1030,5.76,1035,5.027,1586,5.092,1587,4.204,1588,3.776,1889,5.787,1953,3.776,1957,5.574,1959,4.134,1961,5.574,1963,5.092,1964,4.134,2175,4.731,2176,7.047,2177,6.306,2178,6.749,2179,4.677,2180,4.677,2181,4.677,2182,4.677,2183,4.677,2184,4.677,2185,4.677]],["title/interfaces/UploadedFile.html",[553,1.04,2079,3.327]],["body/interfaces/UploadedFile.html",[3,0.093,4,0.08,5,0.067,9,0.158,10,0.008,21,0.105,27,0.006,28,0.007,29,0.006,33,1.619,35,0.536,45,0.524,273,1.382,278,2.981,291,0.782,553,1.505,555,2.534,864,4.288,1061,4.984,1655,5.518,1657,5.184,2078,5.184,2079,5.792,2186,5.675,2187,5.675]],["title/classes/User.html",[22,0.201,233,1.619]],["body/classes/User.html",[3,0.037,4,0.032,5,0.027,8,3.368,9,0.182,10,0.009,21,0.067,22,0.26,27,0.002,28,0.004,29,0.002,33,0.855,35,0.34,37,0.709,41,0.576,45,0.574,49,1.505,56,1.592,61,0.777,63,1.425,64,3.26,72,3.114,81,2.041,82,2.586,113,1.8,148,1.14,233,2.423,256,3.273,269,0.412,271,3.199,273,0.73,275,2.817,278,2.168,282,4.079,284,2.932,285,4.568,287,3.068,291,0.781,292,2.45,293,3.368,294,3.564,296,2.932,297,4.943,298,3.875,300,2.771,301,3.604,304,2.086,305,5.071,306,4.407,307,4.425,308,4.686,314,4.425,318,1.175,319,1.938,320,1.44,322,1.251,323,5.162,324,2.274,325,1.722,326,4.465,333,1.44,334,1.564,342,1.722,343,2.718,344,1.82,345,2.718,346,2.367,347,2.718,348,3.475,349,2.168,350,2.283,353,2.931,358,1.722,361,1.82,389,2.086,397,2.086,398,2.086,399,2.086,464,3.081,565,1.994,583,2.981,633,3.825,646,2.461,647,2.283,657,2.932,663,1.938,678,3.204,708,2.586,859,1.82,882,1.212,1006,3.199,1029,3.56,1032,3.56,1033,1.82,1035,3.56,1041,2.873,1042,1.938,1058,1.722,1071,2.283,1113,2.283,1164,2.872,1713,1.938,1889,1.82,1958,2.283,2178,2.283,2188,2.086,2189,4.465,2190,5.052,2191,2.583,2192,2.583,2193,2.583,2194,2.583,2195,2.583,2196,2.583,2197,2.583,2198,2.583,2199,2.583,2200,2.583,2201,2.583,2202,2.583,2203,2.583,2204,2.583,2205,2.583,2206,3.604,2207,4.078,2208,5.052,2209,2.583,2210,2.283,2211,2.283,2212,5.052,2213,2.583,2214,5.052,2215,1.938,2216,2.283,2217,4.078,2218,2.583,2219,5.738,2220,2.583,2221,2.583,2222,2.583,2223,2.583,2224,2.583,2225,2.583,2226,2.283,2227,2.583,2228,2.583,2229,2.583,2230,2.583,2231,2.583,2232,2.583,2233,2.583,2234,2.583,2235,2.583,2236,2.583,2237,5.052,2238,2.583,2239,2.583]],["title/classes/UserActivation.html",[22,0.201,775,2.957]],["body/classes/UserActivation.html",[3,0.061,4,0.052,5,0.044,9,0.179,10,0.009,21,0.096,22,0.19,27,0.004,28,0.005,29,0.004,33,1.228,35,0.35,41,0.56,45,0.54,56,1.845,61,1.262,63,0.861,64,3.28,72,2.746,82,2.662,148,1.853,249,1.909,269,0.669,271,3.76,273,1.048,275,3.76,283,3.067,284,3.913,287,3.509,291,0.69,292,2.355,293,3.903,294,3.917,296,4.234,297,4.864,298,4.068,306,3.713,314,4.864,322,2.032,323,5.115,324,3.265,325,2.798,333,2.34,334,2.542,342,2.798,343,2.798,344,2.957,345,2.798,346,2.436,347,2.798,348,3.546,349,2.032,357,3.149,358,2.798,362,2.957,378,3.318,638,3.149,775,3.903,776,3.149,864,3.033,882,3.728,1029,4.751,1032,4.126,1033,4.126,1037,5.89,1041,4.126,1042,3.149,1047,3.389,1048,3.389,1049,3.389,1093,3.71,1094,5.175,1095,3.71,1097,4.727,2211,3.71,2240,6.585,2241,3.389,2242,6.743,2243,4.197,2244,4.197,2245,5.175,2246,5.444,2247,4.197,2248,4.197,2249,4.197,2250,4.197,2251,3.71,2252,4.197]],["title/classes/UserDto.html",[22,0.201,633,2.957]],["body/classes/UserDto.html",[3,0.054,4,0.047,5,0.066,8,4.899,9,0.133,10,0.009,21,0.061,22,0.245,27,0.003,28,0.005,29,0.003,35,0.313,41,0.602,44,0.764,45,0.59,61,1.126,64,1.971,233,3.049,249,1.703,256,2.384,269,0.597,273,0.967,275,3.531,278,2.551,284,3.675,287,3.484,291,0.822,292,2.759,298,3.011,300,2.794,320,2.088,348,3.27,353,3.38,380,4.051,410,3.153,430,5.743,439,3.6,462,1.874,583,2.716,633,3.6,646,3.151,650,3.6,657,4.775,678,4.015,923,5.56,926,3.805,932,3.805,933,3.805,934,3.6,937,5.385,942,3.2,1006,4.4,1029,4.462,1164,3.169,1206,4.359,1207,5.596,1211,5.596,1213,4.359,1217,4.359,1219,6.495,1221,3.6,1240,6.766,1886,4.772,1889,3.805,1890,4.772,1893,4.359,2189,5.597,2253,3.31,2254,3.744,2255,3.744,2256,3.744,2257,3.744,2258,3.744,2259,3.744,2260,3.744,2261,3.744,2262,3.744,2263,3.744,2264,3.744,2265,3.744]],["title/classes/UserNotActivated.html",[22,0.201,717,2.473]],["body/classes/UserNotActivated.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,3.923,96,2.208,121,1.769,233,1.987,269,0.868,405,3.296,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.886,718,3.16,760,3.452,762,3.297,763,3.297,797,3.16,798,3.16,799,3.16,810,3.452,1000,3.204,1011,3.169,1012,3.609,1013,3.609,1661,3.16,1662,3.452,1664,3.629,1665,3.629,1666,3.629,1667,3.629,2266,5.444]],["title/classes/UserNotFound.html",[22,0.201,1016,2.574]],["body/classes/UserNotFound.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.754,21,0.14,22,0.386,27,0.005,28,0.006,29,0.005,33,1.818,41,0.375,43,1.462,44,0.972,45,0.467,46,1.222,68,4.243,121,1.708,269,0.85,291,0.719,378,2.424,402,3.549,406,3.359,408,3.359,413,2.286,419,3.035,520,3.224,646,2.286,680,2.424,997,3.094,998,3.38,1000,2.866,1001,4.583,1002,3.553,1003,3.094,1004,3.553,1005,3.094,1006,2.972,1007,3.553,1008,3.553,1009,3.094,1010,3.228,1011,2.424,1012,2.761,1013,2.761,1014,3.094,1015,3.553,1016,3.989,1017,4.583,1018,3.553,2267,5.33]],["title/classes/UserNotLoggedIn.html",[22,0.201,718,2.574]],["body/classes/UserNotLoggedIn.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.77,21,0.141,22,0.388,27,0.005,28,0.007,29,0.005,33,1.827,41,0.383,50,4.055,96,2.208,121,1.769,233,1.987,269,0.868,405,2.988,410,2.476,419,3.393,421,2.923,572,3.16,583,2.988,680,3.685,717,3.036,718,4.044,760,3.452,762,3.297,763,3.297,797,3.16,798,3.16,799,3.16,810,3.452,1000,3.204,1011,3.169,1012,3.609,1013,3.609,1661,3.16,1662,3.452,1664,3.629,1665,3.629,1666,3.629,1667,3.629,2268,5.444]],["title/classes/UsernameTaken.html",[22,0.201,1014,2.574]],["body/classes/UsernameTaken.html",[3,0.078,4,0.068,5,0.073,9,0.133,10,0.009,12,0.768,21,0.141,22,0.388,27,0.005,28,0.006,29,0.005,33,1.826,41,0.383,44,0.768,45,0.369,68,4.281,121,1.746,269,0.866,291,0.513,378,2.47,402,3.694,406,3.072,408,3.389,413,2.329,419,3.072,520,2.548,646,2.329,680,2.47,997,3.152,998,3.444,1000,2.9,1001,4.638,1002,3.621,1003,3.152,1004,3.621,1005,3.152,1006,3.029,1007,3.621,1008,3.621,1009,3.152,1010,3.29,1011,2.47,1012,2.813,1013,2.813,1014,4.038,1015,3.621,1016,3.152,1017,3.621,1018,3.621,2269,5.431]],["title/controllers/UsersController.html",[0,2.08,2270,3.327]],["body/controllers/UsersController.html",[0,1.466,2,1.466,3,0.045,4,0.039,5,0.05,7,1.982,9,0.213,10,0.009,11,2.084,12,0.442,17,2.537,21,0.051,22,0.142,24,1.978,25,2.133,26,2.996,27,0.003,28,0.004,29,0.003,34,1.893,35,0.261,36,1.357,37,1.968,41,0.505,43,1.968,44,1.053,45,0.487,46,1.644,48,2.059,49,2.098,54,1.883,56,2.149,57,3.802,60,1.466,61,0.94,63,1.471,64,2.318,78,1.814,118,1.97,121,0.627,154,1.565,168,1.565,184,3.815,233,3.099,256,2.515,278,1.085,283,1.422,291,0.678,292,2.315,300,1.141,328,1.814,329,2.203,330,1.982,378,2.149,440,2.996,441,3.15,450,3.815,458,2.524,461,5.116,462,1.565,463,2.203,465,2.203,466,2.524,467,1.893,475,3.798,476,2.345,477,2.345,478,2.345,480,2.345,583,2.026,588,3.075,633,3.798,657,3.306,682,4.177,743,2.203,920,1.514,922,1.893,948,4.764,1005,2.743,1006,2.635,1016,1.814,1054,2.203,1058,2.084,1059,2.203,1060,2.203,1061,1.814,1267,2.448,1338,2.524,1339,2.524,1344,2.862,1349,2.763,1352,2.345,1353,2.763,1357,2.743,1358,2.345,1359,2.524,1379,2.345,1404,2.763,1431,2.763,1432,1.982,1433,2.345,1435,2.763,1660,3.815,1883,2.345,2097,2.345,2101,2.524,2175,4.764,2210,2.763,2270,3.545,2271,2.763,2272,4.177,2273,4.726,2274,4.177,2275,2.763,2276,3.126,2277,4.726,2278,3.126,2279,3.126,2280,3.126,2281,3.126,2282,3.126,2283,3.126,2284,3.126,2285,3.126,2286,3.126,2287,3.126,2288,3.126,2289,3.126,2290,3.126,2291,3.126,2292,3.126,2293,4.177,2294,2.763,2295,2.763,2296,3.126,2297,5.697,2298,3.126,2299,2.524,2300,2.763,2301,3.126,2302,3.126,2303,3.126,2304,3.126,2305,3.126,2306,3.126,2307,3.126,2308,3.126,2309,3.126,2310,3.126,2311,3.126,2312,4.726,2313,3.126,2314,3.126,2315,3.126,2316,3.126,2317,2.763,2318,3.126,2319,3.126,2320,3.126,2321,3.126,2322,3.126,2323,3.126,2324,3.126,2325,3.126,2326,3.126,2327,3.126,2328,3.126,2329,3.126,2330,3.126,2331,3.126,2332,3.126,2333,3.126,2334,3.126,2335,3.126,2336,3.126,2337,3.126,2338,3.126,2339,3.126]],["title/modules/UsersModule.html",[83,1.303,135,3.125]],["body/modules/UsersModule.html",[2,2.946,3,0.067,4,0.058,5,0.049,9,0.217,10,0.009,12,0.657,17,4.766,21,0.076,22,0.211,27,0.004,28,0.006,29,0.004,44,0.888,83,2.09,85,2.251,86,2.327,87,2.496,88,2.496,89,2.496,90,3.819,91,3.819,95,3.372,96,1.885,97,2.496,129,5.466,131,5.199,134,5.199,135,6.36,138,3.645,144,3.966,145,2.496,147,3.276,148,2.052,158,4.109,162,3.753,165,3.753,227,2.698,228,2.948,229,2.592,233,1.697,291,0.439,324,3.502,507,3.488,981,3.099,984,2.948,1026,3.099,1044,4.712,1450,5.304,1457,4.109,1460,4.109,1461,3.488,1462,4.109,2215,4.712,2270,5.336,2295,4.109,2299,3.753,2340,4.109,2341,4.649,2342,4.109,2343,4.109,2344,4.649,2345,4.649,2346,4.109,2347,4.109,2348,4.649,2349,4.649]],["title/injectables/UsersService.html",[17,2.381,30,1.365]],["body/injectables/UsersService.html",[3,0.036,4,0.031,5,0.027,9,0.2,10,0.009,12,0.358,17,2.153,21,0.042,22,0.115,24,2.283,25,2.463,26,3.159,27,0.002,28,0.004,29,0.002,30,1.234,31,1.186,35,0.211,36,1.151,37,2.34,41,0.504,43,1.962,44,1.011,45,0.512,46,1.64,48,1.979,49,2.111,54,2.785,56,1.948,60,3.454,61,2.315,63,1.349,121,0.804,148,1.116,233,3.028,249,1.15,256,1.116,278,1.392,283,2.579,291,0.811,322,1.225,336,3.162,346,2.327,378,1.824,409,1.942,425,2.236,439,2.673,440,2.543,441,3.322,469,3.434,510,2.825,512,4.371,515,2.429,518,4.371,520,2.337,527,3.008,531,1.897,583,3.301,631,3.434,632,2.042,640,3.511,646,2.651,657,3.818,674,1.897,675,4.991,676,4.023,678,3.92,679,4.991,680,2.266,681,3.238,696,3.995,703,2.235,719,2.235,720,2.235,731,1.604,743,2.825,783,3.738,784,3.434,801,2.235,806,2.235,814,4.404,820,3.544,828,2.042,829,2.235,997,2.327,1003,2.892,1009,3.291,1010,3.018,1014,2.327,1026,2.673,1030,5.311,1164,1.266,1267,2.581,1344,3.434,1367,2.235,1494,3.544,1661,2.892,2086,3.008,2087,2.235,2177,5.814,2272,3.544,2274,3.544,2275,3.544,2294,2.235,2299,2.042,2300,2.235,2346,2.235,2347,2.235,2350,2.235,2351,4.983,2352,2.529,2353,2.529,2354,4.01,2355,2.529,2356,4.01,2357,2.529,2358,2.529,2359,2.529,2360,4.01,2361,5.67,2362,2.529,2363,2.529,2364,2.529,2365,2.042,2366,4.01,2367,4.01,2368,2.529,2369,2.042,2370,2.529,2371,2.529,2372,2.529,2373,2.529,2374,6.182,2375,4.01,2376,4.01,2377,2.529,2378,2.529,2379,4.01,2380,2.529,2381,2.529,2382,2.529,2383,2.529,2384,2.529,2385,2.529,2386,2.529,2387,2.529,2388,2.529,2389,2.529,2390,2.529,2391,4.983]],["title/interfaces/WriteOptions.html",[553,1.04,2070,3.327]],["body/interfaces/WriteOptions.html",[3,0.081,4,0.07,5,0.082,9,0.192,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,35,0.469,45,0.53,46,1.879,57,3.964,81,3.903,104,4.401,256,2.48,273,1.273,285,5.197,291,0.737,300,2.05,353,2.48,553,1.317,555,2.217,557,3.562,976,4.126,1379,6.149,1432,5.197,1433,6.149,1655,5.199,1823,4.215,2062,6.893,2070,5.333,2074,4.536,2078,4.536,2097,4.215,2098,6.283,2142,4.966,2187,4.966,2317,7.245,2392,4.966]],["title/coverage.html",[2393,4.911]],["body/coverage.html",[0,2.755,1,1.312,5,0.018,6,1.546,10,0.009,13,1.166,15,1.312,17,0.939,22,0.407,27,0.002,28,0.003,29,0.002,30,2.25,32,1.546,34,1.059,37,0.813,45,0.119,51,1.109,61,0.526,65,1.312,66,1.546,67,1.312,83,1.62,118,1.606,120,1.546,136,1.166,137,2.392,160,1.312,167,1.412,169,1.412,233,0.638,268,1.652,270,3.111,272,1.232,291,0.521,331,1.412,333,0.975,335,1.412,354,1.312,383,2.222,400,1.059,401,3.383,411,1.059,414,1.059,418,1.059,420,1.059,427,1.546,437,1.312,438,1.546,446,1.312,467,1.059,469,1.059,473,1.312,475,1.166,509,1.546,553,1.85,554,1.312,556,3.196,557,3.495,562,1.015,564,1.232,565,1.169,568,1.312,569,1.546,581,1.312,586,1.312,590,1.109,598,1.312,602,1.312,612,1.166,614,1.412,622,1.412,625,1.412,627,1.312,631,1.059,633,1.166,638,1.312,646,0.75,699,3.111,717,0.975,718,1.015,721,1.412,723,1.412,724,1.412,755,1.546,771,1.975,772,1.312,775,1.975,776,1.312,781,1.546,784,1.059,797,1.015,798,1.015,799,1.015,803,1.412,835,1.232,836,1.412,839,1.546,853,1.232,854,1.546,882,4.406,889,2.392,890,1.546,916,1.546,918,1.312,919,1.546,920,0.847,921,2.392,939,1.232,944,1.312,945,1.546,946,1.546,948,1.312,949,1.546,950,2.891,953,1.232,954,2.392,955,1.059,961,1.232,979,1.232,997,1.015,998,3.495,1003,1.015,1005,1.015,1009,1.015,1014,1.015,1016,1.015,1019,1.546,1026,1.975,1027,2.392,1028,2.392,1044,1.312,1051,0.847,1052,3.111,1053,1.232,1092,1.312,1098,1.312,1100,1.312,1167,0.975,1168,3.495,1181,0.975,1186,0.975,1192,0.975,1196,0.975,1201,0.975,1205,1.546,1221,1.166,1248,0.975,1249,3.495,1265,0.975,1272,0.975,1278,0.975,1282,0.975,1287,0.975,1294,1.312,1295,1.546,1296,1.546,1301,1.312,1302,1.546,1326,1.312,1344,1.059,1350,1.412,1352,1.312,1354,1.312,1357,1.015,1451,1.232,1463,1.546,1479,1.546,1505,1.412,1507,1.232,1508,1.166,1584,1.546,1585,2.392,1587,2.569,1591,1.232,1592,2.891,1593,2.891,1595,1.232,1604,1.312,1609,1.312,1610,1.546,1644,1.546,1645,1.232,1647,1.312,1648,1.546,1649,1.546,1650,1.546,1655,1.166,1656,1.546,1657,2.392,1661,1.015,1662,3.495,1669,1.412,1670,1.546,1671,1.412,1672,1.546,1695,1.312,1696,4.135,1697,3.111,1718,1.312,1719,3.111,1722,1.412,1724,1.412,1726,1.546,1735,1.232,1739,1.312,1746,1.109,1752,1.412,1753,1.312,1758,1.232,1771,2.891,1777,1.546,1780,1.546,1792,1.166,1794,1.312,1800,1.546,1844,2.891,1847,1.232,1870,1.546,1883,1.312,1884,1.546,1895,2.392,1896,2.392,1905,4.742,1912,1.412,1913,1.412,1915,1.412,1919,1.412,1921,1.412,1923,1.412,1951,1.546,1965,1.546,1970,1.546,1973,1.546,1982,1.312,1983,1.546,2016,1.546,2032,1.546,2044,1.412,2045,1.312,2053,1.546,2056,1.546,2070,1.312,2079,1.312,2083,1.312,2086,1.312,2144,1.546,2145,1.546,2172,1.546,2175,1.312,2176,1.546,2186,1.546,2188,2.392,2215,1.312,2240,3.111,2241,3.111,2246,1.412,2253,1.546,2270,1.312,2271,1.546,2350,1.546,2365,1.412,2369,1.412,2392,1.546,2393,1.412,2394,1.749,2395,1.749,2396,8.857,2397,8.887,2398,1.546,2399,1.546,2400,1.546,2401,1.546,2402,2.618,2403,1.546,2404,1.546,2405,1.546,2406,8.024,2407,6.853,2408,8.476,2409,5.512,2410,2.618,2411,1.546,2412,2.962,2413,5.075,2414,2.962,2415,6.435,2416,5.873,2417,2.618,2418,2.618,2419,1.546,2420,1.546,2421,1.546,2422,1.546,2423,2.962,2424,1.749,2425,1.749,2426,2.618,2427,2.618,2428,2.618,2429,2.618,2430,1.546,2431,1.546,2432,1.546,2433,1.546,2434,1.546,2435,1.546,2436,1.546,2437,1.546,2438,1.749,2439,1.749]],["title/dependencies.html",[86,2.674,2440,3.69]],["body/dependencies.html",[5,0.053,10,0.009,12,0.711,22,0.3,27,0.005,28,0.006,29,0.005,78,4.292,86,2.515,105,4.443,107,4.007,108,4.058,140,4.443,142,3.771,145,2.699,148,2.219,151,4.964,152,4.964,154,2.515,155,3.771,318,2.286,320,2.803,322,2.434,462,2.515,588,2.434,589,3.044,607,3.044,609,3.771,610,4.443,611,4.443,846,3.044,848,4.058,1041,3.542,1602,4.058,1603,4.058,1623,4.058,1817,3.771,1818,4.443,1917,3.771,2074,4.058,2075,4.443,2206,4.443,2293,4.443,2441,5.026,2442,5.026,2443,5.026,2444,7.859,2445,5.026,2446,5.026,2447,5.026,2448,5.026,2449,5.026,2450,5.026,2451,5.026,2452,5.026,2453,5.026,2454,6.616,2455,5.026,2456,5.026,2457,5.026,2458,5.026,2459,5.026,2460,5.026,2461,5.026,2462,5.026,2463,5.026,2464,5.026,2465,5.026,2466,5.026,2467,5.026,2468,5.026,2469,5.026,2470,4.443,2471,7.396,2472,5.026,2473,5.026,2474,5.026,2475,5.026,2476,5.026,2477,5.026,2478,5.026,2479,5.026,2480,5.026,2481,5.026,2482,5.026,2483,5.026,2484,5.026,2485,5.026,2486,5.026,2487,5.026,2488,5.026,2489,5.026,2490,5.026,2491,5.026]],["title/miscellaneous/enumerations.html",[2492,2.6,2493,4.722]],["body/miscellaneous/enumerations.html",[10,0.009,27,0.006,28,0.007,29,0.006,35,0.552,328,4.557,862,3.042,2492,4.655,2493,5.839,2494,6.606,2495,7.852,2496,6.606,2497,6.606,2498,6.606,2499,6.606,2500,6.606,2501,6.606,2502,6.606,2503,6.606,2504,6.606,2505,6.606,2506,6.606,2507,6.606,2508,6.606]],["title/index.html",[35,0.308,2509,3.261,2510,3.261]],["body/index.html",[4,0.07,10,0.009,27,0.005,28,0.007,29,0.005,202,4.525,425,3.125,942,2.272,1011,2.549,1226,4.953,1671,4.525,1711,3.949,1862,3.949,2058,4.953,2393,4.525,2470,6.885,2511,5.604,2512,5.604,2513,7.098,2514,5.604,2515,5.604,2516,5.604,2517,5.604,2518,5.604,2519,5.604,2520,5.604,2521,5.604,2522,5.604,2523,5.604,2524,8.767,2525,5.604,2526,5.604,2527,5.604,2528,8.631,2529,5.604,2530,7.098,2531,5.604,2532,5.604,2533,5.604,2534,7.098,2535,7.098,2536,5.604,2537,5.604,2538,5.604,2539,7.098,2540,7.098,2541,5.604,2542,5.604,2543,5.604,2544,5.604,2545,5.604,2546,4.525,2547,5.604,2548,5.604,2549,5.604,2550,5.604,2551,5.604,2552,5.604,2553,5.604,2554,5.604,2555,5.604,2556,5.604,2557,5.604,2558,5.604,2559,5.604,2560,5.604,2561,4.525]],["title/license.html",[2509,3.261,2510,3.261,2561,2.979]],["body/license.html",[4,0.092,5,0.054,9,0.059,10,0.008,27,0.003,28,0.002,29,0.002,41,0.096,44,0.193,61,1.312,68,2.677,116,1.206,233,0.498,260,1.594,268,0.761,271,0.761,287,1.056,306,0.865,343,0.91,380,1.794,385,2.822,415,0.91,416,0.91,423,1.239,439,2.908,448,1.206,538,1.206,650,1.594,737,1.206,763,1.449,853,1.685,864,0.707,900,1.206,903,3.877,915,2.877,922,2.908,934,2.129,942,0.97,981,0.91,1021,1.931,1022,1.102,1086,1.206,1104,1.024,1120,1.206,1132,2.578,1236,2.822,1266,1.517,1267,0.707,1381,1.102,1471,1.024,1535,1.685,1536,2.114,1688,1.206,1848,1.024,1860,1.024,1862,2.702,1889,0.961,1914,1.102,2226,1.206,2492,0.961,2546,2.578,2561,7.153,2562,3.835,2563,7.124,2564,3.835,2565,1.364,2566,2.392,2567,8.206,2568,7.23,2569,3.835,2570,4.802,2571,1.364,2572,1.364,2573,1.364,2574,8.276,2575,8.34,2576,1.364,2577,3.193,2578,5.493,2579,1.364,2580,4.802,2581,1.364,2582,4.362,2583,1.364,2584,1.364,2585,7.501,2586,7.997,2587,3.193,2588,3.193,2589,6.228,2590,4.362,2591,5.174,2592,8.129,2593,4.802,2594,1.364,2595,5.174,2596,1.364,2597,1.364,2598,1.364,2599,4.802,2600,6.418,2601,6.589,2602,3.193,2603,6.228,2604,3.835,2605,8.242,2606,7.417,2607,1.364,2608,1.364,2609,6.228,2610,1.364,2611,4.802,2612,1.364,2613,1.364,2614,1.364,2615,1.364,2616,1.364,2617,3.193,2618,2.392,2619,2.392,2620,4.802,2621,4.802,2622,3.193,2623,1.364,2624,6.743,2625,2.392,2626,1.364,2627,1.364,2628,1.364,2629,1.364,2630,1.364,2631,1.364,2632,1.364,2633,1.364,2634,6.013,2635,5.493,2636,1.364,2637,4.362,2638,5.493,2639,1.364,2640,2.392,2641,2.392,2642,1.364,2643,1.364,2644,2.392,2645,2.392,2646,1.364,2647,3.193,2648,3.193,2649,1.364,2650,4.362,2651,1.364,2652,1.364,2653,4.802,2654,1.364,2655,1.364,2656,1.364,2657,1.364,2658,1.364,2659,1.364,2660,1.364,2661,1.364,2662,1.364,2663,1.364,2664,2.392,2665,1.364,2666,1.364,2667,1.364,2668,2.392,2669,2.392,2670,1.364,2671,1.364,2672,3.193,2673,3.835,2674,3.193,2675,1.364,2676,1.364,2677,1.364,2678,1.364,2679,1.364,2680,4.802,2681,3.193,2682,2.392,2683,1.364,2684,1.364,2685,1.364,2686,2.392,2687,4.362,2688,1.364,2689,1.364,2690,1.364,2691,1.364,2692,3.835,2693,2.392,2694,5.771,2695,1.364,2696,1.364,2697,3.835,2698,1.364,2699,3.193,2700,1.364,2701,2.392,2702,5.771,2703,6.228,2704,3.193,2705,3.193,2706,2.392,2707,1.364,2708,3.835,2709,4.362,2710,2.392,2711,4.802,2712,1.364,2713,1.364,2714,1.364,2715,3.193,2716,1.364,2717,1.364,2718,1.364,2719,1.364,2720,3.193,2721,1.364,2722,5.174,2723,1.364,2724,1.364,2725,1.364,2726,1.364,2727,1.364,2728,1.364,2729,3.193,2730,4.802,2731,2.392,2732,3.193,2733,1.364,2734,3.193,2735,1.364,2736,2.392,2737,1.364,2738,2.392,2739,2.392,2740,3.193,2741,1.364,2742,1.364,2743,2.392,2744,1.364,2745,1.364,2746,1.364,2747,1.364,2748,3.193,2749,1.364,2750,2.392,2751,3.193,2752,1.364,2753,1.364,2754,1.364,2755,1.364,2756,2.392,2757,3.193,2758,2.392,2759,1.364,2760,1.364,2761,2.392,2762,4.362,2763,3.835,2764,3.193,2765,3.193,2766,2.392,2767,3.835,2768,1.364,2769,3.193,2770,1.364,2771,1.364,2772,2.392,2773,2.392,2774,3.835,2775,1.364,2776,1.364,2777,3.835,2778,1.364,2779,1.364,2780,2.392,2781,1.364,2782,1.364,2783,4.802,2784,1.364,2785,2.392,2786,5.493,2787,5.771,2788,1.364,2789,1.364,2790,1.364,2791,1.364,2792,1.364,2793,1.364,2794,1.364,2795,2.392,2796,1.364,2797,3.193,2798,1.364,2799,2.392,2800,1.364,2801,1.364,2802,1.364,2803,1.364,2804,1.364,2805,1.364,2806,1.364,2807,1.364,2808,1.364,2809,3.193,2810,1.364,2811,2.392,2812,3.193,2813,3.835,2814,1.364,2815,1.364,2816,1.364,2817,1.364,2818,1.364,2819,1.364,2820,1.364,2821,1.364,2822,1.364,2823,1.364,2824,1.364,2825,1.364,2826,1.364,2827,1.364,2828,3.835,2829,2.392,2830,2.392,2831,1.364,2832,2.392,2833,2.392,2834,1.364,2835,1.364,2836,1.364,2837,1.364,2838,1.364,2839,1.364,2840,2.392,2841,1.364,2842,1.364,2843,3.835,2844,3.193,2845,2.114,2846,1.364,2847,1.364,2848,1.364,2849,1.364,2850,2.392,2851,1.364,2852,1.364,2853,2.392,2854,1.364,2855,3.835,2856,3.193,2857,1.364,2858,1.364,2859,1.364,2860,2.392,2861,1.364,2862,1.364,2863,1.364,2864,2.392,2865,1.364,2866,1.364,2867,1.364,2868,1.364,2869,1.364,2870,6.013,2871,1.364,2872,1.364,2873,1.364,2874,1.364,2875,2.392,2876,1.364,2877,1.364,2878,1.364,2879,3.193,2880,1.364,2881,1.364,2882,1.364,2883,1.364,2884,1.364,2885,1.364,2886,1.364,2887,1.364,2888,1.364,2889,1.364,2890,1.364,2891,1.364,2892,1.364,2893,1.364,2894,1.364,2895,1.364,2896,1.364,2897,1.364,2898,1.364,2899,1.364,2900,1.364,2901,1.364,2902,1.364,2903,1.364,2904,1.364,2905,2.392,2906,1.364,2907,1.364,2908,1.364,2909,2.392,2910,2.392,2911,4.362,2912,1.364,2913,1.364,2914,1.364,2915,1.364,2916,1.364,2917,1.364,2918,1.364,2919,1.364,2920,1.364,2921,1.364,2922,1.364,2923,1.364,2924,1.364,2925,1.364,2926,1.364,2927,2.392,2928,1.364,2929,1.364,2930,1.364,2931,1.364,2932,3.193,2933,1.364,2934,1.364,2935,2.392,2936,1.364,2937,1.364,2938,1.364,2939,1.364,2940,1.364,2941,1.364,2942,1.364,2943,1.364,2944,1.364,2945,1.364,2946,1.364,2947,1.364,2948,1.364,2949,1.364,2950,1.364,2951,1.364,2952,1.364,2953,1.364,2954,1.364,2955,2.392,2956,1.364,2957,1.364,2958,1.364,2959,1.364,2960,1.364,2961,1.364,2962,1.364,2963,1.364,2964,1.364,2965,1.364,2966,1.364,2967,3.835,2968,2.392,2969,1.364,2970,1.364,2971,1.364,2972,1.364,2973,1.364,2974,1.364,2975,1.364,2976,1.364,2977,1.364,2978,1.364,2979,1.364,2980,1.364,2981,1.364,2982,2.392,2983,1.364,2984,1.364,2985,1.364,2986,1.364,2987,1.364,2988,1.364,2989,1.364,2990,1.364,2991,1.364]],["title/modules.html",[85,2.945]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.377,85,3.008,124,4.661,128,4.377,129,4.141,130,4.377,131,3.939,132,4.377,133,4.377,134,3.939,135,4.377,668,6.458,1132,5.016,1450,4.141,2546,7.4,2992,9.166,2993,9.21,2994,6.212]],["title/overview.html",[2995,5.376]],["body/overview.html",[2,1.816,10,0.009,13,5.313,17,4.279,27,0.004,28,0.005,29,0.004,31,1.816,83,1.137,84,5.455,85,1.874,86,1.937,87,2.078,88,2.078,89,2.078,90,2.078,91,2.078,92,3.421,93,3.421,94,3.421,95,2.969,96,1.57,97,2.078,124,6.833,125,3.421,126,3.421,127,3.421,128,5.929,129,5.529,130,5.615,131,5.454,132,4.546,133,6.061,134,5.167,135,6.294,136,4.692,269,0.617,469,4.827,501,3.421,502,3.421,503,3.421,555,1.528,612,5.313,631,4.827,698,3.125,764,3.421,766,3.421,767,3.421,784,4.827,832,3.421,834,3.421,835,4.546,1104,2.904,1344,4.827,1357,4.625,1446,3.421,1447,3.421,1448,3.421,1449,3.421,1450,5.313,1451,4.546,1732,3.421,1733,3.421,1734,3.421,1735,4.546,2011,3.421,2012,3.421,2013,3.421,2036,3.421,2037,3.421,2038,3.421,2340,3.421,2342,3.421,2343,3.421,2995,3.421,2996,3.871,2997,3.421,2998,3.871,2999,3.871,3000,3.871]],["title/miscellaneous/variables.html",[2492,2.6,3001,4.722]],["body/miscellaneous/variables.html",[3,0.023,10,0.009,27,0.001,28,0.003,29,0.001,35,0.132,37,0.744,40,1.183,45,0.505,46,0.622,49,0.711,54,0.521,56,2.015,61,1.568,63,1.069,64,0.575,72,2.445,81,1.357,96,2.592,104,1.456,118,1.487,136,1.808,137,1.273,154,0.789,167,2.189,168,2.793,169,2.189,170,1.394,233,1.302,270,1.273,281,1.456,291,0.829,300,0.575,317,1.394,318,1.233,321,1.911,328,0.915,331,2.189,333,1.512,335,2.189,336,4.247,337,1.394,338,2.189,339,1.394,340,1.394,341,1.394,349,3.04,354,2.034,355,1.394,410,1.927,417,2.262,467,2.161,475,1.808,483,0.955,512,2.262,520,1.272,565,1.408,572,1.574,583,2.829,589,0.955,590,1,607,0.955,614,2.189,622,2.189,625,2.189,638,1.183,646,2.236,650,1.808,668,1.111,670,1.183,678,3.539,680,3.332,685,1.273,686,1.273,688,1.273,699,1.273,708,1,721,2.189,723,2.88,724,2.88,727,0.955,748,1.273,762,2.161,771,1.808,772,2.034,775,1.808,776,2.034,803,2.189,862,2.967,864,3.191,871,1.394,882,0.74,915,1.183,939,1.911,979,1.911,1010,0.955,1011,2.908,1021,4.506,1022,4.506,1026,1.808,1027,1.273,1028,2.189,1044,2.034,1045,1.394,1052,1.273,1061,2.07,1092,2.034,1097,2.189,1098,2.034,1099,1.394,1100,2.034,1101,1.394,1102,1.394,1103,1.394,1104,1.183,1164,0.789,1253,0.879,1300,1.394,1350,2.189,1352,2.034,1381,3.42,1417,2.514,1432,2.686,1471,1.183,1505,2.189,1507,1.911,1535,1.111,1548,1.111,1570,2.034,1573,2.034,1574,1.183,1587,3.182,1592,1.183,1593,2.034,1604,2.034,1686,1.394,1687,1.273,1695,1.183,1696,2.034,1697,2.88,1703,2.189,1705,4.209,1706,1.394,1708,2.034,1709,2.034,1710,2.034,1711,1.911,1712,2.189,1713,3.911,1714,4.209,1715,2.189,1716,2.189,1717,2.189,1718,1.183,1719,2.88,1722,2.189,1723,1.394,1724,2.189,1727,2.677,1752,2.88,1753,2.677,1790,5.208,1792,3.72,1812,4.506,1817,4.187,1844,1.183,1845,3.178,1847,1.111,1848,2.677,1851,1.273,1852,1.183,1853,2.189,1854,1.273,1855,1.273,1856,1.273,1857,1.273,1858,1.273,1859,1.273,1860,1.183,1861,1.273,1862,1.111,1863,1.273,1864,1.273,1865,1.273,1866,1.273,1867,1.273,1868,1.273,1869,1.273,1893,3.42,1895,1.273,1896,2.189,1903,1.394,1905,1.273,1912,2.189,1913,2.189,1914,1.273,1915,2.189,1916,3.153,1917,1.183,1918,1.394,1919,2.189,1920,1.394,1921,2.189,1922,1.394,1923,2.189,1924,1.394,2044,2.88,2045,2.677,2086,2.034,2151,3.153,2188,1.273,2215,2.034,2216,1.394,2240,1.273,2241,2.88,2245,2.397,2246,2.189,2251,1.394,2365,2.189,2369,2.189,2398,1.394,2399,2.397,2400,1.394,2401,2.397,2402,2.397,2403,2.397,2404,2.397,2405,1.394,2410,1.394,2411,2.397,2417,2.397,2418,3.744,2419,1.394,2420,2.397,2421,1.394,2422,2.397,2426,1.394,2427,1.394,2428,2.397,2429,3.744,2430,2.397,2431,1.394,2432,1.394,2433,1.394,2434,1.394,2435,1.394,2436,1.394,2437,1.394,2492,1.111,2845,1.394,2997,1.394,3001,1.394,3002,2.712,3003,1.577,3004,2.712,3005,1.577,3006,1.577,3007,1.577,3008,1.577,3009,1.577,3010,3.568,3011,2.712,3012,1.577,3013,4.236,3014,2.712,3015,2.712,3016,3.568,3017,2.712,3018,1.577,3019,1.577,3020,4.236,3021,5.213,3022,2.712,3023,1.577,3024,2.712,3025,1.577,3026,1.577,3027,1.577,3028,2.712,3029,1.577,3030,1.577,3031,1.577,3032,1.577,3033,1.577,3034,1.577,3035,1.577,3036,1.577,3037,1.577,3038,1.577,3039,1.577,3040,1.577,3041,1.577,3042,2.712,3043,2.712,3044,5.581,3045,3.568,3046,4.236,3047,4.236,3048,5.581,3049,5.581,3050,1.577,3051,2.712,3052,3.568,3053,2.712,3054,3.568,3055,1.577,3056,1.577,3057,1.577,3058,1.577,3059,1.577,3060,1.577,3061,1.577,3062,1.577,3063,1.577,3064,1.577,3065,1.577,3066,2.712,3067,1.577,3068,1.577,3069,1.577,3070,1.577,3071,1.577,3072,1.577,3073,1.577,3074,1.577,3075,1.577,3076,1.577,3077,1.577,3078,1.577,3079,1.577,3080,4.236,3081,1.577,3082,3.568,3083,1.577,3084,1.577,3085,4.236,3086,1.577,3087,1.577,3088,1.577,3089,1.577,3090,1.577,3091,1.577,3092,1.577,3093,1.577,3094,1.577,3095,1.577,3096,1.577,3097,1.577,3098,1.577,3099,1.577,3100,1.577,3101,1.577,3102,1.577,3103,1.577,3104,1.577,3105,1.577,3106,1.577,3107,1.577,3108,1.577,3109,1.577,3110,1.577,3111,1.577]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":882,"title":{},"body":{"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0).length",{"_index":1158,"title":{},"body":{"classes/Entry.html":{}}}],["0.1.13",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["0.26.0",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1636,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2414,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2416,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2415,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["0]+/g",{"_index":1723,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["1).join",{"_index":1560,"title":{},"body":{"injectables/FilesService.html":{}}}],["1..n).ext",{"_index":1564,"title":{},"body":{"injectables/FilesService.html":{}}}],["1.1",{"_index":2566,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2626,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2646,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2655,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2657,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2576,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2583,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2584,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2598,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2610,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2615,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2616,"title":{},"body":{"license.html":{}}}],["1/19",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2222,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2965,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2738,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2968,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2980,"title":{},"body":{"license.html":{}}}],["100",{"_index":1572,"title":{},"body":{"injectables/FilesService.html":{}}}],["1024",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":2996,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2998,"title":{},"body":{"overview.html":{}}}],["16",{"_index":314,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":295,"title":{},"body":{"classes/Application.html":{}}}],["1][field",{"_index":1869,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":1104,"title":{},"body":{"classes/Entry.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2).join(path.sep",{"_index":995,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2564,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2650,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2714,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2700,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2707,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2733,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2741,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2747,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2755,"title":{},"body":{"license.html":{}}}],["20",{"_index":3000,"title":{},"body":{"overview.html":{}}}],["200",{"_index":1640,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1632,"title":{},"body":{"controllers/HealthController.html":{}}}],["25",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":1074,"title":{},"body":{"classes/Entry.html":{}}}],["3",{"_index":372,"title":{},"body":{"classes/Application.html":{}}}],["3.0",{"_index":2652,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2757,"title":{},"body":{"license.html":{}}}],["3.1.5",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["3.18.0",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2758,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2740,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2732,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2794,"title":{},"body":{"license.html":{}}}],["30",{"_index":2851,"title":{},"body":{"license.html":{}}}],["300",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":3078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":305,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":3057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2829,"title":{},"body":{"license.html":{}}}],["5.10.2",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2853,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2871,"title":{},"body":{"license.html":{}}}],["5.3.0",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":538,"title":{},"body":{"injectables/ApplicationsService.html":{},"license.html":{}}}],["51",{"_index":379,"title":{},"body":{"classes/Application.html":{}}}],["512).png",{"_index":2319,"title":{},"body":{"controllers/UsersController.html":{}}}],["59",{"_index":2999,"title":{},"body":{"overview.html":{}}}],["6.4.11",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":448,"title":{},"body":{"controllers/ApplicationsController.html":{},"license.html":{}}}],["64",{"_index":1037,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2997,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0.1",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":3055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":2316,"title":{},"body":{"controllers/UsersController.html":{}}}],["9]+\\\\))+\\\\.${extension",{"_index":1567,"title":{},"body":{"injectables/FilesService.html":{}}}],["_",{"_index":399,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":2057,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":2061,"title":{},"body":{"injectables/StorageService.html":{}}}],["_encoding",{"_index":2152,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":956,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":963,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":957,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":965,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_handleapikey",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handleapikey(req",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession(req",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_id",{"_index":1548,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ISession.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["_renamewithindex",{"_index":1480,"title":{},"body":{"injectables/FilesService.html":{}}}],["_renamewithindex(filename",{"_index":1484,"title":{},"body":{"injectables/FilesService.html":{}}}],["_req",{"_index":2309,"title":{},"body":{"controllers/UsersController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_size",{"_index":2147,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":2148,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":2150,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_validateparent",{"_index":1481,"title":{},"body":{"injectables/FilesService.html":{}}}],["_validateparent(entry",{"_index":1486,"title":{},"body":{"injectables/FilesService.html":{}}}],["_value",{"_index":866,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2949,"title":{},"body":{"license.html":{}}}],["abort",{"_index":2105,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":2132,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":2119,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":2129,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":2102,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2715,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2724,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":985,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2800,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2118,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":2098,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":861,"title":{},"body":{"classes/Counter.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["account",{"_index":410,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/PartialUserDto.html":{},"classes/TooManyApplications.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["account/${activation.token",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["account/:token",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["accurate",{"_index":2991,"title":{},"body":{"license.html":{}}}],["action",{"_index":417,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2863,"title":{},"body":{"license.html":{}}}],["activate",{"_index":762,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["activateaccount",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activateaccount(@param(\"token",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["activateaccount(token",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activated",{"_index":2189,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activation.deleteone",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email.ts",{"_index":2422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.mjml",{"_index":3104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activation.schema",{"_index":778,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["activation.schema.ts",{"_index":2241,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":2243,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":2250,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":2244,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":2247,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":2248,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":2249,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["actually",{"_index":2225,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":1860,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["addition",{"_index":2628,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2709,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2779,"title":{},"body":{"license.html":{}}}],["address",{"_index":3052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2818,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2651,"title":{},"body":{"license.html":{}}}],["again",{"_index":1687,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2856,"title":{},"body":{"license.html":{}}}],["agent",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2805,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2951,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2874,"title":{},"body":{"license.html":{}}}],["all(@currentuser(\"id",{"_index":481,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["all(uid",{"_index":442,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["alleging",{"_index":2865,"title":{},"body":{"license.html":{}}}],["allow",{"_index":737,"title":{},"body":{"guards/AuthGuard.html":{},"license.html":{}}}],["allowed",{"_index":426,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["alone",{"_index":2804,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":1964,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":1959,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["already",{"_index":408,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["alter",{"_index":2767,"title":{},"body":{"license.html":{}}}],["always",{"_index":1213,"title":{},"body":{"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["amazing",{"_index":2547,"title":{},"body":{"index.html":{}}}],["amont",{"_index":1273,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["amount",{"_index":424,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/FileTooLarge.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["angular",{"_index":2520,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2906,"title":{},"body":{"license.html":{}}}],["api",{"_index":369,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["api_key_secret",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["apibody",{"_index":1335,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes",{"_index":1336,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes(\"multipart/form",{"_index":1420,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiexcludeendpoint",{"_index":461,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["apiexcludeendpoint()@delete('/:id/delete",{"_index":456,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["apiexcludeendpoint()@delete('/:id/revoke",{"_index":1991,"title":{},"body":{"controllers/SessionsController.html":{}}}],["apiexcludeendpoint()@delete('all",{"_index":1994,"title":{},"body":{"controllers/SessionsController.html":{}}}],["apiexcludeendpoint()@delete('logout",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint()@get",{"_index":443,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/SessionsController.html":{}}}],["apiexcludeendpoint()@get('activate",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint()@get('confirm",{"_index":2276,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiexcludeendpoint()@patch('/:id/update",{"_index":459,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["apiexcludeendpoint()@patch('@me/update",{"_index":2291,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiexcludeendpoint()@post('/:id/create",{"_index":452,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["apiexcludeendpoint()@post('@me/avatar",{"_index":2289,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiexcludeendpoint()@post('@me/delete",{"_index":2280,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiexcludeendpoint()@post('create')@throttle(25",{"_index":447,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["apiexcludeendpoint()@post('forgot",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint()@post('login')@recaptchaaction('login')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint()@post('register')@recaptchaaction('register')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexcludeendpoint()@post('reset",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["apihideproperty",{"_index":1240,"title":{},"body":{"classes/EntryDto.html":{},"classes/UserDto.html":{}}}],["apihideproperty()@exclude",{"_index":1219,"title":{},"body":{"classes/EntryDto.html":{},"classes/UserDto.html":{}}}],["apiproperty",{"_index":937,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/FileUploadDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({description",{"_index":923,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({format",{"_index":1297,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["apiresponse",{"_index":1337,"title":{},"body":{"controllers/FilesController.html":{}}}],["apisecurity",{"_index":1338,"title":{},"body":{"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apisecurity(\"api_key",{"_index":1359,"title":{},"body":{"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":1339,"title":{},"body":{"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apitags(\"files",{"_index":1360,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags(\"health",{"_index":1624,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"users",{"_index":2301,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":2526,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2639,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2750,"title":{},"body":{"license.html":{}}}],["application",{"_index":268,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"coverage.html":{},"license.html":{}}}],["application.comparekey(key",{"_index":735,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.createkey(this.config.get(\"api_key_secret",{"_index":543,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.deleteone",{"_index":545,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":472,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":890,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:14",{"_index":906,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.dto.ts:9",{"_index":898,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.hassufficientscopes(scopes",{"_index":742,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.name",{"_index":508,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["application.save",{"_index":552,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes",{"_index":548,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes.addtoset(scope",{"_index":551,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.todto",{"_index":486,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.uid",{"_index":744,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.updateone",{"_index":745,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application[\"name",{"_index":535,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application[\"uid",{"_index":536,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationalreadyexists",{"_index":400,"title":{"classes/ApplicationAlreadyExists.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applicationalreadyexists(name",{"_index":540,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationdto",{"_index":272,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":411,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applications",{"_index":425,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["applications.controller",{"_index":505,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":532,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.map((application",{"_index":485,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["applications.service",{"_index":470,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":354,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.comparekey",{"_index":363,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.createkey",{"_index":367,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.hassufficientscopes",{"_index":391,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":394,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":356,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":437,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationscopes",{"_index":328,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["applicationsmodule",{"_index":128,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":469,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2927,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":567,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1678,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["array.from(new",{"_index":549,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["arrayunique",{"_index":907,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["arrayunique({message",{"_index":899,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["asserting",{"_index":2857,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2895,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":554,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":721,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["atob(req.headers.authorization",{"_index":732,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attached",{"_index":2588,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2766,"title":{},"body":{"license.html":{}}}],["auth",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["auth.controller",{"_index":770,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.ts",{"_index":2401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_optional",{"_index":723,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_scopes",{"_index":724,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":568,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":129,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2554,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2901,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":612,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":343,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":1132,"title":{},"body":{"classes/Entry.html":{},"license.html":{},"modules.html":{}}}],["avatar",{"_index":1006,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["avatar.filename",{"_index":2321,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id",{"_index":2320,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id).then((user",{"_index":2325,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.size",{"_index":2322,"title":{},"body":{"controllers/UsersController.html":{}}}],["avoid",{"_index":373,"title":{},"body":{"classes/Application.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2603,"title":{},"body":{"license.html":{}}}],["back",{"_index":2847,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2548,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1000,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1947,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1928,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64",{"_index":376,"title":{},"body":{"classes/Application.html":{}}}],["base64\").tostring(\"binary",{"_index":3030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basis",{"_index":2697,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":2206,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":2224,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":2221,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2705,"title":{},"body":{"license.html":{}}}],["before",{"_index":3109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":2799,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2744,"title":{},"body":{"license.html":{}}}],["below",{"_index":3054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below.\\n",{"_index":3047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beneficial",{"_index":2679,"title":{},"body":{"license.html":{}}}],["binary",{"_index":1298,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["binary\")).tostring(\"base64",{"_index":3033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":837,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":838,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":839,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":843,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":463,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{}}}],["body[\"error",{"_index":1936,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":353,"title":{},"body":{"classes/Application.html":{},"classes/Counter.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2950,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2937,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2993,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["btoa",{"_index":331,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["btoa(key",{"_index":390,"title":{},"body":{"classes/Application.html":{}}}],["bucket",{"_index":1594,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1605,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":2151,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":3032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":3029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(this.key",{"_index":366,"title":{},"body":{"classes/Application.html":{}}}],["buffer.tostring",{"_index":1827,"title":{},"body":{"injectables/MailerService.html":{}}}],["building",{"_index":2514,"title":{},"body":{"index.html":{}}}],["bull",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":130,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":835,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1453,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1458,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":2075,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":2064,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":2142,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":2115,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2943,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1790,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["bytes",{"_index":1232,"title":{},"body":{"classes/EntryDto.html":{}}}],["c",{"_index":2723,"title":{},"body":{"license.html":{}}}],["callback",{"_index":2097,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":2315,"title":{},"body":{"controllers/UsersController.html":{}}}],["callback(null",{"_index":2101,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2594,"title":{},"body":{"license.html":{}}}],["catch",{"_index":731,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["catch((error",{"_index":1113,"title":{},"body":{"classes/Entry.html":{},"classes/User.html":{}}}],["catch(error",{"_index":362,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1677,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1680,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":2109,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2670,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2718,"title":{},"body":{"license.html":{}}}],["cb",{"_index":873,"title":{},"body":{"classes/Counter.html":{}}}],["changed",{"_index":1893,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["changed.email",{"_index":2367,"title":{},"body":{"injectables/UsersService.html":{}}}],["changed.email.ts",{"_index":2429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["changed.mjml",{"_index":3043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":2912,"title":{},"body":{"license.html":{}}}],["characters",{"_index":897,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["charge",{"_index":2772,"title":{},"body":{"license.html":{}}}],["check",{"_index":1861,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1136,"title":{},"body":{"classes/Entry.html":{}}}],["child.id",{"_index":1546,"title":{},"body":{"injectables/FilesService.html":{}}}],["child.path",{"_index":1137,"title":{},"body":{"classes/Entry.html":{}}}],["child.path.substr(this.path.length",{"_index":1138,"title":{},"body":{"classes/Entry.html":{}}}],["child.save",{"_index":1139,"title":{},"body":{"classes/Entry.html":{}}}],["children",{"_index":1148,"title":{},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["choice",{"_index":2736,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2795,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":979,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":2158,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":994,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunks",{"_index":3036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2902,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2859,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2636,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2635,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":1505,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clamp(1",{"_index":1571,"title":{},"body":{"injectables/FilesService.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":269,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":2207,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":2208,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2801,"title":{},"body":{"license.html":{}}}],["client",{"_index":1604,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1597,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":2051,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1593,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1596,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1598,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1601,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1599,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1600,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1603,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":2214,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":501,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":502,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_providers",{"_index":503,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":764,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":766,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":765,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":767,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":832,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":833,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":834,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1446,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1448,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1447,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1449,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1732,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1733,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1734,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule",{"_index":2011,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_exports",{"_index":2012,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_providers",{"_index":2013,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":2036,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":2037,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":2038,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2340,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2342,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2341,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2343,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2585,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1937,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["collation",{"_index":1106,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["collation(entry_collation_options",{"_index":1160,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["collation(options.collation",{"_index":1857,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["collationoptions",{"_index":1846,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["combination",{"_index":2577,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2612,"title":{},"body":{"license.html":{}}}],["come",{"_index":2846,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2921,"title":{},"body":{"license.html":{}}}],["common",{"_index":2663,"title":{},"body":{"license.html":{}}}],["comparekey",{"_index":274,"title":{},"body":{"classes/Application.html":{}}}],["comparepassword",{"_index":2190,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1914,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2843,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2832,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2730,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2918,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2952,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2681,"title":{},"body":{"license.html":{}}}],["config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1462,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":3051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation",{"_index":1010,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["confirmation.deleteone",{"_index":2376,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email",{"_index":2368,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email.ts",{"_index":2430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.mjml",{"_index":3050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation.newemail",{"_index":2375,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.schema",{"_index":2347,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["confirmation.schema.ts",{"_index":1028,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":1031,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":1040,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":1034,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":1036,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":1038,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":1039,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":2373,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmemail",{"_index":2272,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["confirmemail(@param(\"token",{"_index":2334,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmemail(token",{"_index":2275,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["conflict",{"_index":2946,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":402,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["connect",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":2018,"title":{},"body":{"injectables/SessionsService.html":{}}}],["connectmongo(session",{"_index":3079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2910,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2899,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":896,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["constraint1'})@maxlength(32",{"_index":893,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["constraints",{"_index":1717,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(nodemailer_module_options",{"_index":1796,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["constructor(@inject(storage_module_options",{"_index":2088,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectconnection",{"_index":2027,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(_value",{"_index":863,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(applications",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(config",{"_index":511,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(connection",{"_index":2017,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(emailsqueue",{"_index":840,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1251,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(logger",{"_index":1674,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["constructor(mailer",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(name",{"_index":403,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{}}}],["constructor(options",{"_index":960,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"controllers/SessionsController.html":{}}}],["constructor(query",{"_index":1017,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["constructor(storage",{"_index":1465,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{}}}],["constructor(users",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{}}}],["construe",{"_index":2964,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2962,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["contain",{"_index":1707,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["contained",{"_index":2788,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2632,"title":{},"body":{"license.html":{}}}],["content",{"_index":1289,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2631,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":754,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2672,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2760,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2572,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2582,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2578,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2567,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2581,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2869,"title":{},"body":{"license.html":{}}}],["control",{"_index":2664,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2662,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":479,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1361,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1625,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"sessions",{"_index":1999,"title":{},"body":{"controllers/SessionsController.html":{}}}],["controller(\"users",{"_index":2302,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2661,"title":{},"body":{"license.html":{}}}],["converted",{"_index":375,"title":{},"body":{"classes/Application.html":{}}}],["conveyed",{"_index":2625,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1974,"title":{},"body":{"classes/SessionDto.html":{}}}],["copy",{"_index":2765,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2751,"title":{},"body":{"license.html":{}}}],["correct",{"_index":1013,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["correction",{"_index":2898,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2773,"title":{},"body":{"license.html":{}}}],["countdocuments",{"_index":1568,"title":{},"body":{"injectables/FilesService.html":{}}}],["counter",{"_index":853,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2938,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2393,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2574,"title":{},"body":{"license.html":{}}}],["create",{"_index":439,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"classes/CreateFolderEntryDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(data",{"_index":514,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["create(dto",{"_index":445,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(email",{"_index":2354,"title":{},"body":{"injectables/UsersService.html":{}}}],["createabsolutelink",{"_index":1801,"title":{},"body":{"injectables/MailerService.html":{}}}],["createabsolutelink(relativelink",{"_index":1805,"title":{},"body":{"injectables/MailerService.html":{}}}],["createapplicationdto",{"_index":446,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createapplicationkeydto",{"_index":473,"title":{"classes/CreateApplicationKeyDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationKeyDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1737,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1738,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1742,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1743,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["created",{"_index":1206,"title":{},"body":{"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["createdat",{"_index":275,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createentry",{"_index":1440,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["createentry(data",{"_index":1488,"title":{},"body":{"injectables/FilesService.html":{}}}],["createfolder",{"_index":1303,"title":{},"body":{"controllers/FilesController.html":{}}}],["createfolder(dto",{"_index":1306,"title":{},"body":{"controllers/FilesController.html":{}}}],["createfolderentrydto",{"_index":918,"title":{"classes/CreateFolderEntryDto.html":{}},"body":{"classes/CreateFolderEntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["createhmac(\"sha256",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["createkey",{"_index":276,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["createkey(query",{"_index":517,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["createkey(uid",{"_index":451,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["createmaileroptions",{"_index":1778,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator((field",{"_index":3038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":958,"title":{},"body":{"classes/DiskStorage.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":967,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2571,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":2054,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":959,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":970,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creation",{"_index":1120,"title":{},"body":{"classes/Entry.html":{},"license.html":{}}}],["creation(s",{"_index":2746,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1666,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2864,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":317,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.binarylike",{"_index":337,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(size",{"_index":3058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.timingsafeequal(buffer.from(hmac_sha256(key",{"_index":365,"title":{},"body":{"classes/Application.html":{}}}],["ctx",{"_index":3039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":3040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":1172,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["currentsession",{"_index":1988,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentsession.identifier",{"_index":2004,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentuser",{"_index":475,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser(\"id",{"_index":489,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["cursor",{"_index":1134,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["customdecorator",{"_index":3080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2911,"title":{},"body":{"license.html":{}}}],["data",{"_index":336,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data')@apiresponse({description",{"_index":1333,"title":{},"body":{"controllers/FilesController.html":{}}}],["data.displayname},\\n",{"_index":3085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.displayname}\\n",{"_index":3045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.folder",{"_index":1521,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.hidden",{"_index":1580,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.interface",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{}}}],["data.interface.ts",{"_index":1650,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["data.isfile",{"_index":1530,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.link",{"_index":3048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.name",{"_index":547,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["data.public",{"_index":1582,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.session.ip",{"_index":3097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.name",{"_index":3101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.version}\\n",{"_index":3102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.name",{"_index":3099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.version",{"_index":3100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.uid",{"_index":1523,"title":{},"body":{"injectables/FilesService.html":{}}}],["date",{"_index":287,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":3075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().toutcstring",{"_index":3091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1042,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["date.now",{"_index":1241,"title":{},"body":{"classes/EntryDto.html":{}}}],["datepattern",{"_index":3068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2845,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1626,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":3071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2753,"title":{},"body":{"license.html":{}}}],["death",{"_index":2928,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2861,"title":{},"body":{"license.html":{}}}],["decode",{"_index":382,"title":{},"body":{"classes/Application.html":{}}}],["decorator",{"_index":1382,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":292,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":476,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["decorators/optional",{"_index":1351,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/recaptcha",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/scopes.decorator",{"_index":1353,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["decrement",{"_index":856,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":349,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmessage",{"_index":1699,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["defaultvaluepipe",{"_index":1340,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(0",{"_index":1411,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(50",{"_index":1415,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(false",{"_index":1429,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(null",{"_index":1413,"title":{},"body":{"controllers/FilesController.html":{}}}],["defective",{"_index":2894,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2884,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2939,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2666,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2565,"title":{},"body":{"license.html":{}}}],["deletable",{"_index":1054,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":464,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id/delete",{"_index":495,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["delete(\"/:id/revoke",{"_index":2005,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"all",{"_index":2008,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"logout",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id/delete')@apiresponse({description",{"_index":1312,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(id",{"_index":972,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(query",{"_index":521,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/SessionsService.html":{}}}],["deleted",{"_index":1164,"title":{},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deleted.todto",{"_index":1368,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":944,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deletemany",{"_index":1109,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["deletemany(query",{"_index":1491,"title":{},"body":{"injectables/FilesService.html":{}}}],["deleteone",{"_index":440,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteone(@body",{"_index":2327,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(@currentuser(\"id",{"_index":496,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(query",{"_index":523,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["deleteone(uid",{"_index":455,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(undefined",{"_index":2279,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(user",{"_index":2356,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserdto",{"_index":948,"title":{"classes/DeleteUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deletion",{"_index":2629,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1055,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{}}}],["derived",{"_index":1085,"title":{},"body":{"classes/Entry.html":{}}}],["describe",{"_index":2817,"title":{},"body":{"license.html":{}}}],["described",{"_index":2602,"title":{},"body":{"license.html":{}}}],["description",{"_index":942,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{},"index.html":{},"license.html":{}}}],["desirable",{"_index":2986,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":2824,"title":{},"body":{"license.html":{}}}],["development",{"_index":2527,"title":{},"body":{"index.html":{}}}],["device",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["differ",{"_index":1890,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["different",{"_index":2776,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2979,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":341,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2668,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1848,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["directly",{"_index":2866,"title":{},"body":{"license.html":{}}}],["directory",{"_index":981,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"license.html":{}}}],["dirname",{"_index":3073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1709,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":1380,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2879,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2785,"title":{},"body":{"license.html":{}}}],["disk",{"_index":984,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["diskhealthindicator",{"_index":1615,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":953,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":2091,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":961,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":1889,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"license.html":{}}}],["displayname",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["displaynametaken",{"_index":997,"title":{"classes/DisplayNameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["distinguishing",{"_index":2971,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2694,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2984,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2706,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2981,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2711,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2821,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2875,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1627,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1616,"title":{},"body":{"controllers/HealthController.html":{}}}],["doc",{"_index":1551,"title":{},"body":{"injectables/FilesService.html":{}}}],["doctrines",{"_index":2752,"title":{},"body":{"license.html":{}}}],["document",{"_index":271,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":2110,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1304,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(uid",{"_index":1315,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2963,"title":{},"body":{"license.html":{}}}],["dto",{"_index":450,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto).then((application",{"_index":500,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto).then((user",{"_index":2332,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto.folder",{"_index":1405,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.name",{"_index":1406,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.public",{"_index":1407,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/application.dto",{"_index":327,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/create",{"_index":471,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["dto/delete",{"_index":2296,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/entry.dto",{"_index":1091,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["dto/file",{"_index":1347,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login.dto",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/pagination.dto",{"_index":1355,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/partial",{"_index":2298,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/reset",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":1997,"title":{},"body":{"controllers/SessionsController.html":{}}}],["dto/update",{"_index":1349,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto/user.dto",{"_index":2210,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2811,"title":{},"body":{"license.html":{}}}],["duplicate",{"_index":1562,"title":{},"body":{"injectables/FilesService.html":{}}}],["duplicates",{"_index":1528,"title":{},"body":{"injectables/FilesService.html":{}}}],["dynamicmodule",{"_index":1748,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2536,"title":{},"body":{"index.html":{}}}],["each",{"_index":903,"title":{},"body":{"classes/CreateApplicationDto.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["eachasync((child",{"_index":1545,"title":{},"body":{"injectables/FilesService.html":{}}}],["eachasync(async",{"_index":1135,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["earlier",{"_index":2607,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2972,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2701,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2515,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1818,"title":{},"body":{"injectables/MailerService.html":{},"dependencies.html":{}}}],["ejs.render(this.transpilemjml(mjml",{"_index":1828,"title":{},"body":{"injectables/MailerService.html":{}}}],["el.length",{"_index":1157,"title":{},"body":{"classes/Entry.html":{}}}],["elements",{"_index":901,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["email",{"_index":646,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailTaken.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email!'})@isnotempty({message",{"_index":1588,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["email/${confirmation.token",{"_index":2389,"title":{},"body":{"injectables/UsersService.html":{}}}],["email/:token",{"_index":2277,"title":{},"body":{"controllers/UsersController.html":{}}}],["emailchanged",{"_index":2365,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailchanged(olduser.email",{"_index":2380,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation",{"_index":1026,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmation(newemail",{"_index":2387,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation.name",{"_index":2348,"title":{},"body":{"modules/UsersModule.html":{}}}],["emailconfirmations",{"_index":2351,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmationschema",{"_index":1044,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":1046,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1760,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/email",{"_index":2366,"title":{},"body":{"injectables/UsersService.html":{}}}],["emails/password",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["emails/successful",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["emails/user",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsqueue",{"_index":844,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["emailtaken",{"_index":1003,"title":{"classes/EmailTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["empty",{"_index":912,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring",{"_index":2181,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@maxlength(32",{"_index":2179,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@minlength(8",{"_index":2183,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring",{"_index":951,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring()@isstringpathsafe()@maxlength(255",{"_index":930,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":1960,"title":{},"body":{"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":1966,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring({message",{"_index":892,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["en",{"_index":1102,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["encoding",{"_index":1658,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2873,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2959,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1461,"title":{},"body":{"modules/FilesModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["engine.interface",{"_index":978,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":2032,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":2033,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":2034,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":2035,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":2049,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":2050,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":988,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["ensure",{"_index":1012,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["enter",{"_index":1586,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["entire",{"_index":2889,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2659,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2570,"title":{},"body":{"license.html":{}}}],["entries",{"_index":1083,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["entries.items.map((entry",{"_index":1418,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry",{"_index":1051,"title":{"classes/Entry.html":{}},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.'})@isnotempty({message",{"_index":2174,"title":{},"body":{"classes/UpdateEntryDto.html":{}}}],["entry.deletable",{"_index":1544,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.dto",{"_index":1346,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.dto.ts",{"_index":921,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.dto.ts:16",{"_index":928,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:23",{"_index":931,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:27",{"_index":936,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.folder",{"_index":1578,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.hidden",{"_index":1579,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.id",{"_index":1541,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.isfile",{"_index":1539,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.name",{"_index":1459,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["entry.public",{"_index":1581,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.remove",{"_index":1542,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.save",{"_index":1583,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.todto",{"_index":1373,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.uid",{"_index":1576,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"deletable",{"_index":1511,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"folder",{"_index":1512,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"hidden",{"_index":1513,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"id",{"_index":1514,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isfile",{"_index":1515,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isfolder",{"_index":1516,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"name",{"_index":1517,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"public",{"_index":1518,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"size",{"_index":1519,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"uid",{"_index":1520,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry_collation_options",{"_index":1100,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entryalreadyexists",{"_index":1167,"title":{"classes/EntryAlreadyExists.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entryalreadyexists(data.name",{"_index":1531,"title":{},"body":{"injectables/FilesService.html":{}}}],["entryalreadyexists.description",{"_index":1391,"title":{},"body":{"controllers/FilesController.html":{}}}],["entryalreadyexists.message",{"_index":1180,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entryalreadyexists.name",{"_index":1179,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entryalreadyexists.status",{"_index":1392,"title":{},"body":{"controllers/FilesController.html":{}}}],["entrydto",{"_index":1053,"title":{"classes/EntryDto.html":{}},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["entrynotdeletable",{"_index":1181,"title":{"classes/EntryNotDeletable.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entrynotdeletable.description",{"_index":1362,"title":{},"body":{"controllers/FilesController.html":{}}}],["entrynotdeletable.message",{"_index":1185,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entrynotdeletable.name",{"_index":1184,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entrynotdeletable.status",{"_index":1363,"title":{},"body":{"controllers/FilesController.html":{}}}],["entrynotfound",{"_index":1186,"title":{"classes/EntryNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entrynotfound.description",{"_index":1364,"title":{},"body":{"controllers/FilesController.html":{}}}],["entrynotfound.message",{"_index":1191,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entrynotfound.name",{"_index":1190,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["entrynotfound.status",{"_index":1365,"title":{},"body":{"controllers/FilesController.html":{}}}],["entryschema",{"_index":1098,"title":{},"body":{"classes/Entry.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entryschema.index",{"_index":1105,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.getchildren",{"_index":1159,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.getparentfolder",{"_index":1161,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.todto",{"_index":1165,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"remove",{"_index":1107,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"save",{"_index":1114,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.virtual(\"depth\").get(function",{"_index":1155,"title":{},"body":{"classes/Entry.html":{}}}],["enum",{"_index":351,"title":{},"body":{"classes/Application.html":{}}}],["enumerations",{"_index":2493,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/application",{"_index":533,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/CreateApplicationDto.html":{}}}],["env.development",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2754,"title":{},"body":{"license.html":{}}}],["err",{"_index":1387,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":983,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(\"file",{"_index":1117,"title":{},"body":{"classes/Entry.html":{}}}],["error(errors.join(\"\\n",{"_index":1840,"title":{},"body":{"injectables/MailerService.html":{}}}],["error.code",{"_index":987,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error.description",{"_index":1426,"title":{},"body":{"controllers/FilesController.html":{}}}],["error.exception.ts",{"_index":1672,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1676,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1679,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["errorcodes",{"_index":1935,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1943,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1941,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1942,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1939,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1940,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":1834,"title":{},"body":{"injectables/MailerService.html":{}}}],["errors.length",{"_index":1839,"title":{},"body":{"injectables/MailerService.html":{}}}],["eslint",{"_index":1708,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":1712,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":1775,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2900,"title":{},"body":{"license.html":{}}}],["even",{"_index":2923,"title":{},"body":{"license.html":{}}}],["event",{"_index":2872,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":855,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":881,"title":{},"body":{"classes/Counter.html":{}}}],["example",{"_index":1207,"title":{},"body":{"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["exceeded",{"_index":422,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/FileTooLarge.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["except",{"_index":2722,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1378,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1683,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1673,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":430,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/EntryDto.html":{},"classes/SessionDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":398,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["excluding",{"_index":2860,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2935,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2688,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2591,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1538,"title":{},"body":{"injectables/FilesService.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2658,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2590,"title":{},"body":{"license.html":{}}}],["exist",{"_index":413,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["exists",{"_index":409,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":1494,"title":{},"body":{"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["expires",{"_index":1033,"title":{},"body":{"classes/EmailConfirmation.html":{},"interfaces/ISession.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":1029,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2837,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2695,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.session",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IRequest.html":{}}}],["express.sessioncookiedata",{"_index":1975,"title":{},"body":{"classes/SessionDto.html":{}}}],["express.sessiondata",{"_index":1651,"title":{},"body":{"interfaces/ISessionData.html":{}}}],["expressed",{"_index":2881,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PasswordReset.html":{},"interfaces/SendMailOptions.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["extension",{"_index":1556,"title":{},"body":{"injectables/FilesService.html":{}}}],["extent",{"_index":2621,"title":{},"body":{"license.html":{}}}],["extname",{"_index":2312,"title":{},"body":{"controllers/UsersController.html":{}}}],["extra",{"_index":1866,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":1759,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":566,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":2053,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":2055,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1777,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1779,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2792,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2831,"title":{},"body":{"license.html":{}}}],["failed",{"_index":748,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2841,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2919,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2748,"title":{},"body":{"license.html":{}}}],["false",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["fee",{"_index":2796,"title":{},"body":{"license.html":{}}}],["field",{"_index":1432,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":1659,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1147,"title":{},"body":{"classes/Entry.html":{},"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2675,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file(s",{"_index":1254,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["file.filename",{"_index":1442,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1441,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.interface",{"_index":2078,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1657,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1474,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":946,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.size",{"_index":1443,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1445,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileid",{"_index":947,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1253,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filename.split",{"_index":1555,"title":{},"body":{"injectables/FilesService.html":{}}}],["files",{"_index":1267,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["files.controller",{"_index":1454,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1343,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":2112,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map((file",{"_index":1438,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1455,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":2133,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1345,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files:create",{"_index":2498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:delete",{"_index":2500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:download",{"_index":2502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:read",{"_index":2504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:update",{"_index":2506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_create",{"_index":2497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_delete",{"_index":2499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_download",{"_index":2501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_read",{"_index":2503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_update",{"_index":2505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["filescontroller",{"_index":1301,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1435,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["filesmodule",{"_index":131,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1451,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesqueue",{"_index":842,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1344,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["filesystem",{"_index":1212,"title":{},"body":{"classes/EntryDto.html":{}}}],["filetoolarge",{"_index":1248,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":2130,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetoolarge.description",{"_index":1421,"title":{},"body":{"controllers/FilesController.html":{}}}],["filetoolarge.message",{"_index":1264,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["filetoolarge.name",{"_index":1263,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["filetoolarge.status",{"_index":1422,"title":{},"body":{"controllers/FilesController.html":{}}}],["filetypes",{"_index":2310,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(file.mimetype",{"_index":2314,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":2313,"title":{},"body":{"controllers/UsersController.html":{}}}],["fileuploaddto",{"_index":1294,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileuploaddto})@apiconsumes('multipart/form",{"_index":1332,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":1379,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":2117,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1938,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":518,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["final",{"_index":368,"title":{},"body":{"classes/Application.html":{}}}],["finally",{"_index":2838,"title":{},"body":{"license.html":{}}}],["find",{"_index":483,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"miscellaneous/variables.html":{}}}],["find(query",{"_index":525,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["finding",{"_index":1561,"title":{},"body":{"injectables/FilesService.html":{}}}],["findone",{"_index":510,"title":{},"body":{"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(@currentuser(\"id",{"_index":1371,"title":{},"body":{"controllers/FilesController.html":{}}}],["findone(query",{"_index":527,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(uid",{"_index":1319,"title":{},"body":{"controllers/FilesController.html":{}}}],["finish",{"_index":3105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finished",{"_index":2103,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":763,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2886,"title":{},"body":{"license.html":{}}}],["flag",{"_index":932,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{}}}],["folder",{"_index":920,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["folder')@apiresponse({description",{"_index":1308,"title":{},"body":{"controllers/FilesController.html":{}}}],["folder.'})@isnotempty({message",{"_index":929,"title":{},"body":{"classes/CreateFolderEntryDto.html":{}}}],["folder.id",{"_index":1525,"title":{},"body":{"injectables/FilesService.html":{}}}],["folder.path",{"_index":1527,"title":{},"body":{"injectables/FilesService.html":{}}}],["folder.path}/${this.name",{"_index":1130,"title":{},"body":{"classes/Entry.html":{}}}],["folder.todto",{"_index":1408,"title":{},"body":{"controllers/FilesController.html":{}}}],["folderid",{"_index":1524,"title":{},"body":{"injectables/FilesService.html":{}}}],["folderpath",{"_index":1526,"title":{},"body":{"injectables/FilesService.html":{}}}],["following",{"_index":2627,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":405,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":761,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":581,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["form",{"_index":2586,"title":{},"body":{"license.html":{}}}],["format",{"_index":1300,"title":{},"body":{"classes/FileUploadDto.html":{},"miscellaneous/variables.html":{}}}],["forroutes",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["forward",{"_index":1227,"title":{},"body":{"classes/EntryDto.html":{}}}],["foundation",{"_index":2966,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2513,"title":{},"body":{"index.html":{}}}],["free",{"_index":2686,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":974,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":989,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":992,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":1809,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":990,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(template).then(buffer",{"_index":1826,"title":{},"body":{"injectables/MailerService.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":986,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":285,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/Entry.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{}}}],["function(next",{"_index":357,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":395,"title":{},"body":{"classes/Application.html":{}}}],["further",{"_index":2782,"title":{},"body":{"license.html":{}}}],["g",{"_index":1706,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"miscellaneous/variables.html":{}}}],["gcloud",{"_index":2052,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2648,"title":{},"body":{"license.html":{}}}],["generated",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":333,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":386,"title":{},"body":{"classes/Application.html":{}}}],["generateid(32",{"_index":1047,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{},"classes/Entry.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generateid(9",{"_index":359,"title":{},"body":{"classes/Application.html":{}}}],["get(\"/:id/details",{"_index":1369,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"/:id/download",{"_index":1374,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"@me",{"_index":2303,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"confirm",{"_index":2333,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"list",{"_index":1409,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"search/@:username",{"_index":2336,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/details')@apiresponse({description",{"_index":1320,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('/:id/download')@apiresponse({description",{"_index":1316,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('@me')@usescopes(applicationscopes.users_read",{"_index":2283,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('list')@usescopes(applicationscopes.files_read",{"_index":1324,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('search/@:username",{"_index":2286,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":1613,"title":{},"body":{"controllers/HealthController.html":{}}}],["getchildren",{"_index":1056,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["getclientip",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getdescription",{"_index":1175,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["getparentfolder",{"_index":1057,"title":{},"body":{"classes/Entry.html":{}}}],["getsessions",{"_index":1984,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsessions(uid",{"_index":1987,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsize",{"_index":2155,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2509,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":879,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2970,"title":{},"body":{"license.html":{}}}],["global",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2647,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2916,"title":{},"body":{"license.html":{}}}],["google",{"_index":1602,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1591,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":2092,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1595,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2763,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2620,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2702,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2680,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2994,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":895,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["grow",{"_index":2543,"title":{},"body":{"index.html":{}}}],["gt",{"_index":1855,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":383,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"classes/Application.html":{},"coverage.html":{}}}],["guards",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":478,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlefiledeletion",{"_index":1464,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1467,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["hapi/joi",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hasduplicates",{"_index":1482,"title":{},"body":{"injectables/FilesService.html":{}}}],["hasduplicates(filename",{"_index":1500,"title":{},"body":{"injectables/FilesService.html":{}}}],["hashed",{"_index":2212,"title":{},"body":{"classes/User.html":{}}}],["hasnext",{"_index":1845,"title":{},"body":{"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["hassufficientscopes",{"_index":277,"title":{},"body":{"classes/Application.html":{}}}],["having",{"_index":2618,"title":{},"body":{"license.html":{}}}],["headers",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1611,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1643,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1617,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1618,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1619,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1609,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1620,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":132,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2518,"title":{},"body":{"index.html":{}}}],["held",{"_index":2956,"title":{},"body":{"license.html":{}}}],["hello",{"_index":1229,"title":{},"body":{"classes/EntryDto.html":{}}}],["helmet",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2551,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2682,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2954,"title":{},"body":{"license.html":{}}}],["hey",{"_index":3044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh",{"_index":3072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":1058,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["hideschemaproperty",{"_index":2213,"title":{},"body":{"classes/User.html":{}}}],["hmac_sha256",{"_index":335,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hmac_sha256(key",{"_index":388,"title":{},"body":{"classes/Application.html":{}}}],["hook",{"_index":347,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1681,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":3086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.\\n",{"_index":3056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1020,"title":{},"body":{"interfaces/Email.html":{},"injectables/MailerService.html":{}}}],["http",{"_index":1823,"title":{},"body":{"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1638,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2985,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":769,"title":{},"body":{"modules/AuthModule.html":{}}}],["https",{"_index":1822,"title":{},"body":{"injectables/MailerService.html":{}}}],["https://nestjs.com",{"_index":2558,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1920,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1906,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["httpstatus",{"_index":1177,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["httpstatus.bad_request",{"_index":1268,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["httpstatus.conflict",{"_index":1174,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["httpstatus.forbidden",{"_index":1182,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["httpstatus.not_found",{"_index":1188,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["httpstatus.payload_too_large",{"_index":1259,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["httpstatus.unsupported_media_type",{"_index":1290,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["i.e",{"_index":1563,"title":{},"body":{"injectables/FilesService.html":{}}}],["id",{"_index":278,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/PartialUserDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1221,"title":{},"body":{"classes/EntryDto.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["ignore",{"_index":1396,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["ii",{"_index":2721,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":3046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"classes/PaginationDto.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["implied",{"_index":2710,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2814,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2810,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2793,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":3110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incidental",{"_index":2909,"title":{},"body":{"license.html":{}}}],["include",{"_index":1266,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"license.html":{}}}],["included",{"_index":2820,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2660,"title":{},"body":{"license.html":{}}}],["including",{"_index":2595,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2187,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1655,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":2062,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2599,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1665,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1661,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["increment",{"_index":857,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2807,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2806,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2797,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":933,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{}}}],["indirect",{"_index":2669,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2867,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1536,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2761,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2925,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2640,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2858,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2717,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2868,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2888,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["initial",{"_index":2587,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2854,"title":{},"body":{"license.html":{}}}],["inject",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":2025,"title":{},"body":{"injectables/SessionsService.html":{}}}],["injectmodel",{"_index":531,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":534,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":2370,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(entry.name",{"_index":1510,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(user.name",{"_index":2371,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(useractivation.name",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectqueue",{"_index":845,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":849,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":850,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2930,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2519,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2523,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2525,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":3031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insufficientscopes",{"_index":414,"title":{"classes/InsufficientScopes.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["integer",{"_index":1214,"title":{},"body":{"classes/EntryDto.html":{}}}],["intellectual",{"_index":2689,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2749,"title":{},"body":{"license.html":{}}}],["interface",{"_index":553,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":555,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/incoming",{"_index":2077,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1757,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1793,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["interfaces/session",{"_index":1998,"title":{},"body":{"controllers/SessionsController.html":{}}}],["interfaces/session.interface",{"_index":2026,"title":{},"body":{"injectables/SessionsService.html":{}}}],["interfaces/storage",{"_index":977,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":2080,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":2081,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":759,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1388,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(recaptcha_unexpected_result",{"_index":1950,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(result.error",{"_index":1945,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1669,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalid",{"_index":904,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["invalidapikey",{"_index":418,"title":{"classes/InvalidAPIKey.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["invalidavatarfiletype",{"_index":1005,"title":{"classes/InvalidAvatarFileType.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":797,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationtoken",{"_index":1009,"title":{"classes/InvalidEmailConfirmationToken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":798,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":799,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["ioredis",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISessionData.html":{},"guards/RecaptchaGuard.html":{},"classes/SessionDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":869,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":1957,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["isboolean",{"_index":938,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["iscurrent",{"_index":2003,"title":{},"body":{"controllers/SessionsController.html":{}}}],["isemail",{"_index":1035,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":908,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isenum(applicationscopes",{"_index":914,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isession",{"_index":1647,"title":{"interfaces/ISession.html":{}},"body":{"interfaces/ISession.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["isessiondata",{"_index":590,"title":{"interfaces/ISessionData.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"controllers/SessionsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfile",{"_index":1059,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isfolder",{"_index":1060,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isn't",{"_index":1133,"title":{},"body":{"classes/Entry.html":{}}}],["isnotempty",{"_index":909,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":1729,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":891,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/DeleteUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":910,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispublic",{"_index":1151,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["isstring",{"_index":911,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstringpathsafe",{"_index":939,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringpathsafeconstraint",{"_index":1695,"title":{"classes/IsStringPathSafeConstraint.html":{}},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpath",{"_index":1724,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpathconstraint",{"_index":1718,"title":{"classes/IsStringValidPathConstraint.html":{}},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":1867,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":1417,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items.length",{"_index":1864,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items.pop",{"_index":1865,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":1197,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["iuaparser.ibrowser",{"_index":1652,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.idevice",{"_index":1653,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.ios",{"_index":1654,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["job",{"_index":1468,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1478,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1473,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["joi",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2550,"title":{},"body":{"index.html":{}}}],["join(\"\".repeat(2",{"_index":1427,"title":{},"body":{"controllers/FilesController.html":{}}}],["join(\"\\n",{"_index":3049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpeg",{"_index":1007,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["jpeg|jpg|png/gi",{"_index":2311,"title":{},"body":{"controllers/UsersController.html":{}}}],["js",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":2237,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2862,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2815,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2809,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2934,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2555,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":1836,"title":{},"body":{"injectables/MailerService.html":{}}}],["key",{"_index":279,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationKeyDto.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{}}}],["key')@throttle(25",{"_index":453,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto",{"_index":474,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto.ts",{"_index":916,"title":{},"body":{"classes/CreateApplicationKeyDto.html":{},"coverage.html":{}}}],["key.dto.ts:2",{"_index":917,"title":{},"body":{"classes/CreateApplicationKeyDto.html":{}}}],["key.split",{"_index":733,"title":{},"body":{"guards/AuthGuard.html":{}}}],["keyof",{"_index":1849,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["kind",{"_index":2880,"title":{},"body":{"license.html":{}}}],["know",{"_index":384,"title":{},"body":{"classes/Application.html":{}}}],["known",{"_index":2791,"title":{},"body":{"license.html":{}}}],["language",{"_index":2961,"title":{},"body":{"license.html":{}}}],["large",{"_index":1257,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2611,"title":{},"body":{"license.html":{}}}],["last",{"_index":1235,"title":{},"body":{"classes/EntryDto.html":{}}}],["lastused",{"_index":280,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["later",{"_index":1688,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2932,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2944,"title":{},"body":{"license.html":{}}}],["lean",{"_index":1549,"title":{},"body":{"injectables/FilesService.html":{}}}],["legal",{"_index":2569,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":370,"title":{},"body":{"classes/Application.html":{}}}],["lesser",{"_index":2649,"title":{},"body":{"license.html":{}}}],["level",{"_index":3066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2787,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2907,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2617,"title":{},"body":{"license.html":{}}}],["license",{"_index":2561,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2780,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2608,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2540,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2601,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2712,"title":{},"body":{"license.html":{}}}],["limit",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{}}}],["limit(options.limit",{"_index":1859,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2638,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2708,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1433,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1710,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":1305,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["list(query",{"_index":1502,"title":{},"body":{"injectables/FilesService.html":{}}}],["list(uid",{"_index":1323,"title":{},"body":{"controllers/FilesController.html":{}}}],["literal",{"_index":515,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/UsersService.html":{}}}],["litigation",{"_index":2855,"title":{},"body":{"license.html":{}}}],["locale",{"_index":1101,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["located",{"_index":1210,"title":{},"body":{"classes/EntryDto.html":{}}}],["location",{"_index":2988,"title":{},"body":{"license.html":{}}}],["log",{"_index":1383,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":760,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1675,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["login",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["login(undefined",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.email",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.email.ts",{"_index":2420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login.mjml",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logindto",{"_index":586,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2728,"title":{},"body":{"license.html":{}}}],["logout",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@session",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(session",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":1963,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1954,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":1961,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["look",{"_index":2990,"title":{},"body":{"license.html":{}}}],["looking",{"_index":1187,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["loss",{"_index":2915,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2922,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2913,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":348,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["lt",{"_index":1854,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2604,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1794,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["mail.options",{"_index":1972,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["mailer",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/UsersService.html":{}}}],["mailer.constants",{"_index":1754,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1755,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1756,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":133,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1739,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1746,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1758,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1735,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerservice",{"_index":631,"title":{"injectables/MailerService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2940,"title":{},"body":{"license.html":{}}}],["make",{"_index":2692,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2735,"title":{},"body":{"license.html":{}}}],["making",{"_index":2641,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2920,"title":{},"body":{"license.html":{}}}],["management",{"_index":2671,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2771,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1384,"title":{},"body":{"controllers/FilesController.html":{}}}],["map((error",{"_index":1425,"title":{},"body":{"controllers/FilesController.html":{}}}],["marks",{"_index":2727,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2613,"title":{},"body":{"license.html":{}}}],["math.min(math.max(n",{"_index":3037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":2953,"title":{},"body":{"license.html":{}}}],["max",{"_index":2245,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["max(max_port",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":2246,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":3077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/FileTooLarge.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"license.html":{}}}],["maxlength",{"_index":294,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":943,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["maxlength(32",{"_index":913,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["me(@currentuser",{"_index":2305,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2282,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.id",{"_index":2323,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2306,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2568,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1628,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1621,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2885,"title":{},"body":{"license.html":{}}}],["message",{"_index":894,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["metadata",{"_index":1917,"title":{},"body":{"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":2085,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":2134,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":2145,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":2154,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":2149,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":2156,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares",{"_index":1537,"title":{},"body":{"injectables/FilesService.html":{}}}],["middlewares/admin.middleware",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1660,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{}}}],["min",{"_index":1097,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["min(0",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1215,"title":{},"body":{"classes/EntryDto.html":{}}}],["minlength",{"_index":296,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":1953,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["minutes",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2492,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1118,"title":{},"body":{"classes/Entry.html":{},"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/ResetPasswordDto.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["missing!'})@isstring",{"_index":1968,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2539,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":1817,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html",{"_index":1819,"title":{},"body":{"injectables/MailerService.html":{}}}],["mjml2html(mjml",{"_index":1835,"title":{},"body":{"injectables/MailerService.html":{}}}],["mm",{"_index":3070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2530,"title":{},"body":{"index.html":{}}}],["model",{"_index":512,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":2630,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2593,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1236,"title":{},"body":{"classes/EntryDto.html":{},"license.html":{}}}],["modify",{"_index":2693,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":560,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.errors",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{}}}],["modules/applications/applications.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.service",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/applications/enums/application",{"_index":329,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["modules/auth/auth.errors",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/auth/auth.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["modules/bull",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/UsersModule.html":{}}}],["modules/files/files.service",{"_index":2300,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/health/health.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/sessions/dto/session.dto",{"_index":1646,"title":{},"body":{"interfaces/IRequest.html":{}}}],["modules/sessions/interfaces/session",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/sessions/sessions.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["modules/sessions/sessions.service",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/storage/storage.errors",{"_index":1356,"title":{},"body":{"controllers/FilesController.html":{}}}],["modules/storage/storage.module",{"_index":1457,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["modules/storage/storage.service",{"_index":1358,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["modules/users/dto/user.dto",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/users/schemas/user.schema",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{}}}],["modules/users/users.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["mongo",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":322,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1622,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":507,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1862,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["moreover",{"_index":2848,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":2173,"title":{},"body":{"classes/UpdateEntryDto.html":{}}}],["mozilla",{"_index":2562,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2983,"title":{},"body":{"license.html":{}}}],["ms",{"_index":1041,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1902,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":1043,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":2211,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["multiple",{"_index":371,"title":{},"body":{"classes/Application.html":{}}}],["myśliwiec",{"_index":2556,"title":{},"body":{"index.html":{}}}],["n",{"_index":871,"title":{},"body":{"classes/Counter.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["names",{"_index":2178,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ne",{"_index":2010,"title":{},"body":{"controllers/SessionsController.html":{}}}],["necessary",{"_index":2729,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2905,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2470,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2560,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":846,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":561,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":462,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/PartialUserDto.html":{},"controllers/SessionsController.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1623,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":758,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/ResetPasswordDto.html":{},"injectables/StorageService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":2361,"title":{},"body":{"injectables/UsersService.html":{}}}],["newdisplayname",{"_index":2177,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newemail",{"_index":1030,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpassword",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpath",{"_index":1129,"title":{},"body":{"classes/Entry.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(new",{"_index":1116,"title":{},"body":{"classes/Entry.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2512,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailer",{"_index":848,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1789,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer/lib/mailer",{"_index":1971,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["nodemailer_module_id",{"_index":1752,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1753,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1265,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["nofilesuploaded.message",{"_index":1271,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["nofilesuploaded.name",{"_index":1270,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["non",{"_index":2687,"title":{},"body":{"license.html":{}}}],["not.'})@isboolean",{"_index":935,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["note",{"_index":2978,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":406,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["nothing",{"_index":2948,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2589,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2783,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2849,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2842,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2713,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2524,"title":{},"body":{"index.html":{}}}],["null",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":926,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{}}}],["number",{"_index":864,"title":{},"body":{"classes/Counter.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1713,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":1716,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["object.values(applicationscopes",{"_index":352,"title":{},"body":{"classes/Application.html":{}}}],["obligation",{"_index":2802,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2798,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2764,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1686,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":2699,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2803,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2643,"title":{},"body":{"license.html":{}}}],["olduser",{"_index":2377,"title":{},"body":{"injectables/UsersService.html":{}}}],["omit",{"_index":1850,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["on(\"error",{"_index":2136,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":2137,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":2138,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":2140,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":2139,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1782,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":858,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":872,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":2777,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":2840,"title":{},"body":{"license.html":{}}}],["open",{"_index":2541,"title":{},"body":{"index.html":{}}}],["operator",{"_index":1853,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":2781,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"interfaces/SendMailOptions.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateUserDto.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1350,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":565,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options).collation(entry_collation_options",{"_index":1553,"title":{},"body":{"injectables/FilesService.html":{}}}],["options.cursor",{"_index":1570,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.direction",{"_index":1851,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.field",{"_index":1852,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["options.filter",{"_index":2099,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":2100,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.html",{"_index":1829,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.imports",{"_index":1762,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1768,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":563,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":557,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limit",{"_index":1573,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.limits",{"_index":2096,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.mjml",{"_index":1830,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.mjml.data",{"_index":1832,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.query",{"_index":1856,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.sort",{"_index":1858,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.transformers",{"_index":2124,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1767,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1764,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1765,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1769,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1770,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":2048,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2816,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2825,"title":{},"body":{"license.html":{}}}],["original",{"_index":2745,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2973,"title":{},"body":{"license.html":{}}}],["os",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":2072,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2579,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2673,"title":{},"body":{"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2677,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2995,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2228,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2674,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2573,"title":{},"body":{"license.html":{}}}],["package",{"_index":2440,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":374,"title":{},"body":{"classes/Application.html":{}}}],["page",{"_index":1863,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1507,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginate(this.entries",{"_index":1569,"title":{},"body":{"injectables/FilesService.html":{}}}],["paginated",{"_index":1084,"title":{},"body":{"classes/Entry.html":{}}}],["pagination",{"_index":1508,"title":{"interfaces/Pagination.html":{}},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{}}}],["paginationdto",{"_index":1354,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["paginationoptions",{"_index":1847,"title":{"interfaces/PaginationOptions.html":{}},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":465,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":493,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":924,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{}}}],["parentfolder",{"_index":1143,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder.deletable",{"_index":1144,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder?.hidden",{"_index":1149,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder?.public",{"_index":1152,"title":{},"body":{"classes/Entry.html":{}}}],["parentfoldernotfound",{"_index":1192,"title":{"classes/ParentFolderNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentfoldernotfound.description",{"_index":1393,"title":{},"body":{"controllers/FilesController.html":{}}}],["parentfoldernotfound.message",{"_index":1195,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentfoldernotfound.name",{"_index":1194,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentfoldernotfound.status",{"_index":1394,"title":{},"body":{"controllers/FilesController.html":{}}}],["parentischildrenofitself",{"_index":1196,"title":{"classes/ParentIsChildrenOfItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentischildrenofitself.description",{"_index":1397,"title":{},"body":{"controllers/FilesController.html":{}}}],["parentischildrenofitself.message",{"_index":1200,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentischildrenofitself.name",{"_index":1199,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentischildrenofitself.status",{"_index":1398,"title":{},"body":{"controllers/FilesController.html":{}}}],["parentisitself",{"_index":1201,"title":{"classes/ParentIsItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentisitself.description",{"_index":1399,"title":{},"body":{"controllers/FilesController.html":{}}}],["parentisitself.message",{"_index":1204,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentisitself.name",{"_index":1203,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentisitself.status",{"_index":1400,"title":{},"body":{"controllers/FilesController.html":{}}}],["parseboolpipe",{"_index":1341,"title":{},"body":{"controllers/FilesController.html":{}}}],["parseintpipe",{"_index":1342,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":385,"title":{},"body":{"classes/Application.html":{},"license.html":{}}}],["partialfilterexpression",{"_index":350,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["partialuserdto",{"_index":1883,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2580,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1283,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["parts.length",{"_index":1559,"title":{},"body":{"injectables/FilesService.html":{}}}],["parts.slice(0",{"_index":1558,"title":{},"body":{"injectables/FilesService.html":{}}}],["parts[parts.length",{"_index":1557,"title":{},"body":{"injectables/FilesService.html":{}}}],["party",{"_index":2924,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2720,"title":{},"body":{"license.html":{}}}],["pass",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":2146,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteUserDto.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":1585,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":1969,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1967,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1589,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchangedemail",{"_index":2369,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordchangedemail(user.email",{"_index":2390,"title":{},"body":{"injectables/UsersService.html":{}}}],["passwordreset",{"_index":771,"title":{"classes/PasswordReset.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordreset(email",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.deleteone",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":779,"title":{},"body":{"modules/AuthModule.html":{}}}],["passwordreset.uid",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresets",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetschema",{"_index":772,"title":{},"body":{"modules/AuthModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1904,"title":{},"body":{"classes/PasswordReset.html":{}}}],["passwordresetted",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetted(user.email",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":466,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["patch(\"/:id/update",{"_index":498,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["patch(\"@me/update",{"_index":2329,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('/:id/update')@apiresponse({description",{"_index":1327,"title":{},"body":{"controllers/FilesController.html":{}}}],["patent",{"_index":2634,"title":{},"body":{"license.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":982,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":996,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":993,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1634,"title":{},"body":{"controllers/HealthController.html":{}}}],["path.validator.ts",{"_index":1719,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.validator.ts:12",{"_index":1720,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path.validator.ts:16",{"_index":1721,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path_safe_regex",{"_index":1092,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_safe_regex.test(value",{"_index":1096,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{}}}],["path_valid_regex",{"_index":1722,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_valid_regex.test(value",{"_index":1725,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["payloadtoolargeexception",{"_index":1250,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["per",{"_index":1274,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2676,"title":{},"body":{"license.html":{}}}],["perform",{"_index":416,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["performance",{"_index":2892,"title":{},"body":{"license.html":{}}}],["period",{"_index":377,"title":{},"body":{"classes/Application.html":{}}}],["permits",{"_index":2778,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2739,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2929,"title":{},"body":{"license.html":{}}}],["pick",{"_index":558,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":2122,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":2126,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":2127,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2942,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2819,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":319,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"controllers/SessionsController.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":396,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":2238,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(entrydto",{"_index":1166,"title":{},"body":{"classes/Entry.html":{}}}],["plaintoclass(sessiondto",{"_index":2002,"title":{},"body":{"controllers/SessionsController.html":{}}}],["plaintoclass(userdto",{"_index":2239,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":1011,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"guards/RecaptchaGuard.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":1008,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["points",{"_index":1886,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["poolsize",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2596,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2926,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2622,"title":{},"body":{"license.html":{}}}],["post",{"_index":467,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post(\"/:id/create",{"_index":492,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"@me/avatar",{"_index":2307,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"@me/delete",{"_index":2326,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"create",{"_index":487,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["post(\"forgot",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"reset",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1419,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('create",{"_index":1307,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@apibody({type",{"_index":1331,"title":{},"body":{"controllers/FilesController.html":{}}}],["power",{"_index":2667,"title":{},"body":{"license.html":{}}}],["pre",{"_index":345,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2656,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":1395,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["prevent",{"_index":2226,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2941,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2844,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1471,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process(\"delete",{"_index":1476,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1798,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1469,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1787,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1472,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1795,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1475,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerService.html":{},"index.html":{}}}],["profits",{"_index":2914,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2511,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2822,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2933,"title":{},"body":{"license.html":{}}}],["project",{"_index":2542,"title":{},"body":{"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1437,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":323,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":301,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1032,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({enum",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["prop({lowercase",{"_index":293,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":304,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1079,"title":{},"body":{"classes/Entry.html":{}}}],["prop({required",{"_index":1071,"title":{},"body":{"classes/Entry.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1076,"title":{},"body":{"classes/Entry.html":{}}}],["properties",{"_index":273,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"injectables/SessionsService.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":1086,"title":{},"body":{"classes/Entry.html":{},"license.html":{}}}],["propertyname",{"_index":1714,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["protocol",{"_index":1820,"title":{},"body":{"injectables/MailerService.html":{}}}],["protocol}://${this.config.get(\"frontend_domain",{"_index":1824,"title":{},"body":{"injectables/MailerService.html":{}}}],["prove",{"_index":2893,"title":{},"body":{"license.html":{}}}],["provide",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":915,"title":{},"body":{"classes/CreateApplicationDto.html":{},"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided!'})@isoptional",{"_index":905,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["provider",{"_index":1741,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2960,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2955,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2834,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2947,"title":{},"body":{"license.html":{}}}],["public",{"_index":922,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["publish",{"_index":2969,"title":{},"body":{"license.html":{}}}],["published",{"_index":2974,"title":{},"body":{"license.html":{}}}],["pump",{"_index":2074,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":2131,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":2123,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2887,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2665,"title":{},"body":{"license.html":{}}}],["put",{"_index":2987,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1911,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2891,"title":{},"body":{"license.html":{}}}],["query",{"_index":520,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["query(\"cursor",{"_index":1410,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"folder",{"_index":1412,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"limit",{"_index":1414,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"public",{"_index":1428,"title":{},"body":{"controllers/FilesController.html":{}}}],["querycursor",{"_index":1090,"title":{},"body":{"classes/Entry.html":{}}}],["queryfindbaseoptions",{"_index":1498,"title":{},"body":{"injectables/FilesService.html":{}}}],["queryfindoptions",{"_index":1496,"title":{},"body":{"injectables/FilesService.html":{}}}],["queue",{"_index":841,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":326,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["read",{"_index":2058,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":2067,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":969,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1377,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":2128,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1390,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":2116,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1612,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2769,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1727,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1922,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1921,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1912,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1913,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1924,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1923,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_unexpected_result",{"_index":1915,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_url",{"_index":1919,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":627,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.7",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2852,"title":{},"body":{"license.html":{}}}],["received",{"_index":2850,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2774,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2762,"title":{},"body":{"license.html":{}}}],["record",{"_index":1810,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["recursive",{"_index":991,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":2227,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":2945,"title":{},"body":{"license.html":{}}}],["references",{"_index":2977,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2958,"title":{},"body":{"license.html":{}}}],["regex",{"_index":1110,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["regexp",{"_index":1565,"title":{},"body":{"injectables/FilesService.html":{}}}],["regexp(`${name",{"_index":1566,"title":{},"body":{"injectables/FilesService.html":{}}}],["register",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1745,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1749,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1750,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdecorator",{"_index":1703,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["registerdto",{"_index":598,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":3107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regulation",{"_index":2813,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2833,"title":{},"body":{"license.html":{}}}],["reject",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":2113,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2936,"title":{},"body":{"license.html":{}}}],["relativelink",{"_index":1807,"title":{},"body":{"injectables/MailerService.html":{}}}],["relativelink.substring(relativelink.startswith",{"_index":1825,"title":{},"body":{"injectables/MailerService.html":{}}}],["relevant",{"_index":2989,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2790,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1930,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":1535,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":2716,"title":{},"body":{"license.html":{}}}],["rename",{"_index":2976,"title":{},"body":{"license.html":{}}}],["render",{"_index":1802,"title":{},"body":{"injectables/MailerService.html":{}}}],["render(template",{"_index":1808,"title":{},"body":{"injectables/MailerService.html":{}}}],["repair",{"_index":2897,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2522,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2742,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2743,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2691,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1927,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":2143,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.headers.authorization",{"_index":728,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.pipe(busboy",{"_index":2141,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":747,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":751,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":752,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":749,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":746,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["request.mjml",{"_index":3083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":3084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1773,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2731,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1934,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1386,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1389,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1685,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2876,"title":{},"body":{"license.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"classes/ResetPasswordDto.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reset.email",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset.email.ts",{"_index":2418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.mjml",{"_index":3087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset.schema",{"_index":774,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["reset.schema.ts",{"_index":1896,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1897,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1901,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1898,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1899,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1900,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":602,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resolve",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":3059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":2114,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2704,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2759,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2768,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1948,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1944,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1949,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1946,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2931,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1217,"title":{},"body":{"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revoke",{"_index":1985,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(@currentuser(\"id",{"_index":2006,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(uid",{"_index":1990,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall",{"_index":1986,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(@currentuser(\"id",{"_index":2009,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(uid",{"_index":1993,"title":{},"body":{"controllers/SessionsController.html":{}}}],["right",{"_index":2619,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2624,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2890,"title":{},"body":{"license.html":{}}}],["root",{"_index":925,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"injectables/MailerService.html":{},"classes/UpdateEntryDto.html":{}}}],["rotate",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":738,"title":{},"body":{"guards/AuthGuard.html":{}}}],["royalty",{"_index":2685,"title":{},"body":{"license.html":{}}}],["run",{"_index":2528,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["safe.validator",{"_index":941,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{}}}],["safe.validator.ts",{"_index":1697,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["safe.validator.ts:12",{"_index":1700,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safe.validator.ts:16",{"_index":1702,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safety",{"_index":2229,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2644,"title":{},"body":{"license.html":{}}}],["same",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":346,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2516,"title":{},"body":{"index.html":{}}}],["schema",{"_index":324,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":325,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":355,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":1045,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(entry",{"_index":1099,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1903,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":2216,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":2251,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":506,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":2346,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemas/entry.schema",{"_index":1456,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/password",{"_index":773,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user",{"_index":777,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user.schema",{"_index":2299,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":900,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["scopes",{"_index":281,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"miscellaneous/variables.html":{}}}],["scopes.enum",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["scopes.enum.ts",{"_index":2495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scopes.every(scope",{"_index":392,"title":{},"body":{"classes/Application.html":{}}}],["scopes.length",{"_index":741,"title":{},"body":{"guards/AuthGuard.html":{}}}],["score",{"_index":1916,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2273,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2337,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2285,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2600,"title":{},"body":{"license.html":{}}}],["secret",{"_index":338,"title":{},"body":{"classes/Application.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2703,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2756,"title":{},"body":{"license.html":{}}}],["secure",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2737,"title":{},"body":{"license.html":{}}}],["select",{"_index":1547,"title":{},"body":{"injectables/FilesService.html":{}}}],["sell",{"_index":2698,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2642,"title":{},"body":{"license.html":{}}}],["send",{"_index":1783,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["send(job",{"_index":1786,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["send(options",{"_index":1813,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmailoptions",{"_index":1792,"title":{"interfaces/SendMailOptions.html":{}},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separate",{"_index":2614,"title":{},"body":{"license.html":{}}}],["seperator",{"_index":381,"title":{},"body":{"classes/Application.html":{}}}],["server",{"_index":1671,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2726,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2896,"title":{},"body":{"license.html":{}}}],["session",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.destroy(error",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SessionsController.html":{}}}],["session.ip",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["session_secret",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiondto",{"_index":1645,"title":{"classes/SessionDto.html":{}},"body":{"interfaces/IRequest.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["sessions",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["sessions.controller",{"_index":2015,"title":{},"body":{"modules/SessionsModule.html":{}}}],["sessions.map",{"_index":2001,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessions.service",{"_index":1996,"title":{},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{}}}],["sessionscontroller",{"_index":1982,"title":{"controllers/SessionsController.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"coverage.html":{}}}],["sessionsmodule",{"_index":134,"title":{"modules/SessionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionsservice",{"_index":784,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":859,"title":{},"body":{"classes/Counter.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{}}}],["set(data.scopes)).foreach(scope",{"_index":550,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["set(value",{"_index":875,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(auth_guard_optional",{"_index":3081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_guard_scopes",{"_index":3111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":3088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":3089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":847,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":851,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settle",{"_index":2086,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle(files.map(file",{"_index":2107,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2870,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2678,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":2293,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["sharp().resize(512",{"_index":2318,"title":{},"body":{"controllers/UsersController.html":{}}}],["side",{"_index":2517,"title":{},"body":{"index.html":{}}}],["silly",{"_index":3076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1061,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2826,"title":{},"body":{"license.html":{}}}],["slash",{"_index":1228,"title":{},"body":{"classes/EntryDto.html":{}}}],["smtp_from",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1772,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1776,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2575,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2633,"title":{},"body":{"license.html":{}}}],["sort",{"_index":1574,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["sorting",{"_index":1082,"title":{},"body":{"classes/Entry.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2908,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2808,"title":{},"body":{"license.html":{}}}],["specify",{"_index":739,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sponsors",{"_index":2545,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application",{"_index":2494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../application.schema.ts",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clamp.ts",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entry.schema.ts",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../optional",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paginate.ts",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":3020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":3022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":3021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scopes.decorator.ts",{"_index":3027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":3023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":3024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../successful",{"_index":3025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":3026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/optional",{"_index":2400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/scopes.decorator.ts",{"_index":2405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dto/pagination.dto.ts",{"_index":1870,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/dto/pagination.dto.ts:4",{"_index":1871,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/dto/pagination.dto.ts:6",{"_index":1872,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/dto/pagination.dto.ts:8",{"_index":1873,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/exceptions/internal",{"_index":1670,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/auth.guard.ts:100",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:29",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:37",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:53",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:81",{"_index":713,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1905,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:27",{"_index":1907,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:34",{"_index":1909,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:85",{"_index":1908,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1644,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2410,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":755,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":756,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":757,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:16",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":438,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:23",{"_index":444,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:32",{"_index":449,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:42",{"_index":454,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:53",{"_index":457,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:59",{"_index":460,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":401,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:13",{"_index":436,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.errors.ts:19",{"_index":1668,"title":{},"body":{"classes/InsufficientScopes.html":{}}}],["src/modules/applications/applications.errors.ts:25",{"_index":1689,"title":{},"body":{"classes/InvalidAPIKey.html":{}}}],["src/modules/applications/applications.errors.ts:31",{"_index":2159,"title":{},"body":{"classes/TooManyApplications.html":{}}}],["src/modules/applications/applications.errors.ts:8",{"_index":404,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":504,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":509,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:18",{"_index":513,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:26",{"_index":516,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:44",{"_index":519,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:51",{"_index":522,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:55",{"_index":524,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:62",{"_index":526,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:66",{"_index":528,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:70",{"_index":530,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":427,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:11",{"_index":431,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:13",{"_index":432,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:15",{"_index":433,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:17",{"_index":434,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:20",{"_index":435,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":428,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":429,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":889,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"coverage.html":{}}}],["src/modules/applications/enums/application",{"_index":2496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":270,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:29",{"_index":288,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:30",{"_index":316,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:40",{"_index":299,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:57",{"_index":302,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:65",{"_index":303,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:74",{"_index":309,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:80",{"_index":312,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:89",{"_index":315,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:91",{"_index":286,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:92",{"_index":289,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:93",{"_index":290,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:94",{"_index":313,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:104",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:115",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:121",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:53",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:59",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:72",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1662,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1693,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":1694,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2266,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1663,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:33",{"_index":2268,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1691,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":768,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:40",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:70",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:91",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1584,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1726,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1730,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1731,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1728,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1951,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1952,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1955,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1956,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1962,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1965,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/emails/password",{"_index":2417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/successful",{"_index":2419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/user",{"_index":2421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/password",{"_index":1895,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/user",{"_index":2240,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/bull",{"_index":836,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/create",{"_index":919,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts",{"_index":1205,"title":{},"body":{"classes/EntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts:10",{"_index":1208,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:13",{"_index":1209,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:21",{"_index":1216,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:29",{"_index":1218,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:33",{"_index":1220,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:36",{"_index":1222,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:42",{"_index":1223,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:48",{"_index":1224,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:51",{"_index":1225,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:58",{"_index":1230,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:61",{"_index":1231,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:67",{"_index":1233,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:73",{"_index":1237,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:76",{"_index":1238,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:82",{"_index":1239,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/file",{"_index":1295,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/update",{"_index":2172,"title":{},"body":{"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1302,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:100",{"_index":1318,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:127",{"_index":1329,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:144",{"_index":1311,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:165",{"_index":1325,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:192",{"_index":1334,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:80",{"_index":1314,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:89",{"_index":1322,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":1168,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:10",{"_index":1171,"title":{},"body":{"classes/EntryAlreadyExists.html":{}}}],["src/modules/files/files.errors.ts:18",{"_index":1176,"title":{},"body":{"classes/EntryAlreadyExists.html":{}}}],["src/modules/files/files.errors.ts:24",{"_index":1243,"title":{},"body":{"classes/EntryNotDeletable.html":{}}}],["src/modules/files/files.errors.ts:25",{"_index":1242,"title":{},"body":{"classes/EntryNotDeletable.html":{}}}],["src/modules/files/files.errors.ts:31",{"_index":1244,"title":{},"body":{"classes/EntryNotDeletable.html":{}}}],["src/modules/files/files.errors.ts:37",{"_index":1246,"title":{},"body":{"classes/EntryNotFound.html":{}}}],["src/modules/files/files.errors.ts:38",{"_index":1245,"title":{},"body":{"classes/EntryNotFound.html":{}}}],["src/modules/files/files.errors.ts:44",{"_index":1247,"title":{},"body":{"classes/EntryNotFound.html":{}}}],["src/modules/files/files.errors.ts:50",{"_index":1875,"title":{},"body":{"classes/ParentFolderNotFound.html":{}}}],["src/modules/files/files.errors.ts:51",{"_index":1874,"title":{},"body":{"classes/ParentFolderNotFound.html":{}}}],["src/modules/files/files.errors.ts:57",{"_index":1876,"title":{},"body":{"classes/ParentFolderNotFound.html":{}}}],["src/modules/files/files.errors.ts:63",{"_index":1878,"title":{},"body":{"classes/ParentIsChildrenOfItself.html":{}}}],["src/modules/files/files.errors.ts:64",{"_index":1877,"title":{},"body":{"classes/ParentIsChildrenOfItself.html":{}}}],["src/modules/files/files.errors.ts:70",{"_index":1879,"title":{},"body":{"classes/ParentIsChildrenOfItself.html":{}}}],["src/modules/files/files.errors.ts:76",{"_index":1881,"title":{},"body":{"classes/ParentIsItself.html":{}}}],["src/modules/files/files.errors.ts:77",{"_index":1880,"title":{},"body":{"classes/ParentIsItself.html":{}}}],["src/modules/files/files.errors.ts:83",{"_index":1882,"title":{},"body":{"classes/ParentIsItself.html":{}}}],["src/modules/files/files.errors.ts:9",{"_index":1173,"title":{},"body":{"classes/EntryAlreadyExists.html":{}}}],["src/modules/files/files.module.ts",{"_index":1452,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1463,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1466,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:16",{"_index":1470,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1479,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:103",{"_index":1495,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:112",{"_index":1497,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:116",{"_index":1499,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:123",{"_index":1501,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:136",{"_index":1503,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:155",{"_index":1504,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:186",{"_index":1485,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:197",{"_index":1487,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:26",{"_index":1483,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:37",{"_index":1489,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:65",{"_index":1490,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:75",{"_index":1492,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:90",{"_index":1493,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":945,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/entry.schema.ts",{"_index":1052,"title":{},"body":{"classes/Entry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/entry.schema.ts:100",{"_index":1089,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:102",{"_index":1067,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:103",{"_index":1068,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:104",{"_index":1087,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:24",{"_index":1063,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:29",{"_index":1064,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:31",{"_index":1065,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:34",{"_index":1066,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:39",{"_index":1069,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:48",{"_index":1070,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:53",{"_index":1072,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:58",{"_index":1073,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:66",{"_index":1075,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:71",{"_index":1077,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:76",{"_index":1078,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:82",{"_index":1080,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:89",{"_index":1081,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:98",{"_index":1088,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1610,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:34",{"_index":1614,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1641,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":1019,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":1023,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":1024,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":1025,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1771,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1970,"title":{},"body":{"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1736,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:33",{"_index":1747,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:49",{"_index":1751,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:63",{"_index":1744,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:77",{"_index":1740,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1780,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:16",{"_index":1791,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:18",{"_index":1784,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:22",{"_index":1785,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:27",{"_index":1788,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1800,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:14",{"_index":1804,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:22",{"_index":1806,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:29",{"_index":1811,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:34",{"_index":1814,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:42",{"_index":1816,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/sessions/dto/session.dto.ts",{"_index":1973,"title":{},"body":{"classes/SessionDto.html":{},"coverage.html":{}}}],["src/modules/sessions/dto/session.dto.ts:11",{"_index":1979,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:13",{"_index":1980,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:19",{"_index":1981,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:5",{"_index":1976,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:7",{"_index":1977,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:9",{"_index":1978,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/interfaces/session",{"_index":1649,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["src/modules/sessions/interfaces/session.interface.ts",{"_index":1648,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts",{"_index":1983,"title":{},"body":{"controllers/SessionsController.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts:23",{"_index":1989,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:39",{"_index":1992,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:48",{"_index":1995,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.module.ts",{"_index":2014,"title":{},"body":{"modules/SessionsModule.html":{}}}],["src/modules/sessions/sessions.service.ts",{"_index":2016,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.service.ts:10",{"_index":2019,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:14",{"_index":2020,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:18",{"_index":2021,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:22",{"_index":2022,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:26",{"_index":2023,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":954,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":962,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":973,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":968,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":971,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":964,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":966,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1592,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1656,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":556,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":2186,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2392,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1249,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:10",{"_index":1252,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:16",{"_index":1260,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:22",{"_index":1842,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.errors.ts:23",{"_index":1841,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.errors.ts:29",{"_index":1843,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.errors.ts:35",{"_index":2161,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:36",{"_index":2160,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:42",{"_index":2162,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:48",{"_index":2164,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:49",{"_index":2163,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:55",{"_index":2165,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:61",{"_index":2167,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:62",{"_index":2166,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:68",{"_index":2168,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:74",{"_index":2170,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:75",{"_index":2169,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:81",{"_index":2171,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1258,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":2039,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":2042,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":2043,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":2041,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":2040,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":2056,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":2063,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":2060,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":2073,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":2066,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":2065,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":2068,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":2071,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/delete",{"_index":949,"title":{},"body":{"classes/DeleteUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/partial",{"_index":1884,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":2176,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":2253,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":2255,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:22",{"_index":2256,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:28",{"_index":2257,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:32",{"_index":2258,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:35",{"_index":2259,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:38",{"_index":2260,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:42",{"_index":2261,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:45",{"_index":2262,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:49",{"_index":2263,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:53",{"_index":2264,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:59",{"_index":2265,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:8",{"_index":2254,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/emails/email",{"_index":2428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/emails/password",{"_index":2431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/email",{"_index":1027,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":2188,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":2202,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":2205,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":2194,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":2196,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":2203,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":2195,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":2204,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":2191,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":2192,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":2193,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":2197,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":2198,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":2199,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":2200,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":2201,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2271,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:101",{"_index":2287,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:42",{"_index":2284,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:48",{"_index":2290,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:84",{"_index":2281,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:90",{"_index":2292,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:96",{"_index":2278,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":998,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:14",{"_index":1050,"title":{},"body":{"classes/EmailTaken.html":{}}}],["src/modules/users/users.errors.ts:20",{"_index":1690,"title":{},"body":{"classes/InvalidAvatarFileType.html":{}}}],["src/modules/users/users.errors.ts:26",{"_index":1692,"title":{},"body":{"classes/InvalidEmailConfirmationToken.html":{}}}],["src/modules/users/users.errors.ts:32",{"_index":2269,"title":{},"body":{"classes/UsernameTaken.html":{}}}],["src/modules/users/users.errors.ts:38",{"_index":2267,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:8",{"_index":999,"title":{},"body":{"classes/DisplayNameTaken.html":{}}}],["src/modules/users/users.module.ts",{"_index":2344,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2350,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:152",{"_index":2362,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:30",{"_index":2352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:44",{"_index":2353,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":2355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:78",{"_index":2357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:90",{"_index":2358,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:94",{"_index":2359,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:98",{"_index":2364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/clamp.ts",{"_index":2435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":854,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":867,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":868,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":870,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":865,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":874,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":876,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":878,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":880,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/generateid.ts",{"_index":2436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/paginate.ts",{"_index":1844,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":2144,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["src/validators/is",{"_index":1696,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1226,"title":{},"body":{"classes/EntryDto.html":{},"index.html":{}}}],["start:dev",{"_index":2531,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2532,"title":{},"body":{"index.html":{}}}],["started",{"_index":2510,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2521,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1169,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"modules/MailerModule.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"modules/StorageModule.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["status",{"_index":1170,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["statuscode",{"_index":1682,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2812,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2882,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2552,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2967,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2917,"title":{},"body":{"license.html":{}}}],["storage",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":2046,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":2076,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":2047,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":2044,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":2045,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":955,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1450,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1460,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["storageoptions",{"_index":562,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":564,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1357,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":3028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":3035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":976,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":2083,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["strength",{"_index":1103,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["strict",{"_index":1838,"title":{},"body":{"injectables/MailerService.html":{}}}],["string",{"_index":291,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["string(items[items.length",{"_index":1868,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":3034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1910,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["string})@isoptional()@isstring",{"_index":927,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["subject",{"_index":1021,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2775,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2734,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2623,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2784,"title":{},"body":{"license.html":{}}}],["successful",{"_index":3094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfullogin",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successfullogin(user.email",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":2592,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":415,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["sufficiently",{"_index":2823,"title":{},"body":{"license.html":{}}}],["super",{"_index":883,"title":{},"body":{"classes/Counter.html":{}}}],["super(\"application",{"_index":412,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(\"display",{"_index":1002,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"email",{"_index":1004,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"invalid",{"_index":419,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["super(\"please",{"_index":1667,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"username",{"_index":1015,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"you",{"_index":421,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1664,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`${filetoolarge.name",{"_index":1262,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(`application",{"_index":407,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(`entry",{"_index":1178,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(`user",{"_index":1018,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(entrynotdeletable.message",{"_index":1183,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(entrynotfound.message",{"_index":1189,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(nofilesuploaded.message",{"_index":1269,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(parentfoldernotfound.message",{"_index":1193,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(parentischildrenofitself.message",{"_index":1198,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(parentisitself.message",{"_index":1202,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(toomanyfields.message",{"_index":1275,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(toomanyfiles.message",{"_index":1279,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(toomanyparts.name",{"_index":1284,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(unsupportedcontenttype.message",{"_index":1291,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2546,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2878,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2992,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["target",{"_index":1715,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":3090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":1812,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"miscellaneous/variables.html":{}}}],["templates/email",{"_index":3042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/password",{"_index":3082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/successful",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/user",{"_index":3103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2830,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2839,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2828,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1642,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2606,"title":{},"body":{"license.html":{}}}],["test",{"_index":2535,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2538,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2537,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2534,"title":{},"body":{"index.html":{}}}],["text",{"_index":1022,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["thanks",{"_index":2544,"title":{},"body":{"index.html":{}}}],["then((application",{"_index":491,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then((applications",{"_index":484,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then((doc",{"_index":1550,"title":{},"body":{"injectables/FilesService.html":{}}}],["then((file",{"_index":1444,"title":{},"body":{"controllers/FilesController.html":{}}}],["then((id",{"_index":2218,"title":{},"body":{"classes/User.html":{}}}],["then(id",{"_index":360,"title":{},"body":{"classes/Application.html":{}}}],["then(res",{"_index":1933,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(token",{"_index":1048,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2903,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2597,"title":{},"body":{"license.html":{}}}],["third",{"_index":2719,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":2095,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._getmetadata(auth_guard_optional",{"_index":725,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(auth_guard_scopes",{"_index":726,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1925,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1926,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._handleapikey(req",{"_index":729,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._handlesession(req",{"_index":730,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._renamewithindex(data.name",{"_index":1533,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._size",{"_index":2157,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._validateparent(entry",{"_index":1575,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._value",{"_index":884,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":2231,"title":{},"body":{"classes/User.html":{}}}],["this.applications",{"_index":482,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications(data).save",{"_index":541,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.countdocuments",{"_index":537,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create",{"_index":490,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.createkey",{"_index":494,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete",{"_index":2382,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.applications.deletemany(query",{"_index":544,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.deleteone",{"_index":497,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.exists",{"_index":539,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.find(query).sort",{"_index":546,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.findone",{"_index":734,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.applications.findone(query",{"_index":542,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.updateone",{"_index":499,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.activateaccount(token",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.forgotpassword(email",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.register(email",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":697,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":2232,"title":{},"body":{"classes/User.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1607,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1608,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1606,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_key_secret",{"_index":736,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.config.get(\"max_file_size",{"_index":1436,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1434,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"node_env",{"_index":1821,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1931,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":2024,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1766,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1763,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1630,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.deletable",{"_index":1145,"title":{},"body":{"classes/Entry.html":{}}}],["this.delete(file.id",{"_index":2108,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":2233,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1633,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1637,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":2234,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":2386,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailconfirmations.findone",{"_index":2372,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1833,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":885,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":2090,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":2094,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":2121,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":2093,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.entries",{"_index":1532,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.find(query",{"_index":1552,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.findone(query",{"_index":1554,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.exists",{"_index":1577,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files",{"_index":1439,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.createentry",{"_index":1404,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.files.createreadable(id",{"_index":1376,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.deletemany",{"_index":2383,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.files.deleteone",{"_index":1367,"title":{},"body":{"controllers/FilesController.html":{},"injectables/UsersService.html":{}}}],["this.files.exists",{"_index":1430,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findone",{"_index":1372,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.list",{"_index":1416,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.updateone",{"_index":1402,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":852,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1540,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone",{"_index":1522,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone(query",{"_index":1543,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.folder",{"_index":1162,"title":{},"body":{"classes/Entry.html":{}}}],["this.getparentfolder",{"_index":1128,"title":{},"body":{"classes/Entry.html":{}}}],["this.hasduplicates(data.name",{"_index":1529,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.health.check",{"_index":1629,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hidden",{"_index":1150,"title":{},"body":{"classes/Entry.html":{}}}],["this.http",{"_index":1929,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":361,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.id}.${token",{"_index":387,"title":{},"body":{"classes/Application.html":{}}}],["this.isfile",{"_index":1115,"title":{},"body":{"classes/Entry.html":{}}}],["this.isfolder",{"_index":1121,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified",{"_index":1123,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"deletable",{"_index":1140,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"folder",{"_index":1126,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"hidden",{"_index":1141,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"name",{"_index":1127,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"password",{"_index":2220,"title":{},"body":{"classes/User.html":{}}}],["this.ismodified(\"public",{"_index":1142,"title":{},"body":{"classes/Entry.html":{}}}],["this.isnew",{"_index":358,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.key",{"_index":364,"title":{},"body":{"classes/Application.html":{}}}],["this.logger.error(error",{"_index":1385,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.logger.error(exception.message",{"_index":1684,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.createabsolutelink(\"/forgot",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/activate",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.createabsolutelink(`/confirm",{"_index":2388,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/reset",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.send",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1639,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.model(entry.name",{"_index":1108,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).findone",{"_index":1163,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).updatemany",{"_index":1154,"title":{},"body":{"classes/Entry.html":{}}}],["this.name",{"_index":1131,"title":{},"body":{"classes/Entry.html":{}}}],["this.on(string(n",{"_index":888,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":887,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":2089,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":2219,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordresets.findone",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.path",{"_index":1111,"title":{},"body":{"classes/Entry.html":{}}}],["this.path.split(\"/\").filter((el",{"_index":1156,"title":{},"body":{"classes/Entry.html":{}}}],["this.public",{"_index":1153,"title":{},"body":{"classes/Entry.html":{}}}],["this.reflector.get(key",{"_index":753,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["this.render(options.mjml.template",{"_index":1831,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.save",{"_index":389,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["this.scopes.includes(scope",{"_index":393,"title":{},"body":{"classes/Application.html":{}}}],["this.sessions.delete",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["this.sessions.deletemany(query",{"_index":2028,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.deleteone",{"_index":2007,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.deleteone(query",{"_index":2029,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.find",{"_index":2000,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.find(query).toarray",{"_index":2030,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.findone(query",{"_index":2031,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.size",{"_index":1122,"title":{},"body":{"classes/Entry.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1477,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1534,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.storage.write(req",{"_index":1431,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.timestamp",{"_index":1124,"title":{},"body":{"classes/Entry.html":{}}}],["this.tojson",{"_index":397,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["this.token",{"_index":1049,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail(job.data",{"_index":1799,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1797,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.uid",{"_index":1112,"title":{},"body":{"classes/Entry.html":{}}}],["this.updatedat.gettime",{"_index":1125,"title":{},"body":{"classes/Entry.html":{}}}],["this.useractivations",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useractivations.findone",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":2381,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.confirmemail(token",{"_index":2335,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.create(email",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.deleteone(me",{"_index":2328,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.exists",{"_index":2374,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2385,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":743,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.users.updateavatar(me",{"_index":2324,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.updateone(me",{"_index":2331,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.value",{"_index":886,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2654,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1635,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":468,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle(25",{"_index":488,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle_limit",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.registerasync",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":2770,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1631,"title":{},"body":{"controllers/HealthController.html":{}}}],["timesresent",{"_index":2242,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamp",{"_index":1062,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"injectables/FilesService.html":{}}}],["timestamps",{"_index":342,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["time}.\\n",{"_index":3096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tls",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["todto",{"_index":282,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["tojson",{"_index":1093,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["token",{"_index":378,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"classes/UserActivation.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toobject",{"_index":1095,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["toomanyapplications",{"_index":420,"title":{"classes/TooManyApplications.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["toomanyfields",{"_index":1272,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfields.message",{"_index":1277,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["toomanyfields.name",{"_index":1276,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["toomanyfiles",{"_index":1278,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles.message",{"_index":1281,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["toomanyfiles.name",{"_index":1280,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["toomanyparts",{"_index":1282,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts.message",{"_index":1286,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["toomanyparts.name",{"_index":1285,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["topromise",{"_index":1932,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2904,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2553,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2690,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2725,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2645,"title":{},"body":{"license.html":{}}}],["transformcallback",{"_index":2153,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":320,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":2125,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":2209,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":2317,"title":{},"body":{"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["transpilemjml",{"_index":1803,"title":{},"body":{"injectables/MailerService.html":{}}}],["transpilemjml(mjml",{"_index":1815,"title":{},"body":{"injectables/MailerService.html":{}}}],["transport",{"_index":1774,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1781,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":3061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tried",{"_index":1255,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["trim",{"_index":297,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":727,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2559,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateApplicationKeyDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":321,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["types.array",{"_index":310,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{}}}],["typescript",{"_index":1711,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ua",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["uid",{"_index":283,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiresponse({description",{"_index":1309,"title":{},"body":{"controllers/FilesController.html":{}}}],["undefined})@optionalauth()@usescopes(applicationscopes.files_download",{"_index":1317,"title":{},"body":{"controllers/FilesController.html":{}}}],["undefined})@usescopes(applicationscopes.files_create",{"_index":1310,"title":{},"body":{"controllers/FilesController.html":{}}}],["undefined})@usescopes(applicationscopes.files_delete",{"_index":1313,"title":{},"body":{"controllers/FilesController.html":{}}}],["undefined})@usescopes(applicationscopes.files_read",{"_index":1321,"title":{},"body":{"controllers/FilesController.html":{}}}],["undefined})@usescopes(applicationscopes.files_update",{"_index":1328,"title":{},"body":{"controllers/FilesController.html":{}}}],["under",{"_index":2605,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2827,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2957,"title":{},"body":{"license.html":{}}}],["unique",{"_index":298,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["unique!'})@isenum(applicationscopes",{"_index":902,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["unit",{"_index":2533,"title":{},"body":{"index.html":{}}}],["unix",{"_index":1234,"title":{},"body":{"classes/EntryDto.html":{}}}],["unknown",{"_index":3098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2835,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2696,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":1001,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["unsupported",{"_index":1288,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1287,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedcontenttype.description",{"_index":1423,"title":{},"body":{"controllers/FilesController.html":{}}}],["unsupportedcontenttype.message",{"_index":1293,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype.name",{"_index":1292,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype.status",{"_index":1424,"title":{},"body":{"controllers/FilesController.html":{}}}],["unsupportedmediatypeexception",{"_index":1261,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["until",{"_index":2836,"title":{},"body":{"license.html":{}}}],["up",{"_index":3106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update(data",{"_index":340,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["updateavatar",{"_index":2274,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateavatar(@currentuser",{"_index":2308,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(me",{"_index":2288,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(user",{"_index":2360,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":284,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["updateentrydto",{"_index":1326,"title":{"classes/UpdateEntryDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["updateone",{"_index":441,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateone(@body",{"_index":2330,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateone(dto",{"_index":458,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["updateone(query",{"_index":529,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["updateone(user",{"_index":2363,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":2175,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["upload",{"_index":1256,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["upload(uid",{"_index":1330,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload.dto",{"_index":1348,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload.dto.ts",{"_index":1296,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":1299,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["uploadedfile",{"_index":2079,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["upon",{"_index":1119,"title":{},"body":{"classes/Entry.html":{}}}],["uri",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["usage",{"_index":740,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":380,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/UserDto.html":{},"license.html":{}}}],["useexisting",{"_index":559,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["usefindandmodify",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":480,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":233,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EntryDto.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1211,"title":{},"body":{"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UserDto.html":{}}}],["user.activated",{"_index":750,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":2391,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.comparepassword(password",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.decorator",{"_index":477,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":2384,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.displayname",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":2297,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":950,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":1887,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.dto.ts:17",{"_index":2180,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:22",{"_index":1888,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.dto.ts:23",{"_index":2182,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:25",{"_index":1891,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.dto.ts:28",{"_index":1892,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.dto.ts:29",{"_index":2184,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":2185,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:34",{"_index":1894,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.dto.ts:6",{"_index":952,"title":{},"body":{"classes/DeleteUserDto.html":{}}}],["user.dto.ts:8",{"_index":1885,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":2379,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.expiresat",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":2349,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.todto",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user.todto(partialuserdto",{"_index":2339,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":2378,"title":{},"body":{"injectables/UsersService.html":{}}}],["user[\"email",{"_index":1590,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["user[field",{"_index":3041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractivation",{"_index":775,"title":{"classes/UserActivation.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivation(email",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivation.name",{"_index":780,"title":{},"body":{"modules/AuthModule.html":{}}}],["useractivations",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivationschema",{"_index":776,"title":{},"body":{"modules/AuthModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.pre(\"save",{"_index":2252,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":633,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["username",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernames",{"_index":1958,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernametaken",{"_index":1014,"title":{"classes/UsernameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernotactivated",{"_index":717,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":1016,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usernotfound(username",{"_index":2338,"title":{},"body":{"controllers/UsersController.html":{}}}],["usernotloggedin",{"_index":718,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2345,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2294,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":2295,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users:read",{"_index":2508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users_read",{"_index":2507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":2215,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.comparepassword",{"_index":2223,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":2230,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":2236,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":2217,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2270,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":135,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usescopes",{"_index":1352,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usescopes(applicationscopes.files_create",{"_index":1403,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_delete",{"_index":1366,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_download",{"_index":1375,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_read",{"_index":1370,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_update",{"_index":1401,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.users_read",{"_index":2304,"title":{},"body":{"controllers/UsersController.html":{}}}],["useunifiedtopology",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1761,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":1381,"title":{},"body":{"controllers/FilesController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["utils/atob",{"_index":722,"title":{},"body":{"guards/AuthGuard.html":{}}}],["utils/btoa",{"_index":332,"title":{},"body":{"classes/Application.html":{}}}],["utils/chunk",{"_index":980,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/clamp",{"_index":1506,"title":{},"body":{"injectables/FilesService.html":{}}}],["utils/counter",{"_index":2082,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":334,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/paginate",{"_index":1509,"title":{},"body":{"injectables/FilesService.html":{},"classes/PaginationDto.html":{}}}],["utils/settle",{"_index":2087,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["utils/stream",{"_index":2084,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2982,"title":{},"body":{"license.html":{}}}],["v3",{"_index":1918,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1587,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":307,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{}}}],["validate(value",{"_index":1701,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatebeforesave",{"_index":2235,"title":{},"body":{"classes/User.html":{}}}],["validationlevel",{"_index":1837,"title":{},"body":{"injectables/MailerService.html":{}}}],["validationoptions",{"_index":1705,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":318,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["validatorconstraint",{"_index":1704,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatorconstraintinterface",{"_index":1698,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validators/is",{"_index":940,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{}}}],["validly",{"_index":2877,"title":{},"body":{"license.html":{}}}],["value",{"_index":862,"title":{},"body":{"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1146,"title":{},"body":{"classes/Entry.html":{}}}],["variable",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3001,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2563,"title":{},"body":{"license.html":{}}}],["versions",{"_index":2653,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":1094,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["visit",{"_index":3053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visiting",{"_index":3108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2975,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2883,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2786,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2529,"title":{},"body":{"index.html":{}}}],["website",{"_index":2557,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":860,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":877,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":934,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UserDto.html":{},"license.html":{}}}],["wide",{"_index":2684,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":3063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":3064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":3062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":3067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":3060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":3065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2789,"title":{},"body":{"license.html":{}}}],["without",{"_index":2637,"title":{},"body":{"license.html":{}}}],["work",{"_index":2609,"title":{},"body":{"license.html":{}}}],["world",{"_index":2683,"title":{},"body":{"license.html":{}}}],["writable",{"_index":975,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":2059,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":2069,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":2104,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":2135,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":2120,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":2111,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":2106,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":2070,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["yes",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{},"classes/EntryAlreadyExists.html":{},"injectables/FilesService.html":{}}}],["you'd",{"_index":2549,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":3069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\n@Module({\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsModule\n                        \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SessionsModule } from \"./modules/sessions/sessions.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_KEY_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    ThrottlerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    }),\n\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SessionsModule,\n    UsersModule\n  ],\n  exports: [ApplicationsModule, ConfigModule, Logger, MailerModule, UsersModule],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                compareKey\n                            \n                            \n                                createdAt\n                            \n                            \n                                createKey\n                            \n                            \n                                hasSufficientScopes\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSufficientScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 18, minlength: 18, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Types.Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({enum: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { btoa } from \"@/utils/btoa\";\nimport { generateId } from \"@/utils/generateId\";\n\nconst HMAC_SHA256 = (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\");\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 18,\n    minlength: 18,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          key: {\n            $type: \"string\"\n          }\n        }\n      },\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  key!: string | null;\n\n  @Prop(\n    raw({\n      default: null,\n      type: Date\n    })\n  )\n  lastUsed!: Date | null;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop({\n    enum: Object.values(ApplicationScopes),\n    type: [String]\n  })\n  scopes!: Types.Array;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  compareKey!: (key: string, secret: string) => boolean;\n  createKey!: (secret: string) => Promise;\n  hasSufficientScopes!: (scopes: ApplicationScopes[]) => boolean;\n  toDto!: () => ApplicationDto;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(9)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.compareKey = function(\n  this: Application,\n  key: string,\n  secret: string\n): boolean {\n  if (!this.key) return false;\n\n  return crypto.timingSafeEqual(Buffer.from(HMAC_SHA256(key, secret)), Buffer.from(this.key));\n};\n\nApplicationSchema.methods.createKey = async function(\n  this: Application,\n  secret: string\n): Promise {\n  /**\n   ** The final api key length must be a multiple of 3 to avoid padding when converted to base64.\n   ** Application ID (18) + period (1) + Application secret token (32) = 51\n   ** The period is used as a seperator so when we decode the base64 in the auth guard, we know\n   ** which part is our application id and secret token.\n   */\n  const token = await generateId(16);\n  const key = `${this.id}.${token}`;\n\n  this.key = HMAC_SHA256(key, secret);\n\n  await this.save();\n\n  return btoa(key);\n};\n\nApplicationSchema.methods.hasSufficientScopes = function(\n  this: Application,\n  scopes: ApplicationScopes[]\n) {\n  return scopes.every(scope => this.scopes.includes(scope));\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationAlreadyExists.html":{"url":"classes/ApplicationAlreadyExists.html","title":"class - ApplicationAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this action!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  @Exclude()\n  key!: string | null;\n\n  lastUsed!: Date | null;\n\n  name!: string;\n\n  scopes!: ApplicationScopes[];\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this action!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                create\n                            \n                            \n                                    Async\n                                createKey\n                            \n                            \n                                deleteOne\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('create')@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createKey(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('/:id/create-key')@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Delete('/:id/delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: CreateApplicationDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Patch('/:id/update')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiExcludeEndpoint } from \"@nestjs/swagger\";\nimport { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { CreateApplicationKeyDto } from \"./dto/create-application-key.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @ApiExcludeEndpoint()\n  @Get()\n  all(@CurrentUser(\"id\") uid: string): Promise {\n    return this.applications\n      .find({ uid })\n      .then((applications) => applications.map((application) => application.toDto()));\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"create\")\n  @Throttle(25, 60)\n  create(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    return this.applications.create({ ...dto, uid }).then((application) => application.toDto());\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"/:id/create-key\")\n  @Throttle(25, 60)\n  async createKey(\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    const key = await this.applications.createKey({ id, uid });\n\n    return { key };\n  }\n\n  @ApiExcludeEndpoint()\n  @Delete(\"/:id/delete\")\n  deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.applications.deleteOne({ id, uid }).then((application) => application.toDto());\n  }\n\n  @ApiExcludeEndpoint()\n  @Patch(\"/:id/update\")\n  updateOne(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.applications.updateOne({ id, uid }, dto).then((application) => application.toDto());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }])],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createKey\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createKey(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { FilterQuery, Model, Types } from \"mongoose\";\n\nimport {\n  ApplicationAlreadyExists,\n  ApplicationNotFound,\n  TooManyApplications\n} from \"./applications.errors\";\n\nimport { ApplicationScopes } from \"./enums/application-scopes.enum\";\n\nimport { Application } from \"./schemas/application.schema\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(data: {\n    name: Application[\"name\"];\n    scopes: ApplicationScopes[];\n    uid: Application[\"uid\"];\n  }): Promise {\n    const { name, uid } = data;\n\n    if ((await this.applications.countDocuments({ uid })) > 50) {\n      throw new TooManyApplications();\n    }\n\n    if (await this.applications.exists({ name, uid })) {\n      throw new ApplicationAlreadyExists(name);\n    }\n\n    return new this.applications(data).save();\n  }\n\n  async createKey(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.createKey(this.config.get(\"API_KEY_SECRET\") as string);\n  }\n\n  async delete(query: FilterQuery): Promise {\n    await this.applications.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.deleteOne();\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.applications.find(query).sort(\"-lastUsed\");\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.applications.findOne(query);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      name: Application[\"name\"];\n      scopes: ApplicationScopes[];\n    }\n  ): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    application.name = data.name;\n    application.scopes = new Types.Array();\n\n    Array.from(new Set(data.scopes)).forEach(scope => application.scopes.addToSet(scope));\n\n    return application.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('login')@RecaptchaAction('login')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: Express.Session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Express.Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('register')@RecaptchaAction('register')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiExcludeEndpoint } from \"@nestjs/swagger\";\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { successfulLogin } from \"./emails/successful-login.email\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\n\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { ISessionData } from \"@/modules/sessions/interfaces/session-data.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\n\nimport { UserDto } from \"@/modules/users/dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly mailer: MailerService) {}\n\n  @ApiExcludeEndpoint()\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.auth.activateAccount(token);\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISessionData\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    await this.mailer.send(\n      successfulLogin(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\"),\n        session\n      })\n    );\n\n    return user.toDto();\n  }\n\n  @ApiExcludeEndpoint()\n  @Delete(\"logout\")\n  logout(@Session() session: Express.Session): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Private\n                                    Async\n                                _handleAPIKey\n                            \n                            \n                                    Private\n                                    Async\n                                _handleSession\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, config: ConfigService, reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:100\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleAPIKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                ApplicationScopes[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleSession(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { InsufficientScopes, InvalidAPIKey } from \"@/modules/applications/applications.errors\";\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { atob } from \"@/utils/atob\";\n\nexport const AUTH_GUARD_OPTIONAL = \"AUTH_GUARD_OPTIONAL\";\nexport const AUTH_GUARD_SCOPES = \"AUTH_GUARD_SCOPES\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly config: ConfigService,\n    private readonly reflector: Reflector,\n    private readonly users: UsersService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const optional = this._getMetadata(AUTH_GUARD_OPTIONAL, context);\n    const scopes = this._getMetadata(AUTH_GUARD_SCOPES, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      return req.headers.authorization\n        ? await this._handleAPIKey(req, scopes)\n        : await this._handleSession(req);\n    } catch (error) {\n      if (!optional) throw error;\n      return true;\n    }\n  }\n\n  private async _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[]) {\n    const key = req.headers.authorization && atob(req.headers.authorization);\n    if (!key) throw new InvalidAPIKey();\n\n    const [id, token] = key.split(\".\");\n    if (!id || !token) throw new InvalidAPIKey();\n\n    const application = await this.applications.findOne({ id });\n\n    if (!application || !application.compareKey(key, this.config.get(\"API_KEY_SECRET\") as string)) {\n      throw new InvalidAPIKey();\n    }\n\n    // Only allow routes that specify scopes to allow the usage of an API key.\n    if (!scopes || !scopes.length || !application.hasSufficientScopes(scopes)) {\n      throw new InsufficientScopes();\n    }\n\n    const user = await this.users.findOne({ id: application.uid });\n    if (!user) throw new InvalidAPIKey();\n\n    await application.updateOne({ lastUsed: new Date() });\n\n    req.user = user;\n\n    return true;\n  }\n\n  private async _handleSession(req: IRequest) {\n    if (!req.session) {\n      throw new InternalServerErrorException(\n        `Failed to get session data! req.session was: ${req.session}`\n      );\n    }\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UserNotLoggedIn();\n    if (!user.activated) throw new UserNotActivated();\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n\n  private _getMetadata(key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSessionsModule\n\nSessionsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SessionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\n\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    HttpModule,\n\n    MongooseModule.forFeature([\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ]),\n\n    SessionsModule\n  ],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, sessions: SessionsService, users: UsersService, passwordResets: Model, userActivations: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activateAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport {\n  InvalidCredentials,\n  InvalidPasswordResetLink,\n  InvalidUserActivationLink,\n  UserNotActivated\n} from \"./auth.errors\";\n\nimport { passwordReset } from \"./emails/password-reset.email\";\nimport { passwordResetted } from \"./emails/password-post-reset.email\";\nimport { userActivation } from \"./emails/user-activation.email\";\n\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n    private readonly users: UsersService,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model\n  ) {}\n\n  async activateAccount(token: string): Promise {\n    const activation = await this.userActivations.findOne({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    user.activated = true;\n    user.expiresAt = null;\n\n    await user.save();\n    await activation.deleteOne();\n  }\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.mailer.send(\n      passwordReset(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/reset-password/${reset.token}`)\n      })\n    );\n\n    return true;\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    const activation = await new this.userActivations({ uid: user.id }).save();\n\n    await this.mailer.send(\n      userActivation(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/activate-account/${activation.token}`)\n      })\n    );\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.passwordResets.findOne({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.uid });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await this.sessions.delete({ \"session.uid\": user.id });\n\n    user.password = newPassword;\n\n    await user.save();\n    await passwordReset.deleteOne();\n\n    await this.mailer.send(\n      passwordResetted(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString({message: 'Application name must be a $constraint1'})@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ArrayUnique({message: 'Application scope elements must be unique!'})@IsEnum(ApplicationScopes, {each: true, message: 'Invalid application scopes provided!'})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayUnique, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { ApplicationScopes } from \"../enums/application-scopes.enum\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString({ message: \"Application name must be a $constraint1\" })\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ArrayUnique({ message: \"Application scope elements must be unique!\" })\n  @IsEnum(ApplicationScopes, { each: true, message: \"Invalid application scopes provided!\" })\n  @IsOptional()\n  scopes: ApplicationScopes[] = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationKeyDto.html":{"url":"classes/CreateApplicationKeyDto.html","title":"class - CreateApplicationKeyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationKeyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application-key.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application-key.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateApplicationKeyDto {\n  key!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFolderEntryDto.html":{"url":"classes/CreateFolderEntryDto.html","title":"class - CreateFolderEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFolderEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/create-folder-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                folder\n                            \n                            \n                                name\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The ID of the parent folder. You can set the value as null to create it in the root folder.', nullable: true, type: String})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of this folder.'})@IsNotEmpty({message: 'Folder name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Folder name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this folder should be public or not.'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nimport { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class CreateFolderEntryDto {\n  @ApiProperty({\n    description:\n      \"The ID of the parent folder. You can set the value as null to create it in the root folder.\",\n    nullable: true,\n    type: String\n  })\n  @IsOptional()\n  @IsString()\n  folder!: string | null;\n\n  @ApiProperty({ description: \"The name of this folder.\" })\n  @IsNotEmpty({ message: \"Folder name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Folder name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ApiProperty({ description: \"Flag that indicates whether this folder should be public or not.\" })\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDto.html":{"url":"classes/DeleteUserDto.html","title":"class - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/delete-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/delete-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameTaken.html":{"url":"classes/DisplayNameTaken.html","title":"class - DisplayNameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTaken.html":{"url":"classes/EmailTaken.html","title":"class - EmailTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/entry.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            EntryDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                folder\n                            \n                            \n                                getChildren\n                            \n                            \n                                getParentFolder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isFile\n                            \n                            \n                                isFolder\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                timestamp\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChildren\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParentFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true, validate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 0, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:89\n                            \n                        \n\n                \n                    \n                        Will be used for sorting when entries are paginated.\nIt is derived from the updatedAt property in a pre save hook.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:100\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, FilterQuery, QueryCursor } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { EntryDto } from \"../dto/entry.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nimport { PATH_SAFE_REGEX } from \"@/validators/is-string-path-safe.validator\";\n\n@Schema({\n  id: false,\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class Entry extends Document implements EntryDto {\n  createdAt!: Date;\n\n  @Prop({\n    default: true\n  })\n  deletable!: boolean;\n\n  depth!: number;\n\n  @Prop()\n  folder!: string | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    required: true\n  })\n  isFile!: boolean;\n\n  @Prop({\n    required: true\n  })\n  isFolder!: boolean;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true,\n    validate: (value: string) => !PATH_SAFE_REGEX.test(value)\n  })\n  name!: string;\n\n  @Prop({\n    unique: true\n  })\n  path!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 0,\n    required: true\n  })\n  size!: number;\n\n  /**\n   * Will be used for sorting when entries are paginated.\n   * It is derived from the updatedAt property in a pre save hook.\n   */\n  @Prop()\n  timestamp!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  updatedAt!: Date;\n\n  getChildren!: (query?: FilterQuery) => QueryCursor;\n  getParentFolder!: () => Promise;\n  toDto!: () => EntryDto;\n}\n\nexport const EntrySchema = SchemaFactory.createForClass(Entry);\n\nexport const ENTRY_COLLATION_OPTIONS = { locale: \"en\", strength: 2 };\n\nEntrySchema.index({ name: 1 }, { collation: ENTRY_COLLATION_OPTIONS });\n\nEntrySchema.pre(\"remove\", function (next) {\n  this.model(Entry.name)\n    .deleteMany({\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .then(() => next())\n    .catch((error) => next(error));\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (!this.isNew) return next();\n  if (!this.id && this.isFile) return next(new Error(\"File ID is missing upon entry creation!\"));\n\n  try {\n    if (!this.id && this.isFolder) {\n      this.id = await generateId(8);\n    }\n\n    this.size = this.isFolder ? 0 : this.size;\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", function (next) {\n  if (!this.isModified()) return next();\n\n  this.timestamp = this.updatedAt.getTime();\n\n  next();\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (!this.isModified(\"folder\") && !this.isModified(\"name\")) return next();\n\n  try {\n    const folder = await this.getParentFolder();\n    const newPath = folder ? `${folder.path}/${this.name}` : `/${this.name}`;\n\n    if (!this.isNew) {\n      // this.path is only available if it isn't a new document\n      await this.model(Entry.name)\n        .find({\n          path: { $regex: `^${this.path}/` },\n          uid: this.uid\n        })\n        .cursor()\n        .eachAsync(async (child) => {\n          child.path = newPath + child.path.substr(this.path.length);\n          await child.save();\n        });\n    }\n\n    this.path = newPath;\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (\n    !this.isModified(\"deletable\") &&\n    !this.isModified(\"folder\") &&\n    !this.isModified(\"hidden\") &&\n    !this.isModified(\"public\")\n  ) {\n    return next();\n  }\n\n  try {\n    const parentFolder = await this.getParentFolder();\n\n    const deletable = parentFolder ? parentFolder.deletable : this.deletable;\n\n    // If the values of these fields are set to false on the parent folder,\n    // then the values of its children can only be false.\n    const hidden = parentFolder?.hidden === false ? false : this.hidden;\n    const isPublic = parentFolder?.public === false ? false : this.public;\n\n    this.deletable = deletable;\n    this.hidden = hidden;\n    this.public = isPublic;\n\n    await this.model(Entry.name).updateMany(\n      {\n        path: { $regex: `^${this.path}/` },\n        uid: this.uid\n      },\n      {\n        deletable,\n        hidden,\n        public: isPublic\n      }\n    );\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.virtual(\"depth\").get(function (this: Entry) {\n  return this.path.split(\"/\").filter((el) => el.length > 0).length;\n});\n\nEntrySchema.methods.getChildren = function (\n  this: Entry,\n  query: FilterQuery = {}\n): QueryCursor {\n  return this.model(Entry.name)\n    .find({\n      ...query,\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .collation(ENTRY_COLLATION_OPTIONS)\n    .cursor();\n};\n\nEntrySchema.methods.getParentFolder = async function (this: Entry): Promise {\n  if (!this.folder) return null;\n\n  const folder = await this.model(Entry.name).findOne({\n    id: this.folder,\n    uid: this.uid\n  });\n\n  // Document is a children of a deleted folder\n  if (!folder && this.folder) {\n    this.folder = null;\n    await this.save();\n  }\n\n  return folder;\n};\n\nEntrySchema.methods.toDto = function (this: Entry): EntryDto {\n  return plainToClass(EntryDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryAlreadyExists.html":{"url":"classes/EntryAlreadyExists.html","title":"class - EntryAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, path?: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"There is already an entry with this name at the current path!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.CONFLICT\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryDto.html":{"url":"classes/EntryDto.html","title":"class - EntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isFile\n                            \n                            \n                                isFolder\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                timestamp\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The time of which this entry was created.', example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this entry can be deleted.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The depth of where this entry located in the user's filesystem. It will always return an integer greater than 0.', example: 1, minimum: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The ID of the parent folder. If the parent is the root folder, then null will be returned.', nullable: true, type: String})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'A unique identifier for this entry.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this entry is a file.', example: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this entry is a folder.', example: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of this entry.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The path to this entry in the user's filesystem. It will always start with a forward slash.', example: '/hello'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this entry is public or not.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The size of this entry in bytes. If the entry is a folder, the size will always be 0.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The UNIX timestamp of when this entry was last modified.', example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The ID of the user that created this entry.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The time of which this entry was last modified.', example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from \"@nestjs/swagger\";\n\nimport { Exclude } from \"class-transformer\";\n\nexport class EntryDto {\n  @ApiProperty({\n    description: \"The time of which this entry was created.\",\n    example: new Date()\n  })\n  createdAt!: Date;\n\n  @ApiProperty({ description: \"Flag that indicates whether this entry can be deleted.\" })\n  deletable!: boolean;\n\n  @ApiProperty({\n    description:\n      \"The depth of where this entry located in the user's filesystem. It will always return an integer greater than 0.\",\n    example: 1,\n    minimum: 1\n  })\n  depth!: number;\n\n  @ApiProperty({\n    description:\n      \"The ID of the parent folder. If the parent is the root folder, then null will be returned.\",\n    nullable: true,\n    type: String\n  })\n  folder!: string | null;\n\n  @ApiHideProperty()\n  @Exclude()\n  hidden!: boolean;\n\n  @ApiProperty({ description: \"A unique identifier for this entry.\" })\n  id!: string;\n\n  @ApiProperty({\n    description: \"Flag that indicates whether this entry is a file.\",\n    example: false\n  })\n  isFile!: boolean;\n\n  @ApiProperty({\n    description: \"Flag that indicates whether this entry is a folder.\",\n    example: true\n  })\n  isFolder!: boolean;\n\n  @ApiProperty({ description: \"The name of this entry.\" })\n  name!: string;\n\n  @ApiProperty({\n    description:\n      \"The path to this entry in the user's filesystem. It will always start with a forward slash.\",\n    example: \"/hello\"\n  })\n  path!: string;\n\n  @ApiProperty({ description: \"Flag that indicates whether this entry is public or not.\" })\n  public!: boolean;\n\n  @ApiProperty({\n    description:\n      \"The size of this entry in bytes. If the entry is a folder, the size will always be 0.\"\n  })\n  size!: number;\n\n  @ApiProperty({\n    description: \"The UNIX timestamp of when this entry was last modified.\",\n    example: Date.now()\n  })\n  timestamp!: number;\n\n  @ApiProperty({ description: \"The ID of the user that created this entry.\" })\n  uid!: string;\n\n  @ApiProperty({\n    description: \"The time of which this entry was last modified.\",\n    example: new Date()\n  })\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotDeletable.html":{"url":"classes/EntryNotDeletable.html","title":"class - EntryNotDeletable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotDeletable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"This entry cannot be deleted!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.FORBIDDEN\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotFound.html":{"url":"classes/EntryNotFound.html","title":"class - EntryNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:38\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"The entry you are looking for does not exist!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.NOT_FOUND\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"The file(s) you tried to upload is too large!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.PAYLOAD_TOO_LARGE\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/file-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({format: 'binary', type: 'string'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/file-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class FileUploadDto {\n  @ApiProperty({ format: \"binary\", type: \"string\" })\n  file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFolder\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createFolder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFolder(dto: CreateFolderEntryDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create-folder')@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@UseScopes(ApplicationScopes.FILES_CREATE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateFolderEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/delete')@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@UseScopes(ApplicationScopes.FILES_DELETE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(uid: string | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/download')@ApiResponse({description: undefined, status: undefined})@OptionalAuth()@UseScopes(ApplicationScopes.FILES_DOWNLOAD)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/details')@ApiResponse({description: undefined, status: undefined})@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(uid: string, cursor: number, folder: string | null, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cursor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(dto: UpdateEntryDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/update')@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@UseScopes(ApplicationScopes.FILES_UPDATE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(uid: string, folder: string | null, isPublic: boolean, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ApiBody({type: FileUploadDto})@ApiConsumes('multipart/form-data')@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@ApiResponse({description: undefined, status: undefined})@UseScopes(ApplicationScopes.FILES_CREATE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isPublic\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiBody, ApiConsumes, ApiResponse, ApiSecurity, ApiTags } from \"@nestjs/swagger\";\n\nimport {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Delete,\n  Get,\n  HttpStatus,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  ParseBoolPipe,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Req,\n  Res,\n  Query,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport {\n  EntryAlreadyExists,\n  EntryNotDeletable,\n  EntryNotFound,\n  ParentFolderNotFound,\n  ParentIsChildrenOfItself,\n  ParentIsItself\n} from \"./files.errors\";\n\nimport { FilesService } from \"./files.service\";\n\nimport { CreateFolderEntryDto } from \"./dto/create-folder-entry.dto\";\nimport { EntryDto } from \"./dto/entry.dto\";\nimport { FileUploadDto } from \"./dto/file-upload.dto\";\nimport { UpdateEntryDto } from \"./dto/update-entry.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/optional-auth\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { PaginationDto } from \"@/dto/pagination.dto\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"@/modules/storage/storage.errors\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@ApiSecurity(\"api_key\")\n@ApiTags(\"Files\")\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"/:id/delete\")\n  @ApiResponse({ description: EntryNotDeletable.description, status: EntryNotDeletable.status })\n  @ApiResponse({ description: EntryNotFound.description, status: EntryNotFound.status })\n  @UseScopes(ApplicationScopes.FILES_DELETE)\n  async deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const deleted = await this.files.deleteOne({ id, uid });\n\n    return deleted.toDto();\n  }\n\n  @Get(\"/:id/details\")\n  @ApiResponse({ description: EntryNotFound.description, status: EntryNotFound.status })\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async findOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const entry = await this.files.findOne({ id, uid });\n    if (!entry) throw new EntryNotFound();\n\n    return entry.toDto();\n  }\n\n  @Get(\"/:id/download\")\n  @ApiResponse({ description: EntryNotFound.description, status: EntryNotFound.status })\n  @OptionalAuth()\n  @UseScopes(ApplicationScopes.FILES_DOWNLOAD)\n  async download(\n    @CurrentUser(\"id\") uid: string | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const readable = await this.files.createReadable(id, uid);\n\n    readable.on(\"error\", (error: Error) => {\n      // Exception filter disabled when using the @Res() decorator, so we have to log the error manually\n      this.logger.error(error);\n\n      if (!res.headersSent) {\n        const err = new InternalServerErrorException(error);\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Patch(\"/:id/update\")\n  @ApiResponse({ description: EntryAlreadyExists.description, status: EntryAlreadyExists.status })\n  @ApiResponse({ description: EntryNotFound.description, status: EntryNotFound.status })\n  @ApiResponse({ description: ParentFolderNotFound.description, status: ParentFolderNotFound.status }) // prettier-ignore\n  @ApiResponse({ description: ParentIsChildrenOfItself.description, status: ParentIsChildrenOfItself.status }) // prettier-ignore\n  @ApiResponse({ description: ParentIsItself.description, status: ParentIsItself.status })\n  @UseScopes(ApplicationScopes.FILES_UPDATE)\n  async updateOne(\n    @Body() dto: UpdateEntryDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    const entry = await this.files.updateOne(\n      { id, uid },\n      { ...dto, deletable: true, hidden: false }\n    );\n\n    return entry.toDto();\n  }\n\n  @Post(\"create-folder\")\n  @ApiResponse({ description: EntryAlreadyExists.description, status: EntryAlreadyExists.status })\n  @ApiResponse({ description: ParentFolderNotFound.description, status: ParentFolderNotFound.status }) // prettier-ignore\n  @UseScopes(ApplicationScopes.FILES_CREATE)\n  async createFolder(\n    @Body() dto: CreateFolderEntryDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    const folder = await this.files.createEntry({\n      deletable: true,\n      folder: dto.folder,\n      hidden: false,\n      isFile: false,\n      isFolder: true,\n      name: dto.name,\n      public: dto.public,\n      size: 0,\n      uid\n    });\n\n    return folder.toDto();\n  }\n\n  @Get(\"list\")\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async list(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"cursor\", new DefaultValuePipe(0), ParseIntPipe) cursor: number,\n    @Query(\"folder\", new DefaultValuePipe(null)) folder: string | null,\n    @Query(\"limit\", new DefaultValuePipe(50), ParseIntPipe) limit: number\n  ): Promise> {\n    const entries = await this.files.list({ folder, uid }, { cursor, limit });\n\n    return {\n      ...entries,\n      items: entries.items.map((entry) => entry.toDto())\n    };\n  }\n\n  @Post(\"upload\")\n  @ApiBody({ type: FileUploadDto })\n  @ApiConsumes(\"multipart/form-data\")\n  @ApiResponse({ description: FileTooLarge.description, status: FileTooLarge.status })\n  @ApiResponse({ description: ParentFolderNotFound.description, status: ParentFolderNotFound.status }) // prettier-ignore\n  @ApiResponse({ description: UnsupportedContentType.description, status: UnsupportedContentType.status }) // prettier-ignore\n  @ApiResponse({\n    description: [NoFilesUploaded, TooManyFields, TooManyFiles, TooManyParts]\n      .map((error) => error.description)\n      .join(\"\".repeat(2)),\n    status: HttpStatus.BAD_REQUEST\n  })\n  @UseScopes(ApplicationScopes.FILES_CREATE)\n  async upload(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"folder\", new DefaultValuePipe(null)) folder: string | null,\n    @Query(\"public\", new DefaultValuePipe(false), ParseBoolPipe) isPublic: boolean,\n    @Req() req: Request\n  ): Promise {\n    if (folder && !(await this.files.exists({ id: folder, uid }))) {\n      throw new ParentFolderNotFound();\n    }\n\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map((file) =>\n        this.files\n          .createEntry({\n            deletable: true,\n            folder,\n            hidden: false,\n            id: file.id,\n            isFile: true,\n            isFolder: false,\n            name: file.filename,\n            public: isPublic,\n            size: file.size,\n            uid\n          })\n          .then((file) => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { Entry, EntrySchema } from \"./schemas/entry.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: Entry.name, schema: EntrySchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(private readonly storage: StorageService) {}\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _renameWithIndex\n                            \n                            \n                                    Private\n                                _validateParent\n                            \n                            \n                                    Async\n                                createEntry\n                            \n                            \n                                    Async\n                                createReadable\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                hasDuplicates\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, entries: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _renameWithIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _renameWithIndex(filename: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _validateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _validateParent(entry: Entry, folder?: Entry | null)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                Entry | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReadable(id: string, uid?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery, options: QueryFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            QueryFindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery, options: QueryFindBaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            QueryFindBaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hasDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDuplicates(filename: string, query: FilterQuery>)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                FilterQuery>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: FilterQuery, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model, QueryFindBaseOptions, QueryFindOptions } from \"mongoose\";\nimport { Queue } from \"bull\";\nimport { Readable } from \"stream\";\n\nimport {\n  EntryAlreadyExists,\n  EntryNotDeletable,\n  EntryNotFound,\n  ParentFolderNotFound,\n  ParentIsChildrenOfItself,\n  ParentIsItself\n} from \"./files.errors\";\n\nimport { Entry, ENTRY_COLLATION_OPTIONS } from \"./schemas/entry.schema\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { clamp } from \"@/utils/clamp\";\nimport { paginate, Pagination } from \"@/utils/paginate\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    private readonly storage: StorageService,\n\n    @InjectModel(Entry.name)\n    private readonly entries: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async createEntry(data: {\n    deletable: Entry[\"deletable\"];\n    folder: Entry[\"folder\"];\n    hidden: Entry[\"hidden\"];\n    id?: Entry[\"id\"];\n    isFile: Entry[\"isFile\"];\n    isFolder: Entry[\"isFolder\"];\n    name: Entry[\"name\"];\n    public: Entry[\"public\"];\n    size: Entry[\"size\"];\n    uid: Entry[\"uid\"];\n  }): Promise {\n    const folder = data.folder ? await this.findOne({ id: data.folder, uid: data.uid }) : null;\n    if (!folder && data.folder) throw new ParentFolderNotFound();\n\n    const folderId = folder && folder.id;\n    const folderPath = (folder && folder.path) || \"/\";\n\n    const duplicates = await this.hasDuplicates(data.name, { folder: folderId, uid: data.uid });\n    if (duplicates && !data.isFile) throw new EntryAlreadyExists(data.name, folderPath);\n\n    return new this.entries({\n      ...data,\n      folder: folderId,\n      name: this._renameWithIndex(data.name, duplicates)\n    }).save();\n  }\n\n  async createReadable(id: string, uid?: string): Promise {\n    const file = uid\n      ? await this.findOne({ id, isFile: true, isFolder: false, uid })\n      : await this.findOne({ id, isFile: true, isFolder: false, public: true });\n\n    if (!file) throw new EntryNotFound();\n\n    return this.storage.read(file.id);\n  }\n\n  async deleteMany(query: FilterQuery): Promise {\n    // We have to use .remove on each individual document so that middlewares are executed\n    await this.entries\n      .find(query)\n      .collation(ENTRY_COLLATION_OPTIONS)\n      .cursor()\n      .eachAsync(async (entry: Entry) => {\n        if (entry.isFile) {\n          await this.filesQueue.add(\"delete\", { fileId: entry.id });\n        }\n\n        await entry.remove();\n      });\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const entry = await this.findOne(query);\n\n    if (!entry) throw new EntryNotFound();\n    if (!entry.deletable) throw new EntryNotDeletable();\n\n    await entry\n      .getChildren({ isFile: true })\n      .eachAsync((child) => this.filesQueue.add(\"delete\", { fileId: child.id }));\n\n    return entry.remove();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.entries\n      .findOne(query)\n      .collation(ENTRY_COLLATION_OPTIONS)\n      .select({ _id: 1 })\n      .lean()\n      .then((doc) => !!doc);\n  }\n\n  async find(query: FilterQuery, options: QueryFindOptions = {}): Promise {\n    return this.entries.find(query, undefined, options).collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async findOne(\n    query: FilterQuery,\n    options: QueryFindBaseOptions = {}\n  ): Promise {\n    return this.entries.findOne(query, undefined, options).collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async hasDuplicates(filename: string, query: FilterQuery>): Promise {\n    const parts = filename.split(\".\");\n    const extension = parts[parts.length - 1];\n    const name = parts.slice(0, parts.length - 1).join(\".\");\n\n    // Regex for finding entries with a duplicate index i.e. filename (1..n).ext\n    const regexp = new RegExp(`${name}( \\\\([0-9]+\\\\))+\\\\.${extension}`);\n\n    return this.entries\n      .countDocuments({ $or: [{ name: filename }, { name: regexp }], ...query })\n      .collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async list(\n    query: FilterQuery,\n    options: {\n      cursor?: number;\n      limit: number;\n    }\n  ): Promise> {\n    return paginate(this.entries, {\n      collation: ENTRY_COLLATION_OPTIONS,\n      cursor: options.cursor,\n      field: \"timestamp\",\n      limit: clamp(1, 100, options.limit),\n      query,\n      sort: {\n        isFolder: -1\n      }\n    });\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      deletable: Entry[\"deletable\"];\n      folder: Entry[\"folder\"];\n      hidden: Entry[\"hidden\"];\n      name: Entry[\"name\"];\n      public: Entry[\"public\"];\n    }\n  ): Promise {\n    const entry = await this.findOne(query);\n    if (!entry) throw new EntryNotFound();\n\n    const folder = data.folder\n      ? this._validateParent(entry, await this.findOne({ id: data.folder, uid: entry.uid }))\n      : null;\n\n    const folderId = folder && folder.id;\n    const folderPath = (folder && folder.path) || \"/\";\n\n    const exists = data.name !== entry.name && (await this.exists({ folder: folderId, name: data.name, uid: entry.uid })); // prettier-ignore\n    if (exists) throw new EntryAlreadyExists(data.name, folderPath);\n\n    entry.folder = folderId;\n    entry.hidden = data.hidden;\n    entry.name = data.name;\n    entry.public = data.public;\n\n    return entry.save();\n  }\n\n  private _renameWithIndex(filename: string, index: number): string {\n    if (index \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { ApiSecurity, ApiTags } from \"@nestjs/swagger\";\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@ApiSecurity(\"api_key\")\n@ApiTags(\"Health\")\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { SessionDto } from \"@/modules/sessions/dto/session.dto\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: Express.Session & SessionDto;\n  user: (User & { [key: string]: any }) | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        expires\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISessionData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISessionData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISessionData } from \"./session-data.interface\";\n\nexport interface ISession {\n  _id: string;\n  expires: Date;\n  session: ISessionData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISessionData.html":{"url":"interfaces/ISessionData.html","title":"interface - ISessionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISessionData extends Express.SessionData {\n  identifier: string;\n\n  ip: string | null;\n\n  lastUsed: Date;\n\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsufficientScopes.html":{"url":"classes/InsufficientScopes.html","title":"class - InsufficientScopes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsufficientScopes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this action!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAPIKey.html":{"url":"classes/InvalidAPIKey.html","title":"class - InvalidAPIKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAPIKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this action!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAvatarFileType.html":{"url":"classes/InvalidAvatarFileType.html","title":"class - InvalidAvatarFileType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAvatarFileType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnprocessableEntityException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationToken.html":{"url":"classes/InvalidEmailConfirmationToken.html","title":"class - InvalidEmailConfirmationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringPathSafeConstraint.html":{"url":"classes/IsStringPathSafeConstraint.html","title":"class - IsStringPathSafeConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringPathSafeConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-path-safe.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_SAFE_REGEX = /[\\\\/:*?\\\"<>|]/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringPathSafe\" })\nexport class IsStringPathSafeConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return `Value ($value) cannot contain / : * ? \\\\ \"  |`;\n  }\n\n  validate(value: string): boolean {\n    return !PATH_SAFE_REGEX.test(value);\n  }\n}\n\nexport const IsStringPathSafe = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringValidPathConstraint.html":{"url":"classes/IsStringValidPathConstraint.html","title":"class - IsStringValidPathConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringValidPathConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-valid-path.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_VALID_REGEX = /[^\\0]+/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringValidPath\" })\nexport class IsStringValidPathConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return \"Value ($value) is not a valid path!\";\n  }\n\n  validate(value: string): boolean {\n    return !PATH_VALID_REGEX.test(value);\n  }\n}\n\nexport const IsStringValidPath = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    })\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(@Inject(NODEMAILER_MODULE_OPTIONS) private readonly options: MailerOptions) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @Process(\"send\")\n  async send(job: Job): Promise {\n    await this.transporter.sendMail(job.data);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAbsoluteLink\n                            \n                            \n                                    Async\n                                render\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                transpileMJML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAbsoluteLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAbsoluteLink(relativeLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relativeLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render(template: fs.PathLike, data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            fs.PathLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(options: SendMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                SendMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transpileMJML\n                        \n                        \n                    \n                \n            \n            \n                \ntranspileMJML(mjml: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mjml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import ejs from \"ejs\";\nimport fs from \"fs\";\nimport mjml2html from \"mjml\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\nexport class MailerService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  createAbsoluteLink(relativeLink: string): string {\n    const protocol = this.config.get(\"NODE_ENV\") === \"production\" ? \"https\" : \"http\";\n    const root = `${protocol}://${this.config.get(\"FRONTEND_DOMAIN\")}/`;\n\n    return root + relativeLink.substring(relativeLink.startsWith(\"/\") ? 1 : 0);\n  }\n\n  async render(template: fs.PathLike, data: Record): Promise {\n    const mjml = await fs.promises.readFile(template).then(buffer => buffer.toString());\n    return ejs.render(this.transpileMJML(mjml), data, { async: true });\n  }\n\n  async send(options: SendMailOptions): Promise {\n    options.html = options.mjml\n      ? await this.render(options.mjml.template, options.mjml.data || {})\n      : options.html;\n\n    await this.emailsQueue.add(\"send\", options);\n  }\n\n  transpileMJML(mjml: string): string {\n    const { errors, html } = mjml2html(mjml, { keepComments: false, validationLevel: \"strict\" });\n    if (errors && errors.length) throw new Error(errors.join(\"\\n\"));\n\n    return html;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"You did not include any files to upload!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.BAD_REQUEST\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/paginate.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasNext\n                                \n                                \n                                        items\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasNext\n                                    \n                                \n                                \n                                    \n                                        hasNext:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CollationOptions, Document, FilterQuery, Model } from \"mongoose\";\n\nexport interface Pagination {\n  hasNext: boolean;\n  items: T[];\n  next: string | null;\n}\n\nexport interface PaginationOptions {\n  collation?: CollationOptions;\n  cursor?: string | number;\n  direction?: -1 | 1;\n  field?: keyof Omit;\n  limit: number;\n  query: FilterQuery;\n  sort?: {\n    [key: string]: number;\n  };\n}\n\nexport const paginate = async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/pagination.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Pagination\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasNext\n                            \n                            \n                                items\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pagination } from \"@/utils/paginate\";\n\nexport class PaginationDto implements Pagination {\n  hasNext!: boolean;\n\n  items!: T[];\n\n  next!: string | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationOptions.html":{"url":"interfaces/PaginationOptions.html","title":"interface - PaginationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/paginate.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collation\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        direction\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                        limit\n                                \n                                \n                                        query\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collation\n                                    \n                                \n                                \n                                    \n                                        collation:     CollationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     \"undefined\" | \"1\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"undefined\" | \"1\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterQuery\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CollationOptions, Document, FilterQuery, Model } from \"mongoose\";\n\nexport interface Pagination {\n  hasNext: boolean;\n  items: T[];\n  next: string | null;\n}\n\nexport interface PaginationOptions {\n  collation?: CollationOptions;\n  cursor?: string | number;\n  direction?: -1 | 1;\n  field?: keyof Omit;\n  limit: number;\n  query: FilterQuery;\n  sort?: {\n    [key: string]: number;\n  };\n}\n\nexport const paginate = async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentFolderNotFound.html":{"url":"classes/ParentFolderNotFound.html","title":"class - ParentFolderNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentFolderNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"The parent folder does not exist!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.NOT_FOUND\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:57\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsChildrenOfItself.html":{"url":"classes/ParentIsChildrenOfItself.html","title":"class - ParentIsChildrenOfItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsChildrenOfItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:64\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"The parent of an entry cannot be a children of itself!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.FORBIDDEN\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsItself.html":{"url":"classes/ParentIsItself.html","title":"class - ParentIsItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:77\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"The parent of an entry cannot be itself!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.FORBIDDEN\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/files.errors.ts:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/files/files.errors.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  HttpStatus,\n  NotFoundException\n} from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  static message = \"There is already an entry with this name at the current path!\";\n  static status = HttpStatus.CONFLICT;\n\n  constructor(name: string, path?: string) {\n    path\n      ? super(`Entry '${name}' already exists at '${path}'!`)\n      : super(`Entry '${name}' already exists!`);\n  }\n\n  static get description(): string {\n    return `${EntryAlreadyExists.name}: ${EntryAlreadyExists.message}`;\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  static message = \"This entry cannot be deleted!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(EntryNotDeletable.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotDeletable.name}: ${EntryNotDeletable.message}`;\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  static message = \"The entry you are looking for does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(EntryNotFound.message);\n  }\n\n  static get description(): string {\n    return `${EntryNotFound.name}: ${EntryNotFound.message}`;\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  static message = \"The parent folder does not exist!\";\n  static status = HttpStatus.NOT_FOUND;\n\n  constructor() {\n    super(ParentFolderNotFound.message);\n  }\n\n  static get description(): string {\n    return `${ParentFolderNotFound.name}: ${ParentFolderNotFound.message}`;\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be a children of itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsChildrenOfItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsChildrenOfItself.name}: ${ParentIsChildrenOfItself.message}`;\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  static message = \"The parent of an entry cannot be itself!\";\n  static status = HttpStatus.FORBIDDEN;\n\n  constructor() {\n    super(ParentIsItself.message);\n  }\n\n  static get description(): string {\n    return `${ParentIsItself.name}: ${ParentIsItself.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                displayName\n                            \n                            \n                                id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this user is an admin or not.', example: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The file ID that points to the user's avatar. If the user has no avatar, null will be returned.', nullable: true, type: String})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The time of which this user created their account.', example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The user's display name. This can differ from their username.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'A unique identifier for this user.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The username for this user. The username is always lowercase and cannot be changed.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class PartialUserDto {\n  @ApiProperty({\n    description: \"Flag that indicates whether this user is an admin or not.\",\n    example: false\n  })\n  admin!: boolean;\n\n  @ApiProperty({\n    description:\n      \"The file ID that points to the user's avatar. If the user has no avatar, null will be returned.\",\n    nullable: true,\n    type: String\n  })\n  avatar!: string | null;\n\n  @ApiProperty({\n    description: \"The time of which this user created their account.\",\n    example: new Date()\n  })\n  createdAt!: Date;\n\n  @ApiProperty({ description: \"The user's display name. This can differ from their username.\" })\n  displayName!: string;\n\n  @ApiProperty({ description: \"A unique identifier for this user.\" })\n  id!: string;\n\n  @ApiProperty({\n    description:\n      \"The username for this user. The username is always lowercase and cannot be changed.\"\n  })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:85\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_UNEXPECTED_RESULT = \"Action or score metadata not provided for v3 reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    if (result.action && result.score) {\n      if (!action || !score) throw new InternalServerErrorException(RECAPTCHA_UNEXPECTED_RESULT);\n\n      if (result.action !== action || result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendMailOptions.html":{"url":"interfaces/SendMailOptions.html","title":"interface - SendMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-mail-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mjml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mjml\n                                    \n                                \n                                \n                                    \n                                        mjml:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\n\nimport Mail from \"nodemailer/lib/mailer\";\n\nexport interface SendMailOptions extends Mail.Options {\n  mjml?: {\n    data?: Record;\n    template: fs.PathLike;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionDto.html":{"url":"classes/SessionDto.html","title":"class - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/dto/session.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookie\n                            \n                            \n                                identifier\n                            \n                            \n                                ip\n                            \n                            \n                                lastUsed\n                            \n                            \n                                ua\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookie\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Express.SessionCookieData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class SessionDto {\n  @Exclude()\n  cookie!: Express.SessionCookieData;\n\n  identifier!: string;\n\n  ip!: string | null;\n\n  lastUsed!: Date;\n\n  ua!: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SessionsController.html":{"url":"controllers/SessionsController.html","title":"controller - SessionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SessionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sessions\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                revoke\n                            \n                            \n                                revokeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string, currentSession: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \nrevoke(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Delete('/:id/revoke')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAll\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAll(uid: string, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Delete('all')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { plainToClass } from \"class-transformer\";\n\nimport { ApiExcludeEndpoint } from \"@nestjs/swagger\";\nimport { Controller, Delete, Get, Param, Session, UseGuards } from \"@nestjs/common\";\n\nimport { SessionsService } from \"./sessions.service\";\n\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { ISessionData } from \"./interfaces/session-data.interface\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"sessions\")\n@UseGuards(AuthGuard)\nexport class SessionsController {\n  constructor(private readonly sessions: SessionsService) {}\n\n  @ApiExcludeEndpoint()\n  @Get()\n  async getSessions(\n    @CurrentUser(\"id\") uid: string,\n    @Session() currentSession: ISessionData\n  ): Promise {\n    const sessions = await this.sessions.find({ \"session.uid\": uid });\n\n    return sessions.map(({ session }) =>\n      plainToClass(SessionDto, {\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      })\n    );\n  }\n\n  @ApiExcludeEndpoint()\n  @Delete(\"/:id/revoke\")\n  revoke(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.sessions.deleteOne({\n      \"session.identifier\": id,\n      \"session.uid\": uid\n    });\n  }\n\n  @ApiExcludeEndpoint()\n  @Delete(\"all\")\n  revokeAll(@CurrentUser(\"id\") uid: string, @Session() session: ISessionData): Promise {\n    return this.sessions.delete({\n      \"session.identifier\": { $ne: session.identifier },\n      \"session.uid\": uid\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionsModule.html":{"url":"modules/SessionsModule.html","title":"module - SessionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nSessionsService \n\nSessionsService \n\n\n\nSessionsModule\n\nSessionsModule\n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sessions/sessions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SessionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { SessionsController } from \"./sessions.controller\";\nimport { SessionsService } from \"./sessions.service\";\n\n@Module({\n  exports: [SessionsService],\n  controllers: [SessionsController],\n  providers: [SessionsService]\n})\nexport class SessionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection, FilterQuery } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"./interfaces/session.interface\";\n\n@Injectable()\nexport class SessionsService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  async delete(query: FilterQuery): Promise {\n    await this.sessions.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    await this.sessions.deleteOne(query);\n  }\n\n  find(query: FilterQuery): Promise {\n    return this.sessions.find(query).toArray();\n  }\n\n  findOne(query: FilterQuery): Promise {\n    return this.sessions.findOne(query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyApplications.html":{"url":"classes/TooManyApplications.html","title":"class - TooManyApplications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyApplications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:31\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this action!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"You have exceeded the maximum amont of fields per request!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.BAD_REQUEST\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"You have exceeded the maximum amount of files you can upload per request!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.BAD_REQUEST\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:55\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:62\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"You have exceeded the maximum amount of parts per request!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.BAD_REQUEST\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:68\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:75\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Missing or unsupported content type!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HttpStatus.UNSUPPORTED_MEDIA_TYPE\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.errors.ts:75\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/storage/storage.errors.ts:81\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  PayloadTooLargeException,\n  UnsupportedMediaTypeException\n} from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  static message = \"The file(s) you tried to upload is too large!\";\n  static status = HttpStatus.PAYLOAD_TOO_LARGE;\n\n  constructor(filename: string) {\n    super(`${FileTooLarge.name}: File '${filename}' is too large!`);\n  }\n\n  static get description(): string {\n    return `${FileTooLarge.name}: ${FileTooLarge.message}`;\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  static message = \"You did not include any files to upload!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(NoFilesUploaded.message);\n  }\n\n  static get description(): string {\n    return `${NoFilesUploaded.name}: ${NoFilesUploaded.message}`;\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  static message = \"You have exceeded the maximum amont of fields per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFields.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFields.name}: ${TooManyFields.message}`;\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of files you can upload per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyFiles.message);\n  }\n\n  static get description(): string {\n    return `${TooManyFiles.name}: ${TooManyFiles.message}`;\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  static message = \"You have exceeded the maximum amount of parts per request!\";\n  static status = HttpStatus.BAD_REQUEST;\n\n  constructor() {\n    super(TooManyParts.name);\n  }\n\n  static get description(): string {\n    return `${TooManyParts.name}: ${TooManyParts.message}`;\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  static message = \"Missing or unsupported content type!\";\n  static status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n\n  constructor() {\n    super(UnsupportedContentType.message);\n  }\n\n  static get description(): string {\n    return `${UnsupportedContentType.name}: ${UnsupportedContentType.message}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEntryDto.html":{"url":"classes/UpdateEntryDto.html","title":"class - UpdateEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/update-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                folder\n                            \n                            \n                                name\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The ID of the parent folder. To move the entry to the root folder, set the value to null.', nullable: true, type: String})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of this entry.'})@IsNotEmpty({message: 'Entry name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Entry name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this entry should be public or not.'})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nimport { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class UpdateEntryDto {\n  @ApiProperty({\n    description:\n      \"The ID of the parent folder. To move the entry to the root folder, set the value to null.\",\n    nullable: true,\n    type: String\n  })\n  @IsOptional()\n  @IsString()\n  folder!: string | null;\n\n  @ApiProperty({ description: \"The name of this entry.\" })\n  @IsNotEmpty({ message: \"Entry name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Entry name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ApiProperty({ description: \"Flag that indicates whether this entry should be public or not.\" })\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                newDisplayName\n                            \n                            \n                                    Optional\n                                newEmail\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsOptional()@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsOptional()@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class UpdateUserDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName?: string;\n\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  newEmail?: string;\n\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword?: string;\n\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function (next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then((id) => {\n      this.id = id;\n      next();\n    })\n    .catch((error) => next(error));\n});\n\nUserSchema.pre(\"save\", function (next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.comparePassword = function (this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function (this: any): Promise {\n  this.activated = false;\n  this.avatar = null;\n  this.deleted = true;\n  this.email = null;\n  this.password = null;\n\n  return this.save({ validateBeforeSave: false });\n};\n\nUserSchema.methods.toDto = function (this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                timesResent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timesResent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  timesResent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Flag that indicates whether this user is an admin or not.', example: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The file ID that points to the user's avatar. If the user has no avatar, null will be returned.', nullable: true, type: String})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The time of which this user created their account.', example: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The user's display name. This can differ from their username.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The email that was used to create this account.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'A unique identifier for this user.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The username for this user. The username is always lowercase and cannot be changed.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from \"@nestjs/swagger\";\n\nimport { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @ApiHideProperty()\n  @Exclude()\n  activated!: boolean;\n\n  @ApiProperty({\n    description: \"Flag that indicates whether this user is an admin or not.\",\n    example: false\n  })\n  admin!: boolean;\n\n  @ApiProperty({\n    description:\n      \"The file ID that points to the user's avatar. If the user has no avatar, null will be returned.\",\n    nullable: true,\n    type: String\n  })\n  avatar!: string | null;\n\n  @ApiProperty({\n    description: \"The time of which this user created their account.\",\n    example: new Date()\n  })\n  createdAt!: Date;\n\n  @ApiHideProperty()\n  @Exclude()\n  deleted!: boolean;\n\n  @ApiProperty({ description: \"The user's display name. This can differ from their username.\" })\n  displayName!: string;\n\n  @ApiProperty({ description: \"The email that was used to create this account.\" })\n  email!: string;\n\n  @ApiHideProperty()\n  @Exclude()\n  expiresAt!: Date | null;\n\n  @ApiProperty({ description: \"A unique identifier for this user.\" })\n  id!: string;\n\n  @ApiHideProperty()\n  @Exclude()\n  password!: string;\n\n  @ApiHideProperty()\n  @Exclude()\n  updatedAt!: Date;\n\n  @ApiProperty({\n    description:\n      \"The username for this user. The username is always lowercase and cannot be changed.\"\n  })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameTaken.html":{"url":"classes/UsernameTaken.html","title":"class - UsernameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:32\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                deleteOne\n                            \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(undefined: DeleteUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('@me/delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')@UseScopes(ApplicationScopes.USERS_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(me: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Post('@me/avatar')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: UpdateUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiExcludeEndpoint()@Patch('@me/update')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport { ApiExcludeEndpoint, ApiTags, ApiSecurity } from \"@nestjs/swagger\";\nimport { Body, Controller, Get, Param, Patch, Post, Req, UseGuards } from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { InvalidAvatarFileType, UserNotFound } from \"./users.errors\";\nimport { UsersService } from \"./users.service\";\n\nimport { DeleteUserDto } from \"./dto/delete-user.dto\";\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@ApiSecurity(\"api_key\")\n@ApiTags(\"Users\")\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly storage: StorageService,\n    private readonly users: UsersService\n  ) {}\n\n  @Get(\"@me\")\n  @UseScopes(ApplicationScopes.USERS_READ)\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"@me/avatar\")\n  async updateAvatar(@CurrentUser() me: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new InvalidAvatarFileType(), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [() => sharp().resize(512, 512).png()]\n    });\n\n    await this.files.createEntry({\n      deletable: false,\n      folder: null,\n      hidden: true,\n      id: avatar.id,\n      isFile: true,\n      isFolder: false,\n      name: avatar.filename,\n      public: true,\n      size: avatar.size,\n      uid: me.id\n    });\n\n    return this.users.updateAvatar(me, avatar.id).then((user) => user.toDto());\n  }\n\n  @ApiExcludeEndpoint()\n  @Post(\"@me/delete\")\n  deleteOne(@Body() { password }: DeleteUserDto, @CurrentUser() me: User): Promise {\n    return this.users.deleteOne(me, password);\n  }\n\n  @ApiExcludeEndpoint()\n  @Patch(\"@me/update\")\n  updateOne(@Body() dto: UpdateUserDto, @CurrentUser() me: User): Promise {\n    return this.users.updateOne(me, dto).then((user) => user.toDto());\n  }\n\n  @ApiExcludeEndpoint()\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.users.confirmEmail(token);\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new UserNotFound(username);\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n\n    FilesModule,\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n\n    SessionsModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, files: FilesService, mailer: MailerService, sessions: SessionsService, emailConfirmations: Model, users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(user: User, newAvatarId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(user: User, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport {\n  DisplayNameTaken,\n  EmailTaken,\n  InvalidEmailConfirmationToken,\n  UsernameTaken\n} from \"./users.errors\";\n\nimport { emailChanged } from \"./emails/email-changed.email\";\nimport { emailConfirmation } from \"./emails/email-confirmation.email\";\nimport { passwordChangedEmail } from \"./emails/password-changed.email\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { User } from \"./schemas/user.schema\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(User.name)\n    private readonly users: Model\n  ) {}\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.emailConfirmations.findOne({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationToken();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationToken();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationToken();\n    }\n\n    const oldUser = user.toObject();\n\n    user.email = confirmation.newEmail;\n\n    await user.save();\n    await confirmation.deleteOne();\n\n    await this.mailer.send(\n      emailChanged(oldUser.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailTaken();\n    if (await this.users.exists({ username })) throw new UsernameTaken();\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async deleteOne(user: User, password: string): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.applications.delete({ uid: user.id }),\n      this.files.deleteMany({ uid: user.id }),\n      this.sessions.delete({ \"session.uid\": user.id })\n    ]);\n\n    return user.delete();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.users.exists(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  async updateOne(\n    user: User,\n    data: {\n      newDisplayName?: string;\n      newEmail?: string;\n      newPassword?: string;\n      password: string;\n    }\n  ): Promise {\n    const { newDisplayName, newEmail, newPassword, password } = data;\n\n    if (!(await user.comparePassword(password))) {\n      throw new IncorrectPassword();\n    }\n\n    if (newDisplayName && newDisplayName !== user.displayName) {\n      if (await this.users.exists({ displayName: newDisplayName })) {\n        throw new DisplayNameTaken();\n      }\n\n      user.displayName = newDisplayName;\n    }\n\n    if (newEmail && newEmail !== user.email) {\n      if (await this.users.exists({ email: newEmail })) {\n        throw new EmailTaken();\n      }\n\n      const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n      await this.mailer.send(\n        emailConfirmation(newEmail, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(`/confirm-email/${confirmation.token}`)\n        })\n      );\n    }\n\n    if (newPassword) {\n      user.password = newPassword;\n\n      await this.mailer.send(\n        passwordChangedEmail(user.email, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n        })\n      );\n    }\n\n    await user.save();\n\n    return user;\n  }\n\n  async updateAvatar(user: User, newAvatarId: string): Promise {\n    if (user.avatar) {\n      await this.files.deleteOne({ id: user.avatar, uid: user.id }).catch(() => undefined);\n    }\n\n    user.avatar = newAvatarId;\n\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/optional-auth.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/scopes.decorator.ts\n            \n            variable\n            UseScopes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_OPTIONAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_SCOPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_UNEXPECTED_RESULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InsufficientScopes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InvalidAPIKey\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            TooManyApplications\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application-key.dto.ts\n            \n            class\n            CreateApplicationKeyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            HMAC_SHA256\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-post-reset.email.ts\n            \n            variable\n            passwordResetted\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-reset.email.ts\n            \n            variable\n            passwordReset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/successful-login.email.ts\n            \n            variable\n            successfulLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/user-activation.email.ts\n            \n            variable\n            userActivation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/create-folder-entry.dto.ts\n            \n            class\n            CreateFolderEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/dto/entry.dto.ts\n            \n            class\n            EntryDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/files/dto/file-upload.dto.ts\n            \n            class\n            FileUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/update-entry.dto.ts\n            \n            class\n            UpdateEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryAlreadyExists\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotDeletable\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotFound\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentFolderNotFound\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsChildrenOfItself\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsItself\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            class\n            Entry\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            variable\n            ENTRY_COLLATION_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            variable\n            EntrySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-mail-options.interface.ts\n            \n            interface\n            SendMailOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/dto/session.dto.ts\n            \n            class\n            SessionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session-data.interface.ts\n            \n            interface\n            ISessionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.controller.ts\n            \n            controller\n            SessionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/delete-user.dto.ts\n            \n            class\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-changed.email.ts\n            \n            variable\n            emailChanged\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-confirmation.email.ts\n            \n            variable\n            emailConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/password-changed.email.ts\n            \n            variable\n            passwordChangedEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidAvatarFileType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidEmailConfirmationToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/clamp.ts\n            \n            variable\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            interface\n            PaginationOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            variable\n            paginate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            class\n            IsStringPathSafeConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            IsStringPathSafe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            PATH_SAFE_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            class\n            IsStringValidPathConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            IsStringValidPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            PATH_VALID_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.3.0\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @nestjs/swagger : ^4.6.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.4.4\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.18.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.5\n        \n            express-session : ^1.17.1\n        \n            helmet : ^4.1.0\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.10.2\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.3\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.11\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.2\n        \n            sharp : ^0.26.0\n        \n            swagger-ui-express : ^4.1.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationScopes   (src/.../application-scopes.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/enums/application-scopes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationScopes\n                    \n                \n                        \n                            \n                                 FILES_CREATE\n                            \n                        \n                        \n                            \n                                Value : files:create\n                            \n                        \n                        \n                            \n                                 FILES_DELETE\n                            \n                        \n                        \n                            \n                                Value : files:delete\n                            \n                        \n                        \n                            \n                                 FILES_DOWNLOAD\n                            \n                        \n                        \n                            \n                                Value : files:download\n                            \n                        \n                        \n                            \n                                 FILES_READ\n                            \n                        \n                        \n                            \n                                Value : files:read\n                            \n                        \n                        \n                            \n                                 FILES_UPDATE\n                            \n                        \n                        \n                            \n                                Value : files:update\n                            \n                        \n                        \n                            \n                                 USERS_READ\n                            \n                        \n                        \n                            \n                                Value : users:read\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nSessionsService \n\nSessionsService \n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    59 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            AUTH_GUARD_OPTIONAL   (src/.../auth.guard.ts)\n                        \n                        \n                            AUTH_GUARD_SCOPES   (src/.../auth.guard.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            clamp   (src/.../clamp.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            emailChanged   (src/.../email-changed.email.ts)\n                        \n                        \n                            emailConfirmation   (src/.../email-confirmation.email.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            ENTRY_COLLATION_OPTIONS   (src/.../entry.schema.ts)\n                        \n                        \n                            EntrySchema   (src/.../entry.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            HMAC_SHA256   (src/.../application.schema.ts)\n                        \n                        \n                            IsStringPathSafe   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            IsStringValidPath   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../optional-auth.ts)\n                        \n                        \n                            paginate   (src/.../paginate.ts)\n                        \n                        \n                            passwordChangedEmail   (src/.../password-changed.email.ts)\n                        \n                        \n                            passwordReset   (src/.../password-reset.email.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            passwordResetted   (src/.../password-post-reset.email.ts)\n                        \n                        \n                            PATH_SAFE_REGEX   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            PATH_VALID_REGEX   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_UNEXPECTED_RESULT   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            successfulLogin   (src/.../successful-login.email.ts)\n                        \n                        \n                            userActivation   (src/.../user-activation.email.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            UseScopes   (src/.../scopes.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HMAC_SHA256\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/guards/auth.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_OPTIONAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_OPTIONAL\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_SCOPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_SCOPES\"\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/utils/clamp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (min: number, max: number, n: number): number =>\n  Math.min(Math.max(n, min), max)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((field: string, ctx: ExecutionContext) => {\n  const user = ctx.switchToHttp().getRequest().user;\n  return field ? user && user[field] : user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-changed.mjml\"\n  },\n  subject: \"Bytebin - Email Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your email has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-confirmation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-confirmation.mjml\"\n  },\n  subject: \"Bytebin - Please confirm your email address\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"To confirm your email address, please visit the link below.\",\n    \"This email confirmation link is only valid for the next 72 hours.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/entry.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTRY_COLLATION_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { locale: \"en\", strength: 2 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EntrySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Entry)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-path-safe.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringPathSafe\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_SAFE_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\\\/:*?\\\"<>|]/g\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-valid-path.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringValidPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_VALID_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[^\\0]+/g\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/optional-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_OPTIONAL, optional)\n                        \n                    \n\n\n            \n        \n\n    src/utils/paginate.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/password-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordChangedEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-changed.mjml\"\n  },\n  subject: \"Bytebin - Password Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your password has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-reset-request.mjml\"\n  },\n  subject: \"Bytebin - Password reset requested\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To reset your password, please visit the link below.\",\n    \"This password reset link is only valid for the next 1 hour.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-post-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordResetted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-post-reset.mjml\"\n  },\n  subject: \"Bytebin - Your password has been reset\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"Your password has been reset.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_UNEXPECTED_RESULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Action or score metadata not provided for v3 reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/successful-login.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            successfulLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: {\n    displayName: string;\n    link: string;\n    session: ISessionData;\n  }\n): SendMailOptions => {\n  const time = new Date().toUTCString();\n\n  return {\n    mjml: {\n      data: {\n        ...data,\n        time\n      },\n      template: \"./templates/successful-login.mjml\"\n    },\n    subject: \"Bytebin - Successful Login\",\n    text: [\n      `Hey ${data.displayName},\\n`,\n      `This email was sent because a new login has occurred on your account at ${time}.\\n`,\n      `IP Address: ${data.session.ip || \"Unknown\"}`,\n      `Device: ${data.session.ua.os.name} ${data.session.ua.os.version}`,\n      `Browser: ${data.session.ua.browser.name} ${data.session.ua.browser.version}\\n`,\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      data.link\n    ].join(\"\\n\"),\n    to\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/user-activation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userActivation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/user-activation.mjml\"\n  },\n  subject: \"Bytebin - Activate your account\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To finish up the registration process, please activate your account by visiting the link below\",\n    \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/scopes.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UseScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...scopes: ApplicationScopes[]): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_SCOPES, scopes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
