var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,2.072,1,3.319]],["body/controllers/AdminController.html",[0,2.941,1,5.708,2,2.941,3,0.092,4,0.079,5,0.067,6,5.552,7,3.98,8,5.071,9,0.211,10,0.009,11,4.185,12,0.878,13,5.071,14,5.552,15,4.711,16,6.283,17,4.081,18,4.424,19,6.283,20,6.283,21,0.104,22,0.281,23,3.139,24,2.634,25,2.345,26,3.98,27,0.006,28,0.007,29,0.006]],["title/injectables/AdminGuard.html",[15,3.319,30,1.357]],["body/injectables/AdminGuard.html",[3,0.084,4,0.073,5,0.061,8,3.858,9,0.196,10,0.009,12,0.81,15,5.43,21,0.096,22,0.259,27,0.005,28,0.007,29,0.005,30,2.22,31,2.711,32,5.118,33,1.474,34,4.779,35,0.694,36,2.07,37,2.157,38,5.844,39,5.844,40,6.206,41,0.413,42,5.792,43,1.581,44,0.851,45,0.474,46,1.32,47,4.674,48,1.656,49,1.889,50,2.799,51,3.669,52,4.343,53,5.792,54,1.908,55,5.792,56,1.862,57,3.225,58,4.674,59,5.118,60,2.711,61,1.862,62,4.674,63,1.581,64,2.408]],["title/injectables/AdminMiddleware.html",[30,1.357,65,3.319]],["body/injectables/AdminMiddleware.html",[3,0.075,4,0.064,5,0.054,8,3.411,9,0.196,10,0.009,12,0.716,21,0.085,22,0.229,27,0.005,28,0.006,29,0.005,30,2.052,31,2.397,33,1.363,35,0.614,36,1.913,37,2.24,41,0.477,43,1.827,44,0.983,45,0.547,46,1.525,48,1.913,49,1.945,50,2.475,51,5.331,52,3.84,54,1.687,57,3.727,59,4.525,60,2.397,61,1.646,62,4.133,65,5.018,66,4.525,67,5.928,68,4.402,69,6.589,70,6.381,71,5.605,72,3.84,73,7.437,74,5.121,75,5.914,76,4.525,77,5.121,78,2.968,79,5.121,80,5.121,81,2.558,82,3.244]],["title/modules/AdminModule.html",[83,1.295,84,3.117]],["body/modules/AdminModule.html",[1,5.624,2,3.158,3,0.076,4,0.065,5,0.055,9,0.205,10,0.009,12,0.725,13,6.001,14,4.582,21,0.086,22,0.232,27,0.005,28,0.006,29,0.005,36,1.482,41,0.369,43,1.415,44,0.761,45,0.424,46,1.181,48,1.482,65,3.887,83,2.194,84,6.054,85,2.506,86,2.59,87,2.779,88,2.779,89,2.779,90,4.021,91,4.021,92,4.582,93,4.582,94,4.582,95,3.617,96,2.097,97,2.779,98,5.185,99,5.185,100,6.748,101,7.945,102,5.185,103,6.748,104,3.617,105,4.582,106,6.748,107,3.136,108,4.184,109,6.748,110,5.185,111,5.185,112,5.185,113,2.284,114,5.185,115,5.185,116,4.582,117,5.185,118,2.156,119,5.185]],["title/injectables/AdminService.html",[13,2.949,30,1.357]],["body/injectables/AdminService.html",[3,0.093,4,0.08,5,0.068,9,0.191,10,0.009,12,0.895,13,5.127,17,4.593,18,4.506,21,0.106,22,0.286,23,3.197,24,2.214,26,4.876,27,0.006,28,0.007,29,0.006,30,2.36,31,2.995,41,0.456,43,1.747,44,0.94,45,0.523,46,1.458,120,5.655,121,1.274,122,5.655,123,6.399]],["title/modules/AppModule.html",[83,1.295,124,3.319]],["body/modules/AppModule.html",[3,0.042,4,0.036,5,0.031,9,0.209,10,0.009,12,0.405,21,0.048,22,0.13,27,0.003,28,0.004,29,0.003,56,2.117,61,0.932,63,0.791,64,2.259,83,1.589,84,4.897,85,1.4,86,1.448,87,1.554,88,1.554,89,1.554,90,2.39,91,2.913,95,2.39,96,1.172,97,1.554,124,6.646,125,2.561,126,2.561,127,2.561,128,5.693,129,4.632,130,4.897,131,4.405,132,4.897,133,5.61,134,4.405,135,5.693,136,4.98,137,2.339,138,2.584,139,2.898,140,2.561,141,4.458,142,2.173,143,4.458,144,4.034,145,1.554,146,3.94,147,2.04,148,1.276,149,4.458,150,2.898,151,3.343,152,3.343,153,4.458,154,2.227,155,2.173,156,2.898,157,2.898,158,2.561,159,2.898,160,2.173,161,2.898,162,2.339,163,2.898,164,2.898,165,2.339,166,2.898,167,2.339,168,1.498,169,2.339,170,2.561,171,2.898,172,2.898,173,2.898,174,2.898,175,2.898,176,2.898,177,7.832,178,2.898,179,2.898,180,2.898,181,7.671,182,5.434,183,2.898,184,3.598,185,2.898,186,4.458,187,2.898,188,2.898,189,2.898,190,4.458,191,2.898,192,4.458,193,2.898,194,2.898,195,6.101,196,6.101,197,2.898,198,2.898,199,2.898,200,2.898,201,2.898,202,2.339,203,2.898,204,4.385,205,2.898,206,2.898,207,2.898,208,2.898,209,2.898,210,2.898,211,2.898,212,2.898,213,2.898,214,2.898,215,2.898,216,2.898,217,4.458,218,2.898,219,2.898,220,2.898,221,4.458,222,2.898,223,2.898,224,2.898,225,2.898,226,2.898,227,3.149,228,3.442,229,3.025,230,2.173,231,6.101,232,2.898,233,2.401,234,2.898,235,2.898,236,3.343,237,2.898,238,2.898,239,2.898,240,2.898,241,2.898,242,2.898,243,2.898,244,5.434,245,2.898,246,2.898,247,2.898,248,2.898,249,1.448,250,2.898,251,2.898,252,2.898,253,2.898,254,2.898,255,2.898,256,1.4,257,2.898,258,2.898,259,2.898,260,1.93,261,2.898,262,2.898,263,2.898,264,2.339,265,2.339,266,2.339,267,2.04]],["title/classes/Application.html",[22,0.198,268,2.465]],["body/classes/Application.html",[3,0.039,4,0.034,5,0.028,9,0.186,10,0.009,21,0.07,22,0.232,27,0.003,28,0.004,29,0.003,33,0.856,35,0.504,37,0.734,41,0.566,44,0.761,45,0.685,49,1.097,54,1.385,56,1.884,63,1.841,64,3.574,72,1.968,82,1.703,113,1.852,148,1.184,168,1.39,230,2.015,249,2.101,256,2.032,268,4.175,269,0.435,270,2.169,271,2.884,272,4.478,273,1.002,274,5.18,275,2.884,276,4.181,277,5.18,278,2.564,279,3.525,280,3.45,281,3.409,282,4.181,283,2.351,284,2.884,285,4.464,286,2.688,287,3.104,288,2.688,289,2.688,290,2.688,291,0.808,292,2.221,293,2.801,294,3.409,295,6.36,296,3.396,297,4.694,298,4.029,299,2.688,300,2.453,301,3.716,302,2.688,303,2.688,304,2.169,305,4.578,306,3.712,307,2.801,308,3.884,309,2.688,310,3.716,311,2.688,312,2.688,313,2.688,314,3.903,315,2.688,316,2.688,317,4.578,318,1.22,319,2.015,320,1.441,321,1.892,322,1.299,323,4.694,324,2.342,325,1.79,326,4.578,327,2.375,328,3.002,329,1.892,330,1.703,331,2.169,332,2.688,333,1.497,334,1.626,335,2.169,336,1.558,337,2.375,338,6.19,339,2.375,340,2.375,341,2.375,342,1.79,343,1.79,344,1.892,345,1.79,346,1.558,347,1.79,348,2.801,349,2.032,350,2.375,351,2.688,352,2.688,353,2.282,354,2.015,355,2.375,356,2.688,357,1.892,358,1.79,359,2.688,360,2.375,361,1.892,362,1.79,363,2.688,364,4.206,365,2.688,366,2.688,367,2.688,368,2.688,369,1.703,370,2.688,371,2.688,372,2.688,373,2.688,374,2.688,375,2.688,376,4.206,377,4.206,378,2.351,379,2.688,380,2.169,381,2.688,382,2.688,383,2.015,384,2.688,385,2.375,386,2.688,387,2.688,388,2.688,389,2.169,390,2.688,391,2.688,392,2.688,393,2.688,394,2.688,395,2.375,396,2.688,397,2.169,398,2.169,399,2.169]],["title/classes/ApplicationAlreadyExists.html",[22,0.198,400,2.678]],["body/classes/ApplicationAlreadyExists.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.753,21,0.138,22,0.373,27,0.005,28,0.007,29,0.005,33,1.737,41,0.384,43,1.47,44,1.122,45,0.441,46,1.227,50,3.342,121,1.659,269,0.871,279,2.603,281,2.888,291,0.731,369,3.412,400,4.184,401,3.588,402,3.364,403,3.707,404,5.387,405,3.268,406,3.046,407,3.793,408,2.372,409,2.603,410,2.603,411,3.258,412,4.869,413,2.304,414,3.258,415,3.588,416,3.588,417,2.691,418,3.258,419,2.372,420,3.258,421,2.888,422,3.793,423,3.588,424,3.793,425,2.999,426,3.793]],["title/classes/ApplicationDto.html",[22,0.198,272,3.117]],["body/classes/ApplicationDto.html",[3,0.078,4,0.067,5,0.056,9,0.17,10,0.009,21,0.088,22,0.307,27,0.005,28,0.006,29,0.005,35,0.637,41,0.616,44,1.115,45,0.707,269,0.86,272,4.829,273,1.635,275,4.227,278,2.762,279,3.669,280,5.057,281,4.07,284,4.227,287,3.744,291,0.813,292,2.259,300,2.918,320,2.851,328,4.4,329,3.744,330,3.368,427,4.699,428,5.318,429,5.318,430,5.846,431,5.318,432,5.318,433,5.318,434,5.318,435,5.318]],["title/classes/ApplicationNotFound.html",[22,0.198,411,2.678]],["body/classes/ApplicationNotFound.html",[3,0.08,4,0.069,5,0.058,9,0.137,10,0.009,12,0.769,21,0.139,22,0.375,27,0.005,28,0.007,29,0.005,33,1.746,41,0.392,44,0.808,50,3.387,121,1.707,269,0.889,279,2.658,281,2.949,291,0.526,369,3.484,400,3.327,401,3.664,402,3.087,403,2.949,405,3.3,406,3.398,407,3.873,408,2.423,409,2.658,410,2.658,411,4.24,412,4.935,413,2.353,414,3.327,415,3.664,416,3.664,417,2.748,418,3.327,419,2.423,420,3.327,421,2.949,422,3.873,423,3.664,424,3.873,425,3.063,426,3.873,436,5.501]],["title/controllers/ApplicationsController.html",[0,2.072,437,3.319]],["body/controllers/ApplicationsController.html",[0,1.686,2,1.686,3,0.052,4,0.045,5,0.038,7,2.281,9,0.198,10,0.009,11,2.399,12,0.504,21,0.06,22,0.161,23,1.799,24,1.246,27,0.003,28,0.005,29,0.003,34,2.179,35,0.432,36,1.5,37,1.69,41,0.515,43,1.973,44,1.061,45,0.591,46,1.647,48,2.066,49,2.157,54,1.186,63,1.973,151,2.701,152,2.701,268,2.005,272,2.536,276,4.995,278,3.082,279,1.741,283,3.989,291,0.864,292,2.38,327,3.183,425,2.921,437,3.934,438,3.183,439,4.641,440,3.324,441,4.122,442,3.602,443,3.602,444,3.602,445,5.839,446,3.602,447,6.009,448,3.602,449,5.833,450,3.183,451,3.602,452,3.602,453,3.602,454,3.602,455,3.602,456,2.907,457,3.602,458,3.602,459,4.358,460,1.931,461,2.536,462,2.907,463,3.174,464,3.183,465,3.174,466,3.183,467,3.183,468,3.602,469,2.701,470,3.602,471,3.602,472,2.399,473,2.701,474,2.701,475,2.701,476,3.602,477,2.701,478,3.602,479,3.602,480,2.179,481,3.602,482,3.602,483,6.8,484,4.637,485,4.995,486,3.602,487,5.247,488,3.602,489,3.183,490,4.995,491,3.602,492,3.602,493,3.602,494,3.602,495,3.602,496,3.602]],["title/modules/ApplicationsModule.html",[83,1.295,128,3.117]],["body/modules/ApplicationsModule.html",[2,3.32,3,0.082,4,0.07,5,0.059,9,0.21,10,0.009,12,0.784,21,0.093,22,0.251,27,0.005,28,0.007,29,0.005,44,0.823,83,2.276,85,2.709,86,2.8,87,3.004,88,3.004,89,3.004,90,4.172,91,4.172,95,3.802,96,2.266,97,3.004,128,6.163,138,3.248,147,3.946,148,2.468,268,3.121,324,3.121,354,5.318,437,5.835,465,5.51,466,4.953,497,4.953,498,4.953,499,4.953,500,5.605,501,5.605,502,4.953,503,4.202,504,4.953]],["title/injectables/ApplicationsService.html",[30,1.357,465,2.678]],["body/injectables/ApplicationsService.html",[3,0.047,4,0.041,5,0.034,9,0.187,10,0.009,12,0.451,21,0.054,22,0.144,24,1.673,25,1.806,27,0.003,28,0.005,29,0.003,30,1.483,31,1.51,35,0.387,36,1.383,37,2.408,41,0.551,43,2.111,44,1.216,45,0.677,46,1.762,48,2.149,49,2.205,54,2.388,56,2.072,60,3.232,61,2.417,63,1.979,121,0.963,144,3.589,145,1.73,148,1.421,229,2.693,268,4.186,276,3.904,280,2.149,281,2.593,283,2.926,291,0.309,310,2.851,321,2.272,322,1.559,328,3.363,330,2.044,336,4.002,400,1.952,411,3.899,420,2.926,425,3.231,439,3.627,440,3.064,441,3.865,460,2.593,465,2.926,480,2.926,502,2.851,504,2.851,505,2.851,506,3.406,507,2.604,508,4.083,509,3.227,510,4.838,511,3.899,512,3.227,513,4.275,514,5.537,515,3.227,516,3.519,517,3.904,518,3.227,519,3.904,520,3.227,521,3.627,522,3.227,523,4.838,524,3.227,525,2.851,526,3.227,527,2.419,528,3.227,529,2.851,530,3.227,531,4.838,532,3.227,533,3.227,534,2.851,535,3.227,536,3.227,537,3.227,538,3.227,539,6.446,540,3.227,541,3.227,542,3.227,543,2.851,544,3.227,545,3.227,546,3.227,547,3.227,548,3.227]],["title/interfaces/AsyncStorageOptions.html",[549,1.032,550,3.319]],["body/interfaces/AsyncStorageOptions.html",[3,0.081,4,0.07,5,0.059,9,0.193,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,33,1.439,35,0.668,37,1.522,45,0.741,46,2.016,49,1.454,83,2.271,154,3.531,227,4.731,228,5.171,267,5.748,273,1.685,285,4.478,549,1.299,550,5.3,551,2.194,552,3.925,553,3.531,554,6.247,555,7.214,556,4.926,557,4.926,558,4.097,559,3.231,560,3.925,561,2.194,562,4.926,563,4.926]],["title/controllers/AuthController.html",[0,2.072,564,3.319]],["body/controllers/AuthController.html",[0,1.343,2,1.343,3,0.042,4,0.036,5,0.03,7,1.818,9,0.212,10,0.009,11,1.911,12,0.401,21,0.048,22,0.128,23,1.434,24,1.531,25,1.071,27,0.003,28,0.004,29,0.003,35,0.344,36,1.265,37,1.474,41,0.494,43,1.891,44,1.017,45,0.567,46,1.578,48,1.98,49,2.037,54,1.999,56,1.423,57,3.651,61,1.736,63,1.79,71,1.911,78,1.663,81,1.434,104,2.372,151,2.152,152,2.152,230,3.318,233,1.129,249,2.698,287,1.264,291,0.663,292,2.282,333,1.598,334,1.736,378,2.754,409,1.387,410,2.138,413,1.228,417,3.461,459,3.116,460,1.538,461,2.021,463,1.736,464,2.536,484,2.536,564,3.318,565,2.536,566,3.91,567,3.91,568,3.13,569,4.425,570,3.318,571,3.91,572,2.536,573,2.87,574,4.425,575,2.87,576,2.87,577,4.551,578,2.87,579,3.18,580,2.87,581,2.87,582,4.551,583,5.401,584,4.509,585,3.845,586,2.87,587,2.87,588,2.87,589,4.772,590,2.87,591,2.87,592,2.87,593,4.551,594,2.87,595,2.87,596,2.87,597,4.551,598,2.87,599,2.87,600,2.536,601,2.152,602,1.736,603,2.87,604,3.318,605,2.536,606,2.536,607,2.947,608,2.536,609,2.316,610,2.87,611,2.87,612,2.87,613,4.425,614,2.87,615,2.87,616,2.87,617,2.316,618,4.425,619,2.87,620,2.316,621,2.87,622,2.152,623,2.87,624,2.87,625,2.316,626,2.677,627,2.316,628,1.818,629,2.87,630,2.87,631,2.87,632,2.87,633,2.152,634,2.87,635,2.021,636,2.87,637,2.87,638,2.87,639,2.87,640,2.87,641,2.245,642,2.536,643,2.87,644,2.87,645,2.316,646,2.87,647,2.87,648,2.87,649,2.87,650,4.425,651,4.425,652,3.13,653,2.87,654,2.87,655,2.87,656,2.87,657,2.536,658,2.152,659,2.87,660,2.87,661,2.152,662,2.87,663,2.021,664,2.87,665,2.152,666,2.87,667,2.152,668,2.87,669,2.152,670,2.316,671,2.316,672,2.87,673,1.818,674,2.316,675,1.302,676,2.316,677,2.536,678,2.87,679,2.87,680,2.316,681,2.316,682,2.87,683,2.316,684,2.87,685,2.87,686,2.87,687,2.87,688,2.87,689,2.87,690,2.87,691,2.021,692,2.87]],["title/guards/AuthGuard.html",[34,2.678,383,3.319]],["body/guards/AuthGuard.html",[3,0.044,4,0.038,5,0.032,9,0.199,10,0.009,12,0.418,17,3.324,18,2.105,21,0.092,22,0.134,24,2.145,25,3.077,26,3.509,27,0.003,28,0.004,29,0.003,30,1.4,34,2.762,35,0.358,36,1.305,37,2.113,38,5.004,39,3.685,40,5.492,41,0.476,43,1.922,44,0.981,45,0.576,46,1.669,47,5.682,48,1.772,49,1.191,51,4.64,52,2.242,54,2.319,56,2.539,57,3.084,58,2.413,60,3.623,61,2.539,63,1.823,64,2.303,81,2.281,113,1.317,121,0.909,142,2.242,144,3.453,145,1.603,229,3.084,233,2.771,249,2.281,268,2.542,278,2.43,279,2.997,280,1.991,281,3.926,287,2.011,291,0.593,300,1.088,328,3.594,329,2.105,330,1.894,336,1.733,369,1.894,378,2.072,414,2.762,417,1.494,418,4.04,425,2.542,465,3.751,584,1.809,601,2.242,602,1.809,661,2.242,693,2.413,694,2.413,695,4.035,696,4.566,697,4.566,698,2.642,699,6.473,700,2.99,701,4.035,702,2.99,703,3.509,704,4.566,705,2.99,706,2.413,707,4.566,708,2.99,709,2.99,710,2.105,711,2.99,712,2.542,713,2.646,714,2.642,715,2.642,716,2.413,717,2.99,718,3.685,719,3.685,720,2.99,721,2.99,722,1.809,723,4.566,724,2.99,725,2.99,726,1.894,727,2.99,728,2.99,729,2.99,730,2.99,731,2.99,732,4.035,733,2.99,734,2.99,735,2.99,736,2.99,737,2.99,738,3.215,739,2.99,740,2.99,741,4.035,742,2.642,743,2.642,744,4.035,745,2.413,746,2.642,747,2.642,748,2.642,749,2.642]],["title/injectables/AuthMiddleware.html",[30,1.357,67,3.319]],["body/injectables/AuthMiddleware.html",[3,0.071,4,0.061,5,0.051,9,0.2,10,0.009,12,0.679,17,4.152,18,3.42,21,0.081,22,0.217,23,2.426,24,1.68,26,4.094,27,0.005,28,0.006,29,0.005,30,1.981,31,2.274,35,0.582,36,1.848,37,1.983,41,0.461,43,1.765,44,0.949,45,0.529,46,1.473,48,1.388,49,1.686,50,2.347,51,4.906,52,3.642,54,1.6,56,1.562,57,2.704,60,3.4,61,2.49,62,3.92,67,4.846,68,3.599,69,5.712,71,5.158,72,3.625,73,6.844,75,6.42,78,2.815,113,2.139,121,0.967,122,4.292,233,2.859,278,1.767,287,2.139,300,1.767,336,2.815,405,2.078,410,2.347,417,2.426,584,2.938,601,3.642,602,2.938,661,3.642,710,3.42,738,3.42,741,4.292,742,4.292,743,4.292,744,5.712,745,3.92,746,4.292,747,4.292,750,4.292,751,4.857,752,4.857,753,6.464,754,3.077,755,4.857,756,2.938,757,2.938]],["title/modules/AuthModule.html",[83,1.295,129,2.949]],["body/modules/AuthModule.html",[2,3.133,3,0.075,4,0.064,5,0.054,9,0.213,10,0.009,12,0.716,21,0.085,22,0.229,27,0.005,28,0.006,29,0.005,44,0.983,83,2.181,85,2.475,86,2.558,87,2.745,88,2.745,89,2.745,90,3.997,91,3.997,95,3.588,96,2.071,97,2.745,129,5.856,134,5.331,138,3.879,147,3.605,148,2.255,165,4.133,324,3.727,503,3.84,564,5.59,607,5.99,608,4.525,758,4.525,759,5.121,760,4.525,761,4.525,762,5.121,763,6.693,764,5.121,765,3.411,766,5.018,767,4.525,768,4.525,769,3.411,770,5.018,771,4.525,772,4.525,773,5.121,774,5.121]],["title/injectables/AuthService.html",[30,1.357,607,2.949]],["body/injectables/AuthService.html",[3,0.041,4,0.036,5,0.03,9,0.202,10,0.009,12,0.395,17,3.225,18,1.988,21,0.047,22,0.126,24,2.251,25,2.429,26,3.386,27,0.003,28,0.004,29,0.003,30,1.339,31,1.321,35,0.338,36,1.249,37,2.27,41,0.49,43,1.879,44,1.011,45,0.563,46,1.568,48,1.86,49,2.028,54,2.804,56,2.447,60,3.221,61,2.384,63,1.459,64,1.817,96,1.142,121,0.87,148,1.243,233,3.115,256,1.364,278,1.589,283,1.983,291,0.848,300,1.027,322,1.364,346,2.532,378,3.123,463,1.708,508,4.546,527,2.117,566,3.861,567,3.861,568,2.532,570,3.276,571,3.861,572,3.861,579,3.083,607,2.91,626,3.64,627,2.278,635,3.076,641,2.502,652,4.159,669,2.117,670,4.313,671,4.313,673,3.386,674,4.313,675,2.426,676,2.278,691,3.076,712,2.433,738,4.236,745,3.526,765,4.007,767,2.495,768,2.495,769,2.91,771,2.495,772,2.495,775,2.495,776,2.823,777,4.007,778,3.64,779,5.345,780,5.345,781,2.823,782,2.823,783,4.369,784,2.823,785,4.369,786,2.823,787,4.369,788,2.823,789,4.369,790,2.823,791,2.532,792,3.098,793,3.098,794,2.823,795,3.861,796,4.369,797,2.278,798,2.823,799,2.823,800,2.495,801,2.278,802,2.823,803,2.823,804,3.386,805,2.823,806,2.823,807,2.823,808,3.861,809,2.823,810,2.823,811,2.823,812,2.823,813,2.823,814,2.495,815,2.823,816,2.823,817,2.823,818,2.823,819,2.823,820,2.823,821,2.823,822,2.278,823,2.495,824,2.823,825,2.823]],["title/modules/BullBoardModule.html",[83,1.295,130,3.117]],["body/modules/BullBoardModule.html",[3,0.086,4,0.074,5,0.063,9,0.198,10,0.009,12,0.826,21,0.098,22,0.264,27,0.006,28,0.007,29,0.006,83,2.332,85,2.855,86,2.951,87,3.167,88,3.167,89,3.167,90,4.273,91,3.167,95,3.93,96,2.389,97,3.167,107,3.574,130,6.3,131,5.532,138,4.249,160,4.429,162,4.768,826,5.22,827,5.908,828,5.22,829,6.15,830,4.768,831,5.908,832,5.908]],["title/injectables/BullBoardProvider.html",[30,1.357,829,3.117]],["body/injectables/BullBoardProvider.html",[3,0.084,4,0.073,5,0.061,9,0.206,10,0.009,12,0.81,21,0.096,22,0.259,24,2.505,25,2.703,27,0.005,28,0.007,29,0.005,30,2.22,31,2.711,41,0.413,43,1.581,44,0.851,45,0.474,46,1.32,83,1.694,107,4.381,108,4.674,121,1.441,146,5.118,160,5.43,829,5.099,830,5.844,833,5.118,834,5.792,835,7.116,836,6.982,837,5.792,838,6.399,839,4.674,840,3.504,841,5.792,842,4.674,843,5.118,844,5.118,845,5.792,846,5.792]],["title/classes/Counter.html",[22,0.198,847,3.117]],["body/classes/Counter.html",[3,0.063,4,0.054,5,0.046,9,0.108,10,0.009,21,0.072,22,0.194,23,2.163,27,0.004,28,0.006,29,0.004,33,1.217,35,0.519,36,1.709,41,0.596,43,2.116,44,1.138,45,0.634,46,1.766,48,1.238,63,2.242,104,3.96,121,0.862,168,3.092,269,0.7,285,3.788,353,2.634,847,4.21,848,3.827,849,6.85,850,7.387,851,7.387,852,5.98,853,4.826,854,5.98,855,5.284,856,3.872,857,4.331,858,4.616,859,4.331,860,5.98,861,4.331,862,4.331,863,5.98,864,4.331,865,7.083,866,5.98,867,8.601,868,4.331,869,5.98,870,4.331,871,5.98,872,4.331,873,4.331,874,4.331,875,4.331,876,2.093,877,4.331,878,7.387,879,6.85,880,6.85,881,4.331,882,4.331]],["title/classes/CreateApplicationDto.html",[22,0.198,445,3.319]],["body/classes/CreateApplicationDto.html",[3,0.074,4,0.063,5,0.053,9,0.165,10,0.009,21,0.084,22,0.296,27,0.005,28,0.006,29,0.005,35,0.605,41,0.472,44,1.288,45,0.542,64,2.756,268,4.927,269,0.816,273,1.58,281,4.377,291,0.634,292,2.183,294,2.705,298,3.196,318,2.29,328,4.291,330,3.196,349,2.439,445,4.97,529,4.459,856,2.521,883,6.542,884,4.459,885,3.196,886,5.046,887,5.046,888,4.757,889,5.35,890,4.931,891,4.415,892,5.046,893,5.046,894,5.858,895,6.629,896,5.046,897,5.35,898,6.629,899,5.046,900,5.046,901,6.629,902,5.046,903,3.842,904,4.97,905,3.842,906,2.81,907,4.072,908,5.046,909,3.784]],["title/classes/CreateFolderEntryDto.html",[22,0.198,910,3.319]],["body/classes/CreateFolderEntryDto.html",[3,0.077,4,0.066,5,0.056,9,0.169,10,0.009,21,0.087,22,0.305,27,0.005,28,0.006,29,0.005,35,0.631,41,0.538,44,1.267,45,0.618,118,2.189,269,0.851,273,1.624,291,0.792,292,2.488,294,2.822,300,2.479,318,2.389,353,3.001,885,3.334,888,4.207,889,5.499,890,4.538,891,4.538,903,3.949,904,5.109,905,4.379,906,2.931,910,5.109,911,7.061,912,4.338,913,4.248,914,4.571,915,4.651,916,4.651,917,4.651,918,4.651,919,6.677,920,4.651,921,4.797,922,4.248,923,4.248,924,4.651]],["title/interfaces/DeleteFileJob.html",[549,1.032,925,3.319]],["body/interfaces/DeleteFileJob.html",[3,0.098,4,0.084,5,0.071,10,0.008,21,0.111,27,0.006,28,0.007,29,0.006,35,0.804,45,0.549,273,1.887,291,0.806,549,1.563,551,2.64,925,5.937,926,5.929,927,5.929,928,7.69]],["title/classes/DeleteUserDto.html",[22,0.198,929,3.319]],["body/classes/DeleteUserDto.html",[3,0.092,4,0.08,5,0.067,9,0.157,10,0.009,21,0.105,22,0.342,27,0.006,28,0.007,29,0.006,35,0.757,41,0.45,45,0.517,269,1.022,273,1.821,291,0.731,292,2.082,318,2.869,579,3.632,885,4.004,888,3.52,903,4.429,905,4.429,906,3.52,929,5.729,930,6.752,931,4.74,932,4.451,933,6.321]],["title/classes/DiskStorage.html",[22,0.198,934,3.117]],["body/classes/DiskStorage.html",[3,0.06,4,0.051,5,0.043,9,0.189,10,0.009,21,0.095,22,0.183,23,2.044,24,1.415,25,2.939,27,0.004,28,0.005,29,0.004,35,0.49,36,1.643,37,2.149,41,0.561,43,2.149,44,1.156,45,0.644,46,1.794,48,2.17,49,1.88,54,1.893,60,2.691,61,1.315,63,1.967,64,1.701,81,2.871,113,2.532,118,2.39,121,0.814,154,2.044,168,2.116,269,0.662,278,2.864,291,0.852,460,3.081,549,0.953,561,2.262,722,2.475,726,2.592,934,4.047,935,3.302,936,4.02,937,5.748,938,5.748,939,4.31,940,4.639,941,3.068,942,5.074,943,4.092,944,5.079,945,4.092,946,5.079,947,4.092,948,3.828,949,4.092,950,4.02,951,4.047,952,4.092,953,3.828,954,4.092,955,4.31,956,2.725,957,2.371,958,2.725,959,2.881,960,2.881,961,3.616,962,2.725,963,3.616,964,3.616,965,2.592,966,3.616,967,3.616,968,3.616,969,3.616,970,3.616,971,3.616,972,3.616,973,3.616,974,3.616,975,3.616,976,3.616,977,3.616]],["title/interfaces/DiskStorageEngineOptions.html",[549,1.032,942,3.117]],["body/interfaces/DiskStorageEngineOptions.html",[3,0.073,4,0.063,5,0.053,9,0.202,10,0.009,21,0.109,22,0.224,23,2.503,24,1.733,25,2.463,27,0.005,28,0.006,29,0.005,35,0.6,37,1.801,45,0.41,49,1.721,54,2.173,60,3.088,61,1.611,63,2.14,64,2.083,81,3.296,113,2.206,118,2.743,154,2.503,168,2.59,273,1.572,278,1.822,291,0.828,549,1.167,551,1.971,561,1.971,722,3.03,726,3.173,934,3.527,935,4.043,936,3.991,942,5.194,944,4.427,946,4.427,948,3.337,950,3.991,951,3.527,953,3.337,955,4.947,956,3.337,957,2.903,958,3.337,959,3.527,960,3.527,961,4.427,962,5.221,963,4.427,964,4.427,965,3.173,966,4.427,967,4.427,968,4.427,969,4.427,970,4.427,971,4.427,972,4.427,973,4.427,974,4.427,975,4.427,976,4.427,977,4.427]],["title/classes/DisplayNameTaken.html",[22,0.198,978,2.566]],["body/classes/DisplayNameTaken.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.738,21,0.141,22,0.379,27,0.005,28,0.006,29,0.005,33,1.758,41,0.376,44,0.775,45,0.432,68,4.212,121,1.719,269,0.853,291,0.505,378,2.395,402,3.648,406,3.006,408,3.332,413,2.257,419,3.006,516,2.47,641,2.194,675,2.395,978,3.956,979,3.343,980,5.277,981,2.838,982,4.546,983,3.515,984,3.058,985,3.515,986,3.058,987,2.938,988,3.515,989,3.343,990,3.058,991,3.192,992,2.395,993,2.729,994,2.729,995,3.058,996,3.515,997,3.058,998,3.515,999,3.515]],["title/interfaces/Email.html",[549,1.032,641,1.841]],["body/interfaces/Email.html",[3,0.091,4,0.078,5,0.066,10,0.009,21,0.103,27,0.006,28,0.007,29,0.006,35,0.746,36,2.164,41,0.581,48,2.332,49,1.975,291,0.846,549,1.451,551,2.45,641,3.148,1000,5.502,1001,7.501,1002,6.851,1003,6.851,1004,6.227,1005,6.227,1006,6.227]],["title/classes/EmailConfirmation.html",[22,0.198,1007,2.949]],["body/classes/EmailConfirmation.html",[3,0.059,4,0.051,5,0.043,9,0.188,10,0.009,21,0.095,22,0.256,27,0.004,28,0.005,29,0.004,33,1.167,35,0.488,41,0.56,45,0.643,56,1.31,61,1.31,63,1.113,64,3.746,72,2.683,82,2.582,148,1.795,249,2.036,269,0.659,271,3.692,273,1.366,275,3.692,283,3.009,284,3.692,287,3.463,291,0.752,292,2.369,293,4.416,294,3.857,296,4.17,297,5.237,298,3.631,306,4.557,307,3.818,314,4.792,318,1.85,322,1.97,323,5.049,324,3.192,325,2.714,333,2.269,334,2.465,342,2.714,343,2.714,344,2.869,345,2.714,346,2.362,347,2.714,348,4.416,349,1.97,357,2.869,358,2.714,362,2.714,378,3.265,876,2.77,1007,3.818,1008,6.519,1009,3.289,1010,4.416,1011,5.351,1012,4.076,1013,2.869,1014,4.036,1015,4.076,1016,4.668,1017,4.076,1018,5.806,1019,4.076,1020,4.076,1021,4.076,1022,4.036,1023,3.056,1024,4.076,1025,3.056,1026,3.601,1027,4.076,1028,3.289,1029,3.289,1030,3.289]],["title/classes/EmailTaken.html",[22,0.198,984,2.566]],["body/classes/EmailTaken.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.738,21,0.141,22,0.379,27,0.005,28,0.006,29,0.005,33,1.758,41,0.376,44,0.775,45,0.432,68,4.212,121,1.719,269,0.853,291,0.505,378,2.395,402,3.648,406,3.006,408,3.332,413,2.257,419,3.006,516,2.47,641,2.194,675,2.395,978,3.058,979,3.343,981,2.838,982,4.546,983,3.515,984,3.956,985,3.515,986,3.058,987,2.938,988,3.515,989,3.343,990,3.058,991,3.192,992,2.395,993,2.729,994,2.729,995,3.058,996,3.515,997,3.058,998,3.515,999,3.515,1031,5.277]],["title/classes/Entry.html",[22,0.198,1032,2.212]],["body/classes/Entry.html",[3,0.029,4,0.025,5,0.021,9,0.145,10,0.009,21,0.07,22,0.146,27,0.002,28,0.003,29,0.002,33,0.666,35,0.236,37,1.334,41,0.565,44,0.718,45,0.649,49,0.853,54,2.138,56,2.165,61,0.633,63,1.896,64,3.539,72,3.535,81,2.096,82,3.096,113,1.441,118,2.699,148,0.867,168,1.018,249,0.984,256,3.445,269,0.318,271,3.019,273,0.78,275,2.336,278,2.128,282,3.386,283,2.946,284,3.019,285,4.515,287,2.152,291,0.697,292,2.4,293,2.179,294,2.907,296,2.833,297,3.897,298,2.658,300,1.778,304,1.589,306,4.111,307,2.179,314,4.323,319,1.476,320,1.056,322,0.952,323,5.104,324,1.821,325,1.311,333,1.096,334,1.191,342,1.311,345,2.179,346,1.896,347,2.179,348,2.179,349,2.028,353,3.059,358,2.179,361,2.954,380,2.64,389,1.589,397,1.589,398,1.589,399,1.589,480,1.979,514,2.658,516,1.964,658,1.476,722,2.538,726,2.658,853,1.589,856,0.984,858,3.025,876,2.028,912,3.357,914,2.956,922,1.589,923,1.589,1013,2.954,1032,3.097,1033,1.589,1034,3.818,1035,4.119,1036,3.708,1037,3.708,1038,4.196,1039,3.897,1040,2.954,1041,2.954,1042,2.432,1043,3.386,1044,1.969,1045,1.969,1046,1.969,1047,1.969,1048,1.969,1049,1.969,1050,1.969,1051,1.969,1052,2.891,1053,1.969,1054,1.969,1055,3.271,1056,1.969,1057,1.969,1058,1.969,1059,1.969,1060,1.969,1061,1.969,1062,1.969,1063,3.271,1064,2.64,1065,3.271,1066,3.271,1067,2.891,1068,1.969,1069,1.969,1070,1.969,1071,4.196,1072,1.74,1073,1.476,1074,1.74,1075,2.891,1076,1.74,1077,1.74,1078,1.589,1079,1.476,1080,1.74,1081,2.453,1082,1.74,1083,1.74,1084,1.74,1085,1.476,1086,1.969,1087,1.476,1088,1.969,1089,4.196,1090,1.74,1091,4.319,1092,5.851,1093,5.423,1094,1.969,1095,4.887,1096,1.969,1097,1.969,1098,1.969,1099,1.74,1100,1.969,1101,1.74,1102,3.271,1103,3.271,1104,1.969,1105,1.969,1106,1.969,1107,3.271,1108,1.969,1109,3.271,1110,4.196,1111,1.969,1112,1.969,1113,1.589,1114,1.969,1115,2.303,1116,1.74,1117,1.969,1118,1.969,1119,1.969,1120,1.969,1121,1.969,1122,1.969,1123,1.969,1124,3.271,1125,1.969,1126,3.271,1127,3.271,1128,1.247,1129,1.247,1130,2.072,1131,1.969,1132,3.271,1133,3.708,1134,1.969,1135,3.271,1136,1.969,1137,1.969,1138,1.969,1139,1.969,1140,1.969,1141,1.969,1142,1.74,1143,1.969,1144,4.887,1145,1.969,1146,0.984,1147,1.969,1148,1.969]],["title/classes/EntryAlreadyExists.html",[22,0.198,1149,2.566]],["body/classes/EntryAlreadyExists.html",[3,0.074,4,0.063,5,0.053,9,0.125,10,0.009,12,0.705,21,0.139,22,0.375,27,0.005,28,0.006,29,0.005,33,1.739,41,0.36,43,1.378,44,1.155,45,0.413,46,1.15,118,3.395,121,1.668,269,0.816,291,0.802,402,3.26,403,3.554,405,3.363,406,3.26,408,2.92,409,3.204,413,2.836,706,4.072,912,2.439,1032,3.698,1129,4.199,1130,3.196,1146,2.521,1149,3.842,1150,3.196,1151,5.046,1152,4.415,1153,2.925,1154,3.361,1155,2.81,1156,3.361,1157,2.81,1158,3.361,1159,2.925,1160,4.415,1161,4.415,1162,2.925]],["title/classes/EntryDto.html",[22,0.198,1034,3.117]],["body/classes/EntryDto.html",[3,0.067,4,0.058,5,0.049,9,0.115,10,0.009,21,0.077,22,0.28,27,0.004,28,0.006,29,0.004,35,0.555,41,0.642,44,1.041,45,0.737,118,2.948,269,0.749,273,1.492,275,3.948,278,2.58,283,3.218,284,3.948,287,3.345,291,0.834,292,1.525,300,2.277,320,2.482,353,3.837,430,4.993,858,4.229,912,3.427,914,4.29,1034,4.407,1035,4.993,1036,6.266,1039,4.723,1040,4.993,1041,4.993,1042,4.11,1043,5.723,1163,4.091,1164,4.63,1165,4.63,1166,4.63,1167,4.63,1168,4.63,1169,4.63,1170,4.63,1171,4.63,1172,4.63,1173,4.63,1174,4.63,1175,4.63,1176,4.63,1177,4.63,1178,4.63]],["title/classes/EntryNotDeletable.html",[22,0.198,1153,2.566]],["body/classes/EntryNotDeletable.html",[3,0.076,4,0.066,5,0.055,9,0.129,10,0.009,12,0.728,21,0.14,22,0.378,27,0.005,28,0.006,29,0.005,33,1.753,41,0.371,44,0.994,118,3.126,121,1.713,269,0.842,291,0.648,402,2.981,403,2.793,405,3.529,406,3.312,408,2.981,409,3.271,413,2.896,912,2.518,1032,3.756,1129,4.288,1130,3.301,1146,2.603,1149,3.02,1150,3.301,1152,4.509,1153,3.923,1154,3.47,1155,2.901,1156,3.47,1157,2.901,1158,3.47,1159,3.02,1160,4.509,1161,4.509,1162,3.02,1179,5.211]],["title/classes/EntryNotFound.html",[22,0.198,1155,2.465]],["body/classes/EntryNotFound.html",[3,0.076,4,0.066,5,0.055,9,0.129,10,0.009,12,0.728,21,0.14,22,0.378,27,0.005,28,0.006,29,0.005,33,1.753,41,0.371,44,0.994,118,3.126,121,1.713,269,0.842,291,0.648,402,2.981,403,2.793,405,3.405,406,3.506,408,2.981,409,3.271,413,2.896,912,2.518,1032,3.756,1129,4.288,1130,3.301,1146,2.603,1149,3.02,1150,3.301,1152,4.509,1153,3.02,1154,3.47,1155,3.769,1156,3.47,1157,2.901,1158,3.47,1159,3.02,1160,4.509,1161,4.509,1162,3.02,1180,5.211]],["title/classes/FileTooLarge.html",[22,0.198,1181,2.566]],["body/classes/FileTooLarge.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,43,1.444,44,0.777,45,0.559,46,1.205,121,1.69,269,0.855,291,0.725,981,3.447,1128,3.351,1181,3.962,1182,3.351,1183,5.044,1184,4.553,1185,5.291,1186,3.806,1187,4.553,1188,3.524,1189,3.524,1190,3.066,1191,3.524,1192,3.535,1193,3.524,1194,3.066,1195,5.044,1196,5.044,1197,3.066,1198,3.066,1199,3.351,1200,3.066,1201,3.524,1202,3.524,1203,3.524]],["title/controllers/FilesController.html",[0,2.072,1204,3.319]],["body/controllers/FilesController.html",[0,1.033,2,1.033,3,0.032,4,0.028,5,0.038,7,1.398,9,0.196,10,0.009,11,1.47,12,0.309,21,0.037,22,0.099,24,1.812,25,1.955,27,0.002,28,0.003,29,0.002,34,1.336,35,0.265,36,1.027,37,2.272,41,0.464,43,1.779,44,1.032,45,0.533,46,1.485,48,1.863,49,2.03,54,2.237,56,2.184,57,3.211,60,1.682,61,1.987,63,1.687,64,2.398,70,4.989,71,3.489,78,1.28,81,2.271,121,0.439,136,3.027,144,2.001,145,1.183,154,1.103,229,1.229,230,1.655,249,2.271,256,2.787,260,3.489,278,2.932,283,3.843,291,0.85,292,2.146,300,2.249,328,1.28,329,1.554,330,1.398,353,2.002,417,2.617,440,2.277,441,3.027,449,4.654,450,1.951,456,1.782,459,3.2,460,1.183,461,1.554,462,1.782,463,1.336,467,1.951,472,1.47,473,1.655,474,1.655,475,1.655,477,1.655,485,4.654,489,1.951,490,4.228,506,2.53,516,1.033,710,1.554,858,3.196,876,1.067,910,3.928,912,3.761,914,2.174,950,1.336,1032,2.271,1034,1.554,1035,3.2,1039,3.027,1040,2.53,1041,2.53,1042,2.083,1064,2.9,1072,1.951,1115,3.688,1133,4.629,1146,1.103,1155,2.001,1157,2.001,1192,2.709,1204,2.695,1205,1.951,1206,4.545,1207,4.545,1208,4.017,1209,4.545,1210,2.208,1211,2.208,1212,2.208,1213,2.208,1214,2.208,1215,2.208,1216,2.208,1217,2.208,1218,2.208,1219,2.208,1220,2.208,1221,2.208,1222,2.208,1223,2.208,1224,2.208,1225,3.928,1226,2.208,1227,2.208,1228,2.208,1229,2.208,1230,2.208,1231,2.208,1232,3.594,1233,4.545,1234,1.951,1235,2.174,1236,1.951,1237,3.594,1238,1.951,1239,2.9,1240,2.208,1241,1.655,1242,1.951,1243,1.655,1244,2.208,1245,2.083,1246,1.655,1247,2.208,1248,2.208,1249,5.239,1250,1.951,1251,2.208,1252,2.208,1253,4.545,1254,2.208,1255,2.208,1256,4.545,1257,2.208,1258,2.208,1259,2.208,1260,1.951,1261,1.655,1262,2.208,1263,1.782,1264,2.208,1265,2.208,1266,2.208,1267,2.208,1268,2.208,1269,1.951,1270,2.208,1271,2.208,1272,2.208,1273,2.208,1274,2.208,1275,2.208,1276,1.951,1277,2.208,1278,2.208,1279,2.208,1280,2.208,1281,2.208,1282,2.208,1283,2.208,1284,3.594,1285,2.208,1286,2.208,1287,2.208,1288,2.208,1289,1.554,1290,2.208,1291,2.208,1292,2.208,1293,2.208,1294,1.951,1295,1.398,1296,1.655,1297,2.208,1298,1.951,1299,2.208,1300,2.208,1301,2.208,1302,2.208,1303,1.951,1304,2.208,1305,2.208,1306,2.208,1307,2.208,1308,2.208]],["title/modules/FilesModule.html",[83,1.295,131,2.804]],["body/modules/FilesModule.html",[2,2.93,3,0.067,4,0.058,5,0.049,9,0.214,10,0.009,12,0.647,21,0.077,22,0.207,27,0.004,28,0.006,29,0.004,44,0.919,83,2.074,85,2.237,86,2.313,87,2.482,88,2.482,89,2.482,90,3.801,91,3.801,95,3.355,96,1.872,97,2.482,131,5.568,138,3.628,144,4.418,145,2.482,147,3.26,148,2.039,155,3.471,204,3.736,227,3.628,228,3.965,229,3.485,236,3.471,264,3.736,265,3.736,291,0.443,324,2.578,503,3.471,840,2.801,962,3.084,965,2.933,1032,2.313,1079,4.693,1192,2.394,1204,5.317,1235,5.358,1236,4.091,1309,4.091,1310,4.091,1311,4.091,1312,4.091,1313,5.285,1314,5.758,1315,4.63,1316,5.531,1317,4.63,1318,4.63,1319,4.091,1320,4.091,1321,4.091,1322,4.091,1323,4.091,1324,3.471,1325,4.091]],["title/injectables/FilesProcessor.html",[30,1.357,1314,3.117]],["body/injectables/FilesProcessor.html",[3,0.08,4,0.069,5,0.058,9,0.208,10,0.009,12,0.769,21,0.091,22,0.246,23,2.748,24,1.903,27,0.005,28,0.007,29,0.005,30,2.149,31,2.575,35,0.659,36,2.003,37,2.106,41,0.499,43,1.913,44,1.029,45,0.573,46,1.597,48,1.572,49,1.828,54,2.308,107,3.327,121,1.095,154,3.501,292,1.812,840,3.327,925,4.124,1245,4.708,1246,4.124,1314,4.935,1326,4.861,1327,7.01,1328,4.861,1329,5.501,1330,7.01,1331,7.414,1332,5.501,1333,5.501,1334,4.124,1335,4.861,1336,5.501,1337,5.501,1338,5.501,1339,5.501,1340,5.501,1341,4.861]],["title/injectables/FilesService.html",[30,1.357,1235,2.678]],["body/injectables/FilesService.html",[3,0.027,4,0.024,5,0.043,9,0.174,10,0.009,12,0.262,21,0.031,22,0.084,24,1.402,25,2.374,27,0.002,28,0.003,29,0.002,30,0.963,31,0.878,35,0.684,36,0.898,37,2.316,41,0.522,43,1.999,44,1.175,45,0.648,46,1.668,48,2.052,49,2.087,54,2.364,56,2.433,60,2.839,61,2.126,63,1.805,64,1.972,68,1.045,107,1.135,121,0.625,148,0.826,154,1.57,168,2.096,249,1.57,256,1.519,260,2.093,271,1.045,278,2.078,283,3.098,291,0.713,300,1.725,322,0.907,336,3.06,346,1.088,349,1.519,409,2.292,440,1.991,441,2.7,480,1.901,506,2.854,508,3.004,511,3.455,514,5.247,516,3.542,517,2.536,519,3.272,521,2.356,525,1.658,527,1.407,543,3.583,561,2.602,706,2.536,835,3.827,836,3.583,839,1.514,840,1.135,844,1.658,856,1.57,858,2.73,876,0.907,897,1.514,912,3.601,914,2.452,928,2.777,939,2.356,948,2.093,950,1.135,957,1.088,1032,3.722,1035,2.213,1037,1.658,1039,2.093,1040,3.339,1041,3.339,1042,1.088,1043,1.514,1064,3.827,1081,2.356,1087,1.407,1090,2.777,1091,1.658,1115,2.854,1116,1.658,1142,3.583,1149,1.088,1153,1.821,1155,2.64,1157,1.75,1159,1.088,1162,1.088,1186,2.64,1199,1.189,1208,3.583,1234,1.658,1235,1.901,1245,2.748,1246,1.407,1295,1.189,1303,2.777,1319,1.658,1322,2.777,1328,1.658,1342,1.658,1343,3.143,1344,3.143,1345,3.143,1346,1.877,1347,3.143,1348,1.877,1349,1.877,1350,1.877,1351,3.143,1352,1.877,1353,1.877,1354,3.143,1355,1.877,1356,1.877,1357,2.777,1358,1.877,1359,4.742,1360,1.877,1361,4.742,1362,1.877,1363,3.143,1364,1.877,1365,1.877,1366,1.877,1367,1.877,1368,1.514,1369,1.877,1370,1.321,1371,1.25,1372,1.658,1373,1.877,1374,3.143,1375,3.143,1376,3.143,1377,1.877,1378,1.877,1379,1.877,1380,3.143,1381,3.143,1382,1.877,1383,1.877,1384,5.28,1385,4.742,1386,3.143,1387,5.711,1388,3.143,1389,4.742,1390,3.143,1391,4.054,1392,1.877,1393,1.877,1394,3.143,1395,4.742,1396,1.877,1397,1.877,1398,1.321,1399,1.658,1400,1.877,1401,1.877,1402,1.877,1403,3.143,1404,1.877,1405,3.143,1406,3.143,1407,1.877,1408,1.877,1409,1.877,1410,1.877,1411,1.321,1412,1.877,1413,1.877,1414,1.877,1415,1.877,1416,3.143,1417,1.877,1418,1.877,1419,1.877,1420,1.877,1421,1.877,1422,1.877,1423,1.877,1424,1.877,1425,1.877,1426,1.877,1427,1.877,1428,3.143,1429,1.877,1430,1.877,1431,1.877,1432,1.877,1433,1.407,1434,1.877,1435,1.877,1436,1.407,1437,1.407,1438,1.877,1439,3.143,1440,1.877,1441,1.877,1442,1.877,1443,1.877,1444,1.877,1445,1.877,1446,1.877,1447,1.877,1448,1.877]],["title/classes/ForgotPasswordDto.html",[22,0.198,577,3.319]],["body/classes/ForgotPasswordDto.html",[3,0.088,4,0.076,5,0.064,9,0.185,10,0.009,21,0.101,22,0.333,27,0.006,28,0.007,29,0.006,35,0.727,41,0.432,233,2.386,269,0.98,273,1.775,292,1.997,318,2.752,577,5.585,641,3.655,801,4.893,888,4.49,903,4.318,905,4.318,906,3.376,932,4.269,1016,5.678,1449,6.583,1450,4.893,1451,6.012,1452,4.962,1453,4.893,1454,6.063,1455,6.063]],["title/classes/GenerateApplicationKeyDto.html",[22,0.198,469,3.319]],["body/classes/GenerateApplicationKeyDto.html",[3,0.097,4,0.084,5,0.07,10,0.008,21,0.11,22,0.297,27,0.006,28,0.007,29,0.006,35,0.796,41,0.473,45,0.543,268,4.384,269,1.074,273,1.876,279,4.055,291,0.753,469,5.903,1456,6.957,1457,5.872,1458,6.645]],["title/classes/GoogleCloudEngine.html",[22,0.198,1459,3.117]],["body/classes/GoogleCloudEngine.html",[3,0.067,4,0.058,5,0.049,9,0.176,10,0.009,21,0.104,22,0.206,23,2.303,24,2.623,25,2.641,27,0.004,28,0.006,29,0.004,33,0.938,35,0.552,36,1.784,37,1.931,41,0.564,43,2.07,44,1.114,45,0.62,46,1.728,48,2.022,49,1.628,54,1.518,56,1.482,61,1.482,63,1.704,113,2.748,121,0.917,154,3.117,269,0.745,273,1.487,278,2.574,291,0.833,349,2.227,460,3.345,549,1.074,558,3.617,561,2.456,856,2.303,936,4.28,939,4.679,940,5.036,941,3.456,948,4.156,950,4.28,951,4.394,953,4.156,956,4.712,957,2.671,958,3.07,959,3.245,1459,4.394,1460,6.124,1461,3.456,1462,6.252,1463,5.338,1464,4.609,1465,5.514,1466,4.609,1467,4.609,1468,4.609,1469,4.609,1470,3.72,1471,3.72,1472,3.456,1473,4.073,1474,4.073,1475,4.073,1476,4.073]],["title/interfaces/GoogleCloudEngineOptions.html",[549,1.032,1463,3.117]],["body/interfaces/GoogleCloudEngineOptions.html",[3,0.08,4,0.069,5,0.058,9,0.192,10,0.009,21,0.116,22,0.247,23,2.755,24,2.429,25,2.059,27,0.005,28,0.007,29,0.005,33,1.429,35,0.661,37,1.506,45,0.451,49,1.439,54,1.816,56,1.773,61,1.773,63,1.917,113,2.429,154,3.507,273,1.673,291,0.821,549,1.285,551,2.17,558,4.477,561,2.17,936,4.247,948,3.673,950,4.247,951,3.883,953,3.673,956,4.676,957,3.197,958,3.673,959,3.883,1459,3.883,1460,4.135,1461,4.135,1462,4.874,1463,5.438,1465,4.874,1470,4.451,1471,4.451,1472,4.135,1473,7.185,1474,4.874,1475,4.874,1476,4.874]],["title/controllers/HealthController.html",[0,2.072,1477,3.319]],["body/controllers/HealthController.html",[0,2.385,2,2.385,3,0.074,4,0.064,5,0.054,7,3.228,9,0.196,10,0.009,12,0.712,21,0.085,22,0.228,24,2.907,25,3.137,27,0.005,28,0.006,29,0.005,35,0.611,36,1.907,41,0.363,48,1.456,49,2.192,63,1.391,118,3.093,121,1.014,144,3.715,145,2.732,184,5.384,229,2.837,292,1.678,965,3.228,1477,5.002,1478,4.503,1479,6.672,1480,7.892,1481,5.096,1482,5.096,1483,6.672,1484,6.672,1485,6.672,1486,5.096,1487,6.672,1488,5.096,1489,6.672,1490,6.672,1491,4.112,1492,5.096,1493,5.096,1494,5.096,1495,5.096,1496,5.096,1497,5.096,1498,5.096,1499,5.096,1500,5.096,1501,5.096,1502,5.096,1503,5.096,1504,5.096,1505,5.096,1506,5.096,1507,5.096]],["title/modules/HealthModule.html",[83,1.295,132,3.117]],["body/modules/HealthModule.html",[2,3.644,3,0.095,4,0.082,5,0.069,9,0.207,10,0.009,12,0.911,21,0.108,22,0.291,27,0.006,28,0.007,29,0.006,83,2.277,85,3.151,132,5.481,138,3.779,1477,6.24,1491,5.262,1508,6.52,1509,7.785,1510,6.52]],["title/interfaces/IRequest.html",[51,2.804,549,1.032]],["body/interfaces/IRequest.html",[3,0.088,4,0.076,5,0.064,9,0.2,10,0.009,21,0.1,27,0.006,28,0.007,29,0.006,33,1.509,35,0.72,45,0.492,46,1.688,51,4.693,78,3.483,233,3.452,273,1.766,279,2.905,291,0.575,300,2.922,417,4.013,549,1.401,551,2.365,584,5.073,589,5.311,801,4.85,1511,5.311,1512,5.217,1513,6.01]],["title/interfaces/ISession.html",[549,1.032,1514,3.319]],["body/interfaces/ISession.html",[3,0.091,4,0.079,5,0.066,9,0.155,10,0.009,21,0.104,27,0.006,28,0.007,29,0.006,35,0.748,45,0.668,273,1.808,287,3.598,291,0.782,549,1.455,551,2.458,584,5.267,585,5.383,625,5.04,1014,5.983,1411,5.983,1514,5.688,1515,5.519]],["title/interfaces/ISessionData.html",[549,1.032,585,2.804]],["body/interfaces/ISessionData.html",[3,0.083,4,0.072,5,0.061,10,0.009,21,0.095,27,0.005,28,0.007,29,0.005,33,1.166,35,0.686,45,0.719,273,1.714,280,5.491,283,3.742,287,3.462,291,0.859,300,2.86,511,4.35,549,1.335,551,2.254,585,4.555,602,4.987,604,6.181,663,4.033,665,4.295,667,4.295,1516,5.062,1517,5.062,1518,6.653,1519,5.728,1520,5.062,1521,5.062,1522,5.062]],["title/interfaces/IncomingFile.html",[549,1.032,1523,2.949]],["body/interfaces/IncomingFile.html",[3,0.09,4,0.078,5,0.065,10,0.009,21,0.102,27,0.006,28,0.007,29,0.006,35,0.739,45,0.692,273,1.795,291,0.883,549,1.438,551,2.429,1186,4.712,1523,5.016,1524,5.453,1525,4.98,1526,7.478,1527,7.478,1528,6.83]],["title/classes/IncorrectPassword.html",[22,0.198,1529,2.566]],["body/classes/IncorrectPassword.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,4.006,96,2.139,121,1.743,233,2.082,269,0.855,405,2.924,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,2.946,713,3.066,754,3.351,756,3.2,757,3.2,791,3.066,792,3.066,793,3.066,804,3.351,981,3.149,992,3.103,993,3.535,994,3.535,1529,3.962,1530,3.351,1531,5.291,1532,3.524,1533,3.524,1534,3.524,1535,3.524]],["title/classes/InsufficientScopes.html",[22,0.198,414,2.678]],["body/classes/InsufficientScopes.html",[3,0.08,4,0.069,5,0.058,9,0.137,10,0.009,12,0.769,21,0.139,22,0.375,27,0.005,28,0.007,29,0.005,33,1.746,41,0.392,44,0.808,50,3.387,121,1.707,269,0.889,279,2.658,281,2.949,291,0.526,369,3.484,400,3.327,401,3.664,402,3.087,403,2.949,405,3.475,406,3.087,407,3.873,408,2.423,409,2.658,410,2.658,411,3.327,412,4.935,413,2.353,414,4.24,415,3.664,416,3.664,417,2.748,418,3.327,419,2.423,420,3.327,421,2.949,422,3.873,423,3.664,424,3.873,425,3.063,426,3.873,1536,5.501]],["title/classes/InternalServerErrorExceptionFilter.html",[22,0.198,1537,3.573]],["body/classes/InternalServerErrorExceptionFilter.html",[3,0.078,4,0.067,5,0.057,9,0.171,10,0.009,12,0.749,21,0.089,22,0.24,23,2.677,24,1.854,27,0.005,28,0.007,29,0.005,35,0.642,36,1.97,41,0.491,43,1.882,44,1.012,45,0.564,46,1.571,48,1.532,56,2.216,70,4.325,71,3.569,78,3.106,81,2.677,104,3.695,113,3.036,121,1.067,136,4.591,236,5.714,269,0.866,710,5.664,722,3.242,726,4.827,888,2.984,992,2.432,1260,4.735,1537,5.563,1538,6.734,1539,6.15,1540,4.735,1541,7.621,1542,5.359,1543,8.045,1544,5.359,1545,6.893,1546,8.045,1547,5.359,1548,5.359,1549,5.359,1550,6.893,1551,5.359,1552,5.359,1553,5.359,1554,4.735,1555,4.325,1556,4.735]],["title/classes/InvalidAPIKey.html",[22,0.198,418,2.678]],["body/classes/InvalidAPIKey.html",[3,0.08,4,0.069,5,0.058,9,0.137,10,0.009,12,0.769,21,0.139,22,0.375,27,0.005,28,0.007,29,0.005,33,1.746,41,0.392,44,0.808,50,3.728,121,1.707,269,0.889,279,2.658,281,2.949,291,0.526,369,3.484,400,3.327,401,3.664,402,3.087,403,2.949,405,3.3,406,3.087,407,3.873,408,2.423,409,2.658,410,2.658,411,3.327,412,4.935,413,2.353,414,3.327,415,3.664,416,3.664,417,2.748,418,4.24,419,2.423,420,3.327,421,2.949,422,3.873,423,3.664,424,3.873,425,3.063,426,3.873,1557,5.501]],["title/classes/InvalidAvatarFileType.html",[22,0.198,986,2.566]],["body/classes/InvalidAvatarFileType.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.738,21,0.141,22,0.379,27,0.005,28,0.006,29,0.005,33,1.758,41,0.376,44,0.775,45,0.432,68,4.212,121,1.719,269,0.853,291,0.505,378,2.395,402,3.523,406,3.006,408,3.332,413,2.257,419,3.006,516,2.47,641,2.194,675,2.395,978,3.058,979,3.343,981,2.838,982,5.038,983,3.515,984,3.058,985,3.515,986,3.956,987,2.938,988,3.515,989,3.343,990,3.058,991,3.192,992,2.395,993,2.729,994,2.729,995,3.058,996,3.515,997,3.058,998,3.515,999,3.515,1558,5.277]],["title/classes/InvalidCredentials.html",[22,0.198,791,2.566]],["body/classes/InvalidCredentials.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,4.006,96,2.139,121,1.743,233,2.082,269,0.855,405,2.924,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,2.946,713,3.066,754,3.351,756,3.2,757,3.2,791,3.962,792,3.066,793,3.066,804,3.351,981,3.149,992,3.103,993,3.535,994,3.535,1529,3.066,1530,3.351,1532,3.524,1533,3.524,1534,3.524,1535,3.524,1559,5.291]],["title/classes/InvalidEmailConfirmationToken.html",[22,0.198,990,2.566]],["body/classes/InvalidEmailConfirmationToken.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.738,21,0.141,22,0.379,27,0.005,28,0.006,29,0.005,33,1.758,41,0.376,44,0.775,45,0.432,68,4.212,121,1.719,269,0.853,291,0.505,378,2.395,402,3.523,406,3.006,408,3.332,413,2.257,419,3.006,516,2.47,641,2.194,675,2.395,978,3.058,979,3.343,981,3.145,982,4.546,983,3.515,984,3.058,985,3.515,986,3.058,987,2.938,988,3.515,989,3.343,990,3.956,991,3.192,992,2.395,993,2.729,994,2.729,995,3.058,996,3.515,997,3.058,998,3.515,999,3.515,1560,5.277]],["title/classes/InvalidPasswordResetLink.html",[22,0.198,792,2.566]],["body/classes/InvalidPasswordResetLink.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,3.869,96,2.139,121,1.743,233,2.082,269,0.855,405,2.924,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,2.946,713,3.066,754,3.351,756,3.2,757,3.2,791,3.066,792,3.962,793,3.066,804,3.351,981,3.329,992,3.103,993,3.535,994,3.535,1529,3.066,1530,3.351,1532,3.524,1533,3.524,1534,3.524,1535,3.524,1561,5.291]],["title/classes/InvalidUserActivationLink.html",[22,0.198,793,2.566]],["body/classes/InvalidUserActivationLink.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,3.869,96,2.139,121,1.743,233,2.082,269,0.855,405,2.924,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,2.946,713,3.066,754,3.351,756,3.2,757,3.2,791,3.066,792,3.066,793,3.962,804,3.351,981,3.329,992,3.103,993,3.535,994,3.535,1529,3.066,1530,3.351,1532,3.524,1533,3.524,1534,3.524,1535,3.524,1562,5.291]],["title/classes/IsStringPathSafeConstraint.html",[22,0.198,1563,3.319]],["body/classes/IsStringPathSafeConstraint.html",[3,0.073,4,0.063,5,0.053,9,0.124,10,0.009,21,0.122,22,0.294,27,0.005,28,0.006,29,0.005,35,0.597,36,1.88,37,1.361,41,0.469,43,1.361,44,0.966,45,0.408,46,1.136,48,1.88,56,2.114,63,2.009,72,2.334,104,2.673,113,2.896,118,3.06,256,2.409,269,0.806,291,0.837,307,4.38,318,2.985,321,3.51,353,2.896,561,1.962,856,3.676,921,4.63,1073,3.738,1077,4.406,1563,5.518,1564,5.518,1565,4.023,1566,6.503,1567,6.915,1568,4.986,1569,5.811,1570,4.986,1571,5.307,1572,5.811,1573,6.315,1574,4.406,1575,4.986,1576,3.738,1577,3.738,1578,3.738,1579,3.51,1580,4.023,1581,4.931,1582,5.939,1583,4.023,1584,4.023,1585,4.023]],["title/classes/IsStringValidPathConstraint.html",[22,0.198,1586,3.319]],["body/classes/IsStringValidPathConstraint.html",[3,0.074,4,0.064,5,0.054,9,0.126,10,0.009,21,0.123,22,0.297,27,0.005,28,0.006,29,0.005,35,0.606,36,1.898,37,1.381,41,0.473,43,1.381,44,0.975,45,0.414,46,1.153,48,1.898,56,2.135,63,2.023,72,2.368,104,2.712,113,2.924,118,2.103,256,2.445,269,0.818,291,0.839,307,4.422,318,3.013,321,3.562,353,2.924,561,1.991,856,3.702,1452,5.241,1564,5.557,1566,6.55,1567,6.954,1569,5.867,1571,5.358,1572,5.867,1573,6.351,1576,3.793,1577,3.793,1578,3.793,1579,3.562,1580,4.082,1581,4.978,1582,5.982,1583,4.082,1584,4.082,1585,4.082,1586,5.557,1587,4.082,1588,5.059,1589,5.059,1590,4.082,1591,4.47,1592,5.358,1593,5.059]],["title/classes/LoginDto.html",[22,0.198,582,3.319]],["body/classes/LoginDto.html",[3,0.084,4,0.072,5,0.061,9,0.143,10,0.009,21,0.096,22,0.323,27,0.005,28,0.007,29,0.005,35,0.69,41,0.561,45,0.644,269,0.931,273,1.72,291,0.83,292,2.595,318,2.614,579,3.537,582,5.411,652,4.931,885,4.571,888,4.018,903,4.788,905,4.788,906,4.018,932,5.081,1594,5.09,1595,5.909,1596,5.76,1597,5.09,1598,5.76,1599,5.76]],["title/modules/MailerModule.html",[83,1.295,133,3.117]],["body/modules/MailerModule.html",[3,0.05,4,0.043,5,0.036,9,0.2,10,0.009,12,0.479,21,0.057,22,0.153,25,2.645,27,0.003,28,0.005,29,0.003,36,0.98,37,1.382,41,0.473,43,1.813,44,1.04,45,0.543,46,1.513,48,1.898,49,0.894,63,2.024,83,2.303,85,1.657,86,1.713,87,1.838,88,1.838,89,1.838,90,3.798,91,3.225,95,2.713,96,1.387,97,1.838,133,5.836,138,2.934,144,3.35,145,1.838,155,2.571,204,2.768,227,3.487,228,3.811,229,1.909,236,2.571,264,2.768,265,2.768,266,5.983,267,2.414,278,1.248,361,3.564,559,2.934,561,2.918,570,2.571,626,5.074,840,2.074,876,1.657,1316,4.473,1321,3.03,1600,3.03,1601,3.03,1602,3.03,1603,5.22,1604,3.429,1605,7.102,1606,3.03,1607,4.473,1608,6.129,1609,3.429,1610,6.26,1611,3.03,1612,4.473,1613,3.429,1614,4.473,1615,4.207,1616,3.429,1617,6.26,1618,3.03,1619,4.473,1620,3.429,1621,4.855,1622,4.98,1623,3.03,1624,3.429,1625,3.429,1626,5.316,1627,3.564,1628,3.03,1629,3.429,1630,5.316,1631,3.03,1632,3.03,1633,4.473,1634,5.316,1635,4.473,1636,5.316,1637,3.03,1638,3.03,1639,3.429]],["title/interfaces/MailerModuleAsyncOptions.html",[549,1.032,1608,3.319]],["body/interfaces/MailerModuleAsyncOptions.html",[3,0.081,4,0.07,5,0.059,9,0.193,10,0.009,21,0.092,27,0.005,28,0.007,29,0.005,33,1.439,35,0.668,37,1.522,45,0.741,46,2.016,49,1.454,83,2.271,227,4.731,228,5.171,267,5.748,273,1.685,285,4.478,549,1.299,551,2.194,553,3.531,554,6.247,555,7.214,556,4.926,557,4.926,559,3.231,561,2.194,563,4.926,635,4.977,1608,5.3,1615,4.478,1627,3.925,1628,4.926,1640,4.18]],["title/interfaces/MailerOptions.html",[549,1.032,1615,2.804]],["body/interfaces/MailerOptions.html",[3,0.097,4,0.083,5,0.07,9,0.165,10,0.008,21,0.11,27,0.006,28,0.007,29,0.006,33,1.349,72,3.1,83,1.938,549,1.831,551,2.607,553,4.196,906,3.688,1576,4.966,1577,4.966,1578,4.966,1579,4.664,1615,4.978,1640,4.966,1641,6.624,1642,6.624,1643,6.624,1644,6.624,1645,6.624]],["title/interfaces/MailerOptionsFactory.html",[549,1.032,1627,3.117]],["body/interfaces/MailerOptionsFactory.html",[3,0.093,4,0.08,5,0.067,9,0.158,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,35,0.762,36,2.192,41,0.453,48,1.818,49,2.001,83,2.409,549,1.482,551,2.503,559,3.686,561,3.018,635,4.478,1615,5.216,1627,5.4,1640,5.751,1646,5.62,1647,8.55,1648,6.36]],["title/injectables/MailerProcessor.html",[30,1.357,1603,3.117]],["body/injectables/MailerProcessor.html",[3,0.069,4,0.06,5,0.05,9,0.209,10,0.009,12,0.664,21,0.079,22,0.212,24,2.654,25,2.864,27,0.004,28,0.006,29,0.004,30,1.951,31,2.222,35,0.569,36,1.819,37,2.249,41,0.547,43,1.738,44,0.935,45,0.521,46,1.45,48,1.819,49,2.001,54,2.365,83,1.388,107,2.871,113,2.09,121,0.945,227,2.751,273,1.517,292,1.563,349,2.294,559,3.689,561,2.505,840,2.871,842,5.137,856,2.371,941,3.559,1331,7.071,1334,3.559,1335,4.194,1341,4.194,1603,4.481,1615,4.86,1622,3.559,1623,4.194,1626,4.194,1649,4.194,1650,7.181,1651,7.279,1652,5.624,1653,4.746,1654,4.746,1655,6.365,1656,4.746,1657,4.746,1658,6.365,1659,5.624,1660,4.746,1661,3.161,1662,4.194,1663,3.559,1664,4.746,1665,4.746,1666,4.746,1667,4.746,1668,4.746]],["title/injectables/MailerService.html",[30,1.357,626,2.678]],["body/injectables/MailerService.html",[3,0.057,4,0.049,5,0.041,9,0.203,10,0.009,12,0.546,21,0.065,22,0.175,24,1.924,25,2.077,27,0.004,28,0.005,29,0.004,30,1.705,31,1.829,35,0.468,36,1.59,37,2.178,41,0.532,43,2.037,44,1.096,45,0.61,46,1.7,48,2.018,49,1.842,54,2.134,56,2.27,60,1.829,61,1.256,63,1.769,64,1.624,107,2.363,121,1.107,144,3.931,145,2.094,168,2.02,202,3.153,229,3.098,256,1.888,291,0.805,336,4.092,507,3.153,559,2.264,561,2.189,626,3.365,835,5.698,838,5.725,839,3.153,840,2.363,843,3.452,876,1.888,955,4.171,1001,4.916,1652,4.916,1661,4.702,1662,3.452,1663,2.929,1669,3.452,1670,5.563,1671,5.563,1672,5.563,1673,3.907,1674,5.563,1675,3.907,1676,3.907,1677,5.563,1678,5.725,1679,5.725,1680,3.907,1681,3.153,1682,5.563,1683,3.907,1684,5.563,1685,3.907,1686,4.858,1687,4.916,1688,3.907,1689,3.907,1690,3.907,1691,3.907,1692,2.929,1693,5.563,1694,3.907,1695,3.907,1696,3.907,1697,3.907,1698,3.907,1699,5.563,1700,3.907,1701,3.907,1702,3.907,1703,3.907,1704,5.563,1705,3.907,1706,3.907,1707,3.907,1708,3.907,1709,3.907,1710,3.907]],["title/classes/NoFilesUploaded.html",[22,0.198,1190,2.566]],["body/classes/NoFilesUploaded.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.755,21,0.142,22,0.382,27,0.005,28,0.007,29,0.005,33,1.767,41,0.385,45,0.442,121,1.728,269,0.873,291,0.517,981,3.549,1128,3.421,1181,3.13,1182,3.421,1183,4.614,1184,3.597,1186,3.007,1187,4.614,1188,3.597,1189,3.597,1190,4.015,1191,3.597,1192,3.582,1193,3.597,1194,3.13,1195,5.094,1196,5.094,1197,3.13,1198,3.13,1199,3.421,1200,3.13,1201,3.597,1202,3.597,1203,3.597,1711,5.401]],["title/interfaces/Pagination.html",[549,1.032,1371,2.949]],["body/interfaces/Pagination.html",[3,0.064,4,0.055,5,0.046,9,0.108,10,0.009,21,0.114,27,0.004,28,0.006,29,0.004,35,0.522,37,1.19,45,0.562,49,1.137,54,1.435,56,2.695,63,1.19,72,3.759,168,4.255,260,2.902,271,2.426,273,1.431,279,2.106,291,0.743,300,2.694,322,2.106,353,3.027,480,2.636,508,4.691,514,3.804,516,3.217,549,1.399,551,1.715,561,1.715,703,4.353,858,3.553,1087,3.267,1115,3.068,1289,5.794,1295,4.691,1370,3.068,1371,4,1398,3.068,1411,3.068,1433,4.503,1436,4.503,1437,4.503,1712,3.267,1713,6.286,1714,5.307,1715,4.229,1716,5.553,1717,3.851,1718,3.851,1719,3.517,1720,3.267,1721,4.847,1722,3.517,1723,3.517,1724,3.517,1725,3.517,1726,3.517,1727,3.517,1728,3.267,1729,3.517,1730,3.068,1731,3.517,1732,3.517,1733,3.517,1734,3.517,1735,3.517,1736,3.517,1737,3.517]],["title/classes/PaginationDto.html",[22,0.198,1243,3.319]],["body/classes/PaginationDto.html",[3,0.089,4,0.077,5,0.065,9,0.152,10,0.009,21,0.101,22,0.273,27,0.006,28,0.007,29,0.006,35,0.733,41,0.577,45,0.662,72,3.789,113,3.299,269,0.989,273,1.785,291,0.717,300,2.725,353,3.299,703,4.744,1243,5.616,1289,5.7,1371,5.392,1372,5.405,1713,6.07,1738,5.405,1739,6.117,1740,6.117,1741,6.117]],["title/interfaces/PaginationOptions.html",[549,1.032,1715,3.117]],["body/interfaces/PaginationOptions.html",[3,0.059,4,0.051,5,0.043,9,0.1,10,0.009,21,0.109,27,0.004,28,0.005,29,0.004,35,0.482,37,1.097,45,0.672,46,1.93,49,1.049,54,1.324,56,2.642,63,1.097,72,3.081,168,4.321,249,2.836,260,4.763,271,2.238,273,1.353,279,1.943,291,0.722,300,2.065,322,1.943,353,1.771,480,2.432,508,4.53,511,3.434,514,4.53,516,3.664,549,1.323,551,1.582,561,1.582,703,2.547,858,4.161,1087,5.362,1115,5.035,1289,5.035,1295,5.097,1370,2.831,1371,2.678,1398,2.831,1411,2.831,1433,4.257,1436,4.257,1437,5.655,1712,3.014,1713,5.655,1714,6.319,1715,4.634,1716,6.033,1717,3.553,1718,3.553,1719,3.244,1720,3.014,1721,4.582,1722,3.244,1723,3.244,1724,3.244,1725,3.244,1726,3.244,1727,3.244,1728,3.014,1729,3.244,1730,2.831,1731,3.244,1732,3.244,1733,3.244,1734,3.244,1735,3.244,1736,3.244,1737,3.244]],["title/classes/ParentFolderNotFound.html",[22,0.198,1157,2.465]],["body/classes/ParentFolderNotFound.html",[3,0.076,4,0.066,5,0.055,9,0.129,10,0.009,12,0.728,21,0.14,22,0.378,27,0.005,28,0.006,29,0.005,33,1.753,41,0.371,44,0.994,118,3.126,121,1.713,269,0.842,291,0.648,402,2.981,403,2.793,405,3.405,406,3.506,408,2.981,409,3.271,413,2.896,912,2.518,1032,3.756,1129,4.288,1130,3.301,1146,2.603,1149,3.02,1150,3.301,1152,4.509,1153,3.02,1154,3.47,1155,2.901,1156,3.47,1157,3.769,1158,3.47,1159,3.02,1160,4.509,1161,4.509,1162,3.02,1742,5.211]],["title/classes/ParentIsChildrenOfItself.html",[22,0.198,1159,2.566]],["body/classes/ParentIsChildrenOfItself.html",[3,0.076,4,0.066,5,0.055,9,0.129,10,0.009,12,0.728,21,0.14,22,0.378,27,0.005,28,0.006,29,0.005,33,1.753,41,0.371,44,0.994,118,3.126,121,1.713,269,0.842,291,0.648,402,2.981,403,2.793,405,3.529,406,3.312,408,2.981,409,3.271,413,2.896,912,2.518,1032,3.756,1129,4.288,1130,3.301,1146,2.603,1149,3.02,1150,3.301,1152,4.509,1153,3.02,1154,3.47,1155,2.901,1156,3.47,1157,2.901,1158,3.47,1159,3.923,1160,4.509,1161,4.509,1162,3.02,1743,5.211]],["title/classes/ParentIsItself.html",[22,0.198,1162,2.566]],["body/classes/ParentIsItself.html",[3,0.076,4,0.066,5,0.055,9,0.129,10,0.009,12,0.728,21,0.14,22,0.378,27,0.005,28,0.006,29,0.005,33,1.753,41,0.371,44,0.994,118,3.126,121,1.713,269,0.842,291,0.648,402,2.981,403,2.793,405,3.529,406,3.312,408,2.981,409,3.271,413,2.896,912,2.518,1032,3.756,1129,4.288,1130,3.301,1146,2.603,1149,3.02,1150,3.301,1152,4.509,1153,3.02,1154,3.47,1155,2.901,1156,3.47,1157,2.901,1158,3.47,1159,3.02,1160,4.509,1161,4.509,1162,3.923,1744,5.211]],["title/classes/PartialUserDto.html",[22,0.198,1745,3.319]],["body/classes/PartialUserDto.html",[3,0.066,4,0.057,5,0.048,8,4.119,9,0.154,10,0.009,21,0.075,22,0.276,27,0.004,28,0.006,29,0.004,33,1.259,35,0.545,41,0.633,45,0.727,76,7.804,269,0.735,273,1.474,275,3.444,278,2.25,284,3.444,287,3.095,291,0.81,292,2.679,300,2.25,320,2.438,353,3.095,430,5.963,579,2.571,628,5.692,641,3.279,652,3.585,673,3.918,931,3.411,987,3.444,1010,4.119,1146,3.09,1745,4.637,1746,5.465,1747,4.991,1748,4.549,1749,4.549,1750,4.549,1751,4.549,1752,4.549,1753,4.549,1754,4.549,1755,4.549,1756,4.549,1757,4.549,1758,4.549,1759,4.549,1760,4.549,1761,4.02]],["title/classes/PasswordReset.html",[22,0.198,765,2.949]],["body/classes/PasswordReset.html",[3,0.064,4,0.055,5,0.046,9,0.184,10,0.009,21,0.1,22,0.196,27,0.004,28,0.006,29,0.004,33,1.228,35,0.526,41,0.555,45,0.637,56,1.41,61,1.41,63,1.197,64,3.676,72,2.823,82,2.778,148,1.931,249,2.191,269,0.709,271,3.839,273,1.438,275,3.839,283,3.129,284,3.839,287,3.544,291,0.71,292,2.271,293,4.017,294,3.981,296,4.304,297,4.946,298,3.821,306,3.821,314,4.946,322,2.119,323,4.946,324,3.359,325,2.921,333,2.442,334,2.653,342,2.921,343,2.921,344,3.088,345,2.921,346,2.542,347,2.921,348,4.017,349,2.119,357,3.088,358,2.921,362,2.921,378,3.37,765,4.017,766,3.288,876,2.915,1010,4.592,1013,3.088,1014,4.247,1018,5.993,1022,4.247,1023,3.288,1028,3.539,1029,3.539,1030,3.539,1762,6.493,1763,3.539,1764,4.385,1765,4.385,1766,4.385,1767,4.385,1768,4.385,1769,4.385,1770,3.875,1771,4.385]],["title/guards/RecaptchaGuard.html",[383,3.319,622,3.319]],["body/guards/RecaptchaGuard.html",[3,0.052,4,0.045,5,0.038,9,0.187,10,0.009,12,0.499,21,0.102,22,0.16,24,2.13,25,2.689,27,0.005,28,0.005,29,0.003,30,1.598,35,0.428,36,1.49,37,1.681,38,5.465,39,4.208,40,5.823,41,0.439,43,1.849,44,0.904,45,0.554,46,1.403,47,6.07,48,1.49,49,1.36,54,1.176,56,2.768,57,1.988,58,2.882,60,3.17,61,2.177,63,1.681,71,2.378,78,2.07,81,2.605,113,1.573,121,1.038,142,2.677,144,3.771,145,1.914,229,2.903,249,2.605,279,2.52,291,0.648,338,2.882,362,2.378,417,2.605,459,3.671,463,2.16,507,2.882,601,2.677,602,2.16,622,3.909,661,2.677,693,2.882,695,4.607,699,6.863,701,3.155,703,3.901,710,2.514,722,2.16,748,3.155,749,3.155,909,2.677,981,1.485,992,2.366,1555,2.882,1595,5.639,1692,4.618,1772,2.882,1773,6.772,1774,3.571,1775,3.571,1776,3.571,1777,5.214,1778,3.571,1779,2.882,1780,3.155,1781,2.882,1782,2.882,1783,2.882,1784,5.984,1785,5.442,1786,2.677,1787,3.155,1788,4.208,1789,3.155,1790,2.882,1791,3.155,1792,2.882,1793,3.155,1794,3.571,1795,3.571,1796,3.571,1797,3.571,1798,3.571,1799,3.571,1800,3.571,1801,3.571,1802,3.571,1803,3.571,1804,5.214,1805,3.571,1806,3.571,1807,3.571,1808,3.571,1809,3.571,1810,3.571,1811,3.571,1812,3.571,1813,3.571,1814,3.571,1815,3.571,1816,3.571,1817,5.214,1818,5.214,1819,3.571]],["title/classes/RegisterDto.html",[22,0.198,593,3.319]],["body/classes/RegisterDto.html",[3,0.07,4,0.061,5,0.051,9,0.12,10,0.009,21,0.08,22,0.288,27,0.005,28,0.006,29,0.005,35,0.578,41,0.55,45,0.632,269,0.78,273,1.533,291,0.821,292,2.544,294,2.586,296,2.796,308,3.617,318,2.189,579,3.513,593,4.824,641,3.441,652,4.663,888,4.929,890,5.144,891,5.144,903,4.663,905,4.663,906,4.031,907,3.893,932,4.53,1016,5.097,1451,5.192,1452,4.285,1453,3.893,1595,5.428,1597,4.262,1820,4.262,1821,4.824,1822,5.192,1823,4.824,1824,4.824,1825,4.824,1826,5.685,1827,6.825,1828,4.262,1829,4.824,1830,5.685,1831,4.824,1832,3.893,1833,4.262]],["title/classes/ResetPasswordDto.html",[22,0.198,597,3.319]],["body/classes/ResetPasswordDto.html",[3,0.082,4,0.071,5,0.06,9,0.14,10,0.009,21,0.093,22,0.318,27,0.005,28,0.007,29,0.005,35,0.673,41,0.506,45,0.581,61,2.284,96,2.873,269,0.909,273,1.693,291,0.783,292,2.34,296,3.257,318,2.55,378,3.832,579,3.586,597,5.327,691,5.486,885,4.501,888,4.559,890,4.732,891,4.732,903,4.516,905,4.516,906,3.129,1099,4.966,1450,4.535,1822,4.535,1832,5.734,1834,6.885,1835,5.62,1836,5.62,1837,5.62,1838,5.62]],["title/interfaces/SendMailOptions.html",[549,1.032,1661,2.949]],["body/interfaces/SendMailOptions.html",[3,0.092,4,0.08,5,0.067,9,0.19,10,0.008,21,0.105,27,0.006,28,0.007,29,0.006,33,1.291,35,0.76,45,0.673,46,1.744,273,1.824,336,3.675,511,4.631,549,1.478,551,2.495,553,4.016,955,5.74,1661,5.099,1663,5.74,1678,5.603,1679,5.603,1681,5.117,1686,6.404,1839,5.603,1840,6.341,1841,6.341]],["title/classes/SessionDto.html",[22,0.198,1512,3.117]],["body/classes/SessionDto.html",[3,0.081,4,0.07,5,0.059,9,0.137,10,0.009,21,0.092,22,0.314,27,0.005,28,0.007,29,0.005,35,0.663,41,0.612,45,0.714,269,0.894,273,1.676,280,5.151,283,3.51,287,3.098,291,0.822,292,1.821,300,2.559,320,2.964,430,5.445,511,3.345,602,4.678,604,5.799,663,3.894,665,4.146,667,4.146,1512,4.952,1518,6.241,1520,4.887,1521,4.887,1522,4.887,1842,4.887,1843,7.734,1844,7.033,1845,5.53,1846,5.53,1847,5.53,1848,5.53,1849,5.53,1850,5.53]],["title/controllers/SessionsController.html",[0,2.072,1851,3.319]],["body/controllers/SessionsController.html",[0,1.977,2,1.977,3,0.062,4,0.053,5,0.045,7,2.676,9,0.203,10,0.009,11,2.814,12,0.591,21,0.07,22,0.263,23,2.11,24,1.461,27,0.004,28,0.006,29,0.004,34,2.556,35,0.506,36,1.68,37,1.845,41,0.482,43,1.845,44,0.993,45,0.553,46,1.54,48,1.932,49,2.075,54,1.391,56,1.358,63,1.845,278,2.659,283,3.835,291,0.835,292,2.226,319,3.168,320,2.265,460,2.265,461,2.975,472,2.814,473,3.168,474,3.168,475,3.168,477,3.168,485,3.409,490,3.409,584,5.033,585,5.168,625,3.409,657,6.458,669,5.069,777,5.069,778,3.556,822,3.409,1512,2.975,1851,4.407,1852,3.733,1853,6.76,1854,5.878,1855,5.878,1856,4.225,1857,6.76,1858,4.225,1859,4.225,1860,4.225,1861,4.225,1862,4.225,1863,4.225,1864,4.225,1865,3.733,1866,4.225,1867,4.225,1868,4.225,1869,4.225,1870,4.225,1871,4.225,1872,4.225,1873,4.225,1874,4.225,1875,4.225,1876,4.225,1877,4.225,1878,4.225,1879,4.225]],["title/modules/SessionsModule.html",[83,1.295,134,2.804]],["body/modules/SessionsModule.html",[2,3.425,3,0.086,4,0.074,5,0.062,9,0.198,10,0.009,12,0.824,21,0.098,22,0.263,27,0.006,28,0.007,29,0.006,83,2.329,85,2.847,86,2.943,87,3.158,88,3.158,89,3.158,90,4.268,91,4.268,95,3.923,96,2.382,97,3.158,134,5.606,778,5.547,1851,5.969,1865,5.206,1880,5.206,1881,5.206,1882,5.206,1883,5.891,1884,5.891]],["title/injectables/SessionsService.html",[30,1.357,778,2.678]],["body/injectables/SessionsService.html",[3,0.067,4,0.058,5,0.049,9,0.188,10,0.009,12,0.64,21,0.076,22,0.205,24,1.584,25,2.823,27,0.004,28,0.006,29,0.004,30,1.904,31,2.143,35,0.549,36,1.776,37,2.225,41,0.581,43,2.158,44,1.161,45,0.646,46,1.801,48,2.161,49,2.212,54,2.046,63,1.696,121,0.911,148,2.017,273,1.481,322,2.213,349,2.213,440,3.935,460,3.33,480,3.758,506,4.374,513,5.49,514,5.637,516,3.539,517,5.014,519,5.014,521,4.658,777,5.287,778,3.758,856,2.287,1514,3.433,1885,4.046,1886,4.579,1887,8.151,1888,6.213,1889,4.579,1890,4.579,1891,4.579,1892,4.579,1893,6.213,1894,4.579,1895,4.579,1896,4.579,1897,4.579,1898,4.579,1899,4.579,1900,4.579]],["title/interfaces/StorageEngine.html",[549,1.032,936,2.678]],["body/interfaces/StorageEngine.html",[3,0.08,4,0.069,5,0.058,9,0.136,10,0.009,21,0.091,27,0.005,28,0.007,29,0.005,35,0.657,36,2,41,0.549,43,2.103,44,1.132,45,0.63,46,1.756,48,2.202,49,2.236,104,3.751,278,2.803,291,0.852,460,3.751,549,1.278,551,2.159,552,5.714,936,4.233,939,5.247,940,5.647,948,4.661,950,4.661,951,4.927,953,4.661,956,5.132,957,3.18,1901,4.848,1902,5.486,1903,5.486,1904,5.486]],["title/modules/StorageModule.html",[83,1.295,1313,2.949]],["body/modules/StorageModule.html",[3,0.054,4,0.047,5,0.039,9,0.189,10,0.009,12,0.519,21,0.062,22,0.166,25,2.73,27,0.004,28,0.005,29,0.004,36,1.061,37,1.464,41,0.491,43,1.882,44,1.013,45,0.564,46,1.571,48,1.971,49,0.968,63,2.081,83,2.354,85,1.794,86,1.854,87,1.989,88,1.989,89,1.989,90,3.921,91,3.375,95,2.874,96,1.501,97,1.989,138,2.151,227,3.108,228,3.397,266,6.152,267,2.613,278,1.35,361,3.775,550,6.242,558,3.997,559,3.108,560,3.775,561,3,562,3.28,570,2.783,876,1.794,958,4.193,1245,4.938,1313,5.461,1605,7.245,1606,3.28,1607,4.738,1610,6.463,1611,3.28,1612,4.738,1614,4.738,1617,6.463,1618,3.28,1619,4.738,1630,5.563,1631,3.28,1632,3.28,1633,4.738,1634,5.563,1635,4.738,1636,5.563,1637,3.28,1638,3.28,1905,3.28,1906,3.28,1907,3.28,1908,3.711,1909,3.711,1910,3.711,1911,3.711,1912,3.711,1913,5.081,1914,5.17,1915,3.28,1916,3.711,1917,3.711]],["title/interfaces/StorageOptions.html",[549,1.032,558,2.566]],["body/interfaces/StorageOptions.html",[3,0.092,4,0.08,5,0.067,9,0.19,10,0.009,21,0.105,27,0.006,28,0.007,29,0.006,35,0.757,45,0.672,83,1.849,273,1.821,511,4.622,549,1.473,551,2.488,552,4.451,553,4.004,558,4.429,942,5.38,965,4.004,1324,6.397,1463,5.38,1918,5.586,1919,5.586,1920,5.586,1921,5.586]],["title/interfaces/StorageOptionsFactory.html",[549,1.032,560,3.117]],["body/interfaces/StorageOptionsFactory.html",[3,0.093,4,0.08,5,0.067,9,0.158,10,0.009,21,0.106,27,0.006,28,0.007,29,0.006,35,0.762,36,2.192,41,0.453,48,1.818,49,2.001,83,2.409,154,3.177,549,1.482,551,2.503,552,5.4,558,4.773,559,3.686,560,5.4,561,3.018,1922,5.62,1923,8.55,1924,6.36]],["title/injectables/StorageService.html",[30,1.357,1245,2.566]],["body/injectables/StorageService.html",[3,0.036,4,0.031,5,0.052,9,0.208,10,0.009,12,0.35,21,0.041,22,0.112,24,0.865,25,2.559,27,0.002,28,0.004,29,0.002,30,1.218,31,1.17,35,0.3,36,1.135,37,2.05,41,0.488,43,1.677,44,0.902,45,0.535,46,1.399,48,1.755,49,1.705,54,1.308,56,2.578,57,2.752,60,1.17,61,2.356,63,1.942,64,2.055,81,3.553,83,0.731,104,2.649,113,1.101,121,0.498,227,1.449,256,1.92,273,0.947,278,2.048,291,0.626,300,0.91,320,1.34,333,1.392,334,1.512,349,1.208,353,1.101,460,2.129,558,3.263,559,2.302,561,2.417,600,2.209,658,1.875,667,2.978,680,2.018,681,2.018,683,2.018,722,1.512,726,1.584,847,2.797,856,1.249,934,3.48,936,2.989,941,1.875,950,2.989,953,2.646,956,1.665,957,2.864,958,2.646,959,1.76,962,2.646,965,2.516,1042,1.449,1181,1.449,1186,2.752,1190,2.302,1192,1.293,1194,2.302,1197,2.302,1198,2.302,1200,2.302,1245,2.302,1261,1.875,1269,3.51,1296,4.221,1324,3.705,1459,1.76,1523,2.646,1526,3.51,1527,4.367,1528,3.206,1651,5.778,1692,1.875,1720,1.875,1786,3.705,1914,1.875,1915,2.209,1918,2.209,1919,2.209,1920,2.209,1921,3.51,1925,2.209,1926,4.942,1927,3.51,1928,3.972,1929,2.5,1930,2.5,1931,6.057,1932,2.5,1933,3.972,1934,2.5,1935,2.5,1936,3.972,1937,2.5,1938,3.972,1939,4.221,1940,2.5,1941,3.972,1942,2.5,1943,3.206,1944,5.427,1945,2.5,1946,2.5,1947,3.206,1948,2.978,1949,2.5,1950,2.5,1951,2.5,1952,2.978,1953,2.5,1954,4.942,1955,1.875,1956,2.209,1957,2.5,1958,2.5,1959,3.972,1960,2.5,1961,2.5,1962,2.5,1963,2.5,1964,2.5,1965,2.5,1966,2.978,1967,2.209,1968,2.5,1969,2.5,1970,2.018,1971,5.629,1972,4.942,1973,2.5,1974,3.972,1975,2.5,1976,2.5,1977,2.5,1978,2.5,1979,4.942,1980,2.5,1981,2.5,1982,2.5,1983,2.5,1984,2.5,1985,3.972,1986,2.5,1987,3.972,1988,2.5,1989,2.5,1990,2.5,1991,2.5,1992,2.5,1993,3.972,1994,2.5,1995,2.5,1996,2.5,1997,2.5,1998,5.629,1999,2.5,2000,2.5,2001,2.5,2002,2.5,2003,2.5,2004,2.5,2005,2.5,2006,2.5,2007,2.5,2008,2.5,2009,2.5,2010,2.5,2011,2.209,2012,2.5]],["title/classes/StreamMeter.html",[22,0.198,1952,3.319]],["body/classes/StreamMeter.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,21,0.09,22,0.242,25,2.859,27,0.005,28,0.007,29,0.005,33,1.413,35,0.649,36,1.983,41,0.546,43,1.478,44,0.795,45,0.567,46,1.234,48,1.548,63,1.478,104,3.72,269,0.875,273,1.654,291,0.733,349,2.617,855,6.132,856,2.705,858,3.588,876,3.353,957,3.138,960,4.886,1042,4.438,1952,5.203,1966,5.742,1970,4.37,2013,7.137,2014,4.785,2015,7.658,2016,7.658,2017,6.939,2018,5.415,2019,6.939,2020,6.767,2021,7.658,2022,8.076,2023,5.415,2024,5.415,2025,5.415,2026,6.939,2027,5.415]],["title/classes/TooManyApplications.html",[22,0.198,420,2.678]],["body/classes/TooManyApplications.html",[3,0.08,4,0.069,5,0.058,9,0.137,10,0.009,12,0.769,21,0.139,22,0.375,27,0.005,28,0.007,29,0.005,33,1.746,41,0.392,44,0.808,50,3.387,121,1.707,269,0.889,279,2.658,281,2.949,291,0.526,369,3.484,400,3.327,401,3.664,402,3.087,403,2.949,405,3.475,406,3.087,407,3.873,408,2.423,409,2.658,410,2.658,411,3.327,412,4.935,413,2.353,414,3.327,415,3.664,416,3.664,417,2.748,418,3.327,419,2.423,420,4.24,421,2.949,422,3.873,423,3.664,424,3.873,425,3.063,426,3.873,2028,5.501]],["title/classes/TooManyFields.html",[22,0.198,1194,2.566]],["body/classes/TooManyFields.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.755,21,0.142,22,0.382,27,0.005,28,0.007,29,0.005,33,1.767,41,0.385,45,0.442,121,1.728,269,0.873,291,0.517,981,3.549,1128,3.421,1181,3.13,1182,3.421,1183,4.614,1184,3.597,1186,3.007,1187,4.614,1188,3.597,1189,3.597,1190,3.13,1191,3.597,1192,3.582,1193,3.597,1194,4.015,1195,5.094,1196,5.094,1197,3.13,1198,3.13,1199,3.421,1200,3.13,1201,3.597,1202,3.597,1203,3.597,2029,5.401]],["title/classes/TooManyFiles.html",[22,0.198,1197,2.566]],["body/classes/TooManyFiles.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.755,21,0.142,22,0.382,27,0.005,28,0.007,29,0.005,33,1.767,41,0.385,45,0.442,121,1.728,269,0.873,291,0.517,981,3.549,1128,3.421,1181,3.13,1182,3.421,1183,4.614,1184,3.597,1186,3.007,1187,4.614,1188,3.597,1189,3.597,1190,3.13,1191,3.597,1192,3.582,1193,3.597,1194,3.13,1195,5.094,1196,5.094,1197,4.015,1198,3.13,1199,3.421,1200,3.13,1201,3.597,1202,3.597,1203,3.597,2030,5.401]],["title/classes/TooManyParts.html",[22,0.198,1198,2.566]],["body/classes/TooManyParts.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.755,21,0.142,22,0.382,27,0.005,28,0.007,29,0.005,33,1.767,41,0.385,45,0.442,121,1.728,269,0.873,291,0.517,981,3.549,1128,3.421,1181,3.13,1182,3.421,1183,4.614,1184,3.597,1186,3.007,1187,4.614,1188,3.597,1189,3.597,1190,3.13,1191,3.597,1192,3.582,1193,3.597,1194,3.13,1195,5.094,1196,5.094,1197,3.13,1198,4.015,1199,3.421,1200,3.13,1201,3.597,1202,3.597,1203,3.597,2031,5.401]],["title/classes/UnsupportedContentType.html",[22,0.198,1200,2.566]],["body/classes/UnsupportedContentType.html",[3,0.079,4,0.068,5,0.057,9,0.134,10,0.009,12,0.755,21,0.142,22,0.382,27,0.005,28,0.007,29,0.005,33,1.767,41,0.385,45,0.442,121,1.728,269,0.873,291,0.517,981,3.469,1128,3.421,1181,3.13,1182,3.421,1183,4.614,1184,3.597,1186,3.007,1187,5.094,1188,3.597,1189,3.597,1190,3.13,1191,3.597,1192,3.582,1193,3.597,1194,3.13,1195,5.094,1196,5.094,1197,3.13,1198,3.13,1199,3.421,1200,4.015,1201,3.597,1202,3.597,1203,3.597,2032,5.401]],["title/classes/UpdateEntryDto.html",[22,0.198,1225,3.319]],["body/classes/UpdateEntryDto.html",[3,0.078,4,0.067,5,0.056,9,0.17,10,0.009,21,0.088,22,0.307,27,0.005,28,0.006,29,0.005,35,0.637,41,0.541,44,1.27,45,0.621,118,2.211,269,0.86,273,1.635,291,0.794,292,2.501,294,2.851,300,2.495,318,2.413,353,3.021,885,3.368,888,4.227,889,5.535,890,4.568,891,4.568,903,3.975,904,5.143,905,4.4,906,2.961,912,3.669,913,4.291,914,4.593,915,4.699,916,4.699,917,4.699,918,4.699,919,6.709,920,4.699,921,4.829,922,4.291,923,4.291,924,4.699,1032,4.007,1225,5.143,2033,7.088]],["title/classes/UpdateUserDto.html",[22,0.198,2034,3.319]],["body/classes/UpdateUserDto.html",[3,0.066,4,0.057,5,0.048,9,0.112,10,0.009,21,0.075,22,0.274,27,0.004,28,0.006,29,0.004,35,0.539,41,0.535,44,0.902,45,0.614,46,1.848,61,2.413,269,0.727,273,1.463,291,0.808,292,2.472,294,2.412,296,2.608,308,3.374,318,2.042,579,3.562,641,2.905,691,4.92,885,3.889,888,4.909,890,5,891,5,903,4.554,904,5.628,905,4.554,906,4.18,907,3.631,931,3.374,932,3.168,1011,5.639,1016,4.92,1451,4.954,1452,4.089,1453,3.631,1822,3.631,1826,5.425,1828,3.976,1830,5.425,1832,4.954,1833,3.976,2034,4.603,2035,6.943,2036,6.175,2037,6.544,2038,6.633,2039,4.499,2040,4.499,2041,4.499,2042,4.499,2043,4.499,2044,4.499,2045,4.499]],["title/interfaces/UploadedFile.html",[549,1.032,1948,3.319]],["body/interfaces/UploadedFile.html",[3,0.092,4,0.08,5,0.067,9,0.157,10,0.009,21,0.105,27,0.006,28,0.007,29,0.006,33,1.556,35,0.757,45,0.625,273,1.821,278,3.104,291,0.786,549,1.473,551,2.488,858,4.247,1042,4.945,1523,5.47,1525,5.101,1947,5.101,1948,5.729,2046,5.586,2047,5.586]],["title/classes/User.html",[22,0.198,233,1.742]],["body/classes/User.html",[3,0.035,4,0.03,5,0.026,8,3.225,9,0.18,10,0.009,21,0.064,22,0.247,27,0.002,28,0.004,29,0.002,33,0.789,35,0.464,37,0.662,41,0.574,45,0.683,49,1.443,56,1.557,61,0.779,63,1.849,64,3.683,72,2.589,81,1.936,82,2.455,113,1.707,148,1.068,233,2.539,256,3.505,269,0.392,271,3.08,273,0.924,275,2.696,278,2.2,282,3.908,284,2.696,285,3.067,287,2.982,291,0.779,292,2.45,293,3.225,294,3.458,296,2.806,297,4.831,298,4.289,300,2.706,301,3.425,304,1.956,305,4.888,306,4.289,307,4.296,308,4.535,314,4.296,318,1.1,319,1.818,320,1.3,322,1.172,323,5.06,324,2.158,325,1.615,326,4.279,333,1.35,334,1.466,342,1.615,343,2.581,344,1.707,345,2.581,346,2.246,347,2.581,348,3.684,349,2.923,350,2.142,353,2.841,357,2.729,358,1.615,360,2.142,361,1.707,362,1.615,389,1.956,395,4.279,397,1.956,398,1.956,399,1.956,460,2.965,561,1.906,579,2.816,628,3.504,641,2.3,642,2.142,652,2.806,658,1.818,673,3.067,703,2.455,853,1.956,876,1.172,987,3.08,1010,3.225,1013,3.409,1014,1.707,1016,3.409,1022,2.729,1023,1.818,1039,1.615,1052,2.142,1146,2.763,1581,1.818,1747,3.908,1827,2.142,2037,1.956,2038,2.142,2048,1.956,2049,4.842,2050,2.424,2051,2.424,2052,2.424,2053,2.424,2054,2.424,2055,2.424,2056,2.424,2057,2.424,2058,2.424,2059,2.424,2060,2.424,2061,2.424,2062,2.424,2063,2.424,2064,2.424,2065,3.425,2066,3.876,2067,4.842,2068,2.424,2069,2.142,2070,2.142,2071,4.842,2072,2.424,2073,4.842,2074,1.818,2075,2.142,2076,3.876,2077,5.532,2078,2.424,2079,2.424,2080,2.424,2081,2.424,2082,2.424,2083,2.424,2084,2.142,2085,2.424,2086,2.424,2087,2.424,2088,2.424,2089,2.424,2090,2.424,2091,2.424,2092,2.424,2093,2.424,2094,2.424,2095,4.842,2096,2.424,2097,2.424]],["title/classes/UserActivation.html",[22,0.198,769,2.949]],["body/classes/UserActivation.html",[3,0.058,4,0.05,5,0.043,9,0.177,10,0.009,21,0.094,22,0.179,27,0.004,28,0.005,29,0.004,33,1.154,35,0.481,41,0.557,45,0.64,56,1.823,61,1.29,63,1.095,64,3.709,72,2.654,82,2.542,148,1.767,249,2.004,269,0.649,271,3.661,273,1.351,275,3.661,283,2.984,284,3.661,287,3.446,291,0.684,292,2.353,293,3.776,294,3.83,296,4.141,297,4.759,298,4.526,306,3.591,314,4.759,322,1.939,323,5.02,324,3.157,325,2.672,333,2.234,334,2.427,342,2.672,343,2.672,344,2.825,345,2.672,346,2.326,347,2.672,348,3.776,349,2.74,357,2.825,358,2.672,362,2.672,378,3.243,633,3.008,769,3.776,770,3.008,858,2.932,876,3.781,1010,4.379,1013,3.992,1014,3.992,1018,5.766,1022,3.992,1023,3.008,1028,3.238,1029,3.238,1030,3.238,1074,3.546,1075,5.01,1076,3.546,1078,4.576,2070,3.546,2098,6.49,2099,3.238,2100,6.575,2101,4.013,2102,4.013,2103,5.01,2104,5.306,2105,4.013,2106,4.013,2107,4.013,2108,4.013,2109,3.546,2110,4.013]],["title/classes/UserDto.html",[22,0.198,628,2.804]],["body/classes/UserDto.html",[3,0.069,4,0.059,5,0.05,8,4.761,9,0.117,10,0.009,21,0.078,22,0.283,27,0.004,28,0.006,29,0.004,35,0.564,41,0.633,45,0.726,269,0.76,273,1.508,275,3.98,278,2.6,284,3.98,287,3.618,291,0.849,292,2.627,300,2.781,320,2.521,353,3.618,430,6.206,579,2.972,628,4.007,641,2.972,652,4.143,673,4.528,987,3.98,1010,4.761,1146,3.571,1747,5.769,2111,4.156,2112,4.703,2113,4.703,2114,4.703,2115,4.703,2116,4.703,2117,4.703,2118,4.703,2119,4.703,2120,4.703,2121,4.703,2122,4.703,2123,4.703]],["title/classes/UserNotActivated.html",[22,0.198,712,2.465]],["body/classes/UserNotActivated.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,3.869,96,2.139,121,1.743,233,2.082,269,0.855,405,3.24,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,3.806,713,3.066,754,3.351,756,3.2,757,3.2,791,3.066,792,3.066,793,3.066,804,3.351,981,3.149,992,3.103,993,3.535,994,3.535,1529,3.066,1530,3.351,1532,3.524,1533,3.524,1534,3.524,1535,3.524,2124,5.291]],["title/classes/UserNotFound.html",[22,0.198,997,2.566]],["body/classes/UserNotFound.html",[3,0.075,4,0.065,5,0.071,9,0.128,10,0.009,12,0.723,21,0.14,22,0.377,27,0.005,28,0.006,29,0.005,33,1.75,41,0.368,43,1.412,44,0.989,45,0.551,46,1.178,68,4.171,121,1.68,269,0.836,291,0.717,378,2.347,402,3.496,406,3.3,408,3.3,413,2.212,419,2.967,516,3.153,641,2.15,675,2.347,978,2.998,979,3.276,981,2.801,982,4.487,983,3.445,984,2.998,985,3.445,986,2.998,987,2.88,988,3.445,989,3.276,990,2.998,991,3.129,992,2.347,993,2.674,994,2.674,995,2.998,996,3.445,997,3.904,998,4.487,999,3.445,2125,5.172]],["title/classes/UserNotLoggedIn.html",[22,0.198,713,2.566]],["body/classes/UserNotLoggedIn.html",[3,0.077,4,0.067,5,0.056,9,0.131,10,0.009,12,0.74,21,0.141,22,0.38,27,0.005,28,0.006,29,0.005,33,1.759,41,0.377,50,4.006,96,2.139,121,1.743,233,2.082,269,0.855,405,2.924,410,2.557,419,3.336,421,2.836,568,3.066,579,2.842,675,3.633,712,2.946,713,3.962,754,3.351,756,3.2,757,3.2,791,3.066,792,3.066,793,3.066,804,3.351,981,3.149,992,3.103,993,3.535,994,3.535,1529,3.066,1530,3.351,1532,3.524,1533,3.524,1534,3.524,1535,3.524,2126,5.291]],["title/classes/UsernameTaken.html",[22,0.198,995,2.566]],["body/classes/UsernameTaken.html",[3,0.077,4,0.066,5,0.072,9,0.131,10,0.009,12,0.738,21,0.141,22,0.379,27,0.005,28,0.006,29,0.005,33,1.758,41,0.376,44,0.775,45,0.432,68,4.212,121,1.719,269,0.853,291,0.505,378,2.395,402,3.648,406,3.006,408,3.332,413,2.257,419,3.006,516,2.47,641,2.194,675,2.395,978,3.058,979,3.343,981,2.838,982,4.546,983,3.515,984,3.058,985,3.515,986,3.058,987,2.938,988,3.515,989,3.343,990,3.058,991,3.192,992,2.395,993,2.729,994,2.729,995,3.956,996,3.515,997,3.058,998,3.515,999,3.515,2127,5.277]],["title/controllers/UsersController.html",[0,2.072,2128,3.319]],["body/controllers/UsersController.html",[0,1.397,2,1.397,3,0.044,4,0.038,5,0.048,7,1.891,9,0.212,10,0.009,11,1.988,12,0.417,17,2.445,21,0.05,22,0.133,24,1.915,25,2.066,26,2.889,27,0.003,28,0.004,29,0.003,34,1.806,35,0.358,36,1.304,37,1.921,41,0.501,43,1.921,44,1.075,45,0.575,46,1.603,48,2.011,49,2.059,54,1.823,56,2.146,57,3.716,60,1.397,61,0.96,63,1.921,64,2.576,78,1.73,118,1.896,121,0.594,154,1.491,168,1.544,184,3.681,233,3.308,256,2.675,278,1.086,283,1.355,291,0.673,292,2.318,300,1.086,328,1.73,329,2.102,330,1.891,378,2.07,417,3.095,440,2.889,441,3.038,449,3.681,456,2.409,459,2.102,461,2.102,462,2.409,463,1.806,472,3.686,473,2.238,474,2.238,475,2.238,477,2.238,579,1.896,628,3.506,652,3.208,677,4.031,738,2.102,912,1.443,914,1.806,929,4.646,986,2.644,987,2.54,989,1.891,997,1.73,1035,2.102,1039,1.988,1040,2.102,1041,2.102,1042,1.73,1192,2.358,1235,2.759,1238,2.638,1241,2.238,1242,2.638,1245,2.644,1246,2.238,1261,2.238,1276,2.638,1294,2.638,1295,1.891,1296,2.238,1298,2.638,1528,3.681,1745,2.238,1761,4.891,1966,2.238,1970,2.409,2034,4.646,2069,2.638,2128,3.42,2129,2.638,2130,4.031,2131,4.561,2132,4.031,2133,2.638,2134,2.986,2135,4.561,2136,2.986,2137,2.986,2138,2.986,2139,2.986,2140,2.986,2141,2.986,2142,2.986,2143,2.986,2144,2.986,2145,2.986,2146,2.986,2147,2.986,2148,2.986,2149,2.986,2150,2.986,2151,4.891,2152,2.638,2153,2.638,2154,2.986,2155,2.986,2156,2.409,2157,2.638,2158,2.986,2159,2.986,2160,2.986,2161,2.986,2162,2.986,2163,2.986,2164,2.986,2165,2.986,2166,2.986,2167,2.986,2168,2.986,2169,2.986,2170,2.986,2171,2.986,2172,4.561,2173,2.986,2174,2.986,2175,2.986,2176,2.986,2177,2.638,2178,2.986,2179,2.986,2180,2.986,2181,2.986,2182,2.986,2183,2.986,2184,2.986,2185,2.986,2186,2.986,2187,2.986,2188,2.986,2189,2.986,2190,2.986,2191,2.986,2192,2.986,2193,2.986,2194,2.986,2195,2.986]],["title/modules/UsersModule.html",[83,1.295,135,3.117]],["body/modules/UsersModule.html",[2,2.861,3,0.065,4,0.056,5,0.047,9,0.217,10,0.009,12,0.625,17,4.721,21,0.074,22,0.2,27,0.004,28,0.006,29,0.004,44,0.898,83,2.037,85,2.16,86,2.233,87,2.396,88,2.396,89,2.396,90,3.733,91,3.733,95,3.276,96,1.808,97,2.396,129,5.39,131,5.126,134,5.126,135,6.312,138,3.542,144,3.878,145,2.396,147,3.147,148,1.969,158,3.95,162,3.608,165,3.608,227,2.591,228,2.832,229,2.489,233,1.759,291,0.428,324,3.403,503,3.352,962,2.977,965,2.832,1007,2.977,1025,4.583,1313,5.221,1320,3.95,1323,3.95,1324,3.352,1325,3.95,2074,4.583,2128,5.222,2153,3.95,2156,3.608,2196,3.95,2197,4.47,2198,3.95,2199,3.95,2200,4.47,2201,4.47,2202,3.95,2203,3.95,2204,4.47,2205,4.47]],["title/injectables/UsersService.html",[17,2.373,30,1.357]],["body/injectables/UsersService.html",[3,0.034,4,0.03,5,0.025,9,0.199,10,0.009,12,0.331,17,2.038,21,0.039,22,0.106,24,2.207,25,2.382,26,3.018,27,0.002,28,0.004,29,0.002,30,1.165,31,1.108,35,0.284,36,1.086,37,2.299,41,0.497,43,1.903,44,1.024,45,0.604,46,1.589,48,1.917,49,2.065,54,2.737,56,1.921,60,3.368,61,2.426,63,1.742,121,0.757,148,1.042,233,3.218,249,1.182,256,1.144,278,1.383,283,2.476,291,0.811,322,1.144,336,3.162,346,2.203,378,1.725,409,1.837,425,2.116,439,2.85,440,2.408,441,3.173,465,3.3,506,2.676,508,4.248,511,2.299,514,4.248,516,2.23,521,2.85,527,1.774,579,3.137,626,3.3,627,1.91,635,3.354,641,2.485,652,3.698,669,1.774,670,4.822,671,3.845,673,3.785,674,4.822,675,2.162,676,3.068,691,3.841,698,2.091,714,2.091,715,2.091,726,1.499,738,2.676,777,3.572,778,3.3,795,2.091,800,2.091,808,4.21,814,3.359,822,1.91,823,2.091,978,2.203,984,2.761,990,3.162,991,2.882,995,2.203,1007,2.532,1011,5.15,1146,1.182,1192,2.464,1235,3.3,1250,2.091,1357,3.359,1529,2.761,1955,2.85,1956,2.091,2036,5.639,2130,3.359,2132,3.359,2133,3.359,2152,2.091,2156,1.91,2157,2.091,2202,2.091,2203,2.091,2206,2.091,2207,4.764,2208,2.366,2209,2.366,2210,3.801,2211,2.366,2212,3.801,2213,2.366,2214,2.366,2215,2.366,2216,3.801,2217,5.456,2218,2.366,2219,2.366,2220,2.366,2221,1.91,2222,3.801,2223,3.801,2224,2.366,2225,1.91,2226,2.366,2227,2.366,2228,2.366,2229,2.366,2230,5.976,2231,3.801,2232,3.801,2233,2.366,2234,2.366,2235,3.801,2236,2.366,2237,2.366,2238,2.366,2239,2.366,2240,2.366,2241,2.366,2242,2.366,2243,2.366,2244,2.366,2245,2.366,2246,2.366,2247,4.764]],["title/interfaces/WriteOptions.html",[549,1.032,1939,3.319]],["body/interfaces/WriteOptions.html",[3,0.08,4,0.069,5,0.082,9,0.191,10,0.009,21,0.091,27,0.005,28,0.007,29,0.005,35,0.656,45,0.629,46,1.847,57,3.89,81,3.844,104,4.346,256,2.644,273,1.665,285,5.136,291,0.736,300,1.991,353,2.41,549,1.275,551,2.153,553,3.466,957,4.049,1261,6.079,1295,5.136,1296,6.079,1523,5.125,1692,4.103,1931,6.8,1939,5.238,1943,4.416,1947,4.416,1966,4.103,1967,6.173,2011,4.835,2047,4.835,2177,7.164,2248,4.835]],["title/coverage.html",[2249,4.9]],["body/coverage.html",[0,2.647,1,1.216,5,0.017,6,1.433,10,0.009,13,1.08,15,1.216,17,0.869,22,0.398,27,0.002,28,0.003,29,0.002,30,2.187,32,1.433,34,0.981,37,0.758,45,0.133,51,1.027,61,0.521,65,1.216,66,1.433,67,1.216,83,1.547,118,1.514,120,1.433,136,1.08,137,2.241,160,1.216,167,1.309,169,1.309,233,0.638,268,1.546,270,2.939,272,1.142,291,0.506,331,1.309,333,0.903,335,1.309,354,1.216,383,2.082,400,0.981,401,3.23,411,0.981,414,0.981,418,0.981,420,0.981,427,1.433,437,1.216,438,1.433,445,1.216,463,0.981,465,0.981,469,1.216,472,1.08,505,1.433,549,1.804,550,1.216,552,3.037,553,3.35,558,0.94,560,1.142,561,1.093,564,1.216,565,1.433,577,1.216,582,1.216,585,1.027,593,1.216,597,1.216,607,1.08,609,1.309,617,1.309,620,1.309,622,1.216,626,0.981,628,1.027,633,1.216,641,0.674,694,2.939,712,0.903,713,0.94,716,1.309,718,1.309,719,1.309,750,1.433,765,1.849,766,1.216,769,1.849,770,1.216,775,1.433,778,0.981,791,0.94,792,0.94,793,0.94,797,1.309,829,1.142,830,1.309,833,1.433,847,1.142,848,1.433,876,4.518,883,1.433,884,1.433,910,1.216,911,1.433,912,0.784,913,2.241,921,1.142,925,1.216,926,1.433,927,1.433,929,1.216,930,1.433,931,2.731,934,1.142,935,2.241,936,0.981,942,1.142,960,1.142,978,0.94,979,3.35,984,0.94,986,0.94,990,0.94,995,0.94,997,0.94,1000,1.433,1007,1.849,1008,2.241,1009,2.241,1025,1.216,1032,0.81,1033,2.939,1034,1.142,1073,1.216,1079,1.216,1081,1.216,1149,0.94,1150,3.35,1153,0.94,1155,0.903,1157,0.903,1159,0.94,1162,0.94,1163,1.433,1181,0.94,1182,3.35,1190,0.94,1194,0.94,1197,0.94,1198,0.94,1200,0.94,1204,1.216,1205,1.433,1225,1.216,1235,0.981,1239,1.309,1241,1.216,1243,1.216,1245,0.94,1314,1.142,1326,1.433,1342,1.433,1368,1.309,1370,1.142,1371,1.08,1449,1.433,1450,2.241,1452,2.426,1456,1.433,1457,1.433,1459,1.142,1460,2.731,1461,2.731,1463,1.142,1472,1.216,1477,1.216,1478,1.433,1511,1.433,1512,1.142,1514,1.216,1515,1.433,1516,1.433,1517,1.433,1518,1.309,1523,1.08,1524,1.433,1525,2.241,1529,0.94,1530,3.35,1537,1.309,1538,1.433,1539,1.309,1540,1.433,1563,1.216,1564,3.966,1565,2.939,1586,1.216,1587,2.939,1590,1.309,1592,1.309,1594,1.433,1603,1.142,1608,1.216,1615,1.027,1621,1.309,1622,1.216,1627,1.142,1640,2.731,1646,1.433,1649,1.433,1661,1.08,1663,1.216,1669,1.433,1712,2.731,1715,1.142,1738,1.433,1745,1.216,1746,1.433,1762,2.241,1763,2.241,1772,4.563,1779,1.309,1781,1.309,1783,1.309,1788,1.309,1790,1.309,1792,1.309,1820,1.433,1834,1.433,1839,1.433,1842,1.433,1851,1.216,1852,1.433,1885,1.433,1901,1.433,1913,1.309,1914,1.216,1922,1.433,1925,1.433,1939,1.216,1948,1.216,1952,1.216,1955,1.216,2013,1.433,2014,1.433,2033,1.433,2034,1.216,2035,1.433,2046,1.433,2048,2.241,2074,1.216,2098,2.939,2099,2.939,2104,1.309,2111,1.433,2128,1.216,2129,1.433,2206,1.433,2221,1.309,2225,1.309,2248,1.433,2249,1.309,2250,1.622,2251,1.622,2252,8.788,2253,8.818,2254,1.433,2255,1.433,2256,1.433,2257,1.433,2258,2.454,2259,1.433,2260,1.433,2261,1.433,2262,6.458,2263,6.659,2264,8.66,2265,5.289,2266,3.218,2267,1.433,2268,1.433,2269,2.777,2270,4.85,2271,2.777,2272,5.964,2273,5.655,2274,2.454,2275,2.454,2276,1.433,2277,1.433,2278,1.433,2279,1.433,2280,2.777,2281,2.777,2282,1.622,2283,2.454,2284,2.454,2285,2.454,2286,2.454,2287,1.433,2288,1.433,2289,1.433,2290,1.433,2291,1.433,2292,1.433,2293,1.433,2294,1.433,2295,1.622,2296,1.622]],["title/dependencies.html",[86,2.664,2297,3.683]],["body/dependencies.html",[5,0.051,10,0.009,12,0.679,22,0.289,27,0.005,28,0.006,29,0.005,78,4.211,86,2.426,105,4.292,107,3.91,108,3.92,140,4.292,142,3.642,145,2.604,148,2.139,151,4.846,152,4.846,154,2.426,155,3.642,318,2.204,320,2.604,322,2.347,417,2.426,584,2.938,602,2.938,604,3.642,605,4.292,606,4.292,840,2.938,842,3.92,1022,3.42,1470,3.92,1471,3.92,1491,3.92,1686,3.642,1687,4.292,1786,3.642,1943,3.92,1944,4.292,2065,4.292,2151,4.292,2298,4.857,2299,4.857,2300,4.857,2301,7.745,2302,4.857,2303,4.857,2304,4.857,2305,4.857,2306,4.857,2307,4.857,2308,4.857,2309,4.857,2310,4.857,2311,4.857,2312,6.464,2313,4.857,2314,4.857,2315,4.857,2316,4.857,2317,4.857,2318,4.857,2319,4.857,2320,4.857,2321,4.857,2322,4.857,2323,4.857,2324,4.857,2325,4.857,2326,4.857,2327,4.857,2328,4.292,2329,7.265,2330,4.857,2331,4.857,2332,4.857,2333,4.857,2334,4.857,2335,4.857,2336,4.857,2337,4.857,2338,4.857,2339,4.857,2340,4.857,2341,4.857,2342,4.857,2343,4.857,2344,4.857,2345,4.857,2346,4.857,2347,4.857,2348,4.857,2349,4.857]],["title/miscellaneous/enumerations.html",[2350,2.593,2351,4.712]],["body/miscellaneous/enumerations.html",[10,0.008,27,0.006,28,0.008,29,0.006,35,0.812,328,4.616,856,4.225,2350,4.77,2351,5.987,2352,6.775,2353,7.964,2354,6.775,2355,6.775,2356,6.775,2357,6.775,2358,6.775,2359,6.775,2360,6.775]],["title/index.html",[35,0.441,2361,3.255,2362,3.255]],["body/index.html",[4,0.069,10,0.009,27,0.005,28,0.007,29,0.005,202,4.404,425,3.039,992,2.477,1539,4.404,1579,3.842,1730,3.842,1927,4.822,2249,4.404,2328,6.792,2363,5.457,2364,5.457,2365,6.974,2366,5.457,2367,5.457,2368,5.457,2369,5.457,2370,5.457,2371,5.457,2372,5.457,2373,4.822,2374,5.457,2375,5.457,2376,5.457,2377,8.702,2378,5.457,2379,5.457,2380,5.457,2381,8.56,2382,5.457,2383,5.457,2384,6.974,2385,5.457,2386,5.457,2387,5.457,2388,6.974,2389,6.974,2390,5.457,2391,5.457,2392,5.457,2393,6.974,2394,6.974,2395,5.457,2396,5.457,2397,5.457,2398,5.457,2399,5.457,2400,4.404,2401,5.457,2402,5.457,2403,5.457,2404,5.457,2405,5.457,2406,5.457,2407,5.457,2408,5.457,2409,5.457,2410,5.457,2411,5.457,2412,5.457,2413,5.457,2414,5.457,2415,4.404]],["title/license.html",[2361,3.255,2362,3.255,2415,2.972]],["body/license.html",[4,0.091,5,0.052,9,0.055,10,0.008,27,0.003,28,0.002,29,0.002,41,0.09,44,0.185,61,1.33,68,2.545,116,1.112,233,0.495,260,1.483,268,0.7,271,0.7,287,0.98,306,0.797,343,0.838,380,1.797,385,2.646,415,0.838,416,0.838,423,1.483,439,3.101,447,1.112,534,1.112,645,1.797,732,1.112,757,1.347,847,1.567,858,0.65,894,1.112,897,3.689,909,2.713,914,2.765,962,0.838,1002,1.797,1003,1.015,1067,1.112,1085,0.943,1101,1.112,1113,2.416,1192,0.65,1263,1.015,1334,0.943,1398,1.567,1399,1.967,1556,1.112,1716,0.943,1728,0.943,1730,2.548,1782,1.015,2037,1.015,2084,1.112,2350,0.886,2373,1.967,2400,2.416,2415,7.078,2416,3.618,2417,6.935,2418,3.618,2419,1.258,2420,2.226,2421,8.073,2422,7.045,2423,3.618,2424,4.571,2425,1.258,2426,1.258,2427,1.258,2428,8.147,2429,8.215,2430,1.258,2431,2.994,2432,5.264,2433,1.258,2434,4.571,2435,1.258,2436,4.136,2437,1.258,2438,1.258,2439,7.328,2440,7.851,2441,2.994,2442,2.994,2443,6.01,2444,4.136,2445,4.943,2446,7.991,2447,4.571,2448,1.258,2449,4.943,2450,1.258,2451,1.258,2452,1.258,2453,4.571,2454,6.206,2455,6.381,2456,2.994,2457,6.01,2458,3.618,2459,8.111,2460,7.241,2461,1.258,2462,1.258,2463,6.01,2464,1.258,2465,4.571,2466,1.258,2467,1.258,2468,1.258,2469,1.258,2470,1.258,2471,2.994,2472,2.226,2473,2.226,2474,4.571,2475,4.571,2476,2.994,2477,2.994,2478,1.258,2479,6.54,2480,2.226,2481,1.258,2482,1.258,2483,1.258,2484,1.258,2485,1.258,2486,1.258,2487,1.258,2488,1.258,2489,5.791,2490,5.264,2491,1.258,2492,4.136,2493,5.264,2494,1.258,2495,2.226,2496,2.226,2497,1.258,2498,1.258,2499,2.226,2500,2.226,2501,1.258,2502,2.994,2503,2.994,2504,1.258,2505,4.136,2506,1.258,2507,1.258,2508,4.571,2509,1.258,2510,1.258,2511,1.258,2512,1.258,2513,1.258,2514,1.258,2515,1.258,2516,1.258,2517,1.258,2518,1.258,2519,2.226,2520,1.258,2521,1.258,2522,1.258,2523,2.226,2524,2.226,2525,1.258,2526,1.258,2527,2.994,2528,3.618,2529,2.994,2530,1.258,2531,1.258,2532,1.258,2533,1.258,2534,1.258,2535,4.571,2536,2.994,2537,2.226,2538,1.258,2539,1.258,2540,1.258,2541,2.226,2542,4.136,2543,1.258,2544,1.258,2545,1.258,2546,1.258,2547,3.618,2548,2.226,2549,5.545,2550,1.258,2551,1.258,2552,3.618,2553,1.258,2554,2.994,2555,1.258,2556,2.226,2557,5.545,2558,6.01,2559,2.994,2560,2.994,2561,2.226,2562,1.258,2563,3.618,2564,4.136,2565,2.226,2566,4.571,2567,1.258,2568,1.258,2569,1.258,2570,2.994,2571,1.258,2572,1.258,2573,1.258,2574,1.258,2575,2.994,2576,1.258,2577,4.943,2578,1.258,2579,1.258,2580,1.258,2581,1.258,2582,1.258,2583,1.258,2584,2.994,2585,4.571,2586,2.226,2587,2.994,2588,1.258,2589,2.994,2590,1.258,2591,2.226,2592,1.258,2593,2.226,2594,2.226,2595,2.994,2596,1.258,2597,1.258,2598,2.226,2599,1.258,2600,1.258,2601,1.258,2602,1.258,2603,2.994,2604,1.258,2605,2.226,2606,2.994,2607,1.258,2608,1.258,2609,1.258,2610,1.258,2611,2.226,2612,2.994,2613,2.226,2614,1.258,2615,1.258,2616,2.226,2617,4.136,2618,3.618,2619,2.994,2620,2.994,2621,2.226,2622,3.618,2623,1.258,2624,2.994,2625,1.258,2626,1.258,2627,2.226,2628,2.226,2629,3.618,2630,1.258,2631,1.258,2632,3.618,2633,1.258,2634,1.258,2635,2.226,2636,1.258,2637,1.258,2638,4.571,2639,1.258,2640,2.226,2641,5.264,2642,5.545,2643,1.258,2644,1.258,2645,1.258,2646,1.258,2647,1.258,2648,1.258,2649,1.258,2650,2.226,2651,1.258,2652,2.994,2653,1.258,2654,2.226,2655,1.258,2656,1.258,2657,1.258,2658,1.258,2659,1.258,2660,1.258,2661,1.258,2662,1.258,2663,2.226,2664,1.258,2665,2.994,2666,1.258,2667,2.226,2668,2.994,2669,3.618,2670,1.258,2671,1.258,2672,1.258,2673,1.258,2674,1.258,2675,1.258,2676,1.258,2677,1.258,2678,1.258,2679,1.258,2680,1.258,2681,1.258,2682,1.258,2683,1.258,2684,3.618,2685,2.226,2686,2.226,2687,1.258,2688,2.226,2689,2.226,2690,1.258,2691,1.258,2692,1.258,2693,1.258,2694,1.258,2695,1.258,2696,2.226,2697,1.258,2698,1.258,2699,3.618,2700,2.994,2701,1.967,2702,1.258,2703,1.258,2704,1.258,2705,1.258,2706,2.226,2707,1.258,2708,1.258,2709,2.226,2710,1.258,2711,3.618,2712,2.994,2713,1.258,2714,1.258,2715,1.258,2716,2.226,2717,1.258,2718,1.258,2719,1.258,2720,2.226,2721,1.258,2722,1.258,2723,1.258,2724,1.258,2725,1.258,2726,5.791,2727,1.258,2728,1.258,2729,1.258,2730,1.258,2731,2.226,2732,1.258,2733,1.258,2734,1.258,2735,2.994,2736,1.258,2737,1.258,2738,1.258,2739,1.258,2740,1.258,2741,1.258,2742,1.258,2743,1.258,2744,1.258,2745,1.258,2746,1.258,2747,1.258,2748,1.258,2749,1.258,2750,1.258,2751,1.258,2752,1.258,2753,1.258,2754,1.258,2755,1.258,2756,1.258,2757,1.258,2758,1.258,2759,1.258,2760,1.258,2761,2.226,2762,1.258,2763,1.258,2764,1.258,2765,2.226,2766,2.226,2767,4.136,2768,1.258,2769,1.258,2770,1.258,2771,1.258,2772,1.258,2773,1.258,2774,1.258,2775,1.258,2776,1.258,2777,1.258,2778,1.258,2779,1.258,2780,1.258,2781,1.258,2782,1.258,2783,2.226,2784,1.258,2785,1.258,2786,1.258,2787,1.258,2788,2.994,2789,1.258,2790,1.258,2791,2.226,2792,1.258,2793,1.258,2794,1.258,2795,1.258,2796,1.258,2797,1.258,2798,1.258,2799,1.258,2800,1.258,2801,1.258,2802,1.258,2803,1.258,2804,1.258,2805,1.258,2806,1.258,2807,1.258,2808,1.258,2809,1.258,2810,1.258,2811,2.226,2812,1.258,2813,1.258,2814,1.258,2815,1.258,2816,1.258,2817,1.258,2818,1.258,2819,1.258,2820,1.258,2821,1.258,2822,1.258,2823,3.618,2824,2.226,2825,1.258,2826,1.258,2827,1.258,2828,1.258,2829,1.258,2830,1.258,2831,2.994,2832,1.258,2833,1.258,2834,1.258,2835,1.258,2836,1.258,2837,1.258,2838,1.258,2839,2.226,2840,1.258,2841,1.258,2842,1.258,2843,1.258,2844,1.258,2845,1.258,2846,1.258,2847,1.258,2848,1.258]],["title/modules.html",[85,2.934]],["body/modules.html",[10,0.007,27,0.006,28,0.007,29,0.006,84,4.294,85,2.947,124,4.573,128,4.294,129,4.062,130,4.294,131,3.863,132,4.294,133,4.294,134,3.863,135,4.294,663,6.425,1113,4.922,1313,4.062,2400,7.365,2849,9.126,2850,9.172,2851,6.099]],["title/overview.html",[2852,5.365]],["body/overview.html",[2,1.725,10,0.009,13,5.223,17,4.204,27,0.003,28,0.005,29,0.003,31,1.725,83,1.078,84,5.354,85,1.781,86,1.841,87,1.975,88,1.975,89,1.975,90,1.975,91,1.975,92,3.256,93,3.256,94,3.256,95,2.86,96,1.49,97,1.975,124,6.784,125,3.256,126,3.256,127,3.256,128,5.852,129,5.451,130,5.522,131,5.39,132,4.415,133,5.991,134,5.087,135,6.238,136,4.578,269,0.596,465,4.744,497,3.256,498,3.256,499,3.256,551,1.45,607,5.223,626,4.744,693,2.974,758,3.256,760,3.256,761,3.256,778,4.744,826,3.256,828,3.256,829,4.415,1085,2.763,1235,4.744,1245,4.545,1309,3.256,1310,3.256,1311,3.256,1312,3.256,1313,5.223,1314,4.415,1600,3.256,1601,3.256,1602,3.256,1603,4.415,1880,3.256,1881,3.256,1882,3.256,1905,3.256,1906,3.256,1907,3.256,2196,3.256,2198,3.256,2199,3.256,2852,3.256,2853,3.685,2854,3.256,2855,3.685,2856,3.685,2857,3.685]],["title/miscellaneous/variables.html",[2350,2.593,2858,4.712]],["body/miscellaneous/variables.html",[3,0.021,10,0.009,27,0.001,28,0.002,29,0.001,35,0.173,37,0.687,40,1.085,45,0.601,46,0.574,49,0.657,54,0.477,56,1.981,61,1.596,63,1.355,64,0.602,72,2.324,81,1.258,96,2.492,104,1.35,118,1.389,136,1.677,137,1.168,154,0.723,167,2.032,168,2.759,169,2.032,170,1.279,233,1.315,270,1.168,281,1.35,291,0.832,300,0.527,317,1.279,318,1.143,321,1.773,328,0.839,331,2.032,333,1.402,335,2.032,336,4.311,337,1.279,338,2.032,339,1.279,340,1.279,341,1.279,349,4.192,354,1.888,355,1.279,410,1.93,463,2.021,472,1.677,480,0.876,508,2.116,516,1.178,561,1.315,568,1.459,579,2.649,584,0.876,585,0.917,602,0.876,609,2.032,617,2.032,620,2.032,633,1.085,641,2.064,645,2.032,663,1.019,665,1.085,673,3.379,675,3.236,680,1.168,681,1.168,683,1.168,694,1.168,703,0.917,716,2.032,718,2.696,719,2.696,722,0.876,756,2.021,765,1.677,766,1.888,769,1.677,770,1.888,797,2.032,856,4.333,858,3.063,865,1.279,876,0.699,909,1.085,921,1.773,960,1.773,991,0.876,992,2.797,1002,4.305,1003,4.305,1007,1.677,1008,1.168,1009,2.032,1025,1.888,1026,1.279,1033,1.168,1042,1.936,1073,1.888,1078,2.032,1079,1.888,1080,1.279,1081,1.888,1082,1.279,1083,1.279,1084,1.279,1085,1.085,1146,0.723,1186,0.806,1239,2.032,1241,1.888,1263,3.223,1289,2.352,1295,2.53,1334,1.085,1368,2.032,1370,1.773,1398,1.019,1411,1.019,1433,1.888,1436,1.888,1437,1.085,1452,3.014,1460,1.085,1461,1.888,1472,1.888,1554,1.279,1555,1.168,1563,1.085,1564,1.888,1565,2.696,1571,2.032,1573,4.007,1574,1.279,1576,1.888,1577,1.888,1578,1.888,1579,1.773,1580,2.032,1581,3.722,1582,4.007,1583,2.032,1584,2.032,1585,2.032,1586,1.085,1587,2.696,1590,2.032,1591,1.279,1592,2.032,1595,2.505,1621,2.696,1622,2.505,1659,4.994,1661,3.553,1681,4.305,1686,4,1712,1.085,1713,2.995,1715,1.019,1716,2.505,1719,1.168,1720,1.085,1721,2.032,1722,1.168,1723,1.168,1724,1.168,1725,1.168,1726,1.168,1727,1.168,1728,1.085,1729,1.168,1730,1.019,1731,1.168,1732,1.168,1733,1.168,1734,1.168,1735,1.168,1736,1.168,1737,1.168,1762,1.168,1763,2.032,1770,1.279,1772,1.168,1779,2.032,1780,1.279,1781,2.032,1782,1.168,1783,2.032,1784,2.952,1785,2.952,1786,1.085,1787,1.279,1788,2.032,1789,1.279,1790,2.032,1791,1.279,1792,2.032,1793,1.279,1913,2.696,1914,2.505,1955,1.888,2020,2.952,2048,1.168,2074,1.888,2075,1.279,2098,1.168,2099,2.696,2103,2.225,2104,2.032,2109,1.279,2221,2.032,2225,2.032,2254,1.279,2255,2.225,2256,1.279,2257,2.225,2258,2.225,2259,2.225,2260,2.225,2261,1.279,2266,1.279,2267,2.225,2268,2.225,2274,2.225,2275,3.529,2276,1.279,2277,2.225,2278,1.279,2279,2.225,2283,1.279,2284,1.279,2285,2.225,2286,3.529,2287,2.225,2288,1.279,2289,1.279,2290,1.279,2291,1.279,2292,1.279,2293,1.279,2294,1.279,2350,1.019,2701,1.279,2854,1.279,2858,1.279,2859,2.518,2860,1.447,2861,2.518,2862,1.447,2863,1.447,2864,1.447,2865,1.447,2866,1.447,2867,3.341,2868,2.518,2869,1.447,2870,3.994,2871,3.341,2872,2.518,2873,3.341,2874,2.518,2875,1.447,2876,1.447,2877,3.994,2878,4.965,2879,2.518,2880,1.447,2881,2.518,2882,1.447,2883,1.447,2884,1.447,2885,2.518,2886,1.447,2887,1.447,2888,1.447,2889,1.447,2890,1.447,2891,1.447,2892,1.447,2893,1.447,2894,1.447,2895,1.447,2896,1.447,2897,1.447,2898,1.447,2899,2.518,2900,2.518,2901,3.994,2902,5.335,2903,3.341,2904,3.994,2905,3.994,2906,5.335,2907,5.335,2908,1.447,2909,2.518,2910,3.341,2911,2.518,2912,3.341,2913,1.447,2914,1.447,2915,1.447,2916,1.447,2917,1.447,2918,1.447,2919,1.447,2920,1.447,2921,1.447,2922,1.447,2923,1.447,2924,1.447,2925,2.518,2926,1.447,2927,1.447,2928,1.447,2929,1.447,2930,1.447,2931,1.447,2932,1.447,2933,1.447,2934,1.447,2935,1.447,2936,1.447,2937,1.447,2938,1.447,2939,1.447,2940,3.994,2941,1.447,2942,3.341,2943,1.447,2944,1.447,2945,3.994,2946,1.447,2947,1.447,2948,1.447,2949,1.447,2950,1.447,2951,1.447,2952,1.447,2953,1.447,2954,1.447,2955,1.447,2956,1.447,2957,1.447,2958,1.447,2959,1.447,2960,1.447,2961,1.447,2962,1.447,2963,1.447,2964,1.447,2965,1.447,2966,1.447,2967,1.447,2968,1.447,2969,1.447,2970,1.447,2971,1.447]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":876,"title":{},"body":{"classes/Counter.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"modules/StorageModule.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0).length",{"_index":1140,"title":{},"body":{"classes/Entry.html":{}}}],["0.1.13",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["0.26.0",{"_index":2342,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["0.7.21",{"_index":2345,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1503,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.9.0",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2253,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2281,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2273,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["0]+/g",{"_index":1591,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["1).join",{"_index":1423,"title":{},"body":{"injectables/FilesService.html":{}}}],["1..n).ext",{"_index":1427,"title":{},"body":{"injectables/FilesService.html":{}}}],["1.1",{"_index":2420,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":2481,"title":{},"body":{"license.html":{}}}],["1.10.0",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["1.12",{"_index":2501,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":2510,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":2512,"title":{},"body":{"license.html":{}}}],["1.17.1",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2430,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":2437,"title":{},"body":{"license.html":{}}}],["1.3.6",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2438,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":2452,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":2464,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":2469,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":2470,"title":{},"body":{"license.html":{}}}],["1/19",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2080,"title":{},"body":{"classes/User.html":{}}}],["10.1",{"_index":2821,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":2593,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":2824,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":2837,"title":{},"body":{"license.html":{}}}],["100",{"_index":1435,"title":{},"body":{"injectables/FilesService.html":{}}}],["1024",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":2853,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2855,"title":{},"body":{"overview.html":{}}}],["16",{"_index":314,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["17.1.1",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":295,"title":{},"body":{"classes/Application.html":{}}}],["1][field",{"_index":1737,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":1085,"title":{},"body":{"classes/Entry.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2).join(path.sep",{"_index":976,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["2.0",{"_index":2418,"title":{},"body":{"license.html":{}}}],["2.1",{"_index":2505,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":2569,"title":{},"body":{"license.html":{}}}],["2.1.2",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":2555,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":2562,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":2588,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":2596,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":2602,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":2610,"title":{},"body":{"license.html":{}}}],["20",{"_index":2857,"title":{},"body":{"overview.html":{}}}],["200",{"_index":1507,"title":{},"body":{"controllers/HealthController.html":{}}}],["2000",{"_index":1499,"title":{},"body":{"controllers/HealthController.html":{}}}],["25",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{}}}],["255",{"_index":1055,"title":{},"body":{"classes/Entry.html":{}}}],["3",{"_index":372,"title":{},"body":{"classes/Application.html":{}}}],["3.0",{"_index":2507,"title":{},"body":{"license.html":{}}}],["3.0.0",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2339,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":2612,"title":{},"body":{"license.html":{}}}],["3.1.5",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["3.18.0",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":2613,"title":{},"body":{"license.html":{}}}],["3.2.0",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2595,"title":{},"body":{"license.html":{}}}],["3.3.3",{"_index":2346,"title":{},"body":{"dependencies.html":{}}}],["3.4",{"_index":2587,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":2649,"title":{},"body":{"license.html":{}}}],["30",{"_index":2707,"title":{},"body":{"license.html":{}}}],["300",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["30d",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":305,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["4",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":2344,"title":{},"body":{"dependencies.html":{}}}],["4.17.3",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2349,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":2685,"title":{},"body":{"license.html":{}}}],["5.10.2",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":2709,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":2727,"title":{},"body":{"license.html":{}}}],["5.3.0",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":534,"title":{},"body":{"injectables/ApplicationsService.html":{},"license.html":{}}}],["51",{"_index":379,"title":{},"body":{"classes/Application.html":{}}}],["512",{"_index":2179,"title":{},"body":{"controllers/UsersController.html":{}}}],["58",{"_index":2856,"title":{},"body":{"overview.html":{}}}],["6.4.11",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":2341,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":447,"title":{},"body":{"controllers/ApplicationsController.html":{},"license.html":{}}}],["64",{"_index":1018,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["65535",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":2854,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":2176,"title":{},"body":{"controllers/UsersController.html":{}}}],["9]+\\\\))+\\\\.${extension",{"_index":1430,"title":{},"body":{"injectables/FilesService.html":{}}}],["_",{"_index":399,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["_createbusboy",{"_index":1926,"title":{},"body":{"injectables/StorageService.html":{}}}],["_createbusboy(req",{"_index":1930,"title":{},"body":{"injectables/StorageService.html":{}}}],["_encoding",{"_index":2021,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_getdestinationondisk",{"_index":937,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getdestinationondisk(id",{"_index":944,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getlocationondisk",{"_index":938,"title":{},"body":{"classes/DiskStorage.html":{}}}],["_getlocationondisk(id",{"_index":946,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["_getmetadata",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_getmetadata(key",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["_handleapikey",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handleapikey(req",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_handlesession(req",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_id",{"_index":1411,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/ISession.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["_renamewithindex",{"_index":1343,"title":{},"body":{"injectables/FilesService.html":{}}}],["_renamewithindex(filename",{"_index":1347,"title":{},"body":{"injectables/FilesService.html":{}}}],["_req",{"_index":2169,"title":{},"body":{"controllers/UsersController.html":{}}}],["_res",{"_index":75,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["_size",{"_index":2016,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform",{"_index":2017,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_transform(chunk",{"_index":2019,"title":{},"body":{"classes/StreamMeter.html":{}}}],["_validateparent",{"_index":1344,"title":{},"body":{"injectables/FilesService.html":{}}}],["_validateparent(entry",{"_index":1349,"title":{},"body":{"injectables/FilesService.html":{}}}],["_value",{"_index":860,"title":{},"body":{"classes/Counter.html":{}}}],["ability",{"_index":2805,"title":{},"body":{"license.html":{}}}],["abort",{"_index":1974,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(err",{"_index":2001,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(error",{"_index":1988,"title":{},"body":{"injectables/StorageService.html":{}}}],["abort(new",{"_index":1998,"title":{},"body":{"injectables/StorageService.html":{}}}],["aborting",{"_index":1971,"title":{},"body":{"injectables/StorageService.html":{}}}],["above",{"_index":2570,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2579,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":966,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["absolutely",{"_index":2655,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1987,"title":{},"body":{"injectables/StorageService.html":{}}}],["acceptfile",{"_index":1967,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["accessors",{"_index":855,"title":{},"body":{"classes/Counter.html":{},"classes/StreamMeter.html":{}}}],["account",{"_index":410,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["account/${activation.token",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["account/:token",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{}}}],["accurate",{"_index":2848,"title":{},"body":{"license.html":{}}}],["action",{"_index":1784,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["action.decorator",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["action.decorator.ts",{"_index":2259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2719,"title":{},"body":{"license.html":{}}}],["activate",{"_index":756,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["activateaccount",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activateaccount(@param(\"token",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["activateaccount(token",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activated",{"_index":1747,"title":{},"body":{"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["activation",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["activation.deleteone",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["activation.email.ts",{"_index":2279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.mjml",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activation.schema",{"_index":772,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["activation.schema.ts",{"_index":2099,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activation.schema.ts:21",{"_index":2101,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:22",{"_index":2108,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:28",{"_index":2102,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:35",{"_index":2105,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:44",{"_index":2106,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.schema.ts:54",{"_index":2107,"title":{},"body":{"classes/UserActivation.html":{}}}],["activation.uid",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["actually",{"_index":2083,"title":{},"body":{"classes/User.html":{}}}],["add",{"_index":1728,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["addition",{"_index":2483,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2564,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":2634,"title":{},"body":{"license.html":{}}}],["address",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["admin.controller",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/queues",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":15,"title":{"injectables/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"coverage.html":{}}}],["adminmiddleware",{"_index":65,"title":{"injectables/AdminMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":13,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["affect",{"_index":2674,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2506,"title":{},"body":{"license.html":{}}}],["again",{"_index":1555,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["against",{"_index":2712,"title":{},"body":{"license.html":{}}}],["agent",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":2660,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2807,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":2730,"title":{},"body":{"license.html":{}}}],["all(@currentuser(\"id",{"_index":478,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["all(uid",{"_index":442,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["alleging",{"_index":2721,"title":{},"body":{"license.html":{}}}],["allow",{"_index":732,"title":{},"body":{"guards/AuthGuard.html":{},"license.html":{}}}],["allowed",{"_index":426,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["alone",{"_index":2659,"title":{},"body":{"license.html":{}}}],["alphanumeric",{"_index":1833,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["alphanumeric!'})@isnotempty({message",{"_index":1828,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["already",{"_index":408,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["alter",{"_index":2622,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":2401,"title":{},"body":{"index.html":{}}}],["amount",{"_index":424,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["angular",{"_index":2372,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":2762,"title":{},"body":{"license.html":{}}}],["api",{"_index":369,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["api_key_secret",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":2379,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["apparatus",{"_index":2494,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":2605,"title":{},"body":{"license.html":{}}}],["application",{"_index":268,"title":{"classes/Application.html":{}},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{},"license.html":{}}}],["application.comparekey(key",{"_index":730,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.deleteone",{"_index":540,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.dto",{"_index":468,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.dto.ts",{"_index":884,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["application.dto.ts:14",{"_index":900,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.dto.ts:9",{"_index":892,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["application.generatekey(this.config.get(\"api_key_secret",{"_index":542,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.hassufficientscopes(scopes",{"_index":737,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.name",{"_index":504,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["application.save",{"_index":548,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes",{"_index":544,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.scopes.addtoset(scope",{"_index":547,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application.todto",{"_index":483,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["application.uid",{"_index":739,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application.updateone",{"_index":740,"title":{},"body":{"guards/AuthGuard.html":{}}}],["application[\"name",{"_index":531,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["application[\"uid",{"_index":532,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationalreadyexists",{"_index":400,"title":{"classes/ApplicationAlreadyExists.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applicationalreadyexists(name",{"_index":536,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applicationdto",{"_index":272,"title":{"classes/ApplicationDto.html":{}},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["applicationnotfound",{"_index":411,"title":{"classes/ApplicationNotFound.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["applications",{"_index":425,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["applications.controller",{"_index":501,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["applications.errors",{"_index":528,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["applications.map(application",{"_index":482,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["applications.service",{"_index":466,"title":{},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{}}}],["applicationschema",{"_index":354,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationschema.methods.comparekey",{"_index":363,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.generatekey",{"_index":367,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.hassufficientscopes",{"_index":391,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.methods.todto",{"_index":394,"title":{},"body":{"classes/Application.html":{}}}],["applicationschema.pre(\"save",{"_index":356,"title":{},"body":{"classes/Application.html":{}}}],["applicationscontroller",{"_index":437,"title":{"controllers/ApplicationsController.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"coverage.html":{}}}],["applicationscopes",{"_index":328,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["applicationsmodule",{"_index":128,"title":{"modules/ApplicationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationsservice",{"_index":465,"title":{"injectables/ApplicationsService.html":{}},"body":{"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["apply",{"_index":2783,"title":{},"body":{"license.html":{}}}],["apply(adminmiddleware",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":563,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":1546,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["array.from(new",{"_index":545,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["arrayunique",{"_index":901,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["arrayunique({message",{"_index":893,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["asserting",{"_index":2713,"title":{},"body":{"license.html":{}}}],["assume",{"_index":2751,"title":{},"body":{"license.html":{}}}],["async",{"_index":37,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asyncstorageoptions",{"_index":550,"title":{"interfaces/AsyncStorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"coverage.html":{}}}],["atob",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["atob(req.headers.authorization",{"_index":727,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attached",{"_index":2442,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2621,"title":{},"body":{"license.html":{}}}],["auth",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["auth.controller",{"_index":764,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.errors",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":53,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["auth.middleware",{"_index":79,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["auth.service",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.ts",{"_index":2257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_optional",{"_index":718,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_guard_scopes",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":564,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":34,"title":{"guards/AuthGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":67,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmiddleware:21",{"_index":77,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["authmodule",{"_index":129,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2408,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":2757,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":607,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":343,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["available",{"_index":1113,"title":{},"body":{"classes/Entry.html":{},"license.html":{},"modules.html":{}}}],["avatar",{"_index":987,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["avatar.filename",{"_index":2181,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id",{"_index":2180,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.id).then(user",{"_index":2185,"title":{},"body":{"controllers/UsersController.html":{}}}],["avatar.size",{"_index":2182,"title":{},"body":{"controllers/UsersController.html":{}}}],["avoid",{"_index":373,"title":{},"body":{"classes/Application.html":{}}}],["await",{"_index":54,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2457,"title":{},"body":{"license.html":{}}}],["back",{"_index":2703,"title":{},"body":{"license.html":{}}}],["backend_domain",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["backers",{"_index":2402,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":981,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/FileTooLarge.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/NoFilesUploaded.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["badrequestexception(recaptcha_failed",{"_index":1816,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["badrequestexception(recaptcha_missing",{"_index":1797,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["base64",{"_index":376,"title":{},"body":{"classes/Application.html":{}}}],["base64\").tostring(\"binary",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basis",{"_index":2552,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":2065,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":2082,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":2079,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":2560,"title":{},"body":{"license.html":{}}}],["before",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":2654,"title":{},"body":{"license.html":{}}}],["believes",{"_index":2599,"title":{},"body":{"license.html":{}}}],["below",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["below.\\n",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beneficial",{"_index":2534,"title":{},"body":{"license.html":{}}}],["binary\")).tostring(\"base64",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"injectables/BullBoardProvider.html":{},"dependencies.html":{}}}],["board.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["board.module.ts",{"_index":831,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider",{"_index":832,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["board.provider.ts",{"_index":833,"title":{},"body":{"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["board.provider.ts:9",{"_index":837,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["board/bull",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["body",{"_index":459,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{}}}],["body[\"error",{"_index":1805,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["boolean",{"_index":353,"title":{},"body":{"classes/Application.html":{},"classes/Counter.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["bring",{"_index":2806,"title":{},"body":{"license.html":{}}}],["brought",{"_index":2793,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2850,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["btoa",{"_index":331,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["btoa(key",{"_index":390,"title":{},"body":{"classes/Application.html":{}}}],["bucket",{"_index":1462,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["bucketname",{"_index":1473,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["buffer",{"_index":2020,"title":{},"body":{"classes/StreamMeter.html":{},"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(str",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(this.key",{"_index":366,"title":{},"body":{"classes/Application.html":{}}}],["buffer.tostring",{"_index":1697,"title":{},"body":{"injectables/MailerService.html":{}}}],["building",{"_index":2366,"title":{},"body":{"index.html":{}}}],["bull",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["bullboardmodule",{"_index":130,"title":{"modules/BullBoardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["bullboardprovider",{"_index":829,"title":{"injectables/BullBoardProvider.html":{}},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{},"overview.html":{}}}],["bullmodule",{"_index":1316,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullmodule.registerqueueasync",{"_index":1321,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["bullui",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{}}}],["busboy",{"_index":1944,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["busboy.busboy",{"_index":1933,"title":{},"body":{"injectables/StorageService.html":{}}}],["busboy.busboyconfig[\"limits",{"_index":2011,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["busboy.on(\"file",{"_index":1984,"title":{},"body":{"injectables/StorageService.html":{}}}],["business",{"_index":2799,"title":{},"body":{"license.html":{}}}],["bytebin",{"_index":1659,"title":{},"body":{"injectables/MailerProcessor.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2578,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1966,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["callback(new",{"_index":2175,"title":{},"body":{"controllers/UsersController.html":{}}}],["callback(null",{"_index":1970,"title":{},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{}}}],["canactivate",{"_index":38,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["canactivate(context",{"_index":39,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["case",{"_index":2448,"title":{},"body":{"license.html":{}}}],["catch",{"_index":726,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["catch((error",{"_index":1094,"title":{},"body":{"classes/Entry.html":{}}}],["catch(error",{"_index":362,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["catch(exception",{"_index":1545,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(internalservererrorexception",{"_index":1548,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["catch(reject",{"_index":1978,"title":{},"body":{"injectables/StorageService.html":{}}}],["cause",{"_index":2525,"title":{},"body":{"license.html":{}}}],["caused",{"_index":2573,"title":{},"body":{"license.html":{}}}],["cb",{"_index":867,"title":{},"body":{"classes/Counter.html":{}}}],["changed",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed.email",{"_index":2223,"title":{},"body":{"injectables/UsersService.html":{}}}],["changed.email.ts",{"_index":2286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["changed.mjml",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":2768,"title":{},"body":{"license.html":{}}}],["characters",{"_index":891,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["charge",{"_index":2627,"title":{},"body":{"license.html":{}}}],["check",{"_index":1729,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1117,"title":{},"body":{"classes/Entry.html":{}}}],["child.id",{"_index":1409,"title":{},"body":{"injectables/FilesService.html":{}}}],["child.path",{"_index":1118,"title":{},"body":{"classes/Entry.html":{}}}],["child.path.substr(this.path.length",{"_index":1119,"title":{},"body":{"classes/Entry.html":{}}}],["child.save",{"_index":1120,"title":{},"body":{"classes/Entry.html":{}}}],["children",{"_index":1130,"title":{},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["choice",{"_index":2591,"title":{},"body":{"license.html":{}}}],["choose",{"_index":2650,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":960,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/StreamMeter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chunk.length",{"_index":2027,"title":{},"body":{"classes/StreamMeter.html":{}}}],["chunk.string(id.slice(0",{"_index":975,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["chunks",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":2758,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2715,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":2491,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2490,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":1368,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clamp(1",{"_index":1434,"title":{},"body":{"injectables/FilesService.html":{}}}],["class",{"_index":22,"title":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":269,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"overview.html":{}}}],["classtransformoptions",{"_index":2066,"title":{},"body":{"classes/User.html":{}}}],["classtype",{"_index":2067,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":2656,"title":{},"body":{"license.html":{}}}],["client",{"_index":1472,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.bucket(this.options.bucketname",{"_index":1465,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["cloud.engine",{"_index":1920,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["cloud.engine.ts",{"_index":1461,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloud.engine.ts:18",{"_index":1464,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:21",{"_index":1466,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:23",{"_index":1469,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:27",{"_index":1467,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud.engine.ts:31",{"_index":1468,"title":{},"body":{"classes/GoogleCloudEngine.html":{}}}],["cloud/storage",{"_index":1471,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["cls",{"_index":2073,"title":{},"body":{"classes/User.html":{}}}],["cluster_adminmodule",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule",{"_index":497,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_exports",{"_index":498,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_applicationsmodule_providers",{"_index":499,"title":{},"body":{"modules/ApplicationsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":758,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":760,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":759,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":761,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule",{"_index":826,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_bullboardmodule_imports",{"_index":827,"title":{},"body":{"modules/BullBoardModule.html":{}}}],["cluster_bullboardmodule_providers",{"_index":828,"title":{},"body":{"modules/BullBoardModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1309,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":1311,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1310,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1312,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":1600,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":1601,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":1602,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule",{"_index":1880,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_exports",{"_index":1881,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_providers",{"_index":1882,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":1905,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":1906,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":1907,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2196,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2198,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2197,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2199,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2439,"title":{},"body":{"license.html":{}}}],["codes",{"_index":1806,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["collation",{"_index":1087,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["collation(entry_collation_options",{"_index":1142,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["collation(options.collation",{"_index":1725,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["collationoptions",{"_index":1714,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["combination",{"_index":2431,"title":{},"body":{"license.html":{}}}],["combines",{"_index":2466,"title":{},"body":{"license.html":{}}}],["come",{"_index":2702,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":2777,"title":{},"body":{"license.html":{}}}],["common",{"_index":2518,"title":{},"body":{"license.html":{}}}],["comparekey",{"_index":274,"title":{},"body":{"classes/Application.html":{}}}],["comparepassword",{"_index":2049,"title":{},"body":{"classes/User.html":{}}}],["complete",{"_index":1782,"title":{},"body":{"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":2699,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2688,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2585,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2774,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2808,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2536,"title":{},"body":{"license.html":{}}}],["config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["config.get(\"mongo_db_name",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_password",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_pool_size",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"mongo_username",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"redis_host",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"redis_port",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["config.get(\"smtp_from",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_password",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_port",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_secure",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_tls",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"smtp_username",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_limit",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"throttle_ttl",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"uploads_directory",{"_index":1325,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{}}}],["confirm",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation",{"_index":991,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["confirmation.deleteone",{"_index":2232,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email",{"_index":2224,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.email.ts",{"_index":2287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.mjml",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmation.newemail",{"_index":2231,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmation.schema",{"_index":2203,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["confirmation.schema.ts",{"_index":1009,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation.schema.ts:15",{"_index":1012,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:16",{"_index":1021,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:22",{"_index":1015,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:30",{"_index":1017,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:39",{"_index":1019,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.schema.ts:48",{"_index":1020,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmation.uid",{"_index":2229,"title":{},"body":{"injectables/UsersService.html":{}}}],["confirmemail",{"_index":2130,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["confirmemail(@param(\"token",{"_index":2190,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmemail(token",{"_index":2133,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["conflict",{"_index":2802,"title":{},"body":{"license.html":{}}}],["conflictexception",{"_index":402,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["connect",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":1887,"title":{},"body":{"injectables/SessionsService.html":{}}}],["connectmongo(session",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":2766,"title":{},"body":{"license.html":{}}}],["const",{"_index":56,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":2755,"title":{},"body":{"license.html":{}}}],["constraint1",{"_index":890,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["constraint1'})@maxlength(32",{"_index":887,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["constraints",{"_index":1585,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(nodemailer_module_options",{"_index":1665,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["constructor(@inject(storage_module_options",{"_index":1957,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(@injectconnection",{"_index":1896,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(_value",{"_index":857,"title":{},"body":{"classes/Counter.html":{}}}],["constructor(applications",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(config",{"_index":507,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{}}}],["constructor(connection",{"_index":1886,"title":{},"body":{"injectables/SessionsService.html":{}}}],["constructor(emailsqueue",{"_index":834,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["constructor(filename",{"_index":1184,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["constructor(logger",{"_index":1542,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["constructor(mailer",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(name",{"_index":403,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{}}}],["constructor(options",{"_index":941,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesProcessor.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"controllers/SessionsController.html":{}}}],["constructor(query",{"_index":998,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["constructor(storage",{"_index":1328,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{}}}],["constructor(users",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthMiddleware.html":{}}}],["construe",{"_index":2820,"title":{},"body":{"license.html":{}}}],["construed",{"_index":2818,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["contain",{"_index":1575,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["contained",{"_index":2643,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2487,"title":{},"body":{"license.html":{}}}],["content",{"_index":1203,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["contents",{"_index":2486,"title":{},"body":{"license.html":{}}}],["context",{"_index":47,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.gethandler",{"_index":749,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":58,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["contract",{"_index":2527,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2615,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":2426,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":2436,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":2432,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2421,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2435,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2725,"title":{},"body":{"license.html":{}}}],["control",{"_index":2519,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":2517,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"admin",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"applications",{"_index":476,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["controller(\"auth",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"files",{"_index":1247,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller(\"health",{"_index":1492,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"sessions",{"_index":1868,"title":{},"body":{"controllers/SessionsController.html":{}}}],["controller(\"users",{"_index":2158,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controls",{"_index":2516,"title":{},"body":{"license.html":{}}}],["converted",{"_index":375,"title":{},"body":{"classes/Application.html":{}}}],["conveyed",{"_index":2480,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1843,"title":{},"body":{"classes/SessionDto.html":{}}}],["copy",{"_index":2620,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2606,"title":{},"body":{"license.html":{}}}],["correct",{"_index":994,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["correction",{"_index":2754,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2628,"title":{},"body":{"license.html":{}}}],["countdocuments",{"_index":1431,"title":{},"body":{"injectables/FilesService.html":{}}}],["counter",{"_index":847,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"injectables/StorageService.html":{},"coverage.html":{},"license.html":{}}}],["courts",{"_index":2794,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2249,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":2428,"title":{},"body":{"license.html":{}}}],["create",{"_index":439,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["create(data",{"_index":510,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["create(dto",{"_index":444,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["create(email",{"_index":2210,"title":{},"body":{"injectables/UsersService.html":{}}}],["createabsolutelink",{"_index":1670,"title":{},"body":{"injectables/MailerService.html":{}}}],["createabsolutelink(relativelink",{"_index":1674,"title":{},"body":{"injectables/MailerService.html":{}}}],["createapplicationdto",{"_index":445,"title":{"classes/CreateApplicationDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":1606,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1607,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders",{"_index":1611,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createasyncproviders(options",{"_index":1612,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["createdat",{"_index":275,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["createentry",{"_index":1303,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["createentry(data",{"_index":1351,"title":{},"body":{"injectables/FilesService.html":{}}}],["createfolder",{"_index":1206,"title":{},"body":{"controllers/FilesController.html":{}}}],["createfolder(dto",{"_index":1210,"title":{},"body":{"controllers/FilesController.html":{}}}],["createfolderentrydto",{"_index":910,"title":{"classes/CreateFolderEntryDto.html":{}},"body":{"classes/CreateFolderEntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["createhmac(\"sha256",{"_index":339,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["createmaileroptions",{"_index":1647,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["createparamdecorator((field",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadable",{"_index":939,"title":{},"body":{"classes/DiskStorage.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createreadable(id",{"_index":948,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creates",{"_index":2425,"title":{},"body":{"license.html":{}}}],["createstorageoptions",{"_index":1923,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["createwritable",{"_index":940,"title":{},"body":{"classes/DiskStorage.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/StorageEngine.html":{}}}],["createwritable(id",{"_index":951,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{}}}],["creation",{"_index":1101,"title":{},"body":{"classes/Entry.html":{},"license.html":{}}}],["creation(s",{"_index":2601,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":1534,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["cross",{"_index":2720,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":317,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.binarylike",{"_index":337,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["crypto.randombytes(size",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.timingsafeequal(buffer.from(hmac_sha256(key",{"_index":365,"title":{},"body":{"classes/Application.html":{}}}],["ctx",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().user",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentsession",{"_index":1857,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentsession.identifier",{"_index":1873,"title":{},"body":{"controllers/SessionsController.html":{}}}],["currentuser",{"_index":472,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser(\"id",{"_index":485,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["cursor",{"_index":1115,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["customdecorator",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":2347,"title":{},"body":{"dependencies.html":{}}}],["damages",{"_index":2767,"title":{},"body":{"license.html":{}}}],["data",{"_index":336,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.displayname},\\n",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.displayname}\\n",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.folder",{"_index":1384,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.hidden",{"_index":1445,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.interface",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{}}}],["data.interface.ts",{"_index":1517,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["data.isfile",{"_index":1393,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.link",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.name",{"_index":543,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["data.public",{"_index":1447,"title":{},"body":{"injectables/FilesService.html":{}}}],["data.session.ip",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.name",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.browser.version}\\n",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.name",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.session.ua.os.version",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.uid",{"_index":1386,"title":{},"body":{"injectables/FilesService.html":{}}}],["date",{"_index":287,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"license.html":{}}}],["date%.log",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().toutcstring",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1023,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["datepattern",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":2701,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1493,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["dd",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealing",{"_index":2608,"title":{},"body":{"license.html":{}}}],["death",{"_index":2784,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declaratory",{"_index":2717,"title":{},"body":{"license.html":{}}}],["decode",{"_index":382,"title":{},"body":{"classes/Application.html":{}}}],["decorator",{"_index":1264,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators",{"_index":292,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"classes/ForgotPasswordDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"injectables/MailerProcessor.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":473,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["decorators/optional",{"_index":1240,"title":{},"body":{"controllers/FilesController.html":{}}}],["decorators/recaptcha",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/scopes.decorator",{"_index":1242,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["decrement",{"_index":850,"title":{},"body":{"classes/Counter.html":{}}}],["default",{"_index":349,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"injectables/MailerProcessor.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["default(\"development",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["default(25",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["default(250",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["default(27017",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["default(3000",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["default(465",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["default(5",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["default(60",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["default(6379",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmessage",{"_index":1567,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["defaultvaluepipe",{"_index":1231,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(0",{"_index":1283,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(50",{"_index":1287,"title":{},"body":{"controllers/FilesController.html":{}}}],["defaultvaluepipe(null",{"_index":1285,"title":{},"body":{"controllers/FilesController.html":{}}}],["defective",{"_index":2750,"title":{},"body":{"license.html":{}}}],["defects",{"_index":2740,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":2795,"title":{},"body":{"license.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/PaginationDto.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["definition",{"_index":2521,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2419,"title":{},"body":{"license.html":{}}}],["deletable",{"_index":1035,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":460,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"classes/DiskStorage.html":{},"controllers/FilesController.html":{},"classes/GoogleCloudEngine.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["delete(\"/:id",{"_index":488,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete(\"/:id/delete",{"_index":1248,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(\"/:id/revoke",{"_index":1874,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"all",{"_index":1877,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete(\"logout",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete('/:id",{"_index":451,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["delete('/:id/delete')@usescopes(applicationscopes.files_write",{"_index":1214,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('/:id/revoke",{"_index":1860,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('all",{"_index":1863,"title":{},"body":{"controllers/SessionsController.html":{}}}],["delete('logout",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(id",{"_index":953,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["delete(query",{"_index":513,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/SessionsService.html":{}}}],["deleted",{"_index":1146,"title":{},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deleted.todto",{"_index":1251,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefilejob",{"_index":925,"title":{"interfaces/DeleteFileJob.html":{}},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["deletemany",{"_index":1090,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["deletemany(query",{"_index":1354,"title":{},"body":{"injectables/FilesService.html":{}}}],["deleteone",{"_index":440,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteone(@body",{"_index":2187,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(@currentuser(\"id",{"_index":489,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(query",{"_index":517,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["deleteone(uid",{"_index":450,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["deleteone(undefined",{"_index":2137,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteone(user",{"_index":2212,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserdto",{"_index":929,"title":{"classes/DeleteUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deletion",{"_index":2484,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":1036,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{}}}],["derived",{"_index":1066,"title":{},"body":{"classes/Entry.html":{}}}],["describe",{"_index":2673,"title":{},"body":{"license.html":{}}}],["described",{"_index":2456,"title":{},"body":{"license.html":{}}}],["description",{"_index":2373,"title":{},"body":{"index.html":{},"license.html":{}}}],["desirable",{"_index":2843,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":2680,"title":{},"body":{"license.html":{}}}],["development",{"_index":2380,"title":{},"body":{"index.html":{}}}],["device",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["different",{"_index":2631,"title":{},"body":{"license.html":{}}}],["differs",{"_index":2836,"title":{},"body":{"license.html":{}}}],["digest(\"hex",{"_index":341,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":2523,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1716,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["directly",{"_index":2722,"title":{},"body":{"license.html":{}}}],["directory",{"_index":962,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"license.html":{}}}],["dirname",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1577,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":1262,"title":{},"body":{"controllers/FilesController.html":{}}}],["disclaimer",{"_index":2735,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":2640,"title":{},"body":{"license.html":{}}}],["disk",{"_index":965,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["diskhealthindicator",{"_index":1483,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskstorage",{"_index":934,"title":{"classes/DiskStorage.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["diskstorage(disk",{"_index":1960,"title":{},"body":{"injectables/StorageService.html":{}}}],["diskstorageengineoptions",{"_index":942,"title":{"interfaces/DiskStorageEngineOptions.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["display",{"_index":2037,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["displayname",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["displaynametaken",{"_index":978,"title":{"classes/DisplayNameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["distinguishing",{"_index":2827,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2549,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2841,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":2561,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":2838,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2566,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":2677,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":2731,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1494,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1484,"title":{},"body":{"controllers/HealthController.html":{}}}],["doc",{"_index":1414,"title":{},"body":{"injectables/FilesService.html":{}}}],["doctrines",{"_index":2607,"title":{},"body":{"license.html":{}}}],["document",{"_index":271,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["documentation",{"_index":2250,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["done",{"_index":1979,"title":{},"body":{"injectables/StorageService.html":{}}}],["download",{"_index":1207,"title":{},"body":{"controllers/FilesController.html":{}}}],["download(uid",{"_index":1216,"title":{},"body":{"controllers/FilesController.html":{}}}],["drafter",{"_index":2819,"title":{},"body":{"license.html":{}}}],["dto",{"_index":449,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto).then(application",{"_index":494,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto).then(user",{"_index":2166,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto.folder",{"_index":1277,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.name",{"_index":1278,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto.public",{"_index":1279,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/application.dto",{"_index":327,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{}}}],["dto/create",{"_index":467,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{}}}],["dto/delete",{"_index":2154,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/entry.dto",{"_index":1072,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["dto/forgot",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/generate",{"_index":470,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["dto/login.dto",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/pagination.dto",{"_index":1244,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/partial",{"_index":2155,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/register.dto",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/reset",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/session.dto",{"_index":1866,"title":{},"body":{"controllers/SessionsController.html":{}}}],["dto/update",{"_index":1238,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["dto/user.dto",{"_index":2069,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["due",{"_index":2667,"title":{},"body":{"license.html":{}}}],["duplicate",{"_index":1425,"title":{},"body":{"injectables/FilesService.html":{}}}],["duplicates",{"_index":1391,"title":{},"body":{"injectables/FilesService.html":{}}}],["dynamicmodule",{"_index":1617,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["e2e",{"_index":2390,"title":{},"body":{"index.html":{}}}],["each",{"_index":897,"title":{},"body":{"classes/CreateApplicationDto.html":{},"injectables/FilesService.html":{},"license.html":{}}}],["eachasync((child",{"_index":1408,"title":{},"body":{"injectables/FilesService.html":{}}}],["eachasync(async",{"_index":1116,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["earlier",{"_index":2461,"title":{},"body":{"license.html":{}}}],["effect",{"_index":2828,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2556,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2367,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1687,"title":{},"body":{"injectables/MailerService.html":{},"dependencies.html":{}}}],["ejs.render(this.transpilemjml(mjml",{"_index":1698,"title":{},"body":{"injectables/MailerService.html":{}}}],["el.length",{"_index":1139,"title":{},"body":{"classes/Entry.html":{}}}],["elements",{"_index":895,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["email",{"_index":641,"title":{"interfaces/Email.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailTaken.html":{},"classes/ForgotPasswordDto.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email!'})@isnotempty({message",{"_index":1453,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["email/${confirmation.token",{"_index":2245,"title":{},"body":{"injectables/UsersService.html":{}}}],["email/:token",{"_index":2135,"title":{},"body":{"controllers/UsersController.html":{}}}],["emailchanged",{"_index":2221,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailchanged(olduser.email",{"_index":2236,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation",{"_index":1007,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmation(newemail",{"_index":2243,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmation.name",{"_index":2204,"title":{},"body":{"modules/UsersModule.html":{}}}],["emailconfirmations",{"_index":2207,"title":{},"body":{"injectables/UsersService.html":{}}}],["emailconfirmationschema",{"_index":1025,"title":{},"body":{"classes/EmailConfirmation.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfirmationschema.pre(\"save",{"_index":1027,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["emails",{"_index":1629,"title":{},"body":{"modules/MailerModule.html":{}}}],["emails/email",{"_index":2222,"title":{},"body":{"injectables/UsersService.html":{}}}],["emails/password",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["emails/successful",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["emails/user",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsqueue",{"_index":838,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["emailtaken",{"_index":984,"title":{"classes/EmailTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["empty",{"_index":906,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"interfaces/MailerOptions.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring",{"_index":2041,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@maxlength(32",{"_index":2039,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isoptional()@isstring()@minlength(8",{"_index":2043,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring",{"_index":932,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty!'})@isstring()@isstringpathsafe()@maxlength(255",{"_index":917,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["empty!'})@isstring()@maxlength(32",{"_index":1829,"title":{},"body":{"classes/RegisterDto.html":{}}}],["empty!'})@isstring()@minlength(8",{"_index":1835,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["empty!'})@isstring({message",{"_index":886,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["en",{"_index":1083,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["encoding",{"_index":1526,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["end",{"_index":2729,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":2815,"title":{},"body":{"license.html":{}}}],["engine",{"_index":1324,"title":{},"body":{"modules/FilesModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["engine.interface",{"_index":959,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{}}}],["engine.interface.ts",{"_index":1901,"title":{},"body":{"interfaces/StorageEngine.html":{},"coverage.html":{}}}],["engine.interface.ts:4",{"_index":1902,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:5",{"_index":1903,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engine.interface.ts:6",{"_index":1904,"title":{},"body":{"interfaces/StorageEngine.html":{}}}],["engines/disk.engine",{"_index":1918,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["engines/google",{"_index":1919,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["enoent",{"_index":969,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["ensure",{"_index":993,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["enter",{"_index":1451,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["entire",{"_index":2745,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2514,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2424,"title":{},"body":{"license.html":{}}}],["entries",{"_index":1064,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["entries.items.map((entry",{"_index":1290,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry",{"_index":1032,"title":{"classes/Entry.html":{}},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.deletable",{"_index":1407,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.dto",{"_index":1237,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.dto.ts",{"_index":913,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["entry.dto.ts:14",{"_index":918,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:17",{"_index":920,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.dto.ts:8",{"_index":916,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["entry.folder",{"_index":1443,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.hidden",{"_index":1444,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.id",{"_index":1404,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.isfile",{"_index":1402,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.name",{"_index":1322,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["entry.public",{"_index":1446,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.remove",{"_index":1405,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.save",{"_index":1448,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry.todto",{"_index":1256,"title":{},"body":{"controllers/FilesController.html":{}}}],["entry.uid",{"_index":1439,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"deletable",{"_index":1374,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"folder",{"_index":1375,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"hidden",{"_index":1376,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"id",{"_index":1377,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isfile",{"_index":1378,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"isfolder",{"_index":1379,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"name",{"_index":1380,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"public",{"_index":1381,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"size",{"_index":1382,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry[\"uid",{"_index":1383,"title":{},"body":{"injectables/FilesService.html":{}}}],["entry_collation_options",{"_index":1081,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entryalreadyexists",{"_index":1149,"title":{"classes/EntryAlreadyExists.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entryalreadyexists(data.name",{"_index":1394,"title":{},"body":{"injectables/FilesService.html":{}}}],["entrydto",{"_index":1034,"title":{"classes/EntryDto.html":{}},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["entrynotdeletable",{"_index":1153,"title":{"classes/EntryNotDeletable.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entrynotfound",{"_index":1155,"title":{"classes/EntryNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["entryschema",{"_index":1079,"title":{},"body":{"classes/Entry.html":{},"modules/FilesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entryschema.index",{"_index":1086,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.getchildren",{"_index":1141,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.getparentfolder",{"_index":1143,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.methods.todto",{"_index":1147,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"remove",{"_index":1088,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.pre(\"save",{"_index":1095,"title":{},"body":{"classes/Entry.html":{}}}],["entryschema.virtual(\"depth\").get(function",{"_index":1137,"title":{},"body":{"classes/Entry.html":{}}}],["enum",{"_index":351,"title":{},"body":{"classes/Application.html":{}}}],["enumerations",{"_index":2351,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/application",{"_index":529,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/CreateApplicationDto.html":{}}}],["env.development",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["equivalents",{"_index":2609,"title":{},"body":{"license.html":{}}}],["err",{"_index":1269,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{}}}],["error",{"_index":81,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["error(\"directory",{"_index":964,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error(\"file",{"_index":1098,"title":{},"body":{"classes/Entry.html":{}}}],["error(errors.join(\"\\n",{"_index":1710,"title":{},"body":{"injectables/MailerService.html":{}}}],["error.code",{"_index":968,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["error.exception.ts",{"_index":1540,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error.exception.ts:12",{"_index":1544,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["error.exception.ts:15",{"_index":1547,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["errorcodes",{"_index":1804,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.filter(filterfn).join",{"_index":1812,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.length",{"_index":1810,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errorcodes.some(filterfn",{"_index":1811,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage",{"_index":1808,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errormessage.endswith(\"secret",{"_index":1809,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["errors",{"_index":1704,"title":{},"body":{"injectables/MailerService.html":{}}}],["errors.length",{"_index":1709,"title":{},"body":{"injectables/MailerService.html":{}}}],["eslint",{"_index":1576,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":1580,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":1644,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["essential",{"_index":2756,"title":{},"body":{"license.html":{}}}],["even",{"_index":2779,"title":{},"body":{"license.html":{}}}],["event",{"_index":2728,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":849,"title":{},"body":{"classes/Counter.html":{}}}],["events",{"_index":875,"title":{},"body":{"classes/Counter.html":{}}}],["exceeded",{"_index":422,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["except",{"_index":2577,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1260,"title":{},"body":{"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1551,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1541,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["exclude",{"_index":430,"title":{},"body":{"classes/ApplicationDto.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"classes/UserDto.html":{}}}],["excludeprefixes",{"_index":398,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["excluding",{"_index":2716,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2791,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2543,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2445,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1401,"title":{},"body":{"injectables/FilesService.html":{}}}],["executioncontext",{"_index":40,"title":{},"body":{"injectables/AdminGuard.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["exercising",{"_index":2513,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":2444,"title":{},"body":{"license.html":{}}}],["exist",{"_index":413,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["exists",{"_index":409,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"injectables/UsersService.html":{}}}],["exists(query",{"_index":1357,"title":{},"body":{"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["expires",{"_index":1014,"title":{},"body":{"classes/EmailConfirmation.html":{},"interfaces/ISession.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["expiresat",{"_index":1010,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["explicitly",{"_index":2693,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2550,"title":{},"body":{"license.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":78,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.session",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IRequest.html":{}}}],["express.sessioncookiedata",{"_index":1844,"title":{},"body":{"classes/SessionDto.html":{}}}],["express.sessiondata",{"_index":1519,"title":{},"body":{"interfaces/ISessionData.html":{}}}],["expressed",{"_index":2737,"title":{},"body":{"license.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"interfaces/SendMailOptions.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["extension",{"_index":1419,"title":{},"body":{"injectables/FilesService.html":{}}}],["extent",{"_index":2475,"title":{},"body":{"license.html":{}}}],["extname",{"_index":2172,"title":{},"body":{"controllers/UsersController.html":{}}}],["extra",{"_index":1734,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":1628,"title":{},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["factory.interface",{"_index":562,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{}}}],["factory.interface.ts",{"_index":1922,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1924,"title":{},"body":{"interfaces/StorageOptionsFactory.html":{}}}],["factory.ts",{"_index":1646,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:4",{"_index":1648,"title":{},"body":{"interfaces/MailerOptionsFactory.html":{}}}],["factual",{"_index":2647,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2687,"title":{},"body":{"license.html":{}}}],["failed",{"_index":1780,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":2697,"title":{},"body":{"license.html":{}}}],["failure",{"_index":2775,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2603,"title":{},"body":{"license.html":{}}}],["false",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"injectables/AuthService.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerService.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{}}}],["fee",{"_index":2651,"title":{},"body":{"license.html":{}}}],["field",{"_index":1295,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":1527,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{}}}],["fields",{"_index":1128,"title":{},"body":{"classes/Entry.html":{},"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["fifty",{"_index":2530,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["file.filename",{"_index":1305,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":1304,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.interface",{"_index":1947,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["file.interface.ts",{"_index":1525,"title":{},"body":{"interfaces/IncomingFile.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["file.job",{"_index":1337,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["file.job.ts",{"_index":927,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["file.size",{"_index":1306,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.todto",{"_index":1308,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileid",{"_index":928,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1186,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"interfaces/IncomingFile.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"miscellaneous/variables.html":{}}}],["filename.split",{"_index":1418,"title":{},"body":{"injectables/FilesService.html":{}}}],["files",{"_index":1192,"title":{},"body":{"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["files.controller",{"_index":1317,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.errors",{"_index":1234,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.length",{"_index":1981,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.map((file",{"_index":1301,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.processor",{"_index":1318,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.push",{"_index":2002,"title":{},"body":{"injectables/StorageService.html":{}}}],["files.service",{"_index":1236,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files:read",{"_index":2356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files:write",{"_index":2358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_read",{"_index":2355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["files_write",{"_index":2357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["filescontroller",{"_index":1204,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1298,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["filesmodule",{"_index":131,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["filesprocessor",{"_index":1314,"title":{"injectables/FilesProcessor.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["filesqueue",{"_index":836,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["filesservice",{"_index":1235,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["filetoolarge",{"_index":1181,"title":{"classes/FileTooLarge.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["filetoolarge(filename",{"_index":1999,"title":{},"body":{"injectables/StorageService.html":{}}}],["filetypes",{"_index":2170,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(file.mimetype",{"_index":2174,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypes.test(path.extname(file.filename",{"_index":2173,"title":{},"body":{"controllers/UsersController.html":{}}}],["filter",{"_index":1261,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["filter(metadata",{"_index":1986,"title":{},"body":{"injectables/StorageService.html":{}}}],["filterfn",{"_index":1807,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["filterquery",{"_index":514,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["final",{"_index":368,"title":{},"body":{"classes/Application.html":{}}}],["finally",{"_index":2694,"title":{},"body":{"license.html":{}}}],["find",{"_index":480,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"miscellaneous/variables.html":{}}}],["find(query",{"_index":519,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{}}}],["finding",{"_index":1424,"title":{},"body":{"injectables/FilesService.html":{}}}],["findone",{"_index":506,"title":{},"body":{"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(@currentuser(\"id",{"_index":1254,"title":{},"body":{"controllers/FilesController.html":{}}}],["findone(query",{"_index":521,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["findone(uid",{"_index":1219,"title":{},"body":{"controllers/FilesController.html":{}}}],["finish",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finished",{"_index":1972,"title":{},"body":{"injectables/StorageService.html":{}}}],["first",{"_index":757,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"license.html":{}}}],["fit",{"_index":2742,"title":{},"body":{"license.html":{}}}],["folder",{"_index":912,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["folder')@usescopes(applicationscopes.files_write",{"_index":1212,"title":{},"body":{"controllers/FilesController.html":{}}}],["folder.id",{"_index":1388,"title":{},"body":{"injectables/FilesService.html":{}}}],["folder.path",{"_index":1390,"title":{},"body":{"injectables/FilesService.html":{}}}],["folder.path}/${this.name",{"_index":1111,"title":{},"body":{"classes/Entry.html":{}}}],["folder.todto",{"_index":1280,"title":{},"body":{"controllers/FilesController.html":{}}}],["folderid",{"_index":1387,"title":{},"body":{"injectables/FilesService.html":{}}}],["folderpath",{"_index":1389,"title":{},"body":{"injectables/FilesService.html":{}}}],["following",{"_index":2482,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":405,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["forbiddenexception(\"please",{"_index":755,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["forgotpassword",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(undefined",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":577,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["form",{"_index":2440,"title":{},"body":{"license.html":{}}}],["format",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{}}}],["foundation",{"_index":2822,"title":{},"body":{"license.html":{}}}],["framework",{"_index":2365,"title":{},"body":{"index.html":{}}}],["free",{"_index":2541,"title":{},"body":{"license.html":{}}}],["frontend_domain",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":955,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.createreadstream(this._getlocationondisk(id",{"_index":970,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.createwritestream(this._getlocationondisk(id",{"_index":973,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.pathlike",{"_index":1678,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["fs.promises.mkdir(this._getdestinationondisk(id",{"_index":971,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["fs.promises.readfile(template).then(buffer",{"_index":1696,"title":{},"body":{"injectables/MailerService.html":{}}}],["fs.promises.unlink(this._getlocationondisk(id",{"_index":967,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["function",{"_index":285,"title":{},"body":{"classes/Application.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/Counter.html":{},"classes/Entry.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"classes/User.html":{},"interfaces/WriteOptions.html":{}}}],["function(next",{"_index":357,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["function(this",{"_index":395,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["further",{"_index":2637,"title":{},"body":{"license.html":{}}}],["g",{"_index":1574,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"miscellaneous/variables.html":{}}}],["gcloud",{"_index":1921,"title":{},"body":{"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{}}}],["general",{"_index":2503,"title":{},"body":{"license.html":{}}}],["generateapplicationkeydto",{"_index":469,"title":{"classes/GenerateApplicationKeyDto.html":{}},"body":{"controllers/ApplicationsController.html":{},"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["generated",{"_index":344,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["generateid",{"_index":333,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateid(16",{"_index":386,"title":{},"body":{"classes/Application.html":{}}}],["generateid(32",{"_index":1028,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["generateid(8",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{},"classes/Entry.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["generateid(9",{"_index":359,"title":{},"body":{"classes/Application.html":{}}}],["generatekey",{"_index":276,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{}}}],["generatekey(query",{"_index":523,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["generatekey(uid",{"_index":453,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["get(\"/:id/details",{"_index":1252,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"/:id/download",{"_index":1257,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"@me",{"_index":2159,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"activate",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"confirm",{"_index":2189,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"list",{"_index":1281,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(\"search/@:username",{"_index":2192,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/details')@usescopes(applicationscopes.files_read",{"_index":1220,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('/:id/download')@optionalauth()@usescopes(applicationscopes.files_read",{"_index":1217,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('@me')@usescopes(applicationscopes.users_read",{"_index":2141,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('confirm",{"_index":2134,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('list')@usescopes(applicationscopes.files_read",{"_index":1223,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('search/@:username",{"_index":2144,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":1481,"title":{},"body":{"controllers/HealthController.html":{}}}],["getchildren",{"_index":1037,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["getclientip",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getclientip(req",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"guards/RecaptchaGuard.html":{}}}],["getparentfolder",{"_index":1038,"title":{},"body":{"classes/Entry.html":{}}}],["getsessions",{"_index":1853,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsessions(uid",{"_index":1856,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsize",{"_index":2024,"title":{},"body":{"classes/StreamMeter.html":{}}}],["getting",{"_index":2361,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":873,"title":{},"body":{"classes/Counter.html":{}}}],["given",{"_index":2826,"title":{},"body":{"license.html":{}}}],["global",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/BullBoardProvider.html":{}}}],["gnu",{"_index":2502,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":2772,"title":{},"body":{"license.html":{}}}],["google",{"_index":1470,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"dependencies.html":{}}}],["googlecloudengine",{"_index":1459,"title":{"classes/GoogleCloudEngine.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["googlecloudengine(gcloud",{"_index":1961,"title":{},"body":{"injectables/StorageService.html":{}}}],["googlecloudengineoptions",{"_index":1463,"title":{"interfaces/GoogleCloudEngineOptions.html":{}},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptions.html":{},"coverage.html":{}}}],["governed",{"_index":2618,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2474,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2557,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2535,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2851,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":889,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["grow",{"_index":2397,"title":{},"body":{"index.html":{}}}],["gt",{"_index":1723,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":383,"title":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}},"body":{"classes/Application.html":{},"coverage.html":{}}}],["guards",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["guards/auth.guard",{"_index":475,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["guards/recaptcha.guard",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlefiledeletion",{"_index":1327,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["handlefiledeletion(job",{"_index":1330,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["hapi/joi",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hasduplicates",{"_index":1345,"title":{},"body":{"injectables/FilesService.html":{}}}],["hasduplicates(filename",{"_index":1363,"title":{},"body":{"injectables/FilesService.html":{}}}],["hashed",{"_index":2071,"title":{},"body":{"classes/User.html":{}}}],["hasnext",{"_index":1713,"title":{},"body":{"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["hassufficientscopes",{"_index":277,"title":{},"body":{"classes/Application.html":{}}}],["having",{"_index":2472,"title":{},"body":{"license.html":{}}}],["headers",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{}}}],["headers(\"user",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":1479,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1510,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":1485,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1486,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1487,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1477,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1488,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":132,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heavily",{"_index":2370,"title":{},"body":{"index.html":{}}}],["held",{"_index":2812,"title":{},"body":{"license.html":{}}}],["helmet",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":2405,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2537,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":2810,"title":{},"body":{"license.html":{}}}],["hey",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":1039,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["hideschemaproperty",{"_index":2072,"title":{},"body":{"classes/User.html":{}}}],["hmac_sha256",{"_index":335,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hmac_sha256(key",{"_index":388,"title":{},"body":{"classes/Application.html":{}}}],["hook",{"_index":347,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"modules/MailerModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1549,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["hour.\\n",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.\\n",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":1001,"title":{},"body":{"interfaces/Email.html":{},"injectables/MailerService.html":{}}}],["http",{"_index":1692,"title":{},"body":{"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["http://${this.config.get(\"frontend_domain",{"_index":1505,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":2842,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":763,"title":{},"body":{"modules/AuthModule.html":{}}}],["https",{"_index":1691,"title":{},"body":{"injectables/MailerService.html":{}}}],["https://nestjs.com",{"_index":2412,"title":{},"body":{"index.html":{}}}],["https://www.google.com/recaptcha/api/siteverify",{"_index":1789,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1773,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["i.e",{"_index":1426,"title":{},"body":{"injectables/FilesService.html":{}}}],["id",{"_index":278,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"modules/MailerModule.html":{},"classes/PartialUserDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1518,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"coverage.html":{}}}],["ignore",{"_index":1442,"title":{},"body":{"injectables/FilesService.html":{}}}],["ii",{"_index":2576,"title":{},"body":{"license.html":{}}}],["immediately",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"classes/PaginationDto.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["implied",{"_index":2565,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"license.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["impossible",{"_index":2670,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2666,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":2648,"title":{},"body":{"license.html":{}}}],["inactivity.\\n",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incidental",{"_index":2765,"title":{},"body":{"license.html":{}}}],["include",{"_index":2663,"title":{},"body":{"license.html":{}}}],["included",{"_index":2676,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2515,"title":{},"body":{"license.html":{}}}],["including",{"_index":2449,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2047,"title":{},"body":{"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}}}],["incomingfile",{"_index":1523,"title":{"interfaces/IncomingFile.html":{}},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["incomingmessage",{"_index":1931,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{}}}],["incompatible",{"_index":2453,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1533,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["incorrectpassword",{"_index":1529,"title":{"classes/IncorrectPassword.html":{}},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["increment",{"_index":851,"title":{},"body":{"classes/Counter.html":{}}}],["incurred",{"_index":2662,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2661,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2652,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2524,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":2723,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1399,"title":{},"body":{"injectables/FilesService.html":{},"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":2616,"title":{},"body":{"license.html":{}}}],["informed",{"_index":2781,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2495,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2714,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":2572,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":2724,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":2744,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":76,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/PartialUserDto.html":{}}}],["initial",{"_index":2441,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":2710,"title":{},"body":{"license.html":{}}}],["inject",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":30,"title":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":31,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AdminService.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":1894,"title":{},"body":{"injectables/SessionsService.html":{}}}],["injectmodel",{"_index":527,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(application.name",{"_index":530,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["injectmodel(emailconfirmation.name",{"_index":2226,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(entry.name",{"_index":1373,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel(passwordreset.name",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(user.name",{"_index":2227,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(useractivation.name",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectqueue",{"_index":839,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"emails",{"_index":843,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerService.html":{}}}],["injectqueue(\"files",{"_index":844,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{}}}],["injury",{"_index":2786,"title":{},"body":{"license.html":{}}}],["inspired",{"_index":2371,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2376,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2378,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insufficientscopes",{"_index":414,"title":{"classes/InsufficientScopes.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["intellectual",{"_index":2544,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2604,"title":{},"body":{"license.html":{}}}],["interface",{"_index":549,"title":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":551,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/DeleteFileJob.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"interfaces/UploadedFile.html":{},"interfaces/WriteOptions.html":{},"overview.html":{}}}],["interfaces/incoming",{"_index":1946,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/mailer",{"_index":1626,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["interfaces/request.interface",{"_index":52,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["interfaces/send",{"_index":1662,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["interfaces/session",{"_index":1867,"title":{},"body":{"controllers/SessionsController.html":{}}}],["interfaces/session.interface",{"_index":1895,"title":{},"body":{"injectables/SessionsService.html":{}}}],["interfaces/storage",{"_index":958,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["interfaces/uploaded",{"_index":1949,"title":{},"body":{"injectables/StorageService.html":{}}}],["interfaces/write",{"_index":1950,"title":{},"body":{"injectables/StorageService.html":{}}}],["internalservererrorexception",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(\"failed",{"_index":743,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["internalservererrorexception(error",{"_index":1270,"title":{},"body":{"controllers/FilesController.html":{}}}],["internalservererrorexception(recaptcha_unexpected_result",{"_index":1819,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexception(result.error",{"_index":1814,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["internalservererrorexceptionfilter",{"_index":1537,"title":{"classes/InternalServerErrorExceptionFilter.html":{}},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["invalid",{"_index":898,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["invalidapikey",{"_index":418,"title":{"classes/InvalidAPIKey.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"guards/AuthGuard.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["invalidavatarfiletype",{"_index":986,"title":{"classes/InvalidAvatarFileType.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["invalidcredentials",{"_index":791,"title":{"classes/InvalidCredentials.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invalidemailconfirmationtoken",{"_index":990,"title":{"classes/InvalidEmailConfirmationToken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["invalidpasswordresetlink",{"_index":792,"title":{"classes/InvalidPasswordResetLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["invaliduseractivationlink",{"_index":793,"title":{"classes/InvalidUserActivationLink.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["ioredis",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/ISessionData.html":{},"guards/RecaptchaGuard.html":{},"classes/SessionDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["irequest",{"_index":51,"title":{"interfaces/IRequest.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"coverage.html":{}}}],["is(n",{"_index":863,"title":{},"body":{"classes/Counter.html":{}}}],["isalphanumeric",{"_index":308,"title":{},"body":{"classes/Application.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isalphanumeric(undefined",{"_index":1826,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["isboolean",{"_index":919,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["iscurrent",{"_index":1872,"title":{},"body":{"controllers/SessionsController.html":{}}}],["isemail",{"_index":1016,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":902,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isenum(applicationscopes",{"_index":908,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["isession",{"_index":1514,"title":{"interfaces/ISession.html":{}},"body":{"interfaces/ISession.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["isessiondata",{"_index":585,"title":{"interfaces/ISessionData.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"controllers/SessionsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfile",{"_index":1040,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isfolder",{"_index":1041,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["isn't",{"_index":1114,"title":{},"body":{"classes/Entry.html":{}}}],["isnotempty",{"_index":903,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":1597,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":885,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":904,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring",{"_index":915,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["ispublic",{"_index":1133,"title":{},"body":{"classes/Entry.html":{},"controllers/FilesController.html":{}}}],["isstring",{"_index":905,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstringpathsafe",{"_index":921,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringpathsafeconstraint",{"_index":1563,"title":{"classes/IsStringPathSafeConstraint.html":{}},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpath",{"_index":1592,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringvalidpathconstraint",{"_index":1586,"title":{"classes/IsStringValidPathConstraint.html":{}},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":1735,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":1289,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items.length",{"_index":1732,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["items.pop",{"_index":1733,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":1161,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["iuaparser.ibrowser",{"_index":1520,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.idevice",{"_index":1521,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["iuaparser.ios",{"_index":1522,"title":{},"body":{"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["job",{"_index":1331,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["job.progress(100",{"_index":1341,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["jobs/delete",{"_index":1336,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["joi",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.boolean().default(true",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"bytebin",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default(\"localhost",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2404,"title":{},"body":{"index.html":{}}}],["join(\"\\n",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpeg",{"_index":988,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["jpeg|jpg|png/gi",{"_index":2171,"title":{},"body":{"controllers/UsersController.html":{}}}],["js",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json",{"_index":2095,"title":{},"body":{"classes/User.html":{}}}],["judgment",{"_index":2718,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":2671,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":2665,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2790,"title":{},"body":{"license.html":{}}}],["kamil",{"_index":2409,"title":{},"body":{"index.html":{}}}],["keepcomments",{"_index":1706,"title":{},"body":{"injectables/MailerService.html":{}}}],["key",{"_index":279,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"guards/AuthGuard.html":{},"classes/GenerateApplicationKeyDto.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{}}}],["key.dto",{"_index":471,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["key.dto.ts",{"_index":1457,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["key.dto.ts:2",{"_index":1458,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{}}}],["key.split",{"_index":728,"title":{},"body":{"guards/AuthGuard.html":{}}}],["keyof",{"_index":1717,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["kind",{"_index":2736,"title":{},"body":{"license.html":{}}}],["know",{"_index":384,"title":{},"body":{"classes/Application.html":{}}}],["known",{"_index":2646,"title":{},"body":{"license.html":{}}}],["language",{"_index":2817,"title":{},"body":{"license.html":{}}}],["large",{"_index":1189,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["larger",{"_index":2465,"title":{},"body":{"license.html":{}}}],["lastused",{"_index":280,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{}}}],["later",{"_index":1556,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"license.html":{}}}],["law",{"_index":2788,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2800,"title":{},"body":{"license.html":{}}}],["lean",{"_index":1412,"title":{},"body":{"injectables/FilesService.html":{}}}],["legal",{"_index":2423,"title":{},"body":{"license.html":{}}}],["legend",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":370,"title":{},"body":{"classes/Application.html":{}}}],["lesser",{"_index":2504,"title":{},"body":{"license.html":{}}}],["level",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":2642,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2763,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2471,"title":{},"body":{"license.html":{}}}],["license",{"_index":2415,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license(s",{"_index":2635,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":2462,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":2394,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":2455,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2567,"title":{},"body":{"license.html":{}}}],["limit",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{}}}],["limit(options.limit",{"_index":1727,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2493,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2563,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1296,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["line",{"_index":1578,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":1208,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["list(query",{"_index":1365,"title":{},"body":{"injectables/FilesService.html":{}}}],["list(uid",{"_index":1222,"title":{},"body":{"controllers/FilesController.html":{}}}],["literal",{"_index":511,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"interfaces/PaginationOptions.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"interfaces/StorageOptions.html":{},"injectables/UsersService.html":{}}}],["litigation",{"_index":2711,"title":{},"body":{"license.html":{}}}],["locale",{"_index":1082,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":2845,"title":{},"body":{"license.html":{}}}],["log",{"_index":1265,"title":{},"body":{"controllers/FilesController.html":{}}}],["logged",{"_index":754,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["logger",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1543,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["login",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"miscellaneous/variables.html":{}}}],["login(undefined",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.email",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.email.ts",{"_index":2277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login.mjml",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logindto",{"_index":582,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logos",{"_index":2583,"title":{},"body":{"license.html":{}}}],["logout",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@session",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(session",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":1832,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["long!'})@isnotempty({message",{"_index":1823,"title":{},"body":{"classes/RegisterDto.html":{}}}],["longer",{"_index":1830,"title":{},"body":{"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["look",{"_index":2847,"title":{},"body":{"license.html":{}}}],["loss",{"_index":2771,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2778,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2769,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":348,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["lt",{"_index":1722,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2458,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1663,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["mail.options",{"_index":1841,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["mailer",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/UsersService.html":{}}}],["mailer.constants",{"_index":1623,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{}}}],["mailer.processor",{"_index":1624,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":1625,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailermodule",{"_index":133,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.registerasync",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermoduleasyncoptions",{"_index":1608,"title":{"interfaces/MailerModuleAsyncOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"coverage.html":{}}}],["maileroptions",{"_index":1615,"title":{"interfaces/MailerOptions.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["maileroptionsfactory",{"_index":1627,"title":{"interfaces/MailerOptionsFactory.html":{}},"body":{"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["mailerprocessor",{"_index":1603,"title":{"injectables/MailerProcessor.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"overview.html":{}}}],["mailerservice",{"_index":626,"title":{"injectables/MailerService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["maintains",{"_index":2796,"title":{},"body":{"license.html":{}}}],["make",{"_index":2547,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2590,"title":{},"body":{"license.html":{}}}],["making",{"_index":2496,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":2776,"title":{},"body":{"license.html":{}}}],["management",{"_index":2526,"title":{},"body":{"license.html":{}}}],["manner",{"_index":2626,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1266,"title":{},"body":{"controllers/FilesController.html":{}}}],["many",{"_index":1196,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["marks",{"_index":2582,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2467,"title":{},"body":{"license.html":{}}}],["math.min(math.max(n",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":2809,"title":{},"body":{"license.html":{}}}],["max",{"_index":2103,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["max(max_port",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["max_file_size",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["max_files_per_upload",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["max_port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["max_resend_attempts",{"_index":2104,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["maxlength",{"_index":294,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["maxlength(255",{"_index":924,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/UpdateEntryDto.html":{}}}],["maxlength(32",{"_index":907,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["me(@currentuser",{"_index":2161,"title":{},"body":{"controllers/UsersController.html":{}}}],["me(me",{"_index":2140,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.id",{"_index":2183,"title":{},"body":{"controllers/UsersController.html":{}}}],["me.todto",{"_index":2162,"title":{},"body":{"controllers/UsersController.html":{}}}],["means",{"_index":2422,"title":{},"body":{"license.html":{}}}],["memory",{"_index":1495,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1489,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantable",{"_index":2741,"title":{},"body":{"license.html":{}}}],["message",{"_index":888,"title":{},"body":{"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{}}}],["metadata",{"_index":1786,"title":{},"body":{"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["meter",{"_index":1954,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.size",{"_index":2003,"title":{},"body":{"injectables/StorageService.html":{}}}],["meter.ts",{"_index":2014,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["meter.ts:10",{"_index":2023,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:4",{"_index":2018,"title":{},"body":{"classes/StreamMeter.html":{}}}],["meter.ts:6",{"_index":2025,"title":{},"body":{"classes/StreamMeter.html":{}}}],["method",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"license.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{}}}],["middlewares",{"_index":1400,"title":{},"body":{"injectables/FilesService.html":{}}}],["middlewares/admin.middleware",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{}}}],["mimetype",{"_index":1528,"title":{},"body":{"interfaces/IncomingFile.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{}}}],["min",{"_index":1078,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["min(0",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["min(1",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["min(min_port",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["min_port",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":296,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["minlength(8",{"_index":1822,"title":{},"body":{"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["minutes",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["miscellaneous",{"_index":2350,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1099,"title":{},"body":{"classes/Entry.html":{},"classes/ResetPasswordDto.html":{}}}],["missing!'})@isstring",{"_index":1837,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["mit",{"_index":2393,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":1686,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mjml2html",{"_index":1688,"title":{},"body":{"injectables/MailerService.html":{}}}],["mjml2html(mjml",{"_index":1705,"title":{},"body":{"injectables/MailerService.html":{}}}],["mm",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":2384,"title":{},"body":{"index.html":{}}}],["model",{"_index":508,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":2485,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2447,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2831,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2548,"title":{},"body":{"license.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":556,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.errors",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["modules/applications/applications.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/applications/applications.service",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/applications/enums/application",{"_index":329,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["modules/auth/auth.errors",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["modules/auth/auth.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["modules/bull",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/files/files.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/BullBoardModule.html":{},"modules/UsersModule.html":{}}}],["modules/files/files.service",{"_index":2157,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["modules/health/health.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer/mailer.service",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/sessions/dto/session.dto",{"_index":1513,"title":{},"body":{"interfaces/IRequest.html":{}}}],["modules/sessions/interfaces/session",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/sessions/sessions.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["modules/sessions/sessions.service",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["modules/storage/storage.module",{"_index":1320,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["modules/storage/storage.service",{"_index":1246,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{}}}],["modules/users/dto/user.dto",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["modules/users/schemas/user.schema",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{}}}],["modules/users/users.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.service",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["mongo",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["mongo_db_name",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_host",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_pool_size",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_port",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo_username",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://${config.get(\"mongo_host\")}:${config.get(\"mongo_port",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":322,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":1490,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":503,"title":{},"body":{"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["mongostore",{"_index":2267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1730,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["moreover",{"_index":2704,"title":{},"body":{"license.html":{}}}],["morgan",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["mozilla",{"_index":2416,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":2840,"title":{},"body":{"license.html":{}}}],["ms",{"_index":1022,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"dependencies.html":{}}}],["ms(\"1h",{"_index":1769,"title":{},"body":{"classes/PasswordReset.html":{}}}],["ms(\"3h",{"_index":1024,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["ms(\"7d",{"_index":2070,"title":{},"body":{"classes/User.html":{},"classes/UserActivation.html":{}}}],["multiple",{"_index":371,"title":{},"body":{"classes/Application.html":{}}}],["myśliwiec",{"_index":2410,"title":{},"body":{"index.html":{}}}],["n",{"_index":865,"title":{},"body":{"classes/Counter.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["names",{"_index":2038,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ne",{"_index":1879,"title":{},"body":{"controllers/SessionsController.html":{}}}],["necessary",{"_index":2584,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":2761,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2328,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":2414,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":840,"title":{},"body":{"injectables/BullBoardProvider.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":557,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"injectables/SessionsService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1491,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":753,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":61,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AppModule.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/ResetPasswordDto.html":{},"injectables/StorageService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newavatarid",{"_index":2217,"title":{},"body":{"injectables/UsersService.html":{}}}],["newdisplayname",{"_index":2036,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newemail",{"_index":1011,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpassword",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["newpath",{"_index":1110,"title":{},"body":{"classes/Entry.html":{}}}],["next",{"_index":72,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"injectables/AuthMiddleware.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["next(error",{"_index":82,"title":{},"body":{"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["next(new",{"_index":1097,"title":{},"body":{"classes/Entry.html":{}}}],["nextfunction",{"_index":73,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":2364,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailer",{"_index":842,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/MailerProcessor.html":{},"dependencies.html":{}}}],["nodemailer.createtransport(this.options",{"_index":1658,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["nodemailer/lib/mailer",{"_index":1840,"title":{},"body":{"interfaces/SendMailOptions.html":{}}}],["nodemailer_module_id",{"_index":1621,"title":{},"body":{"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailer_module_options",{"_index":1622,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nofilesuploaded",{"_index":1190,"title":{"classes/NoFilesUploaded.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["non",{"_index":2542,"title":{},"body":{"license.html":{}}}],["note",{"_index":2835,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":406,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/TooManyApplications.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["nothing",{"_index":2804,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2443,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2638,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":2705,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2698,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2568,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2377,"title":{},"body":{"index.html":{}}}],["null",{"_index":300,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IRequest.html":{},"interfaces/ISessionData.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{},"classes/UpdateEntryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":858,"title":{},"body":{"classes/Counter.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"classes/UserActivation.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1581,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":1584,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["object.values(applicationscopes",{"_index":352,"title":{},"body":{"classes/Application.html":{}}}],["obligation",{"_index":2657,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2653,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2619,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1554,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":2554,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2658,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2498,"title":{},"body":{"license.html":{}}}],["olduser",{"_index":2233,"title":{},"body":{"injectables/UsersService.html":{}}}],["omit",{"_index":1718,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{}}}],["on(\"error",{"_index":2005,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fieldslimit",{"_index":2006,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"fileslimit",{"_index":2007,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"finish",{"_index":2009,"title":{},"body":{"injectables/StorageService.html":{}}}],["on(\"partslimit",{"_index":2008,"title":{},"body":{"injectables/StorageService.html":{}}}],["onapplicationbootstrap",{"_index":1651,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/StorageService.html":{}}}],["onceitequalsto",{"_index":852,"title":{},"body":{"classes/Counter.html":{}}}],["onceitequalsto(n",{"_index":866,"title":{},"body":{"classes/Counter.html":{}}}],["one",{"_index":2632,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":2696,"title":{},"body":{"license.html":{}}}],["open",{"_index":2395,"title":{},"body":{"index.html":{}}}],["operator",{"_index":1721,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":2636,"title":{},"body":{"license.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/IRequest.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"interfaces/SendMailOptions.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateUserDto.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":1239,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":561,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options).collation(entry_collation_options",{"_index":1416,"title":{},"body":{"injectables/FilesService.html":{}}}],["options.cursor",{"_index":1433,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.direction",{"_index":1719,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.field",{"_index":1720,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["options.filter",{"_index":1968,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.filter(req",{"_index":1969,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.html",{"_index":1699,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.imports",{"_index":1631,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.inject",{"_index":1637,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.interface",{"_index":559,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{}}}],["options.interface.ts",{"_index":553,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/SendMailOptions.html":{},"interfaces/StorageOptions.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["options.limit",{"_index":1436,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.limits",{"_index":1965,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.mjml",{"_index":1700,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.mjml.data",{"_index":1702,"title":{},"body":{"injectables/MailerService.html":{}}}],["options.query",{"_index":1724,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.sort",{"_index":1726,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["options.transformers",{"_index":1993,"title":{},"body":{"injectables/StorageService.html":{}}}],["options.useclass",{"_index":1636,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.useexisting",{"_index":1633,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["options.usefactory",{"_index":1634,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory",{"_index":1638,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["optionsfactory.createmaileroptions",{"_index":1639,"title":{},"body":{"modules/MailerModule.html":{}}}],["optionsfactory.createstorageoptions",{"_index":1917,"title":{},"body":{"modules/StorageModule.html":{}}}],["order",{"_index":2672,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":2681,"title":{},"body":{"license.html":{}}}],["original",{"_index":2600,"title":{},"body":{"license.html":{}}}],["originally",{"_index":2829,"title":{},"body":{"license.html":{}}}],["os",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"injectables/StorageService.html":{}}}],["os.tmpdir",{"_index":1941,"title":{},"body":{"injectables/StorageService.html":{}}}],["others",{"_index":2433,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2528,"title":{},"body":{"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":2532,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2852,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2086,"title":{},"body":{"classes/User.html":{}}}],["ownership",{"_index":2529,"title":{},"body":{"license.html":{}}}],["owns",{"_index":2427,"title":{},"body":{"license.html":{}}}],["package",{"_index":2297,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":374,"title":{},"body":{"classes/Application.html":{}}}],["page",{"_index":1731,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1370,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginate(this.entries",{"_index":1432,"title":{},"body":{"injectables/FilesService.html":{}}}],["paginated",{"_index":1065,"title":{},"body":{"classes/Entry.html":{}}}],["pagination",{"_index":1371,"title":{"interfaces/Pagination.html":{}},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{}}}],["paginationdto",{"_index":1243,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["paginationoptions",{"_index":1715,"title":{"interfaces/PaginationOptions.html":{}},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":461,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":490,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/ApplicationAlreadyExists.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"classes/EntryAlreadyExists.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UserNotFound.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":1129,"title":{},"body":{"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["parentfolder",{"_index":1124,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder.deletable",{"_index":1125,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder?.hidden",{"_index":1131,"title":{},"body":{"classes/Entry.html":{}}}],["parentfolder?.public",{"_index":1134,"title":{},"body":{"classes/Entry.html":{}}}],["parentfoldernotfound",{"_index":1157,"title":{"classes/ParentFolderNotFound.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentischildrenofitself",{"_index":1159,"title":{"classes/ParentIsChildrenOfItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parentisitself",{"_index":1162,"title":{"classes/ParentIsItself.html":{}},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"injectables/FilesService.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["parseboolpipe",{"_index":1232,"title":{},"body":{"controllers/FilesController.html":{}}}],["parseintpipe",{"_index":1233,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["part",{"_index":385,"title":{},"body":{"classes/Application.html":{},"license.html":{}}}],["partialfilterexpression",{"_index":350,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["partialuserdto",{"_index":1745,"title":{"classes/PartialUserDto.html":{}},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["particular",{"_index":2434,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1199,"title":{},"body":{"classes/FileTooLarge.html":{},"injectables/FilesService.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["parts.length",{"_index":1422,"title":{},"body":{"injectables/FilesService.html":{}}}],["parts.slice(0",{"_index":1421,"title":{},"body":{"injectables/FilesService.html":{}}}],["parts[parts.length",{"_index":1420,"title":{},"body":{"injectables/FilesService.html":{}}}],["party",{"_index":2780,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2575,"title":{},"body":{"license.html":{}}}],["pass",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["passthrough",{"_index":2015,"title":{},"body":{"classes/StreamMeter.html":{}}}],["password",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteUserDto.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":1450,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:11",{"_index":1838,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1836,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":1454,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["password/${reset.token",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordchangedemail",{"_index":2225,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordchangedemail(user.email",{"_index":2246,"title":{},"body":{"injectables/UsersService.html":{}}}],["passwordreset",{"_index":765,"title":{"classes/PasswordReset.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordreset(email",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.deleteone",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordreset.name",{"_index":773,"title":{},"body":{"modules/AuthModule.html":{}}}],["passwordreset.uid",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresets",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetschema",{"_index":766,"title":{},"body":{"modules/AuthModule.html":{},"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetschema.pre(\"save",{"_index":1771,"title":{},"body":{"classes/PasswordReset.html":{}}}],["passwordresetted",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordresetted(user.email",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":462,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["patch(\"/:id",{"_index":492,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["patch(\"/:id/update",{"_index":1273,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch(\"@me",{"_index":2163,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":457,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["patch('/:id/update')@usescopes(applicationscopes.files_write",{"_index":1226,"title":{},"body":{"controllers/FilesController.html":{}}}],["patch('@me",{"_index":2149,"title":{},"body":{"controllers/UsersController.html":{}}}],["patent",{"_index":2489,"title":{},"body":{"license.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.isabsolute(options.directory",{"_index":963,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this._getdestinationondisk(id",{"_index":977,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.join(this.options.directory",{"_index":974,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["path.parse(__dirname).root",{"_index":1501,"title":{},"body":{"controllers/HealthController.html":{}}}],["path.validator.ts",{"_index":1587,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path.validator.ts:12",{"_index":1588,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path.validator.ts:16",{"_index":1589,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["path_safe_regex",{"_index":1073,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_safe_regex.test(value",{"_index":1077,"title":{},"body":{"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{}}}],["path_valid_regex",{"_index":1590,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path_valid_regex.test(value",{"_index":1593,"title":{},"body":{"classes/IsStringValidPathConstraint.html":{}}}],["payloadtoolargeexception",{"_index":1183,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["percent",{"_index":2531,"title":{},"body":{"license.html":{}}}],["perform",{"_index":416,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["performance",{"_index":2748,"title":{},"body":{"license.html":{}}}],["period",{"_index":377,"title":{},"body":{"classes/Application.html":{}}}],["permits",{"_index":2633,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2594,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2785,"title":{},"body":{"license.html":{}}}],["pick",{"_index":554,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["pipeline",{"_index":1991,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(stream",{"_index":1995,"title":{},"body":{"injectables/StorageService.html":{}}}],["pipeline.push(writable",{"_index":1996,"title":{},"body":{"injectables/StorageService.html":{}}}],["place",{"_index":2798,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2675,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":319,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"controllers/SessionsController.html":{},"classes/User.html":{}}}],["plaintoclass(applicationdto",{"_index":396,"title":{},"body":{"classes/Application.html":{}}}],["plaintoclass(cls",{"_index":2096,"title":{},"body":{"classes/User.html":{}}}],["plaintoclass(entrydto",{"_index":1148,"title":{},"body":{"classes/Entry.html":{}}}],["plaintoclass(sessiondto",{"_index":1871,"title":{},"body":{"controllers/SessionsController.html":{}}}],["plaintoclass(userdto",{"_index":2097,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":992,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"guards/RecaptchaGuard.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":989,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{}}}],["poolsize",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{}}}],["portions",{"_index":2450,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2782,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2476,"title":{},"body":{"license.html":{}}}],["post",{"_index":463,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post(\"/:id/key",{"_index":495,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post(\"@me/avatar",{"_index":2167,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"@me/delete",{"_index":2186,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"create",{"_index":1275,"title":{},"body":{"controllers/FilesController.html":{}}}],["post(\"forgot",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"reset",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"upload",{"_index":1291,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/:id/key')@throttle(25",{"_index":454,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["post('@me/avatar",{"_index":2147,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('@me/delete",{"_index":2138,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('create",{"_index":1211,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('forgot",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@recaptchaaction('login')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@recaptchaaction('register')@recaptchascore(0.7)@useguards(recaptchaguard",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload')@usescopes(applicationscopes.files_write",{"_index":1229,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@throttle(25",{"_index":446,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["power",{"_index":2522,"title":{},"body":{"license.html":{}}}],["pre",{"_index":345,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["preferred",{"_index":2511,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":1441,"title":{},"body":{"injectables/FilesService.html":{}}}],["prevent",{"_index":2084,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["principal",{"_index":2797,"title":{},"body":{"license.html":{}}}],["prior",{"_index":2700,"title":{},"body":{"license.html":{}}}],["private",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1334,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process(\"delete",{"_index":1339,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process(\"send",{"_index":1667,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["process('delete",{"_index":1332,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["process('send",{"_index":1656,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor",{"_index":1335,"title":{},"body":{"injectables/FilesProcessor.html":{},"injectables/MailerProcessor.html":{}}}],["processor(\"emails",{"_index":1664,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["processor(\"files",{"_index":1338,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["production",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailerService.html":{},"index.html":{}}}],["profits",{"_index":2770,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":2363,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2678,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2789,"title":{},"body":{"license.html":{}}}],["project",{"_index":2396,"title":{},"body":{"index.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"interfaces/Email.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1300,"title":{},"body":{"controllers/FilesController.html":{}}}],["prop",{"_index":323,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop(undefined",{"_index":301,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1013,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({enum",{"_index":311,"title":{},"body":{"classes/Application.html":{}}}],["prop({lowercase",{"_index":293,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["prop({maxlength",{"_index":304,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1060,"title":{},"body":{"classes/Entry.html":{}}}],["prop({required",{"_index":1052,"title":{},"body":{"classes/Entry.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1057,"title":{},"body":{"classes/Entry.html":{}}}],["properties",{"_index":273,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/LoginDto.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"injectables/SessionsService.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"interfaces/WriteOptions.html":{}}}],["property",{"_index":1067,"title":{},"body":{"classes/Entry.html":{},"license.html":{}}}],["propertyname",{"_index":1582,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["protocol",{"_index":1689,"title":{},"body":{"injectables/MailerService.html":{}}}],["protocol}://${this.config.get(\"frontend_domain",{"_index":1694,"title":{},"body":{"injectables/MailerService.html":{}}}],["prove",{"_index":2749,"title":{},"body":{"license.html":{}}}],["provide",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["provided",{"_index":909,"title":{},"body":{"classes/CreateApplicationDto.html":{},"guards/RecaptchaGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided!'})@isoptional",{"_index":899,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["provider",{"_index":1610,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provides",{"_index":2816,"title":{},"body":{"license.html":{}}}],["provision",{"_index":2811,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2690,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":2803,"title":{},"body":{"license.html":{}}}],["public",{"_index":914,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateEntryDto.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["publish",{"_index":2825,"title":{},"body":{"license.html":{}}}],["published",{"_index":2830,"title":{},"body":{"license.html":{}}}],["pump",{"_index":1943,"title":{},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"dependencies.html":{}}}],["pump(pipeline",{"_index":2000,"title":{},"body":{"injectables/StorageService.html":{}}}],["pump.stream",{"_index":1992,"title":{},"body":{"injectables/StorageService.html":{}}}],["purpose",{"_index":2743,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2520,"title":{},"body":{"license.html":{}}}],["put",{"_index":2844,"title":{},"body":{"license.html":{}}}],["qs",{"_index":1778,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["quality",{"_index":2747,"title":{},"body":{"license.html":{}}}],["query",{"_index":516,"title":{},"body":{"injectables/ApplicationsService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"injectables/SessionsService.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["query(\"cursor",{"_index":1282,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"folder",{"_index":1284,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"limit",{"_index":1286,"title":{},"body":{"controllers/FilesController.html":{}}}],["query(\"public",{"_index":1292,"title":{},"body":{"controllers/FilesController.html":{}}}],["querycursor",{"_index":1071,"title":{},"body":{"classes/Entry.html":{}}}],["queryfindbaseoptions",{"_index":1361,"title":{},"body":{"injectables/FilesService.html":{}}}],["queryfindoptions",{"_index":1359,"title":{},"body":{"injectables/FilesService.html":{}}}],["queue",{"_index":835,"title":{},"body":{"injectables/BullBoardProvider.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{}}}],["raw",{"_index":326,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["read",{"_index":1927,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["read(id",{"_index":1936,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable",{"_index":950,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["readable.on(\"error",{"_index":1259,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.on(\"limit",{"_index":1997,"title":{},"body":{"injectables/StorageService.html":{}}}],["readable.pipe(res",{"_index":1272,"title":{},"body":{"controllers/FilesController.html":{}}}],["readable.resume",{"_index":1985,"title":{},"body":{"injectables/StorageService.html":{}}}],["readiness",{"_index":1480,"title":{},"body":{"controllers/HealthController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reasonable",{"_index":2624,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":1595,"title":{},"body":{"classes/LoginDto.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action",{"_index":1791,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_action_key",{"_index":1790,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_failed",{"_index":1779,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_missing",{"_index":1781,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score",{"_index":1793,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_score_key",{"_index":1792,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_secret",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha_unexpected_result",{"_index":1783,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptcha_url",{"_index":1788,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchaaction(\"login",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaaction(\"register",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{}}}],["recaptchaguard",{"_index":622,"title":{"guards/RecaptchaGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RecaptchaGuard.html":{},"coverage.html":{}}}],["recaptchascore",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recaptchascore(0.7",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":2708,"title":{},"body":{"license.html":{}}}],["received",{"_index":2706,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2629,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2617,"title":{},"body":{"license.html":{}}}],["record",{"_index":1679,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{}}}],["recursive",{"_index":972,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["recycling",{"_index":2085,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":2801,"title":{},"body":{"license.html":{}}}],["references",{"_index":2834,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2335,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["reformed",{"_index":2814,"title":{},"body":{"license.html":{}}}],["regex",{"_index":1091,"title":{},"body":{"classes/Entry.html":{},"injectables/FilesService.html":{}}}],["regexp",{"_index":1428,"title":{},"body":{"injectables/FilesService.html":{}}}],["regexp(`${name",{"_index":1429,"title":{},"body":{"injectables/FilesService.html":{}}}],["register",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(@body",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(options",{"_index":1614,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["register(undefined",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerasync",{"_index":1618,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerasync(options",{"_index":1619,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["registerdecorator",{"_index":1571,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["registerdto",{"_index":593,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registration",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regulation",{"_index":2669,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":2689,"title":{},"body":{"license.html":{}}}],["reject",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(error",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":1982,"title":{},"body":{"injectables/StorageService.html":{}}}],["relating",{"_index":2792,"title":{},"body":{"license.html":{}}}],["relativelink",{"_index":1676,"title":{},"body":{"injectables/MailerService.html":{}}}],["relativelink.substring(relativelink.startswith",{"_index":1695,"title":{},"body":{"injectables/MailerService.html":{}}}],["relevant",{"_index":2846,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":2645,"title":{},"body":{"license.html":{}}}],["remoteip",{"_index":1799,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["remove",{"_index":1398,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":2571,"title":{},"body":{"license.html":{}}}],["rename",{"_index":2833,"title":{},"body":{"license.html":{}}}],["render",{"_index":1671,"title":{},"body":{"injectables/MailerService.html":{}}}],["render(template",{"_index":1677,"title":{},"body":{"injectables/MailerService.html":{}}}],["repair",{"_index":2753,"title":{},"body":{"license.html":{}}}],["repository",{"_index":2375,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2597,"title":{},"body":{"license.html":{}}}],["represents",{"_index":2598,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":2546,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["req.body",{"_index":1796,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["req.headers",{"_index":2012,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.headers.authorization",{"_index":723,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.pipe(busboy",{"_index":2010,"title":{},"body":{"injectables/StorageService.html":{}}}],["req.session",{"_index":742,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.ip",{"_index":746,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.lastused",{"_index":747,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.session.uid",{"_index":744,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":741,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["req.user?.admin",{"_index":59,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{}}}],["request",{"_index":417,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"interfaces/IRequest.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"guards/RecaptchaGuard.html":{},"classes/TooManyApplications.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["request.mjml",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{}}}],["require(\"nodemailer/lib/smtp",{"_index":1642,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["required",{"_index":306,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"license.html":{}}}],["requirements",{"_index":2586,"title":{},"body":{"license.html":{}}}],["res",{"_index":70,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{}}}],["res.data",{"_index":1803,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["res.headerssent",{"_index":1268,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(err.getstatus()).send(err.getresponse",{"_index":1271,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(statuscode).json",{"_index":1553,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["resellers",{"_index":2732,"title":{},"body":{"license.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"modules/MailerModule.html":{},"classes/ResetPasswordDto.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reset.email",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset.email.ts",{"_index":2275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.mjml",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset.schema",{"_index":768,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["reset.schema.ts",{"_index":1763,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset.schema.ts:13",{"_index":1764,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:14",{"_index":1768,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:20",{"_index":1765,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:29",{"_index":1766,"title":{},"body":{"classes/PasswordReset.html":{}}}],["reset.schema.ts:38",{"_index":1767,"title":{},"body":{"classes/PasswordReset.html":{}}}],["resetpassword",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(newpassword",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(undefined",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":597,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resize(512",{"_index":2178,"title":{},"body":{"controllers/UsersController.html":{}}}],["resolve",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["resolve(buffer.tostring(\"hex",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(files",{"_index":1983,"title":{},"body":{"injectables/StorageService.html":{}}}],["respect",{"_index":2559,"title":{},"body":{"license.html":{}}}],["response",{"_index":71,"title":{},"body":{"injectables/AdminMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{}}}],["responsibilities",{"_index":2614,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2623,"title":{},"body":{"license.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1817,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.error",{"_index":1813,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.score",{"_index":1818,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["result.success",{"_index":1815,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["resulting",{"_index":2787,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/Counter.html":{},"classes/DiskStorage.html":{},"interfaces/Email.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"controllers/HealthController.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"modules/MailerModule.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revoke",{"_index":1854,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(@currentuser(\"id",{"_index":1875,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revoke(uid",{"_index":1859,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall",{"_index":1855,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(@currentuser(\"id",{"_index":1878,"title":{},"body":{"controllers/SessionsController.html":{}}}],["revokeall(uid",{"_index":1862,"title":{},"body":{"controllers/SessionsController.html":{}}}],["right",{"_index":2473,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2479,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":2746,"title":{},"body":{"license.html":{}}}],["root",{"_index":1693,"title":{},"body":{"injectables/MailerService.html":{}}}],["rotate",{"_index":2348,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":733,"title":{},"body":{"guards/AuthGuard.html":{}}}],["royalty",{"_index":2540,"title":{},"body":{"license.html":{}}}],["run",{"_index":2381,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2340,"title":{},"body":{"dependencies.html":{}}}],["safe.validator",{"_index":923,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{}}}],["safe.validator.ts",{"_index":1565,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["safe.validator.ts:12",{"_index":1568,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safe.validator.ts:16",{"_index":1570,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{}}}],["safety",{"_index":2087,"title":{},"body":{"classes/User.html":{}}}],["sale",{"_index":2499,"title":{},"body":{"license.html":{}}}],["same",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["save",{"_index":346,"title":{},"body":{"classes/Application.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":2368,"title":{},"body":{"index.html":{}}}],["schema",{"_index":324,"title":{},"body":{"classes/Application.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"modules/FilesModule.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":325,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["schemafactory.createforclass(application",{"_index":355,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(emailconfirmation",{"_index":1026,"title":{},"body":{"classes/EmailConfirmation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(entry",{"_index":1080,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(passwordreset",{"_index":1770,"title":{},"body":{"classes/PasswordReset.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":2075,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(useractivation",{"_index":2109,"title":{},"body":{"classes/UserActivation.html":{},"miscellaneous/variables.html":{}}}],["schemas/application.schema",{"_index":502,"title":{},"body":{"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{}}}],["schemas/email",{"_index":2202,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemas/entry.schema",{"_index":1319,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{}}}],["schemas/password",{"_index":767,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user",{"_index":771,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["schemas/user.schema",{"_index":2156,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":894,"title":{},"body":{"classes/CreateApplicationDto.html":{},"license.html":{}}}],["scopes",{"_index":281,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"miscellaneous/variables.html":{}}}],["scopes.enum",{"_index":330,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"classes/CreateApplicationDto.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["scopes.enum.ts",{"_index":2353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scopes.every(scope",{"_index":392,"title":{},"body":{"classes/Application.html":{}}}],["scopes.length",{"_index":736,"title":{},"body":{"guards/AuthGuard.html":{}}}],["score",{"_index":1785,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["score.decorator",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["score.decorator.ts",{"_index":2260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":2131,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(@param(\"username",{"_index":2193,"title":{},"body":{"controllers/UsersController.html":{}}}],["search(username",{"_index":2143,"title":{},"body":{"controllers/UsersController.html":{}}}],["secondary",{"_index":2454,"title":{},"body":{"license.html":{}}}],["secret",{"_index":338,"title":{},"body":{"classes/Application.html":{},"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2558,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2611,"title":{},"body":{"license.html":{}}}],["secure",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":2592,"title":{},"body":{"license.html":{}}}],["select",{"_index":1410,"title":{},"body":{"injectables/FilesService.html":{}}}],["sell",{"_index":2553,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2497,"title":{},"body":{"license.html":{}}}],["send",{"_index":1652,"title":{},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{}}}],["send(job",{"_index":1655,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["send(options",{"_index":1682,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmailoptions",{"_index":1661,"title":{"interfaces/SendMailOptions.html":{}},"body":{"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separate",{"_index":2468,"title":{},"body":{"license.html":{}}}],["seperator",{"_index":381,"title":{},"body":{"classes/Application.html":{}}}],["server",{"_index":1539,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":2581,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":2752,"title":{},"body":{"license.html":{}}}],["session",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"controllers/SessionsController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.destroy(error",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.identifier",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SessionsController.html":{}}}],["session.ip",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.lastused",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ua",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.uid",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["session_secret",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["sessioncookiename",{"_index":2268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessiondto",{"_index":1512,"title":{"classes/SessionDto.html":{}},"body":{"interfaces/IRequest.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["sessions",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{}}}],["sessions.controller",{"_index":1884,"title":{},"body":{"modules/SessionsModule.html":{}}}],["sessions.map",{"_index":1870,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessions.service",{"_index":1865,"title":{},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{}}}],["sessionscontroller",{"_index":1851,"title":{"controllers/SessionsController.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"coverage.html":{}}}],["sessionsmodule",{"_index":134,"title":{"modules/SessionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionsservice",{"_index":778,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":853,"title":{},"body":{"classes/Counter.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["set(data.scopes)).foreach(scope",{"_index":546,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["set(value",{"_index":869,"title":{},"body":{"classes/Counter.html":{}}}],["setmetadata(auth_guard_optional",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(auth_guard_scopes",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_action_key",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(recaptcha_score_key",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setqueues",{"_index":841,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["setqueues([this.emailsqueue",{"_index":845,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["settle",{"_index":1955,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settle(files.map(file",{"_index":1976,"title":{},"body":{"injectables/StorageService.html":{}}}],["shall",{"_index":2726,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2533,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":2151,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["sid.the.science.kid",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":2369,"title":{},"body":{"index.html":{}}}],["silly",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1042,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/UploadedFile.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":2682,"title":{},"body":{"license.html":{}}}],["smtp_from",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_host",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_password",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_port",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_secure",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_tls",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["smtp_username",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["smtptransport",{"_index":1641,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["smtptransport.options",{"_index":1645,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["software",{"_index":2429,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":2488,"title":{},"body":{"license.html":{}}}],["sort",{"_index":1437,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["sorting",{"_index":1063,"title":{},"body":{"classes/Entry.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"modules/ApplicationsModule.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/ForgotPasswordDto.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":2764,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2664,"title":{},"body":{"license.html":{}}}],["specify",{"_index":734,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sponsors",{"_index":2399,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application",{"_index":2352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../application.schema.ts",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../atob.ts",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../btoa.ts",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chunk.ts",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clamp.ts",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entry.schema.ts",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generateid.ts",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.constants.ts",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../optional",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paginate.ts",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recaptcha.guard.ts",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scopes.decorator.ts",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settle.ts",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.constants.ts",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../successful",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/current",{"_index":2254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/optional",{"_index":2256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/recaptcha",{"_index":2258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/scopes.decorator.ts",{"_index":2261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dto/pagination.dto.ts",{"_index":1738,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/dto/pagination.dto.ts:4",{"_index":1739,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/dto/pagination.dto.ts:6",{"_index":1740,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/dto/pagination.dto.ts:8",{"_index":1741,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/exceptions/internal",{"_index":1538,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts",{"_index":32,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:9",{"_index":42,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/guards/auth.guard.ts",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/auth.guard.ts:29",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:37",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:53",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:81",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/auth.guard.ts:96",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guards/recaptcha.guard.ts",{"_index":1772,"title":{},"body":{"guards/RecaptchaGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/recaptcha.guard.ts:27",{"_index":1774,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:34",{"_index":1776,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/guards/recaptcha.guard.ts:85",{"_index":1775,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["src/interfaces/request.interface.ts",{"_index":1511,"title":{},"body":{"interfaces/IRequest.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/admin.middleware.ts",{"_index":66,"title":{},"body":{"injectables/AdminMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/admin.middleware.ts:11",{"_index":74,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":750,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":751,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:21",{"_index":752,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:16",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:6",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/applications/applications.controller.ts",{"_index":438,"title":{},"body":{"controllers/ApplicationsController.html":{},"coverage.html":{}}}],["src/modules/applications/applications.controller.ts:21",{"_index":443,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:29",{"_index":448,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:37",{"_index":452,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:42",{"_index":458,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.controller.ts:52",{"_index":455,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["src/modules/applications/applications.errors.ts",{"_index":401,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["src/modules/applications/applications.errors.ts:13",{"_index":436,"title":{},"body":{"classes/ApplicationNotFound.html":{}}}],["src/modules/applications/applications.errors.ts:19",{"_index":1536,"title":{},"body":{"classes/InsufficientScopes.html":{}}}],["src/modules/applications/applications.errors.ts:25",{"_index":1557,"title":{},"body":{"classes/InvalidAPIKey.html":{}}}],["src/modules/applications/applications.errors.ts:31",{"_index":2028,"title":{},"body":{"classes/TooManyApplications.html":{}}}],["src/modules/applications/applications.errors.ts:8",{"_index":404,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{}}}],["src/modules/applications/applications.module.ts",{"_index":500,"title":{},"body":{"modules/ApplicationsModule.html":{}}}],["src/modules/applications/applications.service.ts",{"_index":505,"title":{},"body":{"injectables/ApplicationsService.html":{},"coverage.html":{}}}],["src/modules/applications/applications.service.ts:18",{"_index":509,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:26",{"_index":512,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:44",{"_index":515,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:48",{"_index":518,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:55",{"_index":520,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:59",{"_index":522,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:63",{"_index":524,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/applications.service.ts:70",{"_index":526,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["src/modules/applications/dto/application.dto.ts",{"_index":427,"title":{},"body":{"classes/ApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/application.dto.ts:11",{"_index":431,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:13",{"_index":432,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:15",{"_index":433,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:17",{"_index":434,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:20",{"_index":435,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:6",{"_index":428,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/application.dto.ts:8",{"_index":429,"title":{},"body":{"classes/ApplicationDto.html":{}}}],["src/modules/applications/dto/create",{"_index":883,"title":{},"body":{"classes/CreateApplicationDto.html":{},"coverage.html":{}}}],["src/modules/applications/dto/generate",{"_index":1456,"title":{},"body":{"classes/GenerateApplicationKeyDto.html":{},"coverage.html":{}}}],["src/modules/applications/enums/application",{"_index":2354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/applications/schemas/application.schema.ts",{"_index":270,"title":{},"body":{"classes/Application.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/applications/schemas/application.schema.ts:29",{"_index":288,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:30",{"_index":316,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:40",{"_index":299,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:57",{"_index":302,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:65",{"_index":303,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:74",{"_index":309,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:80",{"_index":312,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:89",{"_index":315,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:91",{"_index":286,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:92",{"_index":289,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:93",{"_index":290,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/applications/schemas/application.schema.ts:94",{"_index":313,"title":{},"body":{"classes/Application.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:108",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:113",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:50",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:55",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:67",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:98",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.errors.ts",{"_index":1530,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["src/modules/auth/auth.errors.ts:15",{"_index":1561,"title":{},"body":{"classes/InvalidPasswordResetLink.html":{}}}],["src/modules/auth/auth.errors.ts:21",{"_index":1562,"title":{},"body":{"classes/InvalidUserActivationLink.html":{}}}],["src/modules/auth/auth.errors.ts:27",{"_index":2124,"title":{},"body":{"classes/UserNotActivated.html":{}}}],["src/modules/auth/auth.errors.ts:3",{"_index":1531,"title":{},"body":{"classes/IncorrectPassword.html":{}}}],["src/modules/auth/auth.errors.ts:33",{"_index":2126,"title":{},"body":{"classes/UserNotLoggedIn.html":{}}}],["src/modules/auth/auth.errors.ts:9",{"_index":1559,"title":{},"body":{"classes/InvalidCredentials.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":762,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:40",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:70",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:79",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:91",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/forgot",{"_index":1449,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1594,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:10",{"_index":1598,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":1599,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:6",{"_index":1596,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1820,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":1821,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1824,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:23",{"_index":1825,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:29",{"_index":1831,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/reset",{"_index":1834,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/emails/password",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/successful",{"_index":2276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/emails/user",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/password",{"_index":1762,"title":{},"body":{"classes/PasswordReset.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/schemas/user",{"_index":2098,"title":{},"body":{"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/bull",{"_index":830,"title":{},"body":{"modules/BullBoardModule.html":{},"injectables/BullBoardProvider.html":{},"coverage.html":{}}}],["src/modules/files/dto/create",{"_index":911,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts",{"_index":1163,"title":{},"body":{"classes/EntryDto.html":{},"coverage.html":{}}}],["src/modules/files/dto/entry.dto.ts:10",{"_index":1167,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:13",{"_index":1168,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:15",{"_index":1169,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:17",{"_index":1170,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:19",{"_index":1171,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:21",{"_index":1172,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:23",{"_index":1173,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:25",{"_index":1174,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:27",{"_index":1175,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:29",{"_index":1176,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:31",{"_index":1177,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:33",{"_index":1178,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:4",{"_index":1164,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:6",{"_index":1165,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/entry.dto.ts:8",{"_index":1166,"title":{},"body":{"classes/EntryDto.html":{}}}],["src/modules/files/dto/update",{"_index":2033,"title":{},"body":{"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts",{"_index":1205,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/modules/files/files.controller.ts:110",{"_index":1213,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:131",{"_index":1224,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:147",{"_index":1230,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:55",{"_index":1215,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:63",{"_index":1221,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:73",{"_index":1218,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.controller.ts:95",{"_index":1227,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/modules/files/files.errors.ts",{"_index":1150,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"coverage.html":{}}}],["src/modules/files/files.errors.ts:13",{"_index":1179,"title":{},"body":{"classes/EntryNotDeletable.html":{}}}],["src/modules/files/files.errors.ts:19",{"_index":1180,"title":{},"body":{"classes/EntryNotFound.html":{}}}],["src/modules/files/files.errors.ts:25",{"_index":1742,"title":{},"body":{"classes/ParentFolderNotFound.html":{}}}],["src/modules/files/files.errors.ts:3",{"_index":1151,"title":{},"body":{"classes/EntryAlreadyExists.html":{}}}],["src/modules/files/files.errors.ts:31",{"_index":1743,"title":{},"body":{"classes/ParentIsChildrenOfItself.html":{}}}],["src/modules/files/files.errors.ts:37",{"_index":1744,"title":{},"body":{"classes/ParentIsItself.html":{}}}],["src/modules/files/files.module.ts",{"_index":1315,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/modules/files/files.processor.ts",{"_index":1326,"title":{},"body":{"injectables/FilesProcessor.html":{},"coverage.html":{}}}],["src/modules/files/files.processor.ts:12",{"_index":1329,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.processor.ts:16",{"_index":1333,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["src/modules/files/files.service.ts",{"_index":1342,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/modules/files/files.service.ts:103",{"_index":1358,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:112",{"_index":1360,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:116",{"_index":1362,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:123",{"_index":1364,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:136",{"_index":1366,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:155",{"_index":1367,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:186",{"_index":1348,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:197",{"_index":1350,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:26",{"_index":1346,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:37",{"_index":1352,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:65",{"_index":1353,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:75",{"_index":1355,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/files.service.ts:90",{"_index":1356,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/modules/files/jobs/delete",{"_index":926,"title":{},"body":{"interfaces/DeleteFileJob.html":{},"coverage.html":{}}}],["src/modules/files/schemas/entry.schema.ts",{"_index":1033,"title":{},"body":{"classes/Entry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/files/schemas/entry.schema.ts:100",{"_index":1070,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:102",{"_index":1048,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:103",{"_index":1049,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:104",{"_index":1068,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:24",{"_index":1044,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:29",{"_index":1045,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:31",{"_index":1046,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:34",{"_index":1047,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:39",{"_index":1050,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:48",{"_index":1051,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:53",{"_index":1053,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:58",{"_index":1054,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:66",{"_index":1056,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:71",{"_index":1058,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:76",{"_index":1059,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:82",{"_index":1061,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:89",{"_index":1062,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/files/schemas/entry.schema.ts:98",{"_index":1069,"title":{},"body":{"classes/Entry.html":{}}}],["src/modules/health/health.controller.ts",{"_index":1478,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:31",{"_index":1482,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":1508,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts",{"_index":1000,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:2",{"_index":1004,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:3",{"_index":1005,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/email.interface.ts:4",{"_index":1006,"title":{},"body":{"interfaces/Email.html":{}}}],["src/modules/mailer/interfaces/mailer",{"_index":1640,"title":{},"body":{"interfaces/MailerModuleAsyncOptions.html":{},"interfaces/MailerOptions.html":{},"interfaces/MailerOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/mailer/interfaces/send",{"_index":1839,"title":{},"body":{"interfaces/SendMailOptions.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.constants.ts",{"_index":2283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":1604,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:33",{"_index":1616,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:49",{"_index":1620,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:63",{"_index":1613,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.module.ts:77",{"_index":1609,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.processor.ts",{"_index":1649,"title":{},"body":{"injectables/MailerProcessor.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.processor.ts:16",{"_index":1660,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:18",{"_index":1653,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:22",{"_index":1654,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.processor.ts:27",{"_index":1657,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":1669,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:14",{"_index":1673,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:22",{"_index":1675,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:29",{"_index":1680,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:34",{"_index":1683,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:42",{"_index":1685,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/sessions/dto/session.dto.ts",{"_index":1842,"title":{},"body":{"classes/SessionDto.html":{},"coverage.html":{}}}],["src/modules/sessions/dto/session.dto.ts:11",{"_index":1848,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:13",{"_index":1849,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:19",{"_index":1850,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:5",{"_index":1845,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:7",{"_index":1846,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/dto/session.dto.ts:9",{"_index":1847,"title":{},"body":{"classes/SessionDto.html":{}}}],["src/modules/sessions/interfaces/session",{"_index":1516,"title":{},"body":{"interfaces/ISessionData.html":{},"coverage.html":{}}}],["src/modules/sessions/interfaces/session.interface.ts",{"_index":1515,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts",{"_index":1852,"title":{},"body":{"controllers/SessionsController.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.controller.ts:21",{"_index":1858,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:36",{"_index":1861,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.controller.ts:44",{"_index":1864,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/modules/sessions/sessions.module.ts",{"_index":1883,"title":{},"body":{"modules/SessionsModule.html":{}}}],["src/modules/sessions/sessions.service.ts",{"_index":1885,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/modules/sessions/sessions.service.ts:10",{"_index":1888,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:14",{"_index":1889,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:18",{"_index":1890,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:22",{"_index":1891,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/sessions/sessions.service.ts:26",{"_index":1892,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/modules/storage/engines/disk.engine.ts",{"_index":935,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"coverage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:14",{"_index":943,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:21",{"_index":954,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:31",{"_index":949,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:35",{"_index":952,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:40",{"_index":945,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/disk.engine.ts:44",{"_index":947,"title":{},"body":{"classes/DiskStorage.html":{}}}],["src/modules/storage/engines/google",{"_index":1460,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/interfaces/incoming",{"_index":1524,"title":{},"body":{"interfaces/IncomingFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/storage",{"_index":552,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/StorageEngine.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/uploaded",{"_index":2046,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/modules/storage/interfaces/write",{"_index":2248,"title":{},"body":{"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["src/modules/storage/storage.constants.ts",{"_index":2284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/storage/storage.errors.ts",{"_index":1182,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["src/modules/storage/storage.errors.ts:15",{"_index":2029,"title":{},"body":{"classes/TooManyFields.html":{}}}],["src/modules/storage/storage.errors.ts:21",{"_index":2030,"title":{},"body":{"classes/TooManyFiles.html":{}}}],["src/modules/storage/storage.errors.ts:27",{"_index":2031,"title":{},"body":{"classes/TooManyParts.html":{}}}],["src/modules/storage/storage.errors.ts:3",{"_index":1185,"title":{},"body":{"classes/FileTooLarge.html":{}}}],["src/modules/storage/storage.errors.ts:33",{"_index":2032,"title":{},"body":{"classes/UnsupportedContentType.html":{}}}],["src/modules/storage/storage.errors.ts:9",{"_index":1711,"title":{},"body":{"classes/NoFilesUploaded.html":{}}}],["src/modules/storage/storage.module.ts",{"_index":1908,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:18",{"_index":1911,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:34",{"_index":1912,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:48",{"_index":1910,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.module.ts:62",{"_index":1909,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/modules/storage/storage.service.ts",{"_index":1925,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/modules/storage/storage.service.ts:150",{"_index":1932,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:38",{"_index":1929,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:41",{"_index":1942,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:43",{"_index":1935,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:50",{"_index":1934,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:54",{"_index":1937,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/storage/storage.service.ts:58",{"_index":1940,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/modules/users/dto/delete",{"_index":930,"title":{},"body":{"classes/DeleteUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/partial",{"_index":1746,"title":{},"body":{"classes/PartialUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":2035,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":2111,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:11",{"_index":2115,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:14",{"_index":2116,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:16",{"_index":2117,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:18",{"_index":2118,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:21",{"_index":2119,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":2120,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":2121,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":2122,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:31",{"_index":2123,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:5",{"_index":2112,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:7",{"_index":2113,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:9",{"_index":2114,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/emails/email",{"_index":2285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/emails/password",{"_index":2288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/email",{"_index":1008,"title":{},"body":{"classes/EmailConfirmation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts",{"_index":2048,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/schemas/user.schema.ts:103",{"_index":2061,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:113",{"_index":2064,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:115",{"_index":2053,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:116",{"_index":2055,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:117",{"_index":2062,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:22",{"_index":2054,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:23",{"_index":2063,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:28",{"_index":2050,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:33",{"_index":2051,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:53",{"_index":2052,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:58",{"_index":2056,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:66",{"_index":2057,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:75",{"_index":2058,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:84",{"_index":2059,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/schemas/user.schema.ts:94",{"_index":2060,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":2129,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":2142,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":2150,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:49",{"_index":2148,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:89",{"_index":2139,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:94",{"_index":2136,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:99",{"_index":2145,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.errors.ts",{"_index":979,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"coverage.html":{}}}],["src/modules/users/users.errors.ts:14",{"_index":1031,"title":{},"body":{"classes/EmailTaken.html":{}}}],["src/modules/users/users.errors.ts:20",{"_index":1558,"title":{},"body":{"classes/InvalidAvatarFileType.html":{}}}],["src/modules/users/users.errors.ts:26",{"_index":1560,"title":{},"body":{"classes/InvalidEmailConfirmationToken.html":{}}}],["src/modules/users/users.errors.ts:32",{"_index":2127,"title":{},"body":{"classes/UsernameTaken.html":{}}}],["src/modules/users/users.errors.ts:38",{"_index":2125,"title":{},"body":{"classes/UserNotFound.html":{}}}],["src/modules/users/users.errors.ts:8",{"_index":980,"title":{},"body":{"classes/DisplayNameTaken.html":{}}}],["src/modules/users/users.module.ts",{"_index":2200,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":2206,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:152",{"_index":2218,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:30",{"_index":2208,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:44",{"_index":2209,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":2211,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:78",{"_index":2213,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:90",{"_index":2214,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:94",{"_index":2215,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:98",{"_index":2220,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/atob.ts",{"_index":2289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/btoa.ts",{"_index":2290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/chunk.ts",{"_index":2291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/clamp.ts",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/counter.ts",{"_index":848,"title":{},"body":{"classes/Counter.html":{},"coverage.html":{}}}],["src/utils/counter.ts:12",{"_index":861,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:19",{"_index":862,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:26",{"_index":864,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:3",{"_index":859,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:30",{"_index":868,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:37",{"_index":870,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:44",{"_index":872,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/counter.ts:8",{"_index":874,"title":{},"body":{"classes/Counter.html":{}}}],["src/utils/generateid.ts",{"_index":2293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/paginate.ts",{"_index":1712,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/settle.ts",{"_index":2294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":2013,"title":{},"body":{"classes/StreamMeter.html":{},"coverage.html":{}}}],["src/validators/is",{"_index":1564,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2382,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2385,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2386,"title":{},"body":{"index.html":{}}}],["started",{"_index":2362,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2374,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2251,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1605,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["statuscode",{"_index":1550,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["statute",{"_index":2668,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":2738,"title":{},"body":{"license.html":{}}}],["stay",{"_index":2406,"title":{},"body":{"index.html":{}}}],["steward",{"_index":2823,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":2773,"title":{},"body":{"license.html":{}}}],["storage",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage.constants",{"_index":1915,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{}}}],["storage.errors",{"_index":1945,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.service",{"_index":1916,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage_module_id",{"_index":1913,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_module_options",{"_index":1914,"title":{},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageengine",{"_index":936,"title":{"interfaces/StorageEngine.html":{}},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storagemodule",{"_index":1313,"title":{"modules/StorageModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["storagemodule.registerasync",{"_index":1323,"title":{},"body":{"modules/FilesModule.html":{},"modules/UsersModule.html":{}}}],["storageoptions",{"_index":558,"title":{"interfaces/StorageOptions.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"interfaces/StorageOptionsFactory.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageoptionsfactory",{"_index":560,"title":{"interfaces/StorageOptionsFactory.html":{}},"body":{"interfaces/AsyncStorageOptions.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptionsFactory.html":{},"coverage.html":{}}}],["storageservice",{"_index":1245,"title":{"injectables/StorageService.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["str",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.length",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":957,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{}}}],["streammeter",{"_index":1952,"title":{"classes/StreamMeter.html":{}},"body":{"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"coverage.html":{}}}],["strength",{"_index":1084,"title":{},"body":{"classes/Entry.html":{},"miscellaneous/variables.html":{}}}],["strict",{"_index":1708,"title":{},"body":{"injectables/MailerService.html":{}}}],["string",{"_index":291,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"classes/ApplicationNotFound.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"interfaces/Email.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyApplications.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["string(items[items.length",{"_index":1736,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/PaginationOptions.html":{},"miscellaneous/variables.html":{}}}],["string(str",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringify",{"_index":1777,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["subject",{"_index":1002,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2630,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":2589,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2478,"title":{},"body":{"license.html":{}}}],["substance",{"_index":2639,"title":{},"body":{"license.html":{}}}],["successful",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfullogin",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successfullogin(user.email",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":2446,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":415,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"license.html":{}}}],["sufficiently",{"_index":2679,"title":{},"body":{"license.html":{}}}],["super",{"_index":877,"title":{},"body":{"classes/Counter.html":{}}}],["super(\"application",{"_index":412,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(\"display",{"_index":983,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"email",{"_index":985,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"entry",{"_index":1156,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"invalid",{"_index":419,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotFound.html":{},"classes/UserNotLoggedIn.html":{},"classes/UsernameTaken.html":{}}}],["super(\"missing",{"_index":1201,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"no",{"_index":1191,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"parent",{"_index":1158,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"please",{"_index":1535,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"the",{"_index":1160,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"this",{"_index":1154,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(\"too",{"_index":1195,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(\"username",{"_index":996,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super(\"you",{"_index":421,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(\"your",{"_index":1532,"title":{},"body":{"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["super(`application",{"_index":407,"title":{},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{}}}],["super(`entry",{"_index":1152,"title":{},"body":{"classes/EntryAlreadyExists.html":{},"classes/EntryNotDeletable.html":{},"classes/EntryNotFound.html":{},"classes/ParentFolderNotFound.html":{},"classes/ParentIsChildrenOfItself.html":{},"classes/ParentIsItself.html":{}}}],["super(`file",{"_index":1188,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["super(`user",{"_index":999,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["super.canactivate(context",{"_index":55,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["super.use(req",{"_index":80,"title":{},"body":{"injectables/AdminMiddleware.html":{}}}],["support",{"_index":2400,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["survive",{"_index":2734,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2849,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2343,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"guards/RecaptchaGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["target",{"_index":1583,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":1681,"title":{},"body":{"injectables/MailerService.html":{},"interfaces/SendMailOptions.html":{},"miscellaneous/variables.html":{}}}],["templates/email",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/password",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/successful",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates/user",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminate",{"_index":2686,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2695,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2684,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":1509,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":2460,"title":{},"body":{"license.html":{}}}],["test",{"_index":2389,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2392,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2391,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2388,"title":{},"body":{"index.html":{}}}],["text",{"_index":1003,"title":{},"body":{"interfaces/Email.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["thanks",{"_index":2398,"title":{},"body":{"index.html":{}}}],["then((doc",{"_index":1413,"title":{},"body":{"injectables/FilesService.html":{}}}],["then((file",{"_index":1307,"title":{},"body":{"controllers/FilesController.html":{}}}],["then(application",{"_index":487,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(applications",{"_index":481,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["then(id",{"_index":360,"title":{},"body":{"classes/Application.html":{},"classes/User.html":{}}}],["then(res",{"_index":1802,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["then(token",{"_index":1029,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["theory",{"_index":2759,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2451,"title":{},"body":{"license.html":{}}}],["third",{"_index":2574,"title":{},"body":{"license.html":{}}}],["this._createbusboy(req",{"_index":1964,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._getmetadata(auth_guard_optional",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(auth_guard_scopes",{"_index":721,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._getmetadata(recaptcha_action_key",{"_index":1794,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._getmetadata(recaptcha_score_key",{"_index":1795,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this._handleapikey(req",{"_index":724,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._handlesession(req",{"_index":725,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._renamewithindex(data.name",{"_index":1396,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._size",{"_index":2026,"title":{},"body":{"classes/StreamMeter.html":{}}}],["this._validateparent(entry",{"_index":1438,"title":{},"body":{"injectables/FilesService.html":{}}}],["this._value",{"_index":878,"title":{},"body":{"classes/Counter.html":{}}}],["this.activated",{"_index":2089,"title":{},"body":{"classes/User.html":{}}}],["this.applications",{"_index":479,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications(data).save",{"_index":537,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.countdocuments",{"_index":533,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.create",{"_index":486,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.delete",{"_index":2238,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.applications.deletemany(query",{"_index":538,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.deleteone",{"_index":491,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.exists",{"_index":535,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.find(query).sort",{"_index":541,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.findone",{"_index":729,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.applications.findone(query",{"_index":539,"title":{},"body":{"injectables/ApplicationsService.html":{}}}],["this.applications.generatekey",{"_index":496,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.applications.updateone",{"_index":493,"title":{},"body":{"controllers/ApplicationsController.html":{}}}],["this.auth.activateaccount(token",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.forgotpassword(email",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.login(username",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.register(email",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.resetpassword(newpassword",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":2090,"title":{},"body":{"classes/User.html":{}}}],["this.bucket.file(id).createreadstream",{"_index":1475,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).createwritestream",{"_index":1476,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.bucket.file(id).delete",{"_index":1474,"title":{},"body":{"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{}}}],["this.config.get(\"api_secret",{"_index":731,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.config.get(\"max_file_size",{"_index":1299,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"max_files_per_upload",{"_index":1297,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.config.get(\"node_env",{"_index":1690,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.config.get(\"recaptcha_secret",{"_index":1800,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.connection.db.collection(\"sessions",{"_index":1893,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1635,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.createasyncproviders(options",{"_index":1632,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["this.db.pingcheck(\"database",{"_index":1497,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.deletable",{"_index":1126,"title":{},"body":{"classes/Entry.html":{}}}],["this.delete(file.id",{"_index":1977,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.deleted",{"_index":2091,"title":{},"body":{"classes/User.html":{}}}],["this.disk.checkstorage(\"disk",{"_index":1500,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck(\"web",{"_index":1504,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.email",{"_index":2092,"title":{},"body":{"classes/User.html":{}}}],["this.emailconfirmations",{"_index":2242,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailconfirmations.findone",{"_index":2228,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailsqueue.add(\"send",{"_index":1703,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.emit(string(this.value",{"_index":879,"title":{},"body":{"classes/Counter.html":{}}}],["this.engine",{"_index":1959,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createreadable(id",{"_index":1963,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.createwritable(id",{"_index":1990,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.engine.delete(id",{"_index":1962,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.entries",{"_index":1395,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.find(query",{"_index":1415,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.entries.findone(query",{"_index":1417,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.exists",{"_index":1440,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.files",{"_index":1302,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.createentry",{"_index":1276,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.files.createreadable(id",{"_index":1258,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.deletemany",{"_index":2239,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.files.deleteone",{"_index":1250,"title":{},"body":{"controllers/FilesController.html":{},"injectables/UsersService.html":{}}}],["this.files.exists",{"_index":1293,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.findone",{"_index":1255,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.list",{"_index":1288,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.files.updateone",{"_index":1274,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesqueue",{"_index":846,"title":{},"body":{"injectables/BullBoardProvider.html":{}}}],["this.filesqueue.add(\"delete",{"_index":1403,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone",{"_index":1385,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.findone(query",{"_index":1406,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.folder",{"_index":1144,"title":{},"body":{"classes/Entry.html":{}}}],["this.getparentfolder",{"_index":1109,"title":{},"body":{"classes/Entry.html":{}}}],["this.hasduplicates(data.name",{"_index":1392,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.health.check",{"_index":1496,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hidden",{"_index":1132,"title":{},"body":{"classes/Entry.html":{}}}],["this.http",{"_index":1798,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["this.id",{"_index":361,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"modules/MailerModule.html":{},"modules/StorageModule.html":{},"classes/User.html":{}}}],["this.id}.${token",{"_index":387,"title":{},"body":{"classes/Application.html":{}}}],["this.isfile",{"_index":1096,"title":{},"body":{"classes/Entry.html":{}}}],["this.isfolder",{"_index":1102,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified",{"_index":1104,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"deletable",{"_index":1121,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"folder",{"_index":1107,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"hidden",{"_index":1122,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"name",{"_index":1108,"title":{},"body":{"classes/Entry.html":{}}}],["this.ismodified(\"password",{"_index":2078,"title":{},"body":{"classes/User.html":{}}}],["this.ismodified(\"public",{"_index":1123,"title":{},"body":{"classes/Entry.html":{}}}],["this.isnew",{"_index":358,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["this.key",{"_index":364,"title":{},"body":{"classes/Application.html":{}}}],["this.logger.error(error",{"_index":1267,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.logger.error(exception.message",{"_index":1552,"title":{},"body":{"classes/InternalServerErrorExceptionFilter.html":{}}}],["this.mailer.createabsolutelink(\"/forgot",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/activate",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.createabsolutelink(`/confirm",{"_index":2244,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mailer.createabsolutelink(`/reset",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.send",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.memory.checkrss(\"memory",{"_index":1506,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.model(entry.name",{"_index":1089,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).findone",{"_index":1145,"title":{},"body":{"classes/Entry.html":{}}}],["this.model(entry.name).updatemany",{"_index":1136,"title":{},"body":{"classes/Entry.html":{}}}],["this.name",{"_index":1112,"title":{},"body":{"classes/Entry.html":{}}}],["this.on(string(n",{"_index":882,"title":{},"body":{"classes/Counter.html":{}}}],["this.once(string(n",{"_index":881,"title":{},"body":{"classes/Counter.html":{}}}],["this.options.engine",{"_index":1958,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.password",{"_index":2077,"title":{},"body":{"classes/User.html":{}}}],["this.passwordresets",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordresets.findone",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.path",{"_index":1092,"title":{},"body":{"classes/Entry.html":{}}}],["this.path.split(\"/\").filter((el",{"_index":1138,"title":{},"body":{"classes/Entry.html":{}}}],["this.public",{"_index":1135,"title":{},"body":{"classes/Entry.html":{}}}],["this.reflector.get(key",{"_index":748,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RecaptchaGuard.html":{}}}],["this.render(options.mjml.template",{"_index":1701,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.save",{"_index":389,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["this.scopes.includes(scope",{"_index":393,"title":{},"body":{"classes/Application.html":{}}}],["this.sessions.delete",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SessionsController.html":{},"injectables/UsersService.html":{}}}],["this.sessions.deletemany(query",{"_index":1897,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.deleteone",{"_index":1876,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.deleteone(query",{"_index":1898,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.find",{"_index":1869,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessions.find(query).toarray",{"_index":1899,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.sessions.findone(query",{"_index":1900,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.size",{"_index":1103,"title":{},"body":{"classes/Entry.html":{}}}],["this.storage.delete(job.data.fileid",{"_index":1340,"title":{},"body":{"injectables/FilesProcessor.html":{}}}],["this.storage.read(file.id",{"_index":1397,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.storage.write(req",{"_index":1294,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["this.timestamp",{"_index":1105,"title":{},"body":{"classes/Entry.html":{}}}],["this.tojson",{"_index":397,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["this.token",{"_index":1030,"title":{},"body":{"classes/EmailConfirmation.html":{},"classes/PasswordReset.html":{},"classes/UserActivation.html":{}}}],["this.transporter.sendmail(job.data",{"_index":1668,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.transporter.verify",{"_index":1666,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["this.uid",{"_index":1093,"title":{},"body":{"classes/Entry.html":{}}}],["this.updatedat.gettime",{"_index":1106,"title":{},"body":{"classes/Entry.html":{}}}],["this.useractivations",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useractivations.findone",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":2237,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.confirmemail(token",{"_index":2191,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.create(email",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.deleteone(me",{"_index":2188,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.exists",{"_index":2230,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.exists(query",{"_index":2241,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.findone",{"_index":738,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["this.users.updateavatar(me",{"_index":2184,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.users.updateone(me",{"_index":2165,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.value",{"_index":880,"title":{},"body":{"classes/Counter.html":{}}}],["those",{"_index":2509,"title":{},"body":{"license.html":{}}}],["thresholdpercent",{"_index":1502,"title":{},"body":{"controllers/HealthController.html":{}}}],["throttle",{"_index":464,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle(25",{"_index":484,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{}}}],["throttle_limit",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["throttle_ttl",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["throttlerguard",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.registerasync",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerstorageredisservice",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":60,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/ApplicationsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":2625,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":1498,"title":{},"body":{"controllers/HealthController.html":{}}}],["timesresent",{"_index":2100,"title":{},"body":{"classes/UserActivation.html":{}}}],["timestamp",{"_index":1043,"title":{},"body":{"classes/Entry.html":{},"classes/EntryDto.html":{},"injectables/FilesService.html":{}}}],["timestamps",{"_index":342,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["time}.\\n",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tls",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["todto",{"_index":282,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"classes/User.html":{}}}],["tojson",{"_index":1074,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["token",{"_index":378,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/PasswordReset.html":{},"classes/ResetPasswordDto.html":{},"classes/UserActivation.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toobject",{"_index":1076,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["toomanyapplications",{"_index":420,"title":{"classes/TooManyApplications.html":{}},"body":{"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/ApplicationsService.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/TooManyApplications.html":{},"coverage.html":{}}}],["toomanyfields",{"_index":1194,"title":{"classes/TooManyFields.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyfiles",{"_index":1197,"title":{"classes/TooManyFiles.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["toomanyparts",{"_index":1198,"title":{"classes/TooManyParts.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["topromise",{"_index":1801,"title":{},"body":{"guards/RecaptchaGuard.html":{}}}],["tort",{"_index":2760,"title":{},"body":{"license.html":{}}}],["touch",{"_index":2407,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":2545,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2580,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2500,"title":{},"body":{"license.html":{}}}],["transformcallback",{"_index":2022,"title":{},"body":{"classes/StreamMeter.html":{}}}],["transformer",{"_index":320,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transformer(req",{"_index":1994,"title":{},"body":{"injectables/StorageService.html":{}}}],["transformer/classtransformer",{"_index":2068,"title":{},"body":{"classes/User.html":{}}}],["transformers",{"_index":2177,"title":{},"body":{"controllers/UsersController.html":{},"interfaces/WriteOptions.html":{}}}],["transpilemjml",{"_index":1672,"title":{},"body":{"injectables/MailerService.html":{}}}],["transpilemjml(mjml",{"_index":1684,"title":{},"body":{"injectables/MailerService.html":{}}}],["transport",{"_index":1643,"title":{},"body":{"interfaces/MailerOptions.html":{}}}],["transporter",{"_index":1650,"title":{},"body":{"injectables/MailerProcessor.html":{}}}],["transports",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":297,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["true",{"_index":64,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"classes/Application.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateApplicationDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MailerService.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":722,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/Entry.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"guards/RecaptchaGuard.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":2413,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/Application.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationDto.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"interfaces/AsyncStorageOptions.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BullBoardProvider.html":{},"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"interfaces/DeleteFileJob.html":{},"classes/DeleteUserDto.html":{},"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailConfirmation.html":{},"classes/EmailTaken.html":{},"classes/Entry.html":{},"classes/EntryAlreadyExists.html":{},"classes/EntryDto.html":{},"classes/FileTooLarge.html":{},"controllers/FilesController.html":{},"injectables/FilesProcessor.html":{},"injectables/FilesService.html":{},"classes/GenerateApplicationKeyDto.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/IRequest.html":{},"interfaces/ISession.html":{},"interfaces/ISessionData.html":{},"interfaces/IncomingFile.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"injectables/MailerProcessor.html":{},"injectables/MailerService.html":{},"classes/NoFilesUploaded.html":{},"interfaces/Pagination.html":{},"classes/PaginationDto.html":{},"interfaces/PaginationOptions.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/SendMailOptions.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"interfaces/StorageEngine.html":{},"modules/StorageModule.html":{},"interfaces/StorageOptions.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":321,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["types.array",{"_index":310,"title":{},"body":{"classes/Application.html":{},"injectables/ApplicationsService.html":{}}}],["typescript",{"_index":1579,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/MailerOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ua",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ISessionData.html":{},"classes/SessionDto.html":{},"dependencies.html":{}}}],["ua.getbrowser",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getdevice",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["ua.getos",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["uaparser(useragent",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["ui",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["uid",{"_index":283,"title":{},"body":{"classes/Application.html":{},"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"injectables/AuthService.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/ISessionData.html":{},"classes/PasswordReset.html":{},"classes/SessionDto.html":{},"controllers/SessionsController.html":{},"classes/UserActivation.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":50,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"classes/ApplicationAlreadyExists.html":{},"classes/ApplicationNotFound.html":{},"injectables/AuthMiddleware.html":{},"classes/IncorrectPassword.html":{},"classes/InsufficientScopes.html":{},"classes/InvalidAPIKey.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/TooManyApplications.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{}}}],["unauthorizedexception(\"you",{"_index":62,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"classes/Application.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/PaginationOptions.html":{},"classes/PasswordReset.html":{},"guards/RecaptchaGuard.html":{},"classes/UserActivation.html":{},"injectables/UsersService.html":{}}}],["under",{"_index":2459,"title":{},"body":{"license.html":{}}}],["understand",{"_index":2683,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":2813,"title":{},"body":{"license.html":{}}}],["unique",{"_index":298,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["unique!'})@isenum(applicationscopes",{"_index":896,"title":{},"body":{"classes/CreateApplicationDto.html":{}}}],["unit",{"_index":2387,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":2691,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2551,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":982,"title":{},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{}}}],["unsupported",{"_index":1202,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["unsupportedcontenttype",{"_index":1200,"title":{"classes/UnsupportedContentType.html":{}},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"injectables/StorageService.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{},"coverage.html":{}}}],["unsupportedmediatypeexception",{"_index":1187,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["until",{"_index":2692,"title":{},"body":{"license.html":{}}}],["up",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update(data",{"_index":340,"title":{},"body":{"classes/Application.html":{},"miscellaneous/variables.html":{}}}],["updateavatar",{"_index":2132,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateavatar(@currentuser",{"_index":2168,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(me",{"_index":2146,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateavatar(user",{"_index":2216,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":284,"title":{},"body":{"classes/Application.html":{},"classes/ApplicationDto.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/EntryDto.html":{},"classes/PartialUserDto.html":{},"classes/PasswordReset.html":{},"classes/User.html":{},"classes/UserActivation.html":{},"classes/UserDto.html":{}}}],["updateentrydto",{"_index":1225,"title":{"classes/UpdateEntryDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UpdateEntryDto.html":{},"coverage.html":{}}}],["updateone",{"_index":441,"title":{},"body":{"controllers/ApplicationsController.html":{},"injectables/ApplicationsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateone(@body",{"_index":2164,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateone(dto",{"_index":456,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["updateone(query",{"_index":525,"title":{},"body":{"injectables/ApplicationsService.html":{},"injectables/FilesService.html":{}}}],["updateone(user",{"_index":2219,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":2034,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["upload",{"_index":1209,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(uid",{"_index":1228,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaded",{"_index":1193,"title":{},"body":{"classes/FileTooLarge.html":{},"classes/NoFilesUploaded.html":{},"classes/TooManyFields.html":{},"classes/TooManyFiles.html":{},"classes/TooManyParts.html":{},"classes/UnsupportedContentType.html":{}}}],["uploadedfile",{"_index":1948,"title":{"interfaces/UploadedFile.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["uploads_directory",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["upon",{"_index":1100,"title":{},"body":{"classes/Entry.html":{}}}],["uri",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["usage",{"_index":735,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":68,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{},"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"injectables/FilesService.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"license.html":{}}}],["use(req",{"_index":69,"title":{},"body":{"injectables/AdminMiddleware.html":{},"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{}}}],["usecreateindex",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":380,"title":{},"body":{"classes/Application.html":{},"classes/Entry.html":{},"license.html":{}}}],["useexisting",{"_index":555,"title":{},"body":{"interfaces/AsyncStorageOptions.html":{},"interfaces/MailerModuleAsyncOptions.html":{}}}],["usefactory",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AsyncStorageOptions.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"interfaces/MailerModuleAsyncOptions.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}}}],["usefindandmodify",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ApplicationsController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(authguard",{"_index":477,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["useguards(recaptchaguard",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":233,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/IRequest.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/User.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user.activated",{"_index":745,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["user.avatar",{"_index":2247,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.comparepassword(password",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.decorator",{"_index":474,"title":{},"body":{"controllers/ApplicationsController.html":{},"controllers/FilesController.html":{},"controllers/SessionsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.delete",{"_index":2240,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.displayname",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":1761,"title":{},"body":{"classes/PartialUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":931,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/PartialUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":2040,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":2042,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:29",{"_index":2044,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":2045,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":933,"title":{},"body":{"classes/DeleteUserDto.html":{}}}],["user.dto.ts:7",{"_index":1748,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["user.email",{"_index":2235,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.expiresat",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":2205,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.todto",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user.todto(partialuserdto",{"_index":2195,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.toobject",{"_index":2234,"title":{},"body":{"injectables/UsersService.html":{}}}],["user[\"email",{"_index":1455,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["user[field",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractivation",{"_index":769,"title":{"classes/UserActivation.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivation(email",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivation.name",{"_index":774,"title":{},"body":{"modules/AuthModule.html":{}}}],["useractivations",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractivationschema",{"_index":770,"title":{},"body":{"modules/AuthModule.html":{},"classes/UserActivation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractivationschema.pre(\"save",{"_index":2110,"title":{},"body":{"classes/UserActivation.html":{}}}],["useragent",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto",{"_index":628,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/PartialUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto:11",{"_index":1752,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:14",{"_index":1753,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:16",{"_index":1754,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:18",{"_index":1755,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:21",{"_index":1756,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:23",{"_index":1757,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:26",{"_index":1758,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:29",{"_index":1759,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:31",{"_index":1760,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:5",{"_index":1749,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:7",{"_index":1750,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["userdto:9",{"_index":1751,"title":{},"body":{"classes/PartialUserDto.html":{}}}],["username",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PartialUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernames",{"_index":1827,"title":{},"body":{"classes/RegisterDto.html":{},"classes/User.html":{}}}],["usernametaken",{"_index":995,"title":{"classes/UsernameTaken.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usernotactivated",{"_index":712,"title":{"classes/UserNotActivated.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["usernotfound",{"_index":997,"title":{"classes/UserNotFound.html":{}},"body":{"classes/DisplayNameTaken.html":{},"classes/EmailTaken.html":{},"classes/InvalidAvatarFileType.html":{},"classes/InvalidEmailConfirmationToken.html":{},"classes/UserNotFound.html":{},"classes/UsernameTaken.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usernotfound(username",{"_index":2194,"title":{},"body":{"controllers/UsersController.html":{}}}],["usernotloggedin",{"_index":713,"title":{"classes/UserNotLoggedIn.html":{}},"body":{"guards/AuthGuard.html":{},"classes/IncorrectPassword.html":{},"classes/InvalidCredentials.html":{},"classes/InvalidPasswordResetLink.html":{},"classes/InvalidUserActivationLink.html":{},"classes/UserNotActivated.html":{},"classes/UserNotLoggedIn.html":{},"coverage.html":{}}}],["users",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2201,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.errors",{"_index":2152,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":2153,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users:read",{"_index":2360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users_read",{"_index":2359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":2074,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.comparepassword",{"_index":2081,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.delete",{"_index":2088,"title":{},"body":{"classes/User.html":{}}}],["userschema.methods.todto",{"_index":2094,"title":{},"body":{"classes/User.html":{}}}],["userschema.pre(\"save",{"_index":2076,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":2128,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":135,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":17,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usescopes",{"_index":1241,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usescopes(applicationscopes.files_read",{"_index":1253,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.files_write",{"_index":1249,"title":{},"body":{"controllers/FilesController.html":{}}}],["usescopes(applicationscopes.users_read",{"_index":2160,"title":{},"body":{"controllers/UsersController.html":{}}}],["useunifiedtopology",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":1630,"title":{},"body":{"modules/MailerModule.html":{},"modules/StorageModule.html":{}}}],["using",{"_index":1263,"title":{},"body":{"controllers/FilesController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["utils/atob",{"_index":717,"title":{},"body":{"guards/AuthGuard.html":{}}}],["utils/btoa",{"_index":332,"title":{},"body":{"classes/Application.html":{}}}],["utils/chunk",{"_index":961,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{}}}],["utils/clamp",{"_index":1369,"title":{},"body":{"injectables/FilesService.html":{}}}],["utils/counter",{"_index":1951,"title":{},"body":{"injectables/StorageService.html":{}}}],["utils/generateid",{"_index":334,"title":{},"body":{"classes/Application.html":{},"controllers/AuthController.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/PasswordReset.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"classes/UserActivation.html":{}}}],["utils/paginate",{"_index":1372,"title":{},"body":{"injectables/FilesService.html":{},"classes/PaginationDto.html":{}}}],["utils/settle",{"_index":1956,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["utils/stream",{"_index":1953,"title":{},"body":{"injectables/StorageService.html":{}}}],["v",{"_index":2839,"title":{},"body":{"license.html":{}}}],["v3",{"_index":1787,"title":{},"body":{"guards/RecaptchaGuard.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1452,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid(\"development",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":307,"title":{},"body":{"classes/Application.html":{},"classes/EmailConfirmation.html":{},"classes/Entry.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/User.html":{}}}],["validate(value",{"_index":1569,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatebeforesave",{"_index":2093,"title":{},"body":{"classes/User.html":{}}}],["validationlevel",{"_index":1707,"title":{},"body":{"injectables/MailerService.html":{}}}],["validationoptions",{"_index":1573,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":318,"title":{},"body":{"classes/Application.html":{},"classes/CreateApplicationDto.html":{},"classes/CreateFolderEntryDto.html":{},"classes/DeleteUserDto.html":{},"classes/EmailConfirmation.html":{},"classes/ForgotPasswordDto.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateEntryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["validatorconstraint",{"_index":1572,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validatorconstraintinterface",{"_index":1566,"title":{},"body":{"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{}}}],["validators/is",{"_index":922,"title":{},"body":{"classes/CreateFolderEntryDto.html":{},"classes/Entry.html":{},"classes/UpdateEntryDto.html":{}}}],["validly",{"_index":2733,"title":{},"body":{"license.html":{}}}],["value",{"_index":856,"title":{},"body":{"classes/Counter.html":{},"classes/CreateApplicationDto.html":{},"classes/Entry.html":{},"injectables/FilesService.html":{},"classes/GoogleCloudEngine.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"injectables/MailerProcessor.html":{},"injectables/SessionsService.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1127,"title":{},"body":{"classes/Entry.html":{}}}],["variable",{"_index":2252,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2858,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2417,"title":{},"body":{"license.html":{}}}],["versions",{"_index":2508,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":1075,"title":{},"body":{"classes/Entry.html":{},"classes/UserActivation.html":{}}}],["visit",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visiting",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/Counter.html":{},"classes/InternalServerErrorExceptionFilter.html":{},"classes/IsStringPathSafeConstraint.html":{},"classes/IsStringValidPathConstraint.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{},"classes/StreamMeter.html":{},"interfaces/WriteOptions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2832,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2739,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2641,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2383,"title":{},"body":{"index.html":{}}}],["website",{"_index":2411,"title":{},"body":{"index.html":{}}}],["whenitequalsto",{"_index":854,"title":{},"body":{"classes/Counter.html":{}}}],["whenitequalsto(n",{"_index":871,"title":{},"body":{"classes/Counter.html":{}}}],["whether",{"_index":2477,"title":{},"body":{"license.html":{}}}],["wide",{"_index":2539,"title":{},"body":{"license.html":{}}}],["winston",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["winston.format.combine",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.dailyrotatefile",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonutilities.format.nestlike(\"bytebin",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2644,"title":{},"body":{"license.html":{}}}],["without",{"_index":2492,"title":{},"body":{"license.html":{}}}],["work",{"_index":2463,"title":{},"body":{"license.html":{}}}],["world",{"_index":2538,"title":{},"body":{"license.html":{}}}],["writable",{"_index":956,"title":{},"body":{"classes/DiskStorage.html":{},"interfaces/DiskStorageEngineOptions.html":{},"classes/GoogleCloudEngine.html":{},"interfaces/GoogleCloudEngineOptions.html":{},"interfaces/StorageEngine.html":{},"injectables/StorageService.html":{}}}],["write",{"_index":1928,"title":{},"body":{"injectables/StorageService.html":{}}}],["write(req",{"_index":1938,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter",{"_index":1973,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.decrement",{"_index":2004,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.increment",{"_index":1989,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.is(0",{"_index":1980,"title":{},"body":{"injectables/StorageService.html":{}}}],["writecounter.whenitequalsto(0",{"_index":1975,"title":{},"body":{"injectables/StorageService.html":{}}}],["writeoptions",{"_index":1939,"title":{"interfaces/WriteOptions.html":{}},"body":{"injectables/StorageService.html":{},"interfaces/WriteOptions.html":{},"coverage.html":{}}}],["yes",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"classes/EntryAlreadyExists.html":{},"injectables/FilesService.html":{}}}],["you'd",{"_index":2403,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ApplicationsModule.html":{},"modules/AuthModule.html":{},"modules/BullBoardModule.html":{},"modules/FilesModule.html":{},"modules/MailerModule.html":{},"modules/SessionsModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from \"@nestjs/common\";\n\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminGuard } from \"@/guards/admin.guard\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Controller(\"admin\")\n@UseGuards(AdminGuard)\nexport class AdminController {\n  constructor(private readonly admin: AdminService, private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/guards/admin.guard.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Injectable()\nexport class AdminGuard extends AuthGuard {\n  async canActivate(context: ExecutionContext): Promise {\n    await super.canActivate(context);\n\n    const req = context.switchToHttp().getRequest();\n    if (!req.user?.admin) throw new UnauthorizedException(\"You are not an admin!\");\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminMiddleware.html":{"url":"injectables/AdminMiddleware.html","title":"injectable - AdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/admin.middleware.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/admin.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthMiddleware\n\n                \n            \n            \n                \n                        Defined in         AuthMiddleware:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { AuthMiddleware } from \"./auth.middleware\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\n@Injectable()\nexport class AdminMiddleware extends AuthMiddleware {\n  async use(req: IRequest, res: Response, next: NextFunction): Promise {\n    await super.use(req, res, (error?: any) => {\n      if (!req.user?.admin) {\n        throw new UnauthorizedException(\"You are not an admin!\");\n      }\n\n      next(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/admin/admin.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { UI as BullUI } from \"bull-board\";\n\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\n\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\n\nimport { AdminMiddleware } from \"@/middlewares/admin.middleware\";\n\n@Module({\n  exports: [AdminService],\n  controllers: [AdminController],\n  providers: [AdminService]\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer\n      .apply(AdminMiddleware, BullUI)\n      .forRoutes({ method: RequestMethod.ALL, path: \"/admin/queues\" });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly users: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nApplicationsModule\n\nApplicationsModule\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ApplicationsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BullBoardModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsModule\n                        \n                        \n                            Logger\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi from \"@hapi/joi\";\n\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { Global, Logger, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ThrottlerGuard, ThrottlerModule } from \"nestjs-throttler\";\nimport { ThrottlerStorageRedisService } from \"nestjs-throttler-storage-redis\";\n\nimport { AdminModule } from \"./modules/admin/admin.module\";\nimport { ApplicationsModule } from \"./modules/applications/applications.module\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { BullBoardModule } from \"./modules/bull-board/bull-board.module\";\nimport { FilesModule } from \"./modules/files/files.module\";\nimport { HealthModule } from \"./modules/health/health.module\";\nimport { MailerModule } from \"./modules/mailer/mailer.module\";\nimport { SessionsModule } from \"./modules/sessions/sessions.module\";\nimport { UsersModule } from \"./modules/users/users.module\";\n\nconst MIN_PORT = 1;\nconst MAX_PORT = 65535;\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.env.development`,\n      validationSchema: Joi.object({\n        API_KEY_SECRET: Joi.string().required(),\n\n        BACKEND_DOMAIN: Joi.string().required(),\n        FRONTEND_DOMAIN: Joi.string().required(),\n\n        MAX_FILE_SIZE: Joi.number()\n          .min(1)\n          .default(25 * 1024 * 1024),\n        MAX_FILES_PER_UPLOAD: Joi.number()\n          .min(1)\n          .default(5),\n\n        MONGO_DB_NAME: Joi.string().default(\"bytebin\"),\n        MONGO_HOST: Joi.string().default(\"localhost\"),\n        MONGO_PASSWORD: Joi.string().allow(\"\"),\n        MONGO_POOL_SIZE: Joi.number()\n          .min(1)\n          .default(5),\n        MONGO_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(27017),\n        MONGO_USERNAME: Joi.string().allow(\"\"),\n\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n\n        PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(3000),\n\n        RECAPTCHA_SECRET: Joi.string().required(),\n\n        REDIS_HOST: Joi.string().default(\"localhost\"),\n        REDIS_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(6379),\n\n        SESSION_SECRET: Joi.string().required(),\n\n        SMTP_FROM: Joi.string().required(),\n        SMTP_HOST: Joi.string().required(),\n        SMTP_PASSWORD: Joi.string().required(),\n        SMTP_PORT: Joi.number()\n          .min(MIN_PORT)\n          .max(MAX_PORT)\n          .default(465),\n        SMTP_SECURE: Joi.boolean().default(true),\n        SMTP_TLS: Joi.boolean().default(true),\n        SMTP_USERNAME: Joi.string().required(),\n\n        THROTTLE_LIMIT: Joi.number()\n          .min(0)\n          .default(250),\n        THROTTLE_TTL: Joi.number()\n          .min(0)\n          .default(60),\n\n        UPLOADS_DIRECTORY: Joi.string().required()\n      })\n    }),\n\n    MailerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        auth: {\n          pass: config.get(\"SMTP_PASSWORD\"),\n          user: config.get(\"SMTP_USERNAME\")\n        },\n        from: config.get(\"SMTP_FROM\"),\n        host: config.get(\"SMTP_HOST\"),\n        port: config.get(\"SMTP_PORT\"),\n        secure: config.get(\"SMTP_SECURE\"),\n        tls: config.get(\"SMTP_TLS\")\n      })\n    }),\n\n    MongooseModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        const dbName = config.get(\"MONGO_DB_NAME\");\n        const pass = config.get(\"MONGO_PASSWORD\");\n        const user = config.get(\"MONGO_USERNAME\");\n\n        return {\n          authSource: pass && user ? dbName : undefined,\n          dbName,\n          pass,\n          poolSize: config.get(\"MONGO_POOL_SIZE\"),\n          uri: `mongodb://${config.get(\"MONGO_HOST\")}:${config.get(\"MONGO_PORT\")}`,\n          useCreateIndex: true,\n          useFindAndModify: false,\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          user\n        };\n      }\n    }),\n\n    ThrottlerModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        limit: config.get(\"THROTTLE_LIMIT\"),\n        ttl: config.get(\"THROTTLE_TTL\"),\n        storage: new ThrottlerStorageRedisService({\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        })\n      })\n    }),\n\n    AdminModule,\n    ApplicationsModule,\n    AuthModule,\n    BullBoardModule,\n    FilesModule,\n    HealthModule,\n    SessionsModule,\n    UsersModule\n  ],\n  exports: [ApplicationsModule, ConfigModule, Logger, MailerModule, UsersModule],\n  providers: [\n    Logger,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Application.html":{"url":"classes/Application.html","title":"class - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/schemas/application.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            ApplicationDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                compareKey\n                            \n                            \n                                createdAt\n                            \n                            \n                                generateKey\n                            \n                            \n                                hasSufficientScopes\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSufficientScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 18, minlength: 18, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Types.Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({enum: undefined, type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/schemas/application.schema.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import crypto from \"crypto\";\n\nimport { isAlphanumeric } from \"class-validator\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { Document, Types } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { ApplicationDto } from \"../dto/application.dto\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { btoa } from \"@/utils/btoa\";\nimport { generateId } from \"@/utils/generateId\";\n\nconst HMAC_SHA256 = (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\");\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class Application extends Document implements ApplicationDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 18,\n    minlength: 18,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          key: {\n            $type: \"string\"\n          }\n        }\n      },\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  key!: string | null;\n\n  @Prop(\n    raw({\n      default: null,\n      type: Date\n    })\n  )\n  lastUsed!: Date | null;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  name!: string;\n\n  @Prop({\n    enum: Object.values(ApplicationScopes),\n    type: [String]\n  })\n  scopes!: Types.Array;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  compareKey!: (key: string, secret: string) => boolean;\n  generateKey!: (secret: string) => Promise;\n  hasSufficientScopes!: (scopes: ApplicationScopes[]) => boolean;\n  toDto!: () => ApplicationDto;\n}\n\nexport const ApplicationSchema = SchemaFactory.createForClass(Application);\n\nApplicationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(9)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nApplicationSchema.methods.compareKey = function(\n  this: Application,\n  key: string,\n  secret: string\n): boolean {\n  if (!this.key) return false;\n\n  return crypto.timingSafeEqual(Buffer.from(HMAC_SHA256(key, secret)), Buffer.from(this.key));\n};\n\nApplicationSchema.methods.generateKey = async function(\n  this: Application,\n  secret: string\n): Promise {\n  /**\n   ** The final api key length must be a multiple of 3 to avoid padding when converted to base64.\n   ** Application ID (18) + period (1) + Application secret token (32) = 51\n   ** The period is used as a seperator so when we decode the base64 in the auth guard, we know\n   ** which part is our application id and secret token.\n   */\n  const token = await generateId(16);\n  const key = `${this.id}.${token}`;\n\n  this.key = HMAC_SHA256(key, secret);\n\n  await this.save();\n\n  return btoa(key);\n};\n\nApplicationSchema.methods.hasSufficientScopes = function(\n  this: Application,\n  scopes: ApplicationScopes[]\n) {\n  return scopes.every(scope => this.scopes.includes(scope));\n};\n\nApplicationSchema.methods.toDto = function(this: Application): ApplicationDto {\n  return plainToClass(ApplicationDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationAlreadyExists.html":{"url":"classes/ApplicationAlreadyExists.html","title":"class - ApplicationAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationDto.html":{"url":"classes/ApplicationDto.html","title":"class - ApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                lastUsed\n                            \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/application.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nexport class ApplicationDto {\n  createdAt!: Date;\n\n  id!: string;\n\n  @Exclude()\n  key!: string | null;\n\n  lastUsed!: Date | null;\n\n  name!: string;\n\n  scopes!: ApplicationScopes[];\n\n  @Exclude()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationNotFound.html":{"url":"classes/ApplicationNotFound.html","title":"class - ApplicationNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApplicationsController.html":{"url":"controllers/ApplicationsController.html","title":"controller - ApplicationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApplicationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                applications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                create\n                            \n                            \n                                deleteOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateApplicationDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/key')@Throttle(25, 60)\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: CreateApplicationDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/applications/applications.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateApplicationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { ApplicationDto } from \"./dto/application.dto\";\nimport { CreateApplicationDto } from \"./dto/create-application.dto\";\nimport { GenerateApplicationKeyDto } from \"./dto/generate-application-key.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"applications\")\n@UseGuards(AuthGuard)\nexport class ApplicationsController {\n  constructor(private readonly applications: ApplicationsService) {}\n\n  @Get()\n  all(@CurrentUser(\"id\") uid: string): Promise {\n    return this.applications\n      .find({ uid })\n      .then(applications => applications.map(application => application.toDto()));\n  }\n\n  @Post()\n  @Throttle(25, 60)\n  create(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    return this.applications.create({ ...dto, uid }).then(application => application.toDto());\n  }\n\n  @Delete(\"/:id\")\n  deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.applications.deleteOne({ id, uid }).then(application => application.toDto());\n  }\n\n  @Patch(\"/:id\")\n  updateOne(\n    @Body() dto: CreateApplicationDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return this.applications.updateOne({ id, uid }, dto).then(application => application.toDto());\n  }\n\n  @Post(\"/:id/key\")\n  @Throttle(25, 60)\n  async generateKey(\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    return {\n      key: await this.applications.generateKey({ id, uid })\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationsModule.html":{"url":"modules/ApplicationsModule.html","title":"module - ApplicationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/applications/applications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApplicationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ApplicationsController } from \"./applications.controller\";\nimport { ApplicationsService } from \"./applications.service\";\n\nimport { Application, ApplicationSchema } from \"./schemas/application.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Application.name, schema: ApplicationSchema }])],\n  exports: [ApplicationsService],\n  controllers: [ApplicationsController],\n  providers: [ApplicationsService]\n})\nexport class ApplicationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationsService.html":{"url":"injectables/ApplicationsService.html","title":"injectable - ApplicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generateKey\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, applications: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateKey(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/applications/applications.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { FilterQuery, Model, Types } from \"mongoose\";\n\nimport {\n  ApplicationAlreadyExists,\n  ApplicationNotFound,\n  TooManyApplications\n} from \"./applications.errors\";\n\nimport { ApplicationScopes } from \"./enums/application-scopes.enum\";\n\nimport { Application } from \"./schemas/application.schema\";\n\n@Injectable()\nexport class ApplicationsService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectModel(Application.name)\n    private readonly applications: Model\n  ) {}\n\n  async create(data: {\n    name: Application[\"name\"];\n    scopes: ApplicationScopes[];\n    uid: Application[\"uid\"];\n  }): Promise {\n    const { name, uid } = data;\n\n    if ((await this.applications.countDocuments({ uid })) > 50) {\n      throw new TooManyApplications();\n    }\n\n    if (await this.applications.exists({ name, uid })) {\n      throw new ApplicationAlreadyExists(name);\n    }\n\n    return new this.applications(data).save();\n  }\n\n  async delete(query: FilterQuery): Promise {\n    await this.applications.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.deleteOne();\n  }\n\n  async find(query: FilterQuery): Promise {\n    return this.applications.find(query).sort(\"-lastUsed\");\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.applications.findOne(query);\n  }\n\n  async generateKey(query: FilterQuery): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    return application.generateKey(this.config.get(\"API_KEY_SECRET\") as string);\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      name: Application[\"name\"];\n      scopes: ApplicationScopes[];\n    }\n  ): Promise {\n    const application = await this.applications.findOne(query);\n    if (!application) throw new ApplicationNotFound();\n\n    application.name = data.name;\n    application.scopes = new Types.Array();\n\n    Array.from(new Set(data.scopes)).forEach(scope => application.scopes.addToSet(scope));\n\n    return application.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AsyncStorageOptions.html":{"url":"interfaces/AsyncStorageOptions.html","title":"interface - AsyncStorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AsyncStorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { StorageOptions } from \"./storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./storage-module-options-factory.interface\";\n\nexport interface AsyncStorageOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activateAccount\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nactivateAccount(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('activate-account/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(undefined: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto, userAgent: string | undefined, req: Request, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@RecaptchaAction('login')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(session: Express.Session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Express.Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(undefined: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@RecaptchaAction('register')@RecaptchaScore(0.7)@UseGuards(RecaptchaGuard)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(undefined: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Headers,\n  Param,\n  Post,\n  Req,\n  Session,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\n\nimport { Request } from \"express\";\n\nimport { Throttle } from \"nestjs-throttler\";\n\nimport { UAParser } from \"ua-parser-js\";\n\nimport { AuthService } from \"./auth.service\";\n\nimport { successfulLogin } from \"./emails/successful-login.email\";\n\nimport { ForgotPasswordDto } from \"./dto/forgot-password.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { ResetPasswordDto } from \"./dto/reset-password.dto\";\n\nimport { RecaptchaAction } from \"@/decorators/recaptcha-action.decorator\";\nimport { RecaptchaScore } from \"@/decorators/recaptcha-score.decorator\";\n\nimport { RecaptchaGuard } from \"@/guards/recaptcha.guard\";\n\nimport { ISessionData } from \"@/modules/sessions/interfaces/session-data.interface\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\n\nimport { UserDto } from \"@/modules/users/dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Controller(\"auth\")\n@Throttle(25, 300) // 25 request every 5 minutes\nexport class AuthController {\n  constructor(private readonly auth: AuthService, private readonly mailer: MailerService) {}\n\n  @Get(\"activate-account/:token\")\n  activateAccount(@Param(\"token\") token: string): Promise {\n    return this.auth.activateAccount(token);\n  }\n\n  @Post(\"forgot-password\")\n  forgotPassword(@Body() { email }: ForgotPasswordDto): void {\n    /*\n     * Don't await so that if an account with the email does exists,\n     * it will take the same response time as if the account didn't exist\n     */\n    this.auth.forgotPassword(email);\n  }\n\n  @Post(\"login\")\n  @RecaptchaAction(\"login\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  async login(\n    @Body() { password, username }: LoginDto,\n    @Headers(\"user-agent\") userAgent: string | undefined,\n    @Req() req: Request,\n    @Session() session: ISessionData\n  ): Promise {\n    const user = await this.auth.login(username, password);\n    const ua = new UAParser(userAgent);\n\n    session.identifier = await generateId(8);\n    session.lastUsed = new Date();\n    session.ip = getClientIp(req);\n    session.ua = {\n      browser: ua.getBrowser(),\n      device: ua.getDevice(),\n      os: ua.getOS()\n    };\n    session.uid = user.id;\n\n    await this.mailer.send(\n      successfulLogin(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\"),\n        session\n      })\n    );\n\n    return user.toDto();\n  }\n\n  @Delete(\"logout\")\n  logout(@Session() session: Express.Session): Promise {\n    return new Promise((resolve, reject) =>\n      session.destroy(error => (error ? reject(error) : resolve()))\n    );\n  }\n\n  @Post(\"register\")\n  @RecaptchaAction(\"register\")\n  @RecaptchaScore(0.7)\n  @UseGuards(RecaptchaGuard)\n  register(@Body() { email, password, username }: RegisterDto): Promise {\n    return this.auth.register(email, password, username);\n  }\n\n  @Post(\"reset-password\")\n  resetPassword(@Body() { newPassword, token }: ResetPasswordDto): Promise {\n    return this.auth.resetPassword(newPassword, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Private\n                                    Async\n                                _handleAPIKey\n                            \n                            \n                                    Private\n                                    Async\n                                _handleSession\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, config: ConfigService, reflector: Reflector, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:96\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleAPIKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[])\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scopes\n                                    \n                                                ApplicationScopes[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            _handleSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _handleSession(req: IRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { getClientIp } from \"request-ip\";\n\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { InsufficientScopes, InvalidAPIKey } from \"@/modules/applications/applications.errors\";\nimport { UserNotActivated, UserNotLoggedIn } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { atob } from \"@/utils/atob\";\n\nexport const AUTH_GUARD_OPTIONAL = \"AUTH_GUARD_OPTIONAL\";\nexport const AUTH_GUARD_SCOPES = \"AUTH_GUARD_SCOPES\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly config: ConfigService,\n    private readonly reflector: Reflector,\n    private readonly users: UsersService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const optional = this._getMetadata(AUTH_GUARD_OPTIONAL, context);\n    const scopes = this._getMetadata(AUTH_GUARD_SCOPES, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      return req.headers.authorization\n        ? await this._handleAPIKey(req, scopes)\n        : await this._handleSession(req);\n    } catch (error) {\n      if (!optional) throw error;\n      return true;\n    }\n  }\n\n  private async _handleAPIKey(req: IRequest, scopes?: ApplicationScopes[]) {\n    const key = req.headers.authorization && atob(req.headers.authorization);\n    if (!key) throw new InvalidAPIKey();\n\n    const [id, token] = key.split(\".\");\n    if (!id || !token) throw new InvalidAPIKey();\n\n    const application = await this.applications.findOne({ id });\n\n    if (!application || !application.compareKey(key, this.config.get(\"API_SECRET\") as string)) {\n      throw new InvalidAPIKey();\n    }\n\n    // Only allow routes that specify scopes to allow the usage of an API key.\n    if (!scopes || !scopes.length || !application.hasSufficientScopes(scopes)) {\n      throw new InsufficientScopes();\n    }\n\n    const user = await this.users.findOne({ id: application.uid });\n    if (!user) throw new InvalidAPIKey();\n\n    await application.updateOne({ lastUsed: new Date() });\n\n    req.user = user;\n\n    return true;\n  }\n\n  private async _handleSession(req: IRequest) {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UserNotLoggedIn();\n    if (!user.activated) throw new UserNotActivated();\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    return true;\n  }\n\n  private _getMetadata(key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: IRequest, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                IRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { getClientIp } from \"request-ip\";\n\nimport {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  NestMiddleware,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nimport { NextFunction, Response } from \"express\";\n\nimport { IRequest } from \"@/interfaces/request.interface\";\n\nimport { UsersService } from \"@/modules/users/users.service\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly users: UsersService) {}\n\n  async use(req: IRequest, _res: Response, next: NextFunction): Promise {\n    if (!req.session) throw new InternalServerErrorException(\"Failed to get session data!\");\n\n    const user = req.session.uid ? await this.users.findOne({ id: req.session.uid }) : null;\n\n    if (!user) throw new UnauthorizedException(\"You are not logged in!\");\n    if (!user.activated) throw new ForbiddenException(\"Please activate your account first!\");\n\n    req.session.ip = getClientIp(req);\n    req.session.lastUsed = new Date();\n    req.user = user;\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nSessionsModule\n\nSessionsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SessionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\n\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\n\nimport { PasswordReset, PasswordResetSchema } from \"./schemas/password-reset.schema\";\nimport { UserActivation, UserActivationSchema } from \"./schemas/user-activation.schema\";\n\n@Module({\n  imports: [\n    HttpModule,\n\n    MongooseModule.forFeature([\n      { name: PasswordReset.name, schema: PasswordResetSchema },\n      { name: UserActivation.name, schema: UserActivationSchema }\n    ]),\n\n    SessionsModule\n  ],\n  exports: [AuthService],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, sessions: SessionsService, users: UsersService, passwordResets: Model, userActivations: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordResets\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userActivations\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activateAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activateAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(newPassword: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\n\nimport {\n  InvalidCredentials,\n  InvalidPasswordResetLink,\n  InvalidUserActivationLink,\n  UserNotActivated\n} from \"./auth.errors\";\n\nimport { passwordReset } from \"./emails/password-reset.email\";\nimport { passwordResetted } from \"./emails/password-post-reset.email\";\nimport { userActivation } from \"./emails/user-activation.email\";\n\nimport { PasswordReset } from \"./schemas/password-reset.schema\";\nimport { UserActivation } from \"./schemas/user-activation.schema\";\n\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\nimport { UsersService } from \"@/modules/users/users.service\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n    private readonly users: UsersService,\n\n    @InjectModel(PasswordReset.name)\n    private readonly passwordResets: Model,\n\n    @InjectModel(UserActivation.name)\n    private readonly userActivations: Model\n  ) {}\n\n  async activateAccount(token: string): Promise {\n    const activation = await this.userActivations.findOne({ token });\n    if (!activation) throw new InvalidUserActivationLink();\n\n    const user = await this.users.findOne({ id: activation.uid });\n    if (!user) throw new InvalidUserActivationLink();\n\n    user.activated = true;\n    user.expiresAt = null;\n\n    await user.save();\n    await activation.deleteOne();\n  }\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.users.findOne({ email });\n    if (!user) return false;\n\n    const reset = await new this.passwordResets({ uid: user.id }).save();\n\n    await this.mailer.send(\n      passwordReset(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/reset-password/${reset.token}`)\n      })\n    );\n\n    return true;\n  }\n\n  async login(username: string, password: string): Promise {\n    const user = await this.users.findOne({ $or: [{ email: username }, { username }] });\n\n    if (!user || !(await user.comparePassword(password))) throw new InvalidCredentials();\n    if (!user.activated) throw new UserNotActivated();\n\n    return user;\n  }\n\n  async register(email: string, password: string, username: string): Promise {\n    const user = await this.users.create(email, password, username);\n    const activation = await new this.userActivations({ uid: user.id }).save();\n\n    await this.mailer.send(\n      userActivation(email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(`/activate-account/${activation.token}`)\n      })\n    );\n  }\n\n  async resetPassword(newPassword: string, token: string): Promise {\n    const passwordReset = await this.passwordResets.findOne({ token });\n    if (!passwordReset) throw new InvalidPasswordResetLink();\n\n    const user = await this.users.findOne({ id: passwordReset.uid });\n    if (!user) throw new InvalidPasswordResetLink();\n\n    await this.sessions.delete({ \"session.uid\": user.id });\n\n    user.password = newPassword;\n\n    await user.save();\n    await passwordReset.deleteOne();\n\n    await this.mailer.send(\n      passwordResetted(user.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BullBoardModule.html":{"url":"modules/BullBoardModule.html","title":"module - BullBoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BullBoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_imports\n\n\n\ncluster_BullBoardModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BullBoardProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { BullBoardProvider } from \"./bull-board.provider\";\n\nimport { FilesModule } from \"@/modules/files/files.module\";\n\n@Module({\n  imports: [FilesModule],\n  providers: [BullBoardProvider]\n})\nexport class BullBoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BullBoardProvider.html":{"url":"injectables/BullBoardProvider.html","title":"injectable - BullBoardProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BullBoardProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bull-board/bull-board.provider.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailsQueue: Queue, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bull-board/bull-board.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { setQueues } from \"bull-board\";\n\n@Injectable()\nexport class BullBoardProvider {\n  constructor(\n    // From nodemailer global module\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {\n    setQueues([this.emailsQueue, this.filesQueue]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/counter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                increment\n                            \n                            \n                                is\n                            \n                            \n                                onceItEqualsTo\n                            \n                            \n                                set\n                            \n                            \n                                whenItEqualsTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/counter.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decrement\n                        \n                        \n                    \n                \n            \n            \n                \ndecrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:12\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increment\n                        \n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:19\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            is\n                        \n                        \n                    \n                \n            \n            \n                \nis(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onceItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nonceItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            whenItEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nwhenItEqualsTo(n: number, cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/counter.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/counter.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from \"events\";\n\nexport class Counter extends EventEmitter {\n  constructor(private _value = 0) {\n    super();\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  decrement(): this {\n    this._value -= 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  increment(): this {\n    this._value += 1;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  is(n: number): boolean {\n    return this.value === n;\n  }\n\n  onceItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n    else this.once(String(n), cb);\n\n    return this;\n  }\n\n  set(value: number): this {\n    this._value = value;\n    this.emit(String(this.value));\n\n    return this;\n  }\n\n  whenItEqualsTo(n: number, cb: () => void): this {\n    if (this.value === n) cb();\n\n    this.on(String(n), cb);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateApplicationDto.html":{"url":"classes/CreateApplicationDto.html","title":"class - CreateApplicationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateApplicationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/create-application.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Application name cannot be empty!'})@IsString({message: 'Application name must be a $constraint1'})@MaxLength(32, {message: 'Application name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationScopes[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ArrayUnique({message: 'Application scope elements must be unique!'})@IsEnum(ApplicationScopes, {each: true, message: 'Invalid application scopes provided!'})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/create-application.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayUnique, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { ApplicationScopes } from \"../enums/application-scopes.enum\";\n\nexport class CreateApplicationDto {\n  @IsNotEmpty({ message: \"Application name cannot be empty!\" })\n  @IsString({ message: \"Application name must be a $constraint1\" })\n  @MaxLength(32, { message: \"Application name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @ArrayUnique({ message: \"Application scope elements must be unique!\" })\n  @IsEnum(ApplicationScopes, { each: true, message: \"Invalid application scopes provided!\" })\n  @IsOptional()\n  scopes: ApplicationScopes[] = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFolderEntryDto.html":{"url":"classes/CreateFolderEntryDto.html","title":"class - CreateFolderEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFolderEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/create-folder-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                folder\n                            \n                            \n                                name\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Folder name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Folder name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/create-folder-entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class CreateFolderEntryDto {\n  @IsOptional()\n  @IsString()\n  folder!: string | null;\n\n  @IsNotEmpty({ message: \"Folder name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Folder name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteFileJob.html":{"url":"interfaces/DeleteFileJob.html","title":"interface - DeleteFileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteFileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/jobs/delete-file.job.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeleteFileJob {\n  fileId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDto.html":{"url":"classes/DeleteUserDto.html","title":"class - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/delete-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/delete-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiskStorage.html":{"url":"classes/DiskStorage.html","title":"class - DiskStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiskStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getDestinationOnDisk\n                            \n                            \n                                    Private\n                                _getLocationOnDisk\n                            \n                            \n                                createReadable\n                            \n                            \n                                    Async\n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: DiskStorageEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/disk.engine.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DiskStorageEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getDestinationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getDestinationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getLocationOnDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getLocationOnDisk(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/disk.engine.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiskStorageEngineOptions.html":{"url":"interfaces/DiskStorageEngineOptions.html","title":"interface - DiskStorageEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiskStorageEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/disk.engine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directory\n                                    \n                                \n                                \n                                    \n                                        directory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\n\nimport { Readable, Writable } from \"stream\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nimport { chunk } from \"@/utils/chunk\";\n\nexport interface DiskStorageEngineOptions {\n  directory: string;\n}\n\nexport class DiskStorage implements StorageEngine {\n  constructor(private readonly options: DiskStorageEngineOptions) {\n    if (!path.isAbsolute(options.directory)) {\n      throw new Error(\"Directory for disk storage must be absolute!\");\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      await fs.promises.unlink(this._getLocationOnDisk(id));\n    } catch (error) {\n      if (error.code !== \"ENOENT\") {\n        throw error;\n      }\n    }\n  }\n\n  createReadable(id: string): Readable {\n    return fs.createReadStream(this._getLocationOnDisk(id));\n  }\n\n  async createWritable(id: string): Promise {\n    await fs.promises.mkdir(this._getDestinationOnDisk(id), { recursive: true });\n    return fs.createWriteStream(this._getLocationOnDisk(id));\n  }\n\n  private _getDestinationOnDisk(id: string) {\n    return path.join(this.options.directory, chunk.string(id.slice(0, -1), 2).join(path.sep));\n  }\n\n  private _getLocationOnDisk(id: string) {\n    return path.join(this._getDestinationOnDisk(id), id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayNameTaken.html":{"url":"classes/DisplayNameTaken.html","title":"class - DisplayNameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayNameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/email.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    html\n                                \n                                \n                                    subject\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            html\n                        \n                        \n                    \n                \n            \n            \n                \nhtml()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subject\n                        \n                        \n                    \n                \n            \n            \n                \nsubject()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/email.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Email {\n  html(): Promise | string;\n  subject(): string;\n  text(): string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/email-confirmation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                newEmail\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/email-confirmation.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class EmailConfirmation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"3h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    validate: isEmail\n  })\n  newEmail!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const EmailConfirmationSchema = SchemaFactory.createForClass(EmailConfirmation);\n\nEmailConfirmationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTaken.html":{"url":"classes/EmailTaken.html","title":"class - EmailTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/schemas/entry.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            EntryDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                folder\n                            \n                            \n                                getChildren\n                            \n                            \n                                getParentFolder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isFile\n                            \n                            \n                                isFolder\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                timestamp\n                            \n                            \n                                toDto\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChildren\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParentFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 255, required: true, trim: true, validate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({min: 0, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:89\n                            \n                        \n\n                \n                    \n                        Will be used for sorting when entries are paginated.\nIt is derived from the updatedAt property in a pre save hook.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/schemas/entry.schema.ts:100\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, FilterQuery, QueryCursor } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { plainToClass } from \"class-transformer\";\n\nimport { EntryDto } from \"../dto/entry.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nimport { PATH_SAFE_REGEX } from \"@/validators/is-string-path-safe.validator\";\n\n@Schema({\n  id: false,\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class Entry extends Document implements EntryDto {\n  createdAt!: Date;\n\n  @Prop({\n    default: true\n  })\n  deletable!: boolean;\n\n  depth!: number;\n\n  @Prop()\n  folder!: string | null;\n\n  @Prop({\n    default: false\n  })\n  hidden!: boolean;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  @Prop({\n    required: true\n  })\n  isFile!: boolean;\n\n  @Prop({\n    required: true\n  })\n  isFolder!: boolean;\n\n  @Prop({\n    maxlength: 255,\n    required: true,\n    trim: true,\n    validate: (value: string) => !PATH_SAFE_REGEX.test(value)\n  })\n  name!: string;\n\n  @Prop({\n    unique: true\n  })\n  path!: string;\n\n  @Prop({\n    default: false\n  })\n  public!: boolean;\n\n  @Prop({\n    min: 0,\n    required: true\n  })\n  size!: number;\n\n  /**\n   * Will be used for sorting when entries are paginated.\n   * It is derived from the updatedAt property in a pre save hook.\n   */\n  @Prop()\n  timestamp!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n\n  updatedAt!: Date;\n\n  getChildren!: (query?: FilterQuery) => QueryCursor;\n  getParentFolder!: () => Promise;\n  toDto!: () => EntryDto;\n}\n\nexport const EntrySchema = SchemaFactory.createForClass(Entry);\n\nexport const ENTRY_COLLATION_OPTIONS = { locale: \"en\", strength: 2 };\n\nEntrySchema.index({ name: 1 }, { collation: ENTRY_COLLATION_OPTIONS });\n\nEntrySchema.pre(\"remove\", function (next) {\n  this.model(Entry.name)\n    .deleteMany({\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .then(() => next())\n    .catch((error) => next(error));\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (!this.isNew) return next();\n  if (!this.id && this.isFile) return next(new Error(\"File ID is missing upon entry creation!\"));\n\n  try {\n    if (!this.id && this.isFolder) {\n      this.id = await generateId(8);\n    }\n\n    this.size = this.isFolder ? 0 : this.size;\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", function (next) {\n  if (!this.isModified()) return next();\n\n  this.timestamp = this.updatedAt.getTime();\n\n  next();\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (!this.isModified(\"folder\") && !this.isModified(\"name\")) return next();\n\n  try {\n    const folder = await this.getParentFolder();\n    const newPath = folder ? `${folder.path}/${this.name}` : `/${this.name}`;\n\n    if (!this.isNew) {\n      // this.path is only available if it isn't a new document\n      await this.model(Entry.name)\n        .find({\n          path: { $regex: `^${this.path}/` },\n          uid: this.uid\n        })\n        .cursor()\n        .eachAsync(async (child) => {\n          child.path = newPath + child.path.substr(this.path.length);\n          await child.save();\n        });\n    }\n\n    this.path = newPath;\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.pre(\"save\", async function (next) {\n  if (\n    !this.isModified(\"deletable\") &&\n    !this.isModified(\"folder\") &&\n    !this.isModified(\"hidden\") &&\n    !this.isModified(\"public\")\n  ) {\n    return next();\n  }\n\n  try {\n    const parentFolder = await this.getParentFolder();\n\n    const deletable = parentFolder ? parentFolder.deletable : this.deletable;\n\n    // If the values of these fields are set to false on the parent folder,\n    // then the values of its children can only be false.\n    const hidden = parentFolder?.hidden === false ? false : this.hidden;\n    const isPublic = parentFolder?.public === false ? false : this.public;\n\n    this.deletable = deletable;\n    this.hidden = hidden;\n    this.public = isPublic;\n\n    await this.model(Entry.name).updateMany(\n      {\n        path: { $regex: `^${this.path}/` },\n        uid: this.uid\n      },\n      {\n        deletable,\n        hidden,\n        public: isPublic\n      }\n    );\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nEntrySchema.virtual(\"depth\").get(function (this: Entry) {\n  return this.path.split(\"/\").filter((el) => el.length > 0).length;\n});\n\nEntrySchema.methods.getChildren = function (\n  this: Entry,\n  query: FilterQuery = {}\n): QueryCursor {\n  return this.model(Entry.name)\n    .find({\n      ...query,\n      path: { $regex: `^${this.path}/` },\n      uid: this.uid\n    })\n    .collation(ENTRY_COLLATION_OPTIONS)\n    .cursor();\n};\n\nEntrySchema.methods.getParentFolder = async function (this: Entry): Promise {\n  if (!this.folder) return null;\n\n  const folder = await this.model(Entry.name).findOne({\n    id: this.folder,\n    uid: this.uid\n  });\n\n  // Document is a children of a deleted folder\n  if (!folder && this.folder) {\n    this.folder = null;\n    await this.save();\n  }\n\n  return folder;\n};\n\nEntrySchema.methods.toDto = function (this: Entry): EntryDto {\n  return plainToClass(EntryDto, this.toJSON(), {\n    excludePrefixes: [\"_\"]\n  });\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryAlreadyExists.html":{"url":"classes/EntryAlreadyExists.html","title":"class - EntryAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, path?: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryDto.html":{"url":"classes/EntryDto.html","title":"class - EntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletable\n                            \n                            \n                                depth\n                            \n                            \n                                folder\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                isFile\n                            \n                            \n                                isFolder\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                public\n                            \n                            \n                                size\n                            \n                            \n                                timestamp\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            depth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/entry.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class EntryDto {\n  createdAt!: Date;\n\n  deletable!: boolean;\n\n  depth!: number;\n\n  folder!: string | null;\n\n  @Exclude()\n  hidden!: boolean;\n\n  id!: string;\n\n  isFile!: boolean;\n\n  isFolder!: boolean;\n\n  name!: string;\n\n  path!: string;\n\n  public!: boolean;\n\n  size!: number;\n\n  timestamp!: number;\n\n  uid!: string;\n\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotDeletable.html":{"url":"classes/EntryNotDeletable.html","title":"class - EntryNotDeletable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotDeletable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntryNotFound.html":{"url":"classes/EntryNotFound.html","title":"class - EntryNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntryNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTooLarge.html":{"url":"classes/FileTooLarge.html","title":"class - FileTooLarge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTooLarge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PayloadTooLargeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filename: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFolder\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                download\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createFolder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFolder(dto: CreateFolderEntryDto, uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create-folder')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateFolderEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/delete')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(uid: string | undefined, id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/download')@OptionalAuth()@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/details')@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(uid: string, cursor: number, folder: string | null, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@UseScopes(ApplicationScopes.FILES_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cursor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(dto: UpdateEntryDto, uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/update')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateEntryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(uid: string, folder: string | null, isPublic: boolean, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseScopes(ApplicationScopes.FILES_WRITE)\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.controller.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isPublic\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  Logger,\n  Param,\n  ParseBoolPipe,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Req,\n  Res,\n  Query,\n  UseGuards\n} from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { Request, Response } from \"express\";\n\nimport { EntryNotFound, ParentFolderNotFound } from \"./files.errors\";\nimport { FilesService } from \"./files.service\";\n\nimport { CreateFolderEntryDto } from \"./dto/create-folder-entry.dto\";\nimport { EntryDto } from \"./dto/entry.dto\";\nimport { UpdateEntryDto } from \"./dto/update-entry.dto\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { OptionalAuth } from \"@/decorators/optional-auth\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { PaginationDto } from \"@/dto/pagination.dto\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"files\")\n@UseGuards(AuthGuard)\nexport class FilesController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly files: FilesService,\n    private readonly logger: Logger,\n    private readonly storage: StorageService\n  ) {}\n\n  @Delete(\"/:id/delete\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async deleteOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const deleted = await this.files.deleteOne({ id, uid });\n\n    return deleted.toDto();\n  }\n\n  @Get(\"/:id/details\")\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async findOne(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    const entry = await this.files.findOne({ id, uid });\n    if (!entry) throw new EntryNotFound();\n\n    return entry.toDto();\n  }\n\n  @Get(\"/:id/download\")\n  @OptionalAuth()\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async download(\n    @CurrentUser(\"id\") uid: string | undefined,\n    @Param(\"id\") id: string,\n    @Res() res: Response\n  ): Promise {\n    const readable = await this.files.createReadable(id, uid);\n\n    readable.on(\"error\", (error: Error) => {\n      // Exception filter disabled when using the @Res() decorator, so we have to log the error manually\n      this.logger.error(error);\n\n      if (!res.headersSent) {\n        const err = new InternalServerErrorException(error);\n        res.status(err.getStatus()).send(err.getResponse());\n      }\n    });\n\n    readable.pipe(res);\n  }\n\n  @Patch(\"/:id/update\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async updateOne(\n    @Body() dto: UpdateEntryDto,\n    @CurrentUser(\"id\") uid: string,\n    @Param(\"id\") id: string\n  ): Promise {\n    const entry = await this.files.updateOne(\n      { id, uid },\n      { ...dto, deletable: true, hidden: false }\n    );\n\n    return entry.toDto();\n  }\n\n  @Post(\"create-folder\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async createFolder(\n    @Body() dto: CreateFolderEntryDto,\n    @CurrentUser(\"id\") uid: string\n  ): Promise {\n    const folder = await this.files.createEntry({\n      deletable: true,\n      folder: dto.folder,\n      hidden: false,\n      isFile: false,\n      isFolder: true,\n      name: dto.name,\n      public: dto.public,\n      size: 0,\n      uid\n    });\n\n    return folder.toDto();\n  }\n\n  @Get(\"list\")\n  @UseScopes(ApplicationScopes.FILES_READ)\n  async list(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"cursor\", new DefaultValuePipe(0), ParseIntPipe) cursor: number,\n    @Query(\"folder\", new DefaultValuePipe(null)) folder: string | null,\n    @Query(\"limit\", new DefaultValuePipe(50), ParseIntPipe) limit: number\n  ): Promise> {\n    const entries = await this.files.list({ folder, uid }, { cursor, limit });\n\n    return {\n      ...entries,\n      items: entries.items.map((entry) => entry.toDto())\n    };\n  }\n\n  @Post(\"upload\")\n  @UseScopes(ApplicationScopes.FILES_WRITE)\n  async upload(\n    @CurrentUser(\"id\") uid: string,\n    @Query(\"folder\") folder: string | null,\n    @Query(\"public\", ParseBoolPipe) isPublic: boolean,\n    @Req() req: Request\n  ): Promise {\n    if (folder && !(await this.files.exists({ id: folder, uid }))) {\n      throw new ParentFolderNotFound();\n    }\n\n    const files = await this.storage.write(req, {\n      field: \"file\",\n      limits: {\n        files: this.config.get(\"MAX_FILES_PER_UPLOAD\"),\n        fileSize: this.config.get(\"MAX_FILE_SIZE\")\n      }\n    });\n\n    return Promise.all(\n      files.map((file) =>\n        this.files\n          .createEntry({\n            deletable: true,\n            folder,\n            hidden: false,\n            id: file.id,\n            isFile: true,\n            isFolder: false,\n            name: file.filename,\n            public: isPublic,\n            size: file.size,\n            uid\n          })\n          .then((file) => file.toDto())\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesProcessor\n                        \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { FilesController } from \"./files.controller\";\nimport { FilesProcessor } from \"./files.processor\";\nimport { FilesService } from \"./files.service\";\n\nimport { Entry, EntrySchema } from \"./schemas/entry.schema\";\n\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"files\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    }),\n\n    MongooseModule.forFeature([{ name: Entry.name, schema: EntrySchema }]),\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [BullModule, FilesService],\n  controllers: [FilesController],\n  providers: [FilesProcessor, FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesProcessor.html":{"url":"injectables/FilesProcessor.html","title":"injectable - FilesProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleFileDeletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleFileDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileDeletion(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/files/files.processor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { DeleteFileJob } from \"./jobs/delete-file.job\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Injectable()\n@Processor(\"files\")\nexport class FilesProcessor {\n  constructor(private readonly storage: StorageService) {}\n\n  @Process(\"delete\")\n  async handleFileDeletion(job: Job): Promise {\n    await this.storage.delete(job.data.fileId);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _renameWithIndex\n                            \n                            \n                                    Private\n                                _validateParent\n                            \n                            \n                                    Async\n                                createEntry\n                            \n                            \n                                    Async\n                                createReadable\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                hasDuplicates\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, entries: Model, filesQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _renameWithIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _renameWithIndex(filename: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _validateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _validateParent(entry: Entry, folder?: Entry | null)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                Entry | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReadable(id: string, uid?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query: FilterQuery, options: QueryFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            QueryFindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery, options: QueryFindBaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            QueryFindBaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hasDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDuplicates(filename: string, query: FilterQuery>)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                FilterQuery>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: FilterQuery, options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(query: FilterQuery, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/files/files.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { FilterQuery, Model, QueryFindBaseOptions, QueryFindOptions } from \"mongoose\";\nimport { Queue } from \"bull\";\nimport { Readable } from \"stream\";\n\nimport {\n  EntryAlreadyExists,\n  EntryNotDeletable,\n  EntryNotFound,\n  ParentFolderNotFound,\n  ParentIsChildrenOfItself,\n  ParentIsItself\n} from \"./files.errors\";\n\nimport { Entry, ENTRY_COLLATION_OPTIONS } from \"./schemas/entry.schema\";\n\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\nimport { clamp } from \"@/utils/clamp\";\nimport { paginate, Pagination } from \"@/utils/paginate\";\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    private readonly storage: StorageService,\n\n    @InjectModel(Entry.name)\n    private readonly entries: Model,\n\n    @InjectQueue(\"files\")\n    private readonly filesQueue: Queue\n  ) {}\n\n  async createEntry(data: {\n    deletable: Entry[\"deletable\"];\n    folder: Entry[\"folder\"];\n    hidden: Entry[\"hidden\"];\n    id?: Entry[\"id\"];\n    isFile: Entry[\"isFile\"];\n    isFolder: Entry[\"isFolder\"];\n    name: Entry[\"name\"];\n    public: Entry[\"public\"];\n    size: Entry[\"size\"];\n    uid: Entry[\"uid\"];\n  }): Promise {\n    const folder = data.folder ? await this.findOne({ id: data.folder, uid: data.uid }) : null;\n    if (!folder && data.folder) throw new ParentFolderNotFound();\n\n    const folderId = folder && folder.id;\n    const folderPath = (folder && folder.path) || \"/\";\n\n    const duplicates = await this.hasDuplicates(data.name, { folder: folderId, uid: data.uid });\n    if (duplicates && !data.isFile) throw new EntryAlreadyExists(data.name, folderPath);\n\n    return new this.entries({\n      ...data,\n      folder: folderId,\n      name: this._renameWithIndex(data.name, duplicates)\n    }).save();\n  }\n\n  async createReadable(id: string, uid?: string): Promise {\n    const file = uid\n      ? await this.findOne({ id, isFile: true, isFolder: false, uid })\n      : await this.findOne({ id, isFile: true, isFolder: false, public: true });\n\n    if (!file) throw new EntryNotFound();\n\n    return this.storage.read(file.id);\n  }\n\n  async deleteMany(query: FilterQuery): Promise {\n    // We have to use .remove on each individual document so that middlewares are executed\n    await this.entries\n      .find(query)\n      .collation(ENTRY_COLLATION_OPTIONS)\n      .cursor()\n      .eachAsync(async (entry: Entry) => {\n        if (entry.isFile) {\n          await this.filesQueue.add(\"delete\", { fileId: entry.id });\n        }\n\n        await entry.remove();\n      });\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    const entry = await this.findOne(query);\n\n    if (!entry) throw new EntryNotFound();\n    if (!entry.deletable) throw new EntryNotDeletable();\n\n    await entry\n      .getChildren({ isFile: true })\n      .eachAsync((child) => this.filesQueue.add(\"delete\", { fileId: child.id }));\n\n    return entry.remove();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.entries\n      .findOne(query)\n      .collation(ENTRY_COLLATION_OPTIONS)\n      .select({ _id: 1 })\n      .lean()\n      .then((doc) => !!doc);\n  }\n\n  async find(query: FilterQuery, options: QueryFindOptions = {}): Promise {\n    return this.entries.find(query, undefined, options).collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async findOne(\n    query: FilterQuery,\n    options: QueryFindBaseOptions = {}\n  ): Promise {\n    return this.entries.findOne(query, undefined, options).collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async hasDuplicates(filename: string, query: FilterQuery>): Promise {\n    const parts = filename.split(\".\");\n    const extension = parts[parts.length - 1];\n    const name = parts.slice(0, parts.length - 1).join(\".\");\n\n    // Regex for finding entries with a duplicate index i.e. filename (1..n).ext\n    const regexp = new RegExp(`${name}( \\\\([0-9]+\\\\))+\\\\.${extension}`);\n\n    return this.entries\n      .countDocuments({ $or: [{ name: filename }, { name: regexp }], ...query })\n      .collation(ENTRY_COLLATION_OPTIONS);\n  }\n\n  async list(\n    query: FilterQuery,\n    options: {\n      cursor?: number;\n      limit: number;\n    }\n  ): Promise> {\n    return paginate(this.entries, {\n      collation: ENTRY_COLLATION_OPTIONS,\n      cursor: options.cursor,\n      field: \"timestamp\",\n      limit: clamp(1, 100, options.limit),\n      query,\n      sort: {\n        isFolder: -1\n      }\n    });\n  }\n\n  async updateOne(\n    query: FilterQuery,\n    data: {\n      deletable: Entry[\"deletable\"];\n      folder: Entry[\"folder\"];\n      hidden: Entry[\"hidden\"];\n      name: Entry[\"name\"];\n      public: Entry[\"public\"];\n    }\n  ): Promise {\n    const entry = await this.findOne(query);\n    if (!entry) throw new EntryNotFound();\n\n    const folder = data.folder\n      ? this._validateParent(entry, await this.findOne({ id: data.folder, uid: entry.uid }))\n      : null;\n\n    const folderId = folder && folder.id;\n    const folderPath = (folder && folder.path) || \"/\";\n\n    const exists = data.name !== entry.name && (await this.exists({ folder: folderId, name: data.name, uid: entry.uid })); // prettier-ignore\n    if (exists) throw new EntryAlreadyExists(data.name, folderPath);\n\n    entry.folder = folderId;\n    entry.hidden = data.hidden;\n    entry.name = data.name;\n    entry.public = data.public;\n\n    return entry.save();\n  }\n\n  private _renameWithIndex(filename: string, index: number): string {\n    if (index \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/forgot-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport class ForgotPasswordDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: User[\"email\"];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateApplicationKeyDto.html":{"url":"classes/GenerateApplicationKeyDto.html","title":"class - GenerateApplicationKeyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateApplicationKeyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/dto/generate-application-key.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/applications/dto/generate-application-key.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenerateApplicationKeyDto {\n  key!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCloudEngine.html":{"url":"classes/GoogleCloudEngine.html","title":"class - GoogleCloudEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCloudEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StorageEngine\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReadable\n                            \n                            \n                                createWritable\n                            \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: GoogleCloudEngineOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/engines/google-cloud.engine.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        GoogleCloudEngineOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : client.bucket(this.options.bucketName)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/engines/google-cloud.engine.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/engines/google-cloud.engine.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleCloudEngineOptions.html":{"url":"interfaces/GoogleCloudEngineOptions.html","title":"interface - GoogleCloudEngineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleCloudEngineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/engines/google-cloud.engine.ts\n        \n\n\n            \n                Extends\n            \n            \n                        StorageOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nimport { Storage, StorageOptions } from \"@google-cloud/storage\";\n\nimport { StorageEngine } from \"../interfaces/storage-engine.interface\";\n\nconst client = new Storage();\n\nexport interface GoogleCloudEngineOptions extends StorageOptions {\n  bucketName: string;\n}\n\nexport class GoogleCloudEngine implements StorageEngine {\n  constructor(private readonly options: GoogleCloudEngineOptions) {}\n\n  private readonly bucket = client.bucket(this.options.bucketName);\n\n  async delete(id: string): Promise {\n    await this.bucket.file(id).delete();\n  }\n\n  createReadable(id: string): Readable {\n    return this.bucket.file(id).createReadStream();\n  }\n\n  createWritable(id: string): Writable {\n    return this.bucket.file(id).createWriteStream();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                readiness\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readiness\n                        \n                        \n                    \n                \n            \n            \n                \nreadiness()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\n\nimport { Controller, Get } from \"@nestjs/common\";\n\nimport { ConfigService } from \"@nestjs/config\";\n\nimport {\n  DiskHealthIndicator,\n  DNSHealthIndicator,\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  MongooseHealthIndicator\n} from \"@nestjs/terminus\";\n\n@Controller(\"health\")\nexport class HealthController {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly db: MongooseHealthIndicator,\n    private readonly disk: DiskHealthIndicator,\n    private readonly dns: DNSHealthIndicator,\n    private readonly health: HealthCheckService,\n    private readonly memory: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  readiness(): Promise {\n    return this.health.check([\n      (): Promise => this.db.pingCheck(\"database\", { timeout: 2000 }),\n\n      (): Promise =>\n        this.disk.checkStorage(\"disk\", {\n          path: path.parse(__dirname).root,\n          thresholdPercent: 0.9\n        }),\n\n      (): Promise =>\n        this.dns.pingCheck(\"web\", `http://${this.config.get(\"FRONTEND_DOMAIN\")}` || \"\"),\n\n      (): Promise => this.memory.checkRSS(\"memory\", 200 * 1024 * 1024)\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from \"express\";\n\nimport { SessionDto } from \"@/modules/sessions/dto/session.dto\";\n\nimport { User } from \"@/modules/users/schemas/user.schema\";\n\nexport interface IRequest extends Request {\n  session?: Express.Session & SessionDto;\n  user: (User & { [key: string]: any }) | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        expires\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         ISessionData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISessionData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISessionData } from \"./session-data.interface\";\n\nexport interface ISession {\n  _id: string;\n  expires: Date;\n  session: ISessionData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISessionData.html":{"url":"interfaces/ISessionData.html","title":"interface - ISessionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/interfaces/session-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        identifier\n                                \n                                \n                                        ip\n                                \n                                \n                                        lastUsed\n                                \n                                \n                                        ua\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                    \n                                \n                                \n                                    \n                                        ip:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                    \n                                \n                                \n                                    \n                                        lastUsed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                    \n                                \n                                \n                                    \n                                        ua:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISessionData extends Express.SessionData {\n  identifier: string;\n\n  ip: string | null;\n\n  lastUsed: Date;\n\n  ua: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingFile.html":{"url":"interfaces/IncomingFile.html","title":"interface - IncomingFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IncomingFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/incoming-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingFile {\n  encoding: string;\n  fieldname: string;\n  filename: string;\n  mimetype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPassword.html":{"url":"classes/IncorrectPassword.html","title":"class - IncorrectPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsufficientScopes.html":{"url":"classes/InsufficientScopes.html","title":"class - InsufficientScopes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsufficientScopes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalServerErrorExceptionFilter.html":{"url":"classes/InternalServerErrorExceptionFilter.html","title":"class - InternalServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/internal-server-error.exception.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/internal-server-error.exception.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: InternalServerErrorException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/internal-server-error.exception.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            InternalServerErrorException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  InternalServerErrorException,\n  LoggerService\n} from \"@nestjs/common\";\n\nimport { Response } from \"express\";\n\n@Catch(InternalServerErrorException)\nexport class InternalServerErrorExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: LoggerService) {}\n\n  catch(exception: InternalServerErrorException, host: ArgumentsHost): void {\n    const res = host.switchToHttp().getResponse();\n    const statusCode = exception.getStatus();\n\n    this.logger.error(exception.message);\n\n    res.status(statusCode).json({\n      message: \"An error has occurred! Please try again later.\",\n      statusCode\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAPIKey.html":{"url":"classes/InvalidAPIKey.html","title":"class - InvalidAPIKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAPIKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidAvatarFileType.html":{"url":"classes/InvalidAvatarFileType.html","title":"class - InvalidAvatarFileType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidAvatarFileType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnprocessableEntityException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidCredentials.html":{"url":"classes/InvalidCredentials.html","title":"class - InvalidCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidEmailConfirmationToken.html":{"url":"classes/InvalidEmailConfirmationToken.html","title":"class - InvalidEmailConfirmationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidEmailConfirmationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordResetLink.html":{"url":"classes/InvalidPasswordResetLink.html","title":"class - InvalidPasswordResetLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordResetLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserActivationLink.html":{"url":"classes/InvalidUserActivationLink.html","title":"class - InvalidUserActivationLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserActivationLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringPathSafeConstraint.html":{"url":"classes/IsStringPathSafeConstraint.html","title":"class - IsStringPathSafeConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringPathSafeConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-path-safe.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-path-safe.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_SAFE_REGEX = /[\\\\/:*?\\\"<>|]/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringPathSafe\" })\nexport class IsStringPathSafeConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return `Value ($value) cannot contain / : * ? \\\\ \"  |`;\n  }\n\n  validate(value: string): boolean {\n    return !PATH_SAFE_REGEX.test(value);\n  }\n}\n\nexport const IsStringPathSafe = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStringValidPathConstraint.html":{"url":"classes/IsStringValidPathConstraint.html","title":"class - IsStringValidPathConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStringValidPathConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/is-string-valid-path.validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/is-string-valid-path.validator.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationOptions\n} from \"class-validator\";\n\nexport const PATH_VALID_REGEX = /[^\\0]+/g;\n\n@ValidatorConstraint({ async: false, name: \"isStringValidPath\" })\nexport class IsStringValidPathConstraint implements ValidatorConstraintInterface {\n  defaultMessage(): string {\n    return \"Value ($value) is not a valid path!\";\n  }\n\n  validate(value: string): boolean {\n    return !PATH_VALID_REGEX.test(value);\n  }\n}\n\nexport const IsStringValidPath = (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Username cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/login.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerProcessor\n                        \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: MailerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: MailerModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailerModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { BullModule } from \"@nestjs/bull\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { NODEMAILER_MODULE_ID, NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerProcessor } from \"./mailer.processor\";\nimport { MailerService } from \"./mailer.service\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./interfaces/mailer-module-options-factory\";\nimport { MailerModuleAsyncOptions } from \"./interfaces/mailer-module-async-options.interface\";\n\n@Module({\n  imports: [\n    BullModule.registerQueueAsync({\n      inject: [ConfigService],\n      name: \"emails\",\n      useFactory: (config: ConfigService) => ({\n        redis: {\n          host: config.get(\"REDIS_HOST\"),\n          port: config.get(\"REDIS_PORT\")\n        }\n      })\n    })\n  ],\n  exports: [BullModule, MailerService],\n  providers: [MailerProcessor, MailerService]\n})\nexport class MailerModule {\n  private static id = 0;\n\n  static register(options: MailerOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: NODEMAILER_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: MailerModuleAsyncOptions): DynamicModule {\n    return {\n      module: MailerModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: NODEMAILER_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: MailerModuleAsyncOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: MailerModuleAsyncOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: NODEMAILER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: NODEMAILER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MailerOptionsFactory): Promise =>\n        optionsFactory.createMailerOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerModuleAsyncOptions.html":{"url":"interfaces/MailerModuleAsyncOptions.html","title":"interface - MailerModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\n\nimport { MailerOptions } from \"./mailer-module-options.interface\";\nimport { MailerOptionsFactory } from \"./mailer-module-options-factory\";\n\nexport interface MailerModuleAsyncOptions extends Pick {\n  inject?: any[];\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (...args: any[]) => Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptions.html":{"url":"interfaces/MailerOptions.html","title":"interface - MailerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import SMTPTransport = require(\"nodemailer/lib/smtp-transport\");\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MailerOptions extends SMTPTransport.Options {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerOptionsFactory.html":{"url":"interfaces/MailerOptionsFactory.html","title":"interface - MailerOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailerOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mailer-module-options-factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMailerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMailerOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMailerOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/interfaces/mailer-module-options-factory.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MailerOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerOptions } from \"./mailer-module-options.interface\";\n\nexport interface MailerOptionsFactory {\n  createMailerOptions(): Promise | MailerOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerProcessor.html":{"url":"injectables/MailerProcessor.html","title":"injectable - MailerProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.processor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MailerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.processor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('send')\n                \n            \n\n            \n                \n                    Defined in src/modules/mailer/mailer.processor.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/mailer/mailer.processor.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import nodemailer from \"nodemailer\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { Process, Processor } from \"@nestjs/bull\";\n\nimport { Job } from \"bull\";\n\nimport { NODEMAILER_MODULE_OPTIONS } from \"./mailer.constants\";\n\nimport { MailerOptions } from \"./interfaces/mailer-module-options.interface\";\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\n@Processor(\"emails\")\nexport class MailerProcessor implements OnApplicationBootstrap {\n  private readonly transporter = nodemailer.createTransport(this.options, {\n    from: `Bytebin `\n  });\n\n  constructor(@Inject(NODEMAILER_MODULE_OPTIONS) private readonly options: MailerOptions) {}\n\n  async onApplicationBootstrap(): Promise {\n    await this.transporter.verify();\n  }\n\n  @Process(\"send\")\n  async send(job: Job): Promise {\n    await this.transporter.sendMail(job.data);\n    await job.progress(100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAbsoluteLink\n                            \n                            \n                                    Async\n                                render\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                transpileMJML\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, emailsQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAbsoluteLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAbsoluteLink(relativeLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relativeLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render(template: fs.PathLike, data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            fs.PathLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(options: SendMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                SendMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transpileMJML\n                        \n                        \n                    \n                \n            \n            \n                \ntranspileMJML(mjml: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mailer/mailer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mjml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import ejs from \"ejs\";\nimport fs from \"fs\";\nimport mjml2html from \"mjml\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectQueue } from \"@nestjs/bull\";\n\nimport { Queue } from \"bull\";\n\nimport { SendMailOptions } from \"./interfaces/send-mail-options.interface\";\n\n@Injectable()\nexport class MailerService {\n  constructor(\n    private readonly config: ConfigService,\n\n    @InjectQueue(\"emails\")\n    private readonly emailsQueue: Queue\n  ) {}\n\n  createAbsoluteLink(relativeLink: string): string {\n    const protocol = this.config.get(\"NODE_ENV\") === \"production\" ? \"https\" : \"http\";\n    const root = `${protocol}://${this.config.get(\"FRONTEND_DOMAIN\")}/`;\n\n    return root + relativeLink.substring(relativeLink.startsWith(\"/\") ? 1 : 0);\n  }\n\n  async render(template: fs.PathLike, data: Record): Promise {\n    const mjml = await fs.promises.readFile(template).then(buffer => buffer.toString());\n    return ejs.render(this.transpileMJML(mjml), data, { async: true });\n  }\n\n  async send(options: SendMailOptions): Promise {\n    options.html = options.mjml\n      ? await this.render(options.mjml.template, options.mjml.data || {})\n      : options.html;\n\n    await this.emailsQueue.add(\"send\", options);\n  }\n\n  transpileMJML(mjml: string): string {\n    const { errors, html } = mjml2html(mjml, { keepComments: false, validationLevel: \"strict\" });\n    if (errors && errors.length) throw new Error(errors.join(\"\\n\"));\n\n    return html;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoFilesUploaded.html":{"url":"classes/NoFilesUploaded.html","title":"class - NoFilesUploaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoFilesUploaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/paginate.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasNext\n                                \n                                \n                                        items\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasNext\n                                    \n                                \n                                \n                                    \n                                        hasNext:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CollationOptions, Document, FilterQuery, Model } from \"mongoose\";\n\nexport interface Pagination {\n  hasNext: boolean;\n  items: T[];\n  next: string | null;\n}\n\nexport interface PaginationOptions {\n  collation?: CollationOptions;\n  cursor?: string | number;\n  direction?: -1 | 1;\n  field?: keyof Omit;\n  limit: number;\n  query: FilterQuery;\n  sort?: {\n    [key: string]: number;\n  };\n}\n\nexport const paginate = async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/pagination.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Pagination\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasNext\n                            \n                            \n                                items\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dto/pagination.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pagination } from \"@/utils/paginate\";\n\nexport class PaginationDto implements Pagination {\n  hasNext!: boolean;\n\n  items!: T[];\n\n  next!: string | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationOptions.html":{"url":"interfaces/PaginationOptions.html","title":"interface - PaginationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/paginate.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collation\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        direction\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                        limit\n                                \n                                \n                                        query\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collation\n                                    \n                                \n                                \n                                    \n                                        collation:     CollationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     \"undefined\" | \"1\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"undefined\" | \"1\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterQuery\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CollationOptions, Document, FilterQuery, Model } from \"mongoose\";\n\nexport interface Pagination {\n  hasNext: boolean;\n  items: T[];\n  next: string | null;\n}\n\nexport interface PaginationOptions {\n  collation?: CollationOptions;\n  cursor?: string | number;\n  direction?: -1 | 1;\n  field?: keyof Omit;\n  limit: number;\n  query: FilterQuery;\n  sort?: {\n    [key: string]: number;\n  };\n}\n\nexport const paginate = async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentFolderNotFound.html":{"url":"classes/ParentFolderNotFound.html","title":"class - ParentFolderNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentFolderNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsChildrenOfItself.html":{"url":"classes/ParentIsChildrenOfItself.html","title":"class - ParentIsChildrenOfItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsChildrenOfItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:31\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParentIsItself.html":{"url":"classes/ParentIsItself.html","title":"class - ParentIsItself","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParentIsItself\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/files.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/files/files.errors.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConflictException, ForbiddenException, NotFoundException } from \"@nestjs/common\";\n\nexport class EntryAlreadyExists extends ConflictException {\n  constructor(name: string, path?: string) {\n    if (path) {\n      super(`Entry '${name}' already exists at '${path}'!`);\n    } else {\n      super(`Entry '${name}' already exists!`);\n    }\n  }\n}\n\nexport class EntryNotDeletable extends ForbiddenException {\n  constructor() {\n    super(\"This entry cannot be deleted!\");\n  }\n}\n\nexport class EntryNotFound extends NotFoundException {\n  constructor() {\n    super(\"Entry does not exist!\");\n  }\n}\n\nexport class ParentFolderNotFound extends NotFoundException {\n  constructor() {\n    super(\"Parent folder does not exist!\");\n  }\n}\n\nexport class ParentIsChildrenOfItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be a children of itself!\");\n  }\n}\n\nexport class ParentIsItself extends ForbiddenException {\n  constructor() {\n    super(\"The parent of an entry cannot be itself!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUserDto.html":{"url":"classes/PartialUserDto.html","title":"class - PartialUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/partial-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/partial-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserDto:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nimport { UserDto } from \"./user.dto\";\n\nexport class PartialUserDto extends UserDto {\n  @Exclude()\n  email!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordReset.html":{"url":"classes/PasswordReset.html","title":"class - PasswordReset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordReset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/password-reset.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/password-reset.schema.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  timestamps: true\n})\nexport class PasswordReset extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"1h\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true\n  })\n  uid!: string;\n}\n\nexport const PasswordResetSchema = SchemaFactory.createForClass(PasswordReset);\n\nPasswordResetSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RecaptchaGuard.html":{"url":"guards/RecaptchaGuard.html","title":"guard - RecaptchaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RecaptchaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/recaptcha.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getMetadata\n                            \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, http: HttpService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/recaptcha.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getMetadata(key: string, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:85\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/recaptcha.guard.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpService,\n  Injectable,\n  InternalServerErrorException\n} from \"@nestjs/common\";\n\nimport { getClientIp } from \"request-ip\";\nimport { stringify } from \"qs\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { Request } from \"express\";\n\nconst RECAPTCHA_FAILED = \"reCAPTCHA failed, please try again!\";\nconst RECAPTCHA_MISSING = \"Please complete the reCAPTCHA!\";\nconst RECAPTCHA_UNEXPECTED_RESULT = \"Action or score metadata not provided for v3 reCAPTCHA!\";\nconst RECAPTCHA_URL = \"https://www.google.com/recaptcha/api/siteverify\";\n\nexport const RECAPTCHA_ACTION_KEY = \"RECAPTCHA_ACTION\";\nexport const RECAPTCHA_SCORE_KEY = \"RECAPTCHA_SCORE\";\n\n@Injectable()\nexport class RecaptchaGuard implements CanActivate {\n  constructor(\n    private readonly config: ConfigService,\n    private readonly http: HttpService,\n    private readonly reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const action = this._getMetadata(RECAPTCHA_ACTION_KEY, context);\n    const score = this._getMetadata(RECAPTCHA_SCORE_KEY, context);\n\n    const req = context.switchToHttp().getRequest();\n\n    const { recaptcha } = req.body;\n    if (!recaptcha) throw new BadRequestException(RECAPTCHA_MISSING);\n\n    const result = await this.http\n      .post(\n        RECAPTCHA_URL,\n        stringify({\n          remoteip: getClientIp(req),\n          response: recaptcha,\n          secret: this.config.get(\"RECAPTCHA_SECRET\")\n        })\n      )\n      .toPromise()\n      .then(res => {\n        const body = res.data;\n        const errorCodes = body[\"error-codes\"];\n        const filterFn = (errorMessage: string) => errorMessage.endsWith(\"secret\");\n\n        if (!errorCodes || !errorCodes.length || !errorCodes.some(filterFn)) {\n          return body;\n        }\n\n        return { error: errorCodes.filter(filterFn).join(\", \") };\n      })\n      .catch(error => ({ error }));\n\n    if (result.error) {\n      throw new InternalServerErrorException(result.error);\n    }\n\n    if (!result.success) {\n      throw new BadRequestException(RECAPTCHA_FAILED);\n    }\n\n    if (result.action && result.score) {\n      if (!action || !score) throw new InternalServerErrorException(RECAPTCHA_UNEXPECTED_RESULT);\n\n      if (result.action !== action || result.score (key: string, context: ExecutionContext): T | undefined {\n    return this.reflector.get(key, context.getHandler());\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                recaptcha\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})@IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recaptcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Usernames must be alphanumeric!'})@IsNotEmpty({message: 'Username cannot be empty!'})@IsString()@MaxLength(32, {message: 'Usernames cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class RegisterDto {\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsString()\n  email!: string;\n\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n\n  @IsNotEmpty()\n  @IsString()\n  recaptcha!: string;\n\n  @IsAlphanumeric(undefined, { message: \"Usernames must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"Username cannot be empty!\" })\n  @IsString()\n  @MaxLength(32, { message: \"Usernames cannot be longer than $constraint1 characters!\" })\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password reset token cannot be missing!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from \"class-validator\";\n\nexport class ResetPasswordDto {\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword!: string;\n\n  @IsNotEmpty({ message: \"Password reset token cannot be missing!\" })\n  @IsString()\n  token!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendMailOptions.html":{"url":"interfaces/SendMailOptions.html","title":"interface - SendMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/send-mail-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mjml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mjml\n                                    \n                                \n                                \n                                    \n                                        mjml:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fs from \"fs\";\n\nimport Mail from \"nodemailer/lib/mailer\";\n\nexport interface SendMailOptions extends Mail.Options {\n  mjml?: {\n    data?: Record;\n    template: fs.PathLike;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionDto.html":{"url":"classes/SessionDto.html","title":"class - SessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/dto/session.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cookie\n                            \n                            \n                                identifier\n                            \n                            \n                                ip\n                            \n                            \n                                lastUsed\n                            \n                            \n                                ua\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cookie\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Express.SessionCookieData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/dto/session.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class SessionDto {\n  @Exclude()\n  cookie!: Express.SessionCookieData;\n\n  identifier!: string;\n\n  ip!: string | null;\n\n  lastUsed!: Date;\n\n  ua!: {\n    browser: IUAParser.IBrowser;\n    device: IUAParser.IDevice;\n    os: IUAParser.IOS;\n  };\n\n  uid!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SessionsController.html":{"url":"controllers/SessionsController.html","title":"controller - SessionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SessionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sessions\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSessions\n                            \n                            \n                                revoke\n                            \n                            \n                                revokeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSessions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessions(uid: string, currentSession: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentSession\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \nrevoke(uid: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id/revoke')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeAll\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeAll(uid: string, session: ISessionData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('all')\n                \n            \n\n            \n                \n                    Defined in src/modules/sessions/sessions.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                ISessionData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { plainToClass } from \"class-transformer\";\n\nimport { Controller, Delete, Get, Param, Session, UseGuards } from \"@nestjs/common\";\n\nimport { SessionsService } from \"./sessions.service\";\n\nimport { SessionDto } from \"./dto/session.dto\";\n\nimport { ISessionData } from \"./interfaces/session-data.interface\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\n@Controller(\"sessions\")\n@UseGuards(AuthGuard)\nexport class SessionsController {\n  constructor(private readonly sessions: SessionsService) {}\n\n  @Get()\n  async getSessions(\n    @CurrentUser(\"id\") uid: string,\n    @Session() currentSession: ISessionData\n  ): Promise {\n    const sessions = await this.sessions.find({ \"session.uid\": uid });\n\n    return sessions.map(({ session }) =>\n      plainToClass(SessionDto, {\n        ...session,\n        isCurrent: session.identifier === currentSession.identifier\n      })\n    );\n  }\n\n  @Delete(\"/:id/revoke\")\n  revoke(@CurrentUser(\"id\") uid: string, @Param(\"id\") id: string): Promise {\n    return this.sessions.deleteOne({\n      \"session.identifier\": id,\n      \"session.uid\": uid\n    });\n  }\n\n  @Delete(\"all\")\n  revokeAll(@CurrentUser(\"id\") uid: string, @Session() session: ISessionData): Promise {\n    return this.sessions.delete({\n      \"session.identifier\": { $ne: session.identifier },\n      \"session.uid\": uid\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionsModule.html":{"url":"modules/SessionsModule.html","title":"module - SessionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nSessionsService \n\nSessionsService \n\n\n\nSessionsModule\n\nSessionsModule\n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sessions/sessions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SessionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { SessionsController } from \"./sessions.controller\";\nimport { SessionsService } from \"./sessions.service\";\n\n@Module({\n  exports: [SessionsService],\n  controllers: [SessionsController],\n  providers: [SessionsService]\n})\nexport class SessionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sessions/sessions.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sessions/sessions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.connection.db.collection(\"sessions\")\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/sessions/sessions.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Connection, FilterQuery } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection } from \"@nestjs/mongoose\";\n\nimport { ISession } from \"./interfaces/session.interface\";\n\n@Injectable()\nexport class SessionsService {\n  private sessions = this.connection.db.collection(\"sessions\");\n\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  async delete(query: FilterQuery): Promise {\n    await this.sessions.deleteMany(query);\n  }\n\n  async deleteOne(query: FilterQuery): Promise {\n    await this.sessions.deleteOne(query);\n  }\n\n  find(query: FilterQuery): Promise {\n    return this.sessions.find(query).toArray();\n  }\n\n  findOne(query: FilterQuery): Promise {\n    return this.sessions.findOne(query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageEngine.html":{"url":"interfaces/StorageEngine.html","title":"interface - StorageEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-engine.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createReadable\n                                \n                                \n                                    createWritable\n                                \n                                \n                                    delete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createReadable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateReadable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Readable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWritable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWritable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Writable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-engine.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Readable, Writable } from \"stream\";\n\nexport interface StorageEngine {\n  createReadable(id: string): Promise | Readable;\n  createWritable(id: string): Promise | Writable;\n  delete(id: string): Promise | void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/storage/storage.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: StorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                StorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: AsyncStorageOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AsyncStorageOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_ID, STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport { StorageService } from \"./storage.service\";\n\nimport { AsyncStorageOptions } from \"./interfaces/storage-module-async-options.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { StorageOptionsFactory } from \"./interfaces/storage-module-options-factory.interface\";\n\n@Module({\n  exports: [StorageService],\n  providers: [StorageService]\n})\nexport class StorageModule {\n  private static id = 0;\n\n  static register(options: StorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        {\n          provide: STORAGE_MODULE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  static registerAsync(options: AsyncStorageOptions): DynamicModule {\n    return {\n      module: StorageModule,\n      imports: options.imports || [],\n      providers: [\n        {\n          provide: STORAGE_MODULE_ID,\n          useValue: this.id++\n        },\n        ...this.createAsyncProviders(options)\n      ]\n    };\n  }\n\n  private static createAsyncProviders(options: AsyncStorageOptions): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass as any,\n        useClass: options.useClass as any\n      }\n    ];\n  }\n\n  private static createAsyncOptionsProvider(options: AsyncStorageOptions): Provider {\n    if (options.useFactory) {\n      return {\n        provide: STORAGE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: STORAGE_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: StorageOptionsFactory): Promise =>\n        optionsFactory.createStorageOptions(),\n      inject: [(options.useExisting || options.useClass) as any]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptions.html":{"url":"interfaces/StorageOptions.html","title":"interface - StorageOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiskStorageEngineOptions } from \"../engines/disk.engine\";\nimport { GoogleCloudEngineOptions } from \"../engines/google-cloud.engine\";\n\nexport interface StorageOptions {\n  engine: {\n    disk?: DiskStorageEngineOptions;\n    gcloud?: GoogleCloudEngineOptions;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageOptionsFactory.html":{"url":"interfaces/StorageOptionsFactory.html","title":"interface - StorageOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StorageOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createStorageOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStorageOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStorageOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/interfaces/storage-module-options-factory.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | StorageOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { StorageOptions } from \"./storage-module-options.interface\";\n\nexport interface StorageOptionsFactory {\n  createStorageOptions(): Promise | StorageOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createBusboy\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                read\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: StorageOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        StorageOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _createBusboy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _createBusboy(req: IncomingMessage, limits)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     busboy.Busboy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            read\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    read(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(req: IncomingMessage, options: WriteOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/storage/storage.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                WriteOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StorageEngine\n\n                        \n                    \n                    \n                        \n                            Default value : new DiskStorage({ directory: os.tmpdir() })\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/storage/storage.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import os from \"os\";\nimport pump from \"pump\";\n\nimport Busboy from \"busboy\";\n\nimport { IncomingMessage } from \"http\";\nimport { Readable } from \"stream\";\n\nimport { Inject, Injectable, OnApplicationBootstrap } from \"@nestjs/common\";\n\nimport { STORAGE_MODULE_OPTIONS } from \"./storage.constants\";\n\nimport {\n  FileTooLarge,\n  NoFilesUploaded,\n  TooManyFields,\n  TooManyFiles,\n  TooManyParts,\n  UnsupportedContentType\n} from \"./storage.errors\";\n\nimport { DiskStorage } from \"./engines/disk.engine\";\nimport { GoogleCloudEngine } from \"./engines/google-cloud.engine\";\n\nimport { IncomingFile } from \"./interfaces/incoming-file.interface\";\nimport { StorageEngine } from \"./interfaces/storage-engine.interface\";\nimport { StorageOptions } from \"./interfaces/storage-module-options.interface\";\nimport { UploadedFile } from \"./interfaces/uploaded-file.interface\";\nimport { WriteOptions } from \"./interfaces/write-options.interface\";\n\nimport { Counter } from \"@/utils/counter\";\nimport { StreamMeter } from \"@/utils/stream-meter\";\n\nimport { generateId } from \"@/utils/generateId\";\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class StorageService implements OnApplicationBootstrap {\n  constructor(@Inject(STORAGE_MODULE_OPTIONS) private readonly options: StorageOptions) {}\n\n  private engine: StorageEngine = new DiskStorage({ directory: os.tmpdir() });\n\n  onApplicationBootstrap(): void {\n    const { disk, gcloud } = this.options.engine;\n\n    if (disk) this.engine = new DiskStorage(disk);\n    else if (gcloud) this.engine = new GoogleCloudEngine(gcloud);\n  }\n\n  async delete(id: string): Promise {\n    return this.engine.delete(id);\n  }\n\n  async read(id: string): Promise {\n    return this.engine.createReadable(id);\n  }\n\n  async write(req: IncomingMessage, options: WriteOptions): Promise {\n    const busboy = this._createBusboy(req, options.limits);\n\n    const files: UploadedFile[] = [];\n\n    const filter = (\n      file: IncomingFile,\n      callback: (error: Error | null, acceptFile: boolean) => void\n    ) => {\n      if (options.filter) options.filter(req, file, callback);\n      else callback(null, true);\n    };\n\n    let aborting = false;\n    let finished = false;\n\n    return new Promise((resolve, reject) => {\n      const writeCounter = new Counter();\n\n      const abort = (error: Error) => {\n        if (aborting) return;\n\n        aborting = true;\n\n        writeCounter.whenItEqualsTo(0, () => {\n          settle(files.map(file => this.delete(file.id)))\n            .then(() => reject(error))\n            .catch(reject);\n        });\n      };\n\n      const done = () => {\n        if (!aborting && finished && writeCounter.is(0)) {\n          if (!files.length) reject(new NoFilesUploaded());\n          else resolve(files);\n        }\n      };\n\n      busboy.on(\"file\", (fieldname, readable, filename, encoding, mimetype) => {\n        if (fieldname !== options.field || !filename) return readable.resume();\n\n        const metadata = { encoding, fieldname, filename, mimetype };\n\n        filter(metadata, async (error, accept) => {\n          if (error) return abort(error);\n          if (!accept) return readable.resume();\n\n          writeCounter.increment();\n\n          const id = await generateId(8);\n          const writable = await this.engine.createWritable(id);\n\n          const meter = new StreamMeter();\n          const pipeline: pump.Stream[] = [readable, meter];\n\n          if (options.transformers) {\n            for (const transformer of options.transformers) {\n              const stream = transformer(req, metadata);\n              if (stream) pipeline.push(stream);\n            }\n          }\n\n          pipeline.push(writable);\n\n          readable.on(\"limit\", () => abort(new FileTooLarge(filename)));\n\n          pump(pipeline, (err?: Error) => {\n            if (err) abort(err);\n\n            files.push({ ...metadata, id, size: meter.size });\n\n            writeCounter.decrement();\n\n            done();\n          });\n        });\n      });\n\n      busboy\n        .on(\"error\", abort)\n        .on(\"fieldsLimit\", () => abort(new TooManyFields()))\n        .on(\"filesLimit\", () => abort(new TooManyFiles()))\n        .on(\"partsLimit\", () => abort(new TooManyParts()))\n        .on(\"finish\", () => {\n          finished = true;\n          done();\n        });\n\n      req.pipe(busboy);\n    });\n  }\n\n  private _createBusboy(\n    req: IncomingMessage,\n    limits: busboy.BusboyConfig[\"limits\"]\n  ): busboy.Busboy {\n    try {\n      return new Busboy({ headers: req.headers, limits });\n    } catch (error) {\n      throw new UnsupportedContentType();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StreamMeter.html":{"url":"classes/StreamMeter.html","title":"class - StreamMeter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StreamMeter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/stream-meter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassThrough\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _transform\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/stream-meter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _transform\n                        \n                        \n                    \n                \n            \n            \n                \n_transform(chunk: Buffer, _encoding: string, callback: TransformCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/stream-meter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chunk\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _encoding\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                            TransformCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/utils/stream-meter.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PassThrough, TransformCallback } from \"stream\";\n\nexport class StreamMeter extends PassThrough {\n  private _size = 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  _transform(chunk: Buffer, _encoding: string, callback: TransformCallback): void {\n    this._size += chunk.length;\n    callback(null, chunk);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyApplications.html":{"url":"classes/TooManyApplications.html","title":"class - TooManyApplications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyApplications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/applications/applications.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/applications/applications.errors.ts:31\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  NotFoundException,\n  UnauthorizedException\n} from \"@nestjs/common\";\n\nexport class ApplicationAlreadyExists extends ConflictException {\n  constructor(name: string) {\n    super(`Application '${name}' already exists on your account!`);\n  }\n}\nexport class ApplicationNotFound extends NotFoundException {\n  constructor() {\n    super(\"Application does not exist!\");\n  }\n}\n\nexport class InsufficientScopes extends ForbiddenException {\n  constructor() {\n    super(\"Application does not have sufficient scopes to perform this request!\");\n  }\n}\n\nexport class InvalidAPIKey extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid API Key!\");\n  }\n}\n\nexport class TooManyApplications extends ForbiddenException {\n  constructor() {\n    super(\"You have exceeded the maximum amount of applications allowed!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFields.html":{"url":"classes/TooManyFields.html","title":"class - TooManyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyFiles.html":{"url":"classes/TooManyFiles.html","title":"class - TooManyFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyParts.html":{"url":"classes/TooManyParts.html","title":"class - TooManyParts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyParts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnsupportedContentType.html":{"url":"classes/UnsupportedContentType.html","title":"class - UnsupportedContentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnsupportedContentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/storage.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnsupportedMediaTypeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/storage/storage.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PayloadTooLargeException, UnsupportedMediaTypeException } from \"@nestjs/common\";\n\nexport class FileTooLarge extends PayloadTooLargeException {\n  constructor(filename: string) {\n    super(`File '${filename}' is too large!`);\n  }\n}\n\nexport class NoFilesUploaded extends BadRequestException {\n  constructor() {\n    super(\"No files uploaded!\");\n  }\n}\n\nexport class TooManyFields extends BadRequestException {\n  constructor() {\n    super(\"Too many fields!\");\n  }\n}\n\nexport class TooManyFiles extends BadRequestException {\n  constructor() {\n    super(\"Too many files!\");\n  }\n}\n\nexport class TooManyParts extends BadRequestException {\n  constructor() {\n    super(\"Too many parts!\");\n  }\n}\n\nexport class UnsupportedContentType extends UnsupportedMediaTypeException {\n  constructor() {\n    super(\"Missing or unsupported content type!\")\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEntryDto.html":{"url":"classes/UpdateEntryDto.html","title":"class - UpdateEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/files/dto/update-entry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                folder\n                            \n                            \n                                name\n                            \n                            \n                                public\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Entry name cannot be empty!'})@IsString()@IsStringPathSafe()@MaxLength(255, {message: 'Entry name cannot be greater than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/files/dto/update-entry.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, MaxLength } from \"class-validator\";\n\nimport { IsStringPathSafe } from \"@/validators/is-string-path-safe.validator\";\n\nexport class UpdateEntryDto {\n  @IsOptional()\n  @IsString()\n  folder!: string | null;\n\n  @IsNotEmpty({ message: \"Entry name cannot be empty!\" })\n  @IsString()\n  @IsStringPathSafe()\n  @MaxLength(255, { message: \"Entry name cannot be greater than $constraint1 characters!\" })\n  name!: string;\n\n  @IsBoolean()\n  public!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                newDisplayName\n                            \n                            \n                                    Optional\n                                newEmail\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newDisplayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsAlphanumeric(undefined, {message: 'Display names must be alphanumeric!'})@IsNotEmpty({message: 'New display name cannot be empty!'})@IsOptional()@IsString()@MaxLength(32, {message: 'Display names cannot be longer than $constraint1 characters!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail({}, {message: 'You must enter a valid email!'})@IsNotEmpty({message: 'Email cannot be empty!'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'New password cannot be empty!'})@IsOptional()@IsString()@MinLength(8, {message: 'Your password must be at least $constraint1 characters long!'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: 'Password cannot be empty!'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/update-user.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength\n} from \"class-validator\";\n\nexport class UpdateUserDto {\n  @IsAlphanumeric(undefined, { message: \"Display names must be alphanumeric!\" })\n  @IsNotEmpty({ message: \"New display name cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MaxLength(32, { message: \"Display names cannot be longer than $constraint1 characters!\" })\n  newDisplayName?: string;\n\n  @IsEmail({}, { message: \"You must enter a valid email!\" })\n  @IsNotEmpty({ message: \"Email cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  newEmail?: string;\n\n  @IsNotEmpty({ message: \"New password cannot be empty!\" })\n  @IsOptional()\n  @IsString()\n  @MinLength(8, { message: \"Your password must be at least $constraint1 characters long!\" })\n  newPassword?: string;\n\n  @IsNotEmpty({ message: \"Password cannot be empty!\" })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/uploaded-file.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IncomingFile\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface UploadedFile extends IncomingFile {\n  id: string;\n  size: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n            \n                Implements\n            \n            \n                            UserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                comparePassword\n                            \n                            \n                                createdAt\n                            \n                            \n                                delete\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                toDto\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({maxlength: 32, required: true, trim: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, required: true, trim: true, unique: true, validate: isEmail})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 32, required: true, trim: true, unique: true, validate: isAlphanumeric})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/schemas/user.schema.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import bcrypt from \"bcrypt\";\nimport ms from \"ms\";\n\nimport { ClassTransformOptions, plainToClass } from \"class-transformer\";\nimport { ClassType } from \"class-transformer/ClassTransformer\";\n\nimport { isAlphanumeric, isEmail } from \"class-validator\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory, raw } from \"@nestjs/mongoose\";\n\nimport { UserDto } from \"../dto/user.dto\";\n\nimport { generateId } from \"@/utils/generateId\";\n\n@Schema({\n  id: false,\n  timestamps: true\n})\nexport class User extends Document implements UserDto {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: false\n  })\n  activated!: boolean;\n\n  @Prop({\n    default: false\n  })\n  admin!: boolean;\n\n  @Prop(\n    raw({\n      default: null,\n      index: {\n        partialFilterExpression: {\n          avatar: {\n            $type: \"string\"\n          }\n        }\n      },\n      lowercase: true,\n      maxlength: 16,\n      minlength: 16,\n      trim: true,\n      type: String,\n      unique: true\n    })\n  )\n  avatar!: string | null;\n\n  @Prop({\n    default: false\n  })\n  deleted!: boolean;\n\n  @Prop({\n    maxlength: 32,\n    required: true,\n    trim: true,\n    validate: isAlphanumeric\n  })\n  displayName!: string;\n\n  @Prop({\n    lowercase: true,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isEmail\n  })\n  email!: string;\n\n  @Prop(\n    raw({\n      default: () => new Date(Date.now() + ms(\"7d\")),\n      expires: 0,\n      type: Date\n    })\n  )\n  expiresAt!: Date | null;\n\n  // Automatically generated in pre save hook.\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    trim: true,\n    unique: true\n  })\n  id!: string;\n\n  /*\n   ** Automatically hashed in pre save hook.\n   ** Hidden from return object with hideSchemaProperty()\n   */\n  @Prop({\n    required: true\n  })\n  password!: string;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 32,\n    required: true,\n    trim: true,\n    unique: true,\n    validate: isAlphanumeric\n  })\n  username!: string;\n\n  comparePassword!: (password: string) => Promise;\n  delete!: () => Promise;\n  toDto!: (cls?: ClassType) => T;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(8)\n    .then(id => {\n      this.id = id;\n      next();\n    })\n    .catch(error => next(error));\n});\n\nUserSchema.pre(\"save\", function(next) {\n  // Password can be null if user is deleted\n  if (!this.password || !this.isModified(\"password\")) return next();\n\n  bcrypt.hash(this.password, 10, (error, hashed) => {\n    if (error) return next(error);\n\n    this.password = hashed;\n    next();\n  });\n});\n\nUserSchema.methods.comparePassword = function(this: User, password: string): Promise {\n  return bcrypt.compare(password, this.password);\n};\n\n/*\n ** Don't actually delete the user document to prevent recycling display names + usernames\n ** Overwrite type safety of *this* to set email and password to null\n */\nUserSchema.methods.delete = async function(this: any): Promise {\n  this.activated = false;\n  this.avatar = null;\n  this.deleted = true;\n  this.email = null;\n  this.password = null;\n\n  return this.save({ validateBeforeSave: false });\n};\n\nUserSchema.methods.toDto = function(this: User, cls?: ClassType): T | UserDto {\n  const json = this.toJSON();\n  const options: ClassTransformOptions = {\n    excludePrefixes: [\"_\"]\n  };\n\n  return cls ? plainToClass(cls, json, options) : plainToClass(UserDto, json, options);\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserActivation.html":{"url":"classes/UserActivation.html","title":"class - UserActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/schemas/user-activation.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                timesResent\n                            \n                            \n                                token\n                            \n                            \n                                uid\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: undefined, expires: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timesResent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({default: 0, max: MAX_RESEND_ATTEMPTS, min: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 64, minlength: 64, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({lowercase: true, maxlength: 16, minlength: 16, required: true, trim: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/schemas/user-activation.schema.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import ms from \"ms\";\n\nimport { Document } from \"mongoose\";\n\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nimport { generateId } from \"@/utils/generateId\";\n\nconst MAX_RESEND_ATTEMPTS = 5;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n})\nexport class UserActivation extends Document {\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  @Prop({\n    default: () => new Date(Date.now() + ms(\"7d\")),\n    expires: 0\n  })\n  expiresAt!: Date;\n\n  @Prop({\n    default: 0,\n    max: MAX_RESEND_ATTEMPTS,\n    min: 0\n  })\n  timesResent!: number;\n\n  @Prop({\n    lowercase: true,\n    maxlength: 64,\n    minlength: 64,\n    trim: true,\n    unique: true\n  })\n  token!: string; // Automatically generated in pre save hook.\n\n  @Prop({\n    lowercase: true,\n    maxlength: 16,\n    minlength: 16,\n    required: true,\n    trim: true,\n    unique: true\n  })\n  uid!: string;\n}\n\nexport const UserActivationSchema = SchemaFactory.createForClass(UserActivation);\n\nUserActivationSchema.pre(\"save\", function(next) {\n  if (!this.isNew) return next();\n\n  generateId(32)\n    .then(token => {\n      this.token = token;\n      next();\n    })\n    .catch(error => next(error));\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                admin\n                            \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                deleted\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class UserDto {\n  @Exclude()\n  activated!: boolean;\n\n  admin!: boolean;\n\n  avatar!: string | null;\n\n  createdAt!: Date;\n\n  @Exclude()\n  deleted!: boolean;\n\n  displayName!: string;\n\n  email!: string;\n\n  @Exclude()\n  expiresAt!: Date | null;\n\n  id!: string;\n\n  @Exclude()\n  password!: string;\n\n  @Exclude()\n  updatedAt!: Date;\n\n  username!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotActivated.html":{"url":"classes/UserNotActivated.html","title":"class - UserNotActivated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotActivated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ForbiddenException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFound.html":{"url":"classes/UserNotFound.html","title":"class - UserNotFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotLoggedIn.html":{"url":"classes/UserNotLoggedIn.html","title":"class - UserNotLoggedIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotLoggedIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.errors.ts:33\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, UnauthorizedException } from \"@nestjs/common\";\n\nexport class IncorrectPassword extends UnauthorizedException {\n  constructor() {\n    super(\"Your password is incorrect!\");\n  }\n}\n\nexport class InvalidCredentials extends UnauthorizedException {\n  constructor() {\n    super(\"Invalid login credentials!\");\n  }\n}\n\nexport class InvalidPasswordResetLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid password reset link, please ensure that the link is correct!\");\n  }\n}\n\nexport class InvalidUserActivationLink extends BadRequestException {\n  constructor() {\n    super(\"Invalid user activation link, please ensure that the link is correct!\");\n  }\n}\n\nexport class UserNotActivated extends ForbiddenException {\n  constructor() {\n    super(\"Please activate your account first!\");\n  }\n}\n\nexport class UserNotLoggedIn extends UnauthorizedException {\n  constructor() {\n    super(\"You are not logged in!\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsernameTaken.html":{"url":"classes/UsernameTaken.html","title":"class - UsernameTaken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsernameTaken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ConflictException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.errors.ts:32\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  NotFoundException,\n  UnprocessableEntityException\n} from \"@nestjs/common\";\n\nexport class DisplayNameTaken extends ConflictException {\n  constructor() {\n    super(\"Display name is already in use!\");\n  }\n}\n\nexport class EmailTaken extends ConflictException {\n  constructor() {\n    super(\"Email is already in use!\");\n  }\n}\n\nexport class InvalidAvatarFileType extends UnprocessableEntityException {\n  constructor() {\n    super(\"Invalid file type! Avatar must be a JPEG or PNG!\");\n  }\n}\n\nexport class InvalidEmailConfirmationToken extends BadRequestException {\n  constructor() {\n    super(\"Invalid email confirmation token, please ensure that the link is correct!\");\n  }\n}\n\nexport class UsernameTaken extends ConflictException {\n  constructor() {\n    super(\"Username is already in use!\");\n  }\n}\n\nexport class UserNotFound extends NotFoundException {\n  constructor(query: string) {\n    super(`User '${query}' does not exist!`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                deleteOne\n                            \n                            \n                                me\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('confirm-email/:token')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOne(undefined: DeleteUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/delete')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            me\n                        \n                        \n                    \n                \n            \n            \n                \nme(me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('@me')@UseScopes(ApplicationScopes.USERS_READ)\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/@:username')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(me: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('@me/avatar')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOne(dto: UpdateUserDto, me: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('@me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    me\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import path from \"path\";\nimport sharp from \"sharp\";\n\nimport { Body, Controller, Get, Param, Patch, Post, Req, UseGuards } from \"@nestjs/common\";\n\nimport { Request } from \"express\";\n\nimport { InvalidAvatarFileType, UserNotFound } from \"./users.errors\";\nimport { UsersService } from \"./users.service\";\n\nimport { DeleteUserDto } from \"./dto/delete-user.dto\";\nimport { PartialUserDto } from \"./dto/partial-user.dto\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\nimport { UserDto } from \"./dto/user.dto\";\n\nimport { User } from \"./schemas/user.schema\";\n\nimport { CurrentUser } from \"@/decorators/current-user.decorator\";\nimport { UseScopes } from \"@/decorators/scopes.decorator\";\n\nimport { AuthGuard } from \"@/guards/auth.guard\";\n\nimport { ApplicationScopes } from \"@/modules/applications/enums/application-scopes.enum\";\n\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { StorageService } from \"@/modules/storage/storage.service\";\n\n@Controller(\"users\")\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly files: FilesService,\n    private readonly storage: StorageService,\n    private readonly users: UsersService\n  ) {}\n\n  @Get(\"@me\")\n  @UseScopes(ApplicationScopes.USERS_READ)\n  me(@CurrentUser() me: User): UserDto {\n    return me.toDto();\n  }\n\n  @Patch(\"@me\")\n  updateOne(@Body() dto: UpdateUserDto, @CurrentUser() me: User): Promise {\n    return this.users.updateOne(me, dto).then(user => user.toDto());\n  }\n\n  @Post(\"@me/avatar\")\n  async updateAvatar(@CurrentUser() me: User, @Req() req: Request): Promise {\n    const [avatar] = await this.storage.write(req, {\n      field: \"avatar\",\n      filter: (_req, file, callback) => {\n        const fileTypes = /jpeg|jpg|png/gi;\n        const extname = fileTypes.test(path.extname(file.filename));\n        const mimetype = fileTypes.test(file.mimetype);\n\n        if (mimetype && extname) callback(null, true);\n        else callback(new InvalidAvatarFileType(), false);\n      },\n      limits: {\n        files: 1,\n        fileSize: 8 * 1024 * 1024\n      },\n      transformers: [\n        () =>\n          sharp()\n            .resize(512, 512)\n            .png()\n      ]\n    });\n\n    await this.files.createEntry({\n      deletable: false,\n      folder: null,\n      hidden: true,\n      id: avatar.id,\n      isFile: true,\n      isFolder: false,\n      name: avatar.filename,\n      public: true,\n      size: avatar.size,\n      uid: me.id\n    });\n\n    return this.users.updateAvatar(me, avatar.id).then(user => user.toDto());\n  }\n\n  @Post(\"@me/delete\")\n  deleteOne(@Body() { password }: DeleteUserDto, @CurrentUser() me: User): Promise {\n    return this.users.deleteOne(me, password);\n  }\n\n  @Get(\"confirm-email/:token\")\n  confirmEmail(@Param(\"token\") token: string): Promise {\n    return this.users.confirmEmail(token);\n  }\n\n  @Get(\"search/@:username\")\n  async search(@Param(\"username\") username: string): Promise {\n    const user = await this.users.findOne({ username });\n    if (!user) throw new UserNotFound(username);\n\n    return user.toDto(PartialUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            SessionsModule\n                        \n                        \n                            StorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from \"@nestjs/config\";\nimport { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\nimport { EmailConfirmation, EmailConfirmationSchema } from \"./schemas/email-confirmation.schema\";\nimport { User, UserSchema } from \"./schemas/user.schema\";\n\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { FilesModule } from \"@/modules/files/files.module\";\nimport { SessionsModule } from \"@/modules/sessions/sessions.module\";\nimport { StorageModule } from \"@/modules/storage/storage.module\";\n\n@Module({\n  imports: [\n    AuthModule,\n\n    FilesModule,\n\n    MongooseModule.forFeature([\n      { name: EmailConfirmation.name, schema: EmailConfirmationSchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n\n    SessionsModule,\n\n    StorageModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        engine: {\n          disk: {\n            directory: config.get(\"UPLOADS_DIRECTORY\") as string\n          }\n        }\n      })\n    })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateAvatar\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applications: ApplicationsService, files: FilesService, mailer: MailerService, sessions: SessionsService, emailConfirmations: Model, users: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applications\n                                                  \n                                                        \n                                                                        ApplicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessions\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailConfirmations\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAvatar(user: User, newAvatarId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newAvatarId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(user: User, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery, Model } from \"mongoose\";\n\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport {\n  DisplayNameTaken,\n  EmailTaken,\n  InvalidEmailConfirmationToken,\n  UsernameTaken\n} from \"./users.errors\";\n\nimport { emailChanged } from \"./emails/email-changed.email\";\nimport { emailConfirmation } from \"./emails/email-confirmation.email\";\nimport { passwordChangedEmail } from \"./emails/password-changed.email\";\n\nimport { EmailConfirmation } from \"./schemas/email-confirmation.schema\";\nimport { User } from \"./schemas/user.schema\";\n\nimport { IncorrectPassword } from \"@/modules/auth/auth.errors\";\n\nimport { ApplicationsService } from \"@/modules/applications/applications.service\";\nimport { FilesService } from \"@/modules/files/files.service\";\nimport { MailerService } from \"@/modules/mailer/mailer.service\";\nimport { SessionsService } from \"@/modules/sessions/sessions.service\";\n\nimport { settle } from \"@/utils/settle\";\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly applications: ApplicationsService,\n    private readonly files: FilesService,\n    private readonly mailer: MailerService,\n    private readonly sessions: SessionsService,\n\n    @InjectModel(EmailConfirmation.name)\n    private readonly emailConfirmations: Model,\n\n    @InjectModel(User.name)\n    private readonly users: Model\n  ) {}\n\n  async confirmEmail(token: string): Promise {\n    const confirmation = await this.emailConfirmations.findOne({ token });\n    if (!confirmation) throw new InvalidEmailConfirmationToken();\n\n    const user = await this.users.findOne({ id: confirmation.uid });\n    if (!user) throw new InvalidEmailConfirmationToken();\n\n    if (await this.users.exists({ email: confirmation.newEmail })) {\n      await confirmation.deleteOne();\n      throw new InvalidEmailConfirmationToken();\n    }\n\n    const oldUser = user.toObject();\n\n    user.email = confirmation.newEmail;\n\n    await user.save();\n    await confirmation.deleteOne();\n\n    await this.mailer.send(\n      emailChanged(oldUser.email, {\n        displayName: user.displayName,\n        link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n      })\n    );\n  }\n\n  async create(email: string, password: string, username: string): Promise {\n    if (await this.users.exists({ email })) throw new EmailTaken();\n    if (await this.users.exists({ username })) throw new UsernameTaken();\n\n    return new this.users({ displayName: username, email, password, username }).save();\n  }\n\n  async deleteOne(user: User, password: string): Promise {\n    if (!(await user.comparePassword(password))) throw new IncorrectPassword();\n\n    await settle([\n      this.applications.delete({ uid: user.id }),\n      this.files.deleteMany({ uid: user.id }),\n      this.sessions.delete({ \"session.uid\": user.id })\n    ]);\n\n    return user.delete();\n  }\n\n  async exists(query: FilterQuery): Promise {\n    return this.users.exists(query);\n  }\n\n  async findOne(query: FilterQuery): Promise {\n    return this.users.findOne({ ...query, deleted: false });\n  }\n\n  async updateOne(\n    user: User,\n    data: {\n      newDisplayName?: string;\n      newEmail?: string;\n      newPassword?: string;\n      password: string;\n    }\n  ): Promise {\n    const { newDisplayName, newEmail, newPassword, password } = data;\n\n    if (!(await user.comparePassword(password))) {\n      throw new IncorrectPassword();\n    }\n\n    if (newDisplayName && newDisplayName !== user.displayName) {\n      if (await this.users.exists({ displayName: newDisplayName })) {\n        throw new DisplayNameTaken();\n      }\n\n      user.displayName = newDisplayName;\n    }\n\n    if (newEmail && newEmail !== user.email) {\n      if (await this.users.exists({ email: newEmail })) {\n        throw new EmailTaken();\n      }\n\n      const confirmation = await new this.emailConfirmations({ newEmail, uid: user.id }).save();\n\n      await this.mailer.send(\n        emailConfirmation(newEmail, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(`/confirm-email/${confirmation.token}`)\n        })\n      );\n    }\n\n    if (newPassword) {\n      user.password = newPassword;\n\n      await this.mailer.send(\n        passwordChangedEmail(user.email, {\n          displayName: user.displayName,\n          link: this.mailer.createAbsoluteLink(\"/forgot-password\")\n        })\n      );\n    }\n\n    await user.save();\n\n    return user;\n  }\n\n  async updateAvatar(user: User, newAvatarId: string): Promise {\n    if (user.avatar) {\n      await this.files.deleteOne({ id: user.avatar, uid: user.id }).catch(() => undefined);\n    }\n\n    user.avatar = newAvatarId;\n\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WriteOptions.html":{"url":"interfaces/WriteOptions.html","title":"interface - WriteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WriteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/storage/interfaces/write-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                        limits\n                                \n                                \n                                            Optional\n                                        transformers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                    \n                                \n                                \n                                    \n                                        limits:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformers\n                                    \n                                \n                                \n                                    \n                                        transformers:     (function)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (function)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IncomingMessage } from \"http\";\nimport { Stream } from \"pump\";\n\nimport { IncomingFile } from \"./incoming-file.interface\";\n\nexport interface WriteOptions {\n  field: string;\n\n  filter?: (\n    req: IncomingMessage,\n    file: IncomingFile,\n    callback: {\n      (error: Error, acceptFile: false): void;\n      (error: null, acceptFile: boolean): void;\n    }\n  ) => void;\n\n  limits: busboy.BusboyConfig[\"limits\"];\n\n  transformers?: ((req: IncomingMessage, file: IncomingFile) => Stream | void)[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MAX_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MIN_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/optional-auth.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-action.decorator.ts\n            \n            variable\n            RecaptchaAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/recaptcha-score.decorator.ts\n            \n            variable\n            RecaptchaScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/scopes.decorator.ts\n            \n            variable\n            UseScopes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exceptions/internal-server-error.exception.ts\n            \n            class\n            InternalServerErrorExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            injectable\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_OPTIONAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            variable\n            AUTH_GUARD_SCOPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            guard\n            RecaptchaGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_ACTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_MISSING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_SCORE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_UNEXPECTED_RESULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/recaptcha.guard.ts\n            \n            variable\n            RECAPTCHA_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request.interface.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            MongoStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            sessionCookieName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/admin.middleware.ts\n            \n            injectable\n            AdminMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.controller.ts\n            \n            controller\n            ApplicationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            ApplicationNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InsufficientScopes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            InvalidAPIKey\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.errors.ts\n            \n            class\n            TooManyApplications\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/applications.service.ts\n            \n            injectable\n            ApplicationsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/application.dto.ts\n            \n            class\n            ApplicationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/create-application.dto.ts\n            \n            class\n            CreateApplicationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/applications/dto/generate-application-key.dto.ts\n            \n            class\n            GenerateApplicationKeyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            class\n            Application\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            ApplicationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/applications/schemas/application.schema.ts\n            \n            variable\n            HMAC_SHA256\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            IncorrectPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidCredentials\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidPasswordResetLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            InvalidUserActivationLink\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotActivated\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.errors.ts\n            \n            class\n            UserNotLoggedIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-post-reset.email.ts\n            \n            variable\n            passwordResetted\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/password-reset.email.ts\n            \n            variable\n            passwordReset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/successful-login.email.ts\n            \n            variable\n            successfulLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/emails/user-activation.email.ts\n            \n            variable\n            userActivation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            class\n            PasswordReset\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/password-reset.schema.ts\n            \n            variable\n            PasswordResetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            class\n            UserActivation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            MAX_RESEND_ATTEMPTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/schemas/user-activation.schema.ts\n            \n            variable\n            UserActivationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/bull-board/bull-board.provider.ts\n            \n            injectable\n            BullBoardProvider\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/dto/create-folder-entry.dto.ts\n            \n            class\n            CreateFolderEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/dto/entry.dto.ts\n            \n            class\n            EntryDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/files/dto/update-entry.dto.ts\n            \n            class\n            UpdateEntryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryAlreadyExists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotDeletable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            EntryNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentFolderNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsChildrenOfItself\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.errors.ts\n            \n            class\n            ParentIsItself\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/files.processor.ts\n            \n            injectable\n            FilesProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/files/jobs/delete-file.job.ts\n            \n            interface\n            DeleteFileJob\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            class\n            Entry\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            variable\n            ENTRY_COLLATION_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/files/schemas/entry.schema.ts\n            \n            variable\n            EntrySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/email.interface.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-async-options.interface.ts\n            \n            interface\n            MailerModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options-factory.ts\n            \n            interface\n            MailerOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mailer-module-options.interface.ts\n            \n            interface\n            MailerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/send-mail-options.interface.ts\n            \n            interface\n            SendMailOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.constants.ts\n            \n            variable\n            NODEMAILER_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.processor.ts\n            \n            injectable\n            MailerProcessor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/dto/session.dto.ts\n            \n            class\n            SessionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session-data.interface.ts\n            \n            interface\n            ISessionData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sessions/interfaces/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.controller.ts\n            \n            controller\n            SessionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sessions/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            class\n            DiskStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/disk.engine.ts\n            \n            interface\n            DiskStorageEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            class\n            GoogleCloudEngine\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            interface\n            GoogleCloudEngineOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/engines/google-cloud.engine.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/incoming-file.interface.ts\n            \n            interface\n            IncomingFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-engine.interface.ts\n            \n            interface\n            StorageEngine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-async-options.interface.ts\n            \n            interface\n            AsyncStorageOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options-factory.interface.ts\n            \n            interface\n            StorageOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/storage-module-options.interface.ts\n            \n            interface\n            StorageOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/uploaded-file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/storage/interfaces/write-options.interface.ts\n            \n            interface\n            WriteOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.constants.ts\n            \n            variable\n            STORAGE_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            FileTooLarge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            NoFilesUploaded\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFields\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyFiles\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            TooManyParts\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.errors.ts\n            \n            class\n            UnsupportedContentType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dto/delete-user.dto.ts\n            \n            class\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dto/partial-user.dto.ts\n            \n            class\n            PartialUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-changed.email.ts\n            \n            variable\n            emailChanged\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/email-confirmation.email.ts\n            \n            variable\n            emailConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/emails/password-changed.email.ts\n            \n            variable\n            passwordChangedEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            class\n            EmailConfirmation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/email-confirmation.schema.ts\n            \n            variable\n            EmailConfirmationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            DisplayNameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            EmailTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidAvatarFileType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            InvalidEmailConfirmationToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UsernameTaken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.errors.ts\n            \n            class\n            UserNotFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/atob.ts\n            \n            variable\n            atob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/btoa.ts\n            \n            variable\n            btoa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/chunk.ts\n            \n            variable\n            chunk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/clamp.ts\n            \n            variable\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/counter.ts\n            \n            class\n            Counter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/generateId.ts\n            \n            variable\n            generateId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            interface\n            PaginationOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/paginate.ts\n            \n            variable\n            paginate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/settle.ts\n            \n            variable\n            settle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/stream-meter.ts\n            \n            class\n            StreamMeter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            class\n            IsStringPathSafeConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            IsStringPathSafe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-path-safe.validator.ts\n            \n            variable\n            PATH_SAFE_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            class\n            IsStringValidPathConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            IsStringValidPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/is-string-valid-path.validator.ts\n            \n            variable\n            PATH_VALID_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/storage : ^5.3.0\n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.4.4\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.4.4\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.4.4\n        \n            @nestjs/swagger : ^4.6.0\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/websockets : ^7.4.4\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.18.0\n        \n            bull-board : ^0.9.0\n        \n            busboy : ^0.3.1\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            connect-mongo : ^3.2.0\n        \n            ejs : ^3.1.5\n        \n            express-session : ^1.17.1\n        \n            helmet : ^4.1.0\n        \n            ioredis : ^4.17.3\n        \n            mjml : ^4.6.3\n        \n            mongoose : ^5.10.2\n        \n            morgan : ^1.10.0\n        \n            ms : ^2.1.2\n        \n            nest-winston : ^1.3.6\n        \n            nestjs-throttler : ^0.2.3\n        \n            nestjs-throttler-storage-redis : ^0.1.6\n        \n            nodemailer : ^6.4.11\n        \n            pump : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^2.1.3\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.2\n        \n            sharp : ^0.26.0\n        \n            swagger-ui-express : ^4.1.4\n        \n            ua-parser-js : ^0.7.21\n        \n            winston : ^3.3.3\n        \n            winston-daily-rotate-file : ^4.5.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationScopes   (src/.../application-scopes.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/enums/application-scopes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationScopes\n                    \n                \n                        \n                            \n                                 FILES_READ\n                            \n                        \n                        \n                            \n                                Value : files:read\n                            \n                        \n                        \n                            \n                                 FILES_WRITE\n                            \n                        \n                        \n                            \n                                Value : files:write\n                            \n                        \n                        \n                            \n                                 USERS_READ\n                            \n                        \n                        \n                            \n                                Value : users:read\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n*\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n*\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n*\n\n\n\n\n*\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n*\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n*\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BullBoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_ApplicationsModule\n\n\n\ncluster_ApplicationsModule_exports\n\n\n\ncluster_ApplicationsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BullBoardModule\n\n\n\ncluster_BullBoardModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_exports\n\n\n\ncluster_SessionsModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nApplicationsService \n\nApplicationsService \n\n\n\nApplicationsModule\n\nApplicationsModule\n\nApplicationsService  -->\n\nApplicationsModule->ApplicationsService \n\n\n\nAppModule -->\n\nApplicationsModule->AppModule\n\n\n\n\n\nApplicationsService\n\nApplicationsService\n\nApplicationsModule -->\n\nApplicationsService->ApplicationsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBullBoardModule\n\nBullBoardModule\n\nAppModule -->\n\nBullBoardModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nBullBoardModule -->\n\nFilesModule->BullBoardModule\n\n\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAuthModule -->\n\nSessionsModule->AuthModule\n\n\n\nUsersModule -->\n\nSessionsModule->UsersModule\n\n\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nSessionsService \n\nSessionsService \n\nSessionsService  -->\n\nSessionsModule->SessionsService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nApplicationsModule \n\nApplicationsModule \n\nApplicationsModule  -->\n\nAppModule->ApplicationsModule \n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nAppModule->Logger \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nAppModule->MailerModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nAppModule->UsersModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBullBoardProvider\n\nBullBoardProvider\n\nBullBoardModule -->\n\nBullBoardProvider->BullBoardModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nFilesModule -->\n\nStorageModule->FilesModule\n\n\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nFilesProcessor\n\nFilesProcessor\n\nFilesModule -->\n\nFilesProcessor->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nMailerProcessor\n\nMailerProcessor\n\nMailerModule -->\n\nMailerProcessor->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    58 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationSchema   (src/.../application.schema.ts)\n                        \n                        \n                            atob   (src/.../atob.ts)\n                        \n                        \n                            AUTH_GUARD_OPTIONAL   (src/.../auth.guard.ts)\n                        \n                        \n                            AUTH_GUARD_SCOPES   (src/.../auth.guard.ts)\n                        \n                        \n                            btoa   (src/.../btoa.ts)\n                        \n                        \n                            chunk   (src/.../chunk.ts)\n                        \n                        \n                            clamp   (src/.../clamp.ts)\n                        \n                        \n                            client   (src/.../google-cloud.engine.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            emailChanged   (src/.../email-changed.email.ts)\n                        \n                        \n                            emailConfirmation   (src/.../email-confirmation.email.ts)\n                        \n                        \n                            EmailConfirmationSchema   (src/.../email-confirmation.schema.ts)\n                        \n                        \n                            ENTRY_COLLATION_OPTIONS   (src/.../entry.schema.ts)\n                        \n                        \n                            EntrySchema   (src/.../entry.schema.ts)\n                        \n                        \n                            generateId   (src/.../generateId.ts)\n                        \n                        \n                            HMAC_SHA256   (src/.../application.schema.ts)\n                        \n                        \n                            IsStringPathSafe   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            IsStringValidPath   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            MAX_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MAX_RESEND_ATTEMPTS   (src/.../user-activation.schema.ts)\n                        \n                        \n                            MIN_PORT   (src/.../app.module.ts)\n                        \n                        \n                            MongoStore   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_MODULE_ID   (src/.../mailer.constants.ts)\n                        \n                        \n                            NODEMAILER_MODULE_OPTIONS   (src/.../mailer.constants.ts)\n                        \n                        \n                            OptionalAuth   (src/.../optional-auth.ts)\n                        \n                        \n                            paginate   (src/.../paginate.ts)\n                        \n                        \n                            passwordChangedEmail   (src/.../password-changed.email.ts)\n                        \n                        \n                            passwordReset   (src/.../password-reset.email.ts)\n                        \n                        \n                            PasswordResetSchema   (src/.../password-reset.schema.ts)\n                        \n                        \n                            passwordResetted   (src/.../password-post-reset.email.ts)\n                        \n                        \n                            PATH_SAFE_REGEX   (src/.../is-string-path-safe.validator.ts)\n                        \n                        \n                            PATH_VALID_REGEX   (src/.../is-string-valid-path.validator.ts)\n                        \n                        \n                            RECAPTCHA_ACTION_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_FAILED   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_MISSING   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_SCORE_KEY   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_UNEXPECTED_RESULT   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RECAPTCHA_URL   (src/.../recaptcha.guard.ts)\n                        \n                        \n                            RecaptchaAction   (src/.../recaptcha-action.decorator.ts)\n                        \n                        \n                            RecaptchaScore   (src/.../recaptcha-score.decorator.ts)\n                        \n                        \n                            sessionCookieName   (src/.../main.ts)\n                        \n                        \n                            settle   (src/.../settle.ts)\n                        \n                        \n                            STORAGE_MODULE_ID   (src/.../storage.constants.ts)\n                        \n                        \n                            STORAGE_MODULE_OPTIONS   (src/.../storage.constants.ts)\n                        \n                        \n                            successfulLogin   (src/.../successful-login.email.ts)\n                        \n                        \n                            userActivation   (src/.../user-activation.email.ts)\n                        \n                        \n                            UserActivationSchema   (src/.../user-activation.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            UseScopes   (src/.../scopes.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/applications/schemas/application.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApplicationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Application)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HMAC_SHA256\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: crypto.BinaryLike, secret: string) =>\n  crypto\n    .createHmac(\"sha256\", secret)\n    .update(data)\n    .digest(\"hex\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/atob.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            atob\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => Buffer.from(str, \"base64\").toString(\"binary\")\n                        \n                    \n\n\n            \n        \n\n    src/guards/auth.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_OPTIONAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_OPTIONAL\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_SCOPES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_GUARD_SCOPES\"\n                        \n                    \n\n\n            \n        \n\n    src/utils/btoa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            btoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: Buffer | string): string =>\n  (data instanceof Buffer ? data : Buffer.from(data, \"binary\")).toString(\"base64\")\n                        \n                    \n\n\n            \n        \n\n    src/utils/chunk.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chunk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  string(str: string, size: number): string[] {\n    if (size  str.length) return [str];\n\n    const chunks = [];\n\n    for (let i = 0; i \n                        \n                    \n\n\n            \n        \n\n    src/utils/clamp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (min: number, max: number, n: number): number =>\n  Math.min(Math.max(n, min), max)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/engines/google-cloud.engine.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Storage()\n                        \n                    \n\n\n            \n        \n\n    src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((field: string, ctx: ExecutionContext) => {\n  const user = ctx.switchToHttp().getRequest().user;\n  return field ? user && user[field] : user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-changed.mjml\"\n  },\n  subject: \"Bytebin - Email Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your email has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/email-confirmation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/email-confirmation.mjml\"\n  },\n  subject: \"Bytebin - Please confirm your email address\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"To confirm your email address, please visit the link below.\",\n    \"This email confirmation link is only valid for the next 72 hours.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/email-confirmation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailConfirmationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(EmailConfirmation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/files/schemas/entry.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTRY_COLLATION_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { locale: \"en\", strength: 2 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EntrySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Entry)\n                        \n                    \n\n\n            \n        \n\n    src/utils/generateId.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size = 4): Promise =>\n  new Promise((resolve, reject) => {\n    crypto.randomBytes(size, (error, buffer) => {\n      if (error) reject(error);\n      else resolve(buffer.toString(\"hex\"));\n    });\n  })\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-path-safe.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringPathSafe\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringPathSafeConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_SAFE_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[\\\\/:*?\\\"<>|]/g\n                        \n                    \n\n\n            \n        \n\n    src/validators/is-string-valid-path.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IsStringValidPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (validationOptions?: ValidationOptions) => {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (object: Object, propertyName: string): void => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsStringValidPathConstraint\n    });\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATH_VALID_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[^\\0]+/g\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WinstonModule.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        WinstonUtilities.format.nestLike(\"Bytebin\")\n      ),\n      level: \"info\"\n    }),\n\n    new winston.transports.DailyRotateFile({\n      datePattern: \"YYYY-MM-DD-HH\",\n      dirname: \"logs\",\n      filename: \"bytebin-%DATE%.log\",\n      level: \"silly\",\n      maxFiles: \"30d\"\n    })\n  ]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MongoStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongo(session)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"sid.the.science.kid\"\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 65535\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MIN_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/user-activation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_RESEND_ATTEMPTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserActivationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(UserActivation)\n                        \n                    \n\n\n            \n        \n\n    src/modules/mailer/mailer.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"NODEMAILER_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/optional-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OptionalAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (optional = true): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_OPTIONAL, optional)\n                        \n                    \n\n\n            \n        \n\n    src/utils/paginate.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            paginate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  model: Model,\n  options: PaginationOptions\n): Promise> => {\n  const direction = options.direction || -1;\n  const field = options.field || \"_id\";\n  const operator = direction === -1 ? \"$lt\" : \"$gt\";\n  const query = options.cursor ? { [field]: { [operator]: options.cursor } } : {};\n\n  const items = await model\n    .find({ ...options.query, ...query })\n    .collation(options.collation || {})\n    .sort({ ...options.sort, [field]: direction })\n    .limit(options.limit + 1); // add 1 so we can check if there are more items after this page\n\n  const hasNext = items.length > options.limit;\n  if (hasNext) items.pop(); // remove the extra item from options.limit + 1\n\n  const next = hasNext ? String(items[items.length - 1][field]) : null;\n\n  return {\n    hasNext,\n    items,\n    next\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/emails/password-changed.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordChangedEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-changed.mjml\"\n  },\n  subject: \"Bytebin - Password Changed\",\n  text: [\n    `Hey ${data.displayName}\\n`,\n    \"Your password has been changed.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-reset-request.mjml\"\n  },\n  subject: \"Bytebin - Password reset requested\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To reset your password, please visit the link below.\",\n    \"This password reset link is only valid for the next 1 hour.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/schemas/password-reset.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PasswordResetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(PasswordReset)\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/password-post-reset.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordResetted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/password-post-reset.mjml\"\n  },\n  subject: \"Bytebin - Your password has been reset\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"Your password has been reset.\",\n    \"If this was not you, please reset your password immediately using the link below.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/guards/recaptcha.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_ACTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_ACTION\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reCAPTCHA failed, please try again!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_MISSING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please complete the reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_SCORE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"RECAPTCHA_SCORE\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_UNEXPECTED_RESULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Action or score metadata not provided for v3 reCAPTCHA!\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RECAPTCHA_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://www.google.com/recaptcha/api/siteverify\"\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-action.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (action: string): CustomDecorator =>\n  SetMetadata(RECAPTCHA_ACTION_KEY, action)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/recaptcha-score.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RecaptchaScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (score: number): CustomDecorator =>\n  SetMetadata(RECAPTCHA_SCORE_KEY, score)\n                        \n                    \n\n\n            \n        \n\n    src/utils/settle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            settle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (\n  tasks: T\n)\n                        \n                    \n\n\n            \n        \n\n    src/modules/storage/storage.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_ID\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"STORAGE_MODULE_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/successful-login.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            successfulLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: {\n    displayName: string;\n    link: string;\n    session: ISessionData;\n  }\n): SendMailOptions => {\n  const time = new Date().toUTCString();\n\n  return {\n    mjml: {\n      data: {\n        ...data,\n        time\n      },\n      template: \"./templates/successful-login.mjml\"\n    },\n    subject: \"Bytebin - Successful Login\",\n    text: [\n      `Hey ${data.displayName},\\n`,\n      `This email was sent because a new login has occurred on your account at ${time}.\\n`,\n      `IP Address: ${data.session.ip || \"Unknown\"}`,\n      `Device: ${data.session.ua.os.name} ${data.session.ua.os.version}`,\n      `Browser: ${data.session.ua.browser.name} ${data.session.ua.browser.version}\\n`,\n      \"If this was not you, please reset your password immediately using the link below.\\n\",\n      data.link\n    ].join(\"\\n\"),\n    to\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/emails/user-activation.email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userActivation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  to: string,\n  data: { displayName: string; link: string }\n): SendMailOptions => ({\n  mjml: {\n    data,\n    template: \"./templates/user-activation.mjml\"\n  },\n  subject: \"Bytebin - Activate your account\",\n  text: [\n    `Hey ${data.displayName},\\n`,\n    \"To finish up the registration process, please activate your account by visiting the link below\",\n    \"You have 7 days to activate your account before it is deleted for inactivity.\\n\",\n    data.link\n  ].join(\"\\n\"),\n  to\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n    src/decorators/scopes.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UseScopes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...scopes: ApplicationScopes[]): CustomDecorator =>\n  SetMetadata(AUTH_GUARD_SCOPES, scopes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
